# configure system
# this will be imported into all shell scripts

MYHOME=`dirname "${BASH_SOURCE[0]}"`

#
# configure
#############

# JAVA
JAVA=java

# set to your local saxon installation or get it from https://sourceforge.net/projects/saxon/ (Open Source) or https://www.saxonica.com/download/java.xml (commercial edition)
SAXON_JAR=~/tools/saxon/saxon-he-10.6.jar

# set to your CoNLL-RDF installation or get it from https://github.com/acoli-repo/conll-rdf
conll2rdfDir=~/conll-rdf/

# ReM pipeline configuration
dataDir=$MYHOME/res/data/
srcDir=$MYHOME/src/
outDir=$MYHOME/out
remFiles=${dataDir}remdata/*
chunkingPipeline=$MYHOME/res/sparql/chunking/
dataDirAbs=$(realpath $dataDir)
chunkingPipelineAbs=$(realpath $chunkingPipeline)
shDir=$MYHOME/res/sh/

# ReM meta parameter
DEBUG=false;			# set to false for production mode

##### DO NOT EDIT BELOW THIS LINE ######
#    (unless you know what you do)

#
# init
########
# (notational shorthands)

SAXON=$JAVA' -classpath '`dirname $SAXON_JAR`/jline-*.jar' -jar '$SAXON_JAR' '
LOAD=$conll2rdfDir/run.sh' 'CoNLLStreamExtractor' # '
TRANSFORM=$conll2rdfDir/run.sh' 'CoNLLRDFUpdater' -custom '
WRITE=$conll2rdfDir/run.sh' 'CoNLLRDFFormatter

#
# get dependencies
####################

if [ ! -d $conll2rdfDir ]; then
  git clone https://github.com/acoli-repo/conll-rdf $conll2rdfDir
fi;

if [ ! -e $SAXON_JAR ]; then
  SAXON_DIR=`dirname $SAXON_JAR`
  if [ ! -d $SAXON_DIR ]; then
    mkdir -p $SAXON_DIR
  fi

  cd $SAXON_DIR
  wget -nc https://altushost-swe.dl.sourceforge.net/project/saxon/Saxon-HE/10/Java/SaxonHE10-6J.zip
  if [ ! -e SaxonHE10-6J.zip ]; then
    echo Saxon download link failed, please install it manually from https://sourceforge.net/projects/saxon/, put the jar into $SAXON_JAR 1>&2
    exit 1
  else
    unzip SaxonHE10-6J.zip
  fi
  cd -
fi
