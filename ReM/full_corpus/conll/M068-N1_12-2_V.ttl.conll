# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
#ID TID WORD LEMMA POS INFL SB file:///M068-N1_12-2_V.ttl/
1	t1_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t2_000	tæte	VVFIN	tuon	Subj.Past.Sg.1	(LB (VX * ) )	_	
3	t3_000	iu	PPER	ir	Dat.Pl.2	(MF (NX * )	_	
4	t4_000	gerne	AVD	gërne	_	 *	_	
5	t5_000	künde	NA	künde	Akk.Sg	(NX * ) )	_	
6	t6_000	-	$_	_	_	 *	_	
7	t7_000	wan daz	KOUS	wan~dazz	_	(PostF (Cl (LB * )	_	
8	t8_000	mich	PPER	ich	Akk.Sg.1	(MF (NX * ) )	_	
9	t9_000	irrent	VVFIN	irren	Ind.Pres.Pl.3	(RB (VX * ) )	_	
10	t10_000	sünde	NA	sünte	Nom.Pl	(PostF (NX * ) )	_	
11	t11_000	-	$_	_	_	 * ) )	_	
12	t12_000	etewaz	DIA	ëte(s)-wër	Neut.Akk.Sg.st	(Frag *	_	
13	t13_000	von	APPR	von	_	(PPX *	_	
14	t14_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
15	t15_000	buochen	NA	buoch	Dat.Pl	 * ) )	_	
16	t16_000	-	$_	_	_	 * )	_	
17	t17_000	dâ	PAVD	dâr/.+inne	_	(Frag *	_	
18	t18_000	wir	PPER	wir	Nom.Pl.1	(PreF (NX * ) )	_	
19	t19_000	inne	PAVAP	inne/dâr.+	_	(LB (VX *	_	
20	t20_000	schulen	VMFIN	sol(e)n	*.Pres.Pl.1	 * ) )	_	
21	t21_000	suochen	VVINF	suochen	_	(RB (VX * ) )	_	
22	t22_000	-	$_	_	_	 * )	_	
23	t23_000	des	DDART	dër	Masc.Gen.Sg	(Frag (NX *	_	
24	t24_000	himelischen	ADJA	himelisch	Pos.Masc.Gen.Sg.wk	 *	_	
25	t25_000	küninges	NA	küni(n)g	Gen.Sg	 * )	_	
26	t26_000	êre	NA	êre	Akk.Sg	(NX * )	_	
27	t27_000	-	$_	_	_	 * )	_	
28	t28_000	und	KON	unte	_	(Frag *	_	
29	t29_000	sîniu	DPOSA	sîn	Neut.Akk.Pl.st	(NX *	_	
30	t30_000	werc	NA	wërk	Akk.Pl	 * )	_	
31	t31_000	vile	AVD	vil(e)	_	 *	_	
32	t32_000	here	ADJA	hër(e)	Pos.Neut.Akk.Pl.0	 *	_	
33	t33_000	-	$_	_	_	 *	_	
34	t34_000	diu	DRELS	dër	Neut.Akk.Pl	(Cl (LB (NX * ) )	_	
35	t35_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
36	t36_000	wîlent	AVD	wîlen(t)	_	 * )	_	
37	t37_000	worhte	VVFIN	wirken	*.Past.Sg.3	(RB (VX * ) )	_	
38	t38_000	-	$_	_	_	 * ) )	_	
39	t39_000	durch	APPR	durh	_	(Frag (PPX *	_	
40	t40_000	Abrahames	NE	Abraham	Gen.Sg	(NX * ) )	_	
41	t41_000	liebe	NA	lièbe	Akk.Sg	(NX * )	_	
42	t42_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
43	t43_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * ) )	_	
44	t44_000	vorhte	VVFIN	vürhten	*.Past.Sg.3	(RB (VX * ) )	_	
45	t45_000	-	$_	_	_	 * ) )	_	
46	t46_000	an	APPR	ane	_	(Frag (PPX *	_	
47	t46_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
48	t47_000	israhêlischen	ADJA	israhêlisch	Pos.Fem.Dat.Sg.wk	 *	_	
49	t48_000	diete	NA	dièt	Dat.Sg	 * ) )	_	
50	t49_000	-	$_	_	_	 *	_	
51	t50_000	die	DRELS	dër	Fem.Akk.Sg	(Cl (LB (NX * ) )	_	
52	t51_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
53	t52_000	lôste	VVFIN	loèsen	*.Past.Sg.3	(RB (VX * ) )	_	
54	t53_000	ûzer	APPR	ûzer	_	(PostF (PPX *	_	
55	t54_000	noete	NA	nôt	Dat.Sg	(NX * ) ) )	_	
56	t55_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t56_000	hêrre	NA	hêrre	Nom.Sg	(S (NX * )	_	
2	t57_000	dîner	DPOSA	dîn	Fem.Gen.Sg.st	(Cl (PreF (NX *	_	
3	t58_000	genâde	NA	ge-nâde	Gen.Sg	 * ) )	_	
4	t59_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t60_000	sô	AVD	sô	_	(MF *	_	
6	t61_000	vile	AVD	vil(e)	_	 * )	_	
7	t62_000	-	$_	_	_	 * )	_	
8	t63_000	dû	PPER	dû	Nom.Sg.2	(Cl (PreF (NX * ) )	_	
9	t64_000	vergibest	VVFIN	ver-gëben	Ind.Pres.Sg.2	(LB (VX * ) )	_	
10	t65_000	grôze	ADJA	grôz	Pos.Fem.Akk.Sg.st	(MF (NX *	_	
11	t66_000	schulde	NA	schuld(e)	Akk.Sg	 * ) ) )	_	
12	t67_000	dâ	AVD	dâr	_	(Cl (PreF *	_	
13	t68_000	dû	PPER	dû	Nom.Sg.2	(NX * ) )	_	
14	t69_000	wile	VMFIN	wèllen	*.Pres.Sg.2	(LB (VX * ) )	_	
15	t70_000	-	$_	_	_	 * )	_	
16	t71_000	nû	AVD	nû	_	(Cl (PreF * )	_	
17	t72_000	verlîch	VVIMP	ver-lîhen	Sg.2	(LB (VX * ) )	_	
18	t73_000	mir	PPER	ich	Dat.Sg.1	(MF (NX * )	_	
19	t74_000	dîneme	DPOSA	dîn	Masc.Dat.Sg.st	(NX *	_	
20	t75_000	schalke	NA	schalk	Dat.Sg	 * ) )	_	
21	t76_000	-	$_	_	_	 *	_	
22	t77_000	daz	KOUS	dazz	_	(PostF (Frag *	_	
23	t78_000	ich	PPER	ich	Nom.Sg.1	(PreF (NX * ) )	_	
24	t79_000	müeze	VMFIN	müèzen	Subj.Pres.Sg.1	(LB (VX * ) )	_	
25	t80_000	walten	VVINF	walten	_	(RB (VX * ) )	_	
26	t81_000	-	$_	_	_	 * ) )	_	
27	t82_000	ein	DIART	èin	Neut.Akk.Sg.0	(Frag (NX *	_	
28	t83_000	lützel	NA	lützel	Akk.Sg	 *	_	
29	t84_000	dîner	DPOSA	dîn	Fem.Gen.Sg.st	(NX *	_	
30	t85_000	lêre	NA	lêre	Gen.Sg	 * ) )	_	
31	t86_000	-	$_	_	_	 * )	_	
32	t87_000	durch	APPR	durh	_	(Frag (PPX *	_	
33	t88_000	dîn	PPER	dû	Gen.Sg.2	(NX *	_	
34	t89_000	selbes	DDD	sëlb	Masc.Gen.Sg.st	 * ) )	_	
35	t90_000	êre	NA	êre	Akk.Sg	(NX * )	_	
36	t91_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t92_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t93_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
3	t94_000	mir	PPER	ich	Dat.Sg.1	(MF (NX * )	_	
4	t95_000	dînen	DPOSA	dîn	Masc.Akk.Sg.st	(NX *	_	
5	t96_000	wîstuom	NA	wîs-tuom	Akk.Sg	 * ) )	_	
6	t97_000	-	$_	_	_	 *	_	
7	t98_000	daz	KOUS	dazz	_	(PostF (Frag *	_	
8	t99_000	ich	PPER	ich	Nom.Sg.1	(PreF (NX * ) )	_	
9	t100_000	müge	VMFIN	mügen	Subj.Pres.Sg.1	(LB (VX * ) )	_	
10	t101_000	wandelen	VVINF	wantel(e)n	_	(RB (VX * ) )	_	
11	t102_000	mit	APPR	mit	_	(PostF (PPX *	_	
12	t103_000	diutischeme	ADJA	diut(i)sch	Pos.Masc.Dat.Sg.st	(NX *	_	
13	t104_000	munde	NA	mund	Dat.Sg	 * ) ) )	_	
14	t105_000	-	$_	_	_	 * ) )	_	
15	t106_000	der	DDART	dër	Fem.Gen.Sg	(Frag (NX *	_	
16	t107_000	latînischen	ADJA	latînisch	Pos.Fem.Gen.Sg.wk	 *	_	
17	t108_000	zungen	NA	zunge	Gen.Sg	 * )	_	
18	t109_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t110_000	hêrre	NA	hêrre	Nom.Sg	(S (NX * )	_	
2	t111_000	gehüge	VVIMP	ge-hügen	Sg.2	(Cl (LB (VX * ) )	_	
3	t112_000	wole	AVD	wol(e)	_	(MF * )	_	
4	t113_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
5	t114_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
6	t115_000	spræche	VVFIN	sprëchen	Ind.Past.Sg.2	(LB (VX * ) )	_	
7	t116_000	-	$_	_	_	 * )	_	
8	t117_000	die	DDART	dër	Fem.Akk.Sg	(Frag (NX *	_	
9	t118_000	rede	NA	rède	Akk.Sg	 * )	_	
10	t119_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
11	t120_000	noch	AVD	noh	_	(PreF *	_	
12	t121_000	ie	AVD	iè	_	 *	_	
13	t122_000	wâr	ADJD	wâr	Pos....0	 * )	_	
14	t123_000	lieze	VVFIN	lâzen	Ind.Past.Sg.2	(LB (VX * ) )	_	
15	t124_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t125_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX *	_	
2	t126_000	in	APPR	in	_	(PPX *	_	
3	t126_001	dînen	DPOSA	dîn	*.Dat.Pl.st	(NX *	_	
4	t127_000	minnen	NA	minne	Dat.Pl	 * ) ) )	_	
5	t128_000	ieht	AVD	iht	_	(PreF * )	_	
6	t129_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
7	t130_000	redenen	VVINF	rèdenen	_	(RB (VX * ) )	_	
8	t131_000	-	$_	_	_	 *	_	
9	t132_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
10	t133_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
11	t134_000	ûf	PTKVZ	ûf/>+tuon	_	(RB (VX *	_	
12	t135_000	tæte	VVFIN	tuon/ûf>+	Subj.Past.Sg.3	 * ) )	_	
13	t136_000	den	DDART	dër	Masc.Akk.Sg	(PostF (NX *	_	
14	t137_000	munt	NA	mund	Akk.Sg	 * ) )	_	
15	t138_000	-	$_	_	_	 * ) )	_	
16	t139_000	dû	PPER	dû	Nom.Sg.2	(Cl (PreF (NX * ) )	_	
17	t140_000	ervultest	VVFIN	er-vüllen	*.Past.Sg.2	(LB (VX * ) )	_	
18	t141_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * ) )	_	
19	t142_000	-	$_	_	_	 *	_	
20	t143_000	in	PPER	ër	Masc.Akk.Sg.3	(Frag (NX *	_	
21	t144_000	an	APPR	ane	_	(PPX *	_	
22	t144_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
23	t145_000	stunt	NA	stunt(e)	Dat.Sg	 * ) ) )	_	
24	t146_000	-	$_	_	_	 * ) )	_	
25	t147_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
26	t148_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
27	t149_000	ane	APPR	ane	_	(MF (PPX *	_	
28	t150_000	sorgen	NA	sorge	Akk.Pl	(NX * ) ) )	_	
29	t151_000	-	$_	_	_	 * )	_	
30	t152_000	ime	PPER	ër	Masc.Dat.Sg.3	(Cl (PreF (NX * ) )	_	
31	t153_000	ne	PTKNEG	ne	_	(LB (VX *	_	
32	t153_001	würde	VAFIN	wërden	Subj.Past.Sg.3	 * ) )	_	
33	t154_000	nieht	NA	niht	Nom.Sg	(MF (NX * )	_	
34	t155_000	vore	AVD	vor(e)	_	 * )	_	
35	t156_000	verborgen	VVPP	ver-bërgen	_	(RB (VX * ) )	_	
36	t157_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t158_000	nû	AVD	nû	_	(S (Cl (PreF * )	_	
2	t159_000	sende	VVIMP	sènten	Sg.2	(LB (VX * ) )	_	
3	t160_000	mir	PPER	ich	Dat.Sg.1	(MF (NX * )	_	
4	t161_000	sanctum	ADJA	sanctus	Pos.Masc.Akk.Sg.*	 * )	_	
5	t162_000	-	$_	_	_	 *	_	
6	t163_000	spiritum	NA	spiritus	Akk.Sg	(Frag (NX *	_	
7	t164_000	paracletum	NA	paracletus	Akk.Sg	 * )	_	
8	t165_000	-	$_	_	_	 *	_	
9	t166_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
10	t167_000	mîn	DPOSA	mîn	Neut.Akk.Sg.0	(MF (NX *	_	
11	t167_001	gebende	NA	ge-bènte	Akk.Sg	 * ) )	_	
12	t168_000	loese	VVFIN	loèsen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
13	t169_000	-	$_	_	_	 * ) ) )	_	
14	t170_000	sô	AVD	sô	_	(Cl (PreF * )	_	
15	t171_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
16	t172_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
17	t173_000	gerne	AVD	gërne	_	 * )	_	
18	t174_000	kôsen	VVINF	kôsen	_	(RB (VX * ) )	_	
19	t175_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t176_000	der	DDART	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t177_000	heilige	ADJA	hèilig	Pos.Masc.Nom.Sg.wk	 *	_	
3	t178_000	geist	NA	gèist	Nom.Sg	 *	_	
4	t179_000	dîn	DPOSN	dîn	Masc.Nom.Sg.0	 * )	_	
5	t180_000	-	$_	_	_	 * )	_	
6	t181_000	ordene	VVFIN	ordenen	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
7	t182_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
8	t183_000	rede	NA	rède	Akk.Sg	 *	_	
9	t184_000	mîn	DPOSN	mîn	Fem.Akk.Sg.0	 * ) )	_	
10	t185_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t186_000	ein	DIART	èin	Neut.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t187_000	buoch	NA	buoch	Nom.Sg	 * ) )	_	
3	t188_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t189_000	exodus	NA	exodus	Nom.Sg	(MF (NX * ) )	_	
5	t190_000	-	$_	_	_	 * )	_	
6	t191_000	dâr	PAVD	dâr/+inne	_	(Cl (LB (VX *	_	
7	t192_000	inne	PAVAP	inne/dâr+	_	 *	_	
8	t193_000	lesen	VVFIN	lësen	*.Pres.Pl.1	 * ) )	_	
9	t194_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * )	_	
10	t195_000	sus	AVD	sus	_	 * )	_	
11	t196_000	-	$_	_	_	 *	_	
12	t197_000	wie	AVW	wiè	_	(Frag *	_	
13	t198_000	Jakobes	NE	Jakob	Gen.Sg	(NX * )	_	
14	t199_000	künne	NA	künne	Nom.Sg	(NX * )	_	
15	t200_000	-	$_	_	_	 * )	_	
16	t201_000	ze	APPR	ze	_	(Frag (PPX *	_	
17	t202_000	lande	NA	lant	Dat.Sg	(NX * ) )	_	
18	t203_000	heim	AVD	hèim	_	(PreF * )	_	
19	t204_000	sünne	VVFIN	sinnen	Subj.Past.Sg.3	(LB (VX * ) )	_	
20	t205_000	-	$_	_	_	 * )	_	
21	t206_000	ûzer	APPR	ûzer	_	(Frag (PPX *	_	
22	t207_000	Egiptenlande	NE	Egipte(n)-lant	Dat.Sg	(NX * ) )	_	
23	t208_000	-	$_	_	_	 * ) )	_	
24	t209_000	dâ	AVD	dâr	_	(Cl (PreF *	_	
25	t210_000	iz	PPER	ër	Neut.Nom.Sg.3	(NX * ) )	_	
26	t211_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
27	t212_000	in	APPR	in	_	(MF (PPX *	_	
28	t213_000	banden	NA	bant	Dat.Pl	(NX * ) ) )	_	
29	t214_000	-	$_	_	_	 *	_	
30	t215_000	alsô	KO*	all-sô	_	(Frag *	_	
31	t216_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
32	t217_000	gote	NA	got	Nom.Sg	(PreF (NX * ) )	_	
33	t218_000	dâ	PAVD	dâr/+vor(e)	_	(LB (VX *	_	
34	t219_000	vore	PAVAP	vor(e)/dâr+	_	 *	_	
35	t220_000	enthiez	VVFIN	ent-hèizen	Ind.Past.Sg.3	 * ) )	_	
36	t221_000	-	$_	_	_	 *	_	
37	t222_000	dô	KOUS	dô	_	(Cl (LB * )	_	
38	t223_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
39	t224_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * ) )	_	
40	t225_000	erschein	VVFIN	er-schînen	Ind.Past.Sg.3	(RB (VX * ) )	_	
41	t226_000	an	APPR	ane	_	(PostF (PPX *	_	
42	t226_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
43	t227_000	wege	NA	wëg	Dat.Sg	 * ) ) ) ) ) )	_	
44	t228_000	dâ	AVD	dâr	_	(Cl (PreF *	_	
45	t229_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * ) )	_	
46	t230_000	entslief	VVFIN	ent-slâfen	Ind.Past.Sg.3	(LB (VX * ) )	_	
47	t231_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t232_000	vünve	CARDS	vünv	*.Nom.Pl.st	(S (Frag (NX * )	_	
2	t233_000	unde	KON	unte	_	 *	_	
3	t234_000	sibenzic	CARDS	siben-zig	*.Nom.Pl.0	(PreF (NX *	_	
4	t235_000	ir	PPER	ër	*.Gen.Pl.3	(NX * ) ) )	_	
5	t236_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	(LB (VX * ) )	_	
6	t237_000	-	$_	_	_	 *	_	
7	t238_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX *	_	
8	t239_000	mit	APPR	mit	_	(PPX *	_	
9	t240_000	Jakobe	NE	Jakob	Dat.Sg	(NX * ) ) ) )	_	
10	t241_000	vuoren	VVFIN	var(e)n	*.Past.Pl.3	(RB (VX * ) )	_	
11	t242_000	-	$_	_	_	 * ) )	_	
12	t243_000	in	APPR	in	_	(Cl (PreF (PPX *	_	
13	t244_000	einez	DIART	èin	Neut.Akk.Sg.st	(NX *	_	
14	t245_000	lant	NA	lant	Akk.Sg	 * ) ) )	_	
15	t246_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t247_000	egiptus	NE	egiptus	Nom.Sg	(MF (NX * ) )	_	
17	t248_000	-	$_	_	_	 * )	_	
18	t249_000	diu	DDART	dër	Fem.Nom.Sg	(Cl (PreF (NX *	_	
19	t250_000	schrift	NA	schrift	Nom.Sg	 * ) )	_	
20	t251_000	nennet	VVFIN	nènnen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t252_000	iz	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
22	t253_000	sus	AVD	sus	_	 * )	_	
23	t254_000	-	$_	_	_	 *	_	
24	t255_000	die	DRELS	dër	*.Nom.Pl	(PostF (Frag (NX *	_	
25	t256_000	durch	APPR	durh	_	(PPX *	_	
26	t257_000	hungeres	NA	hunger	Gen.Sg	(NX * ) ) )	_	
27	t258_000	noete	NA	nôt	Akk.Pl	(NX * )	_	
28	t259_000	-	$_	_	_	 * ) ) )	_	
29	t260_000	vuoren	VVFIN	var(e)n	*.Past.Pl.3	(Cl (LB (VX * ) )	_	
30	t261_000	zuo	APPR	ze	_	(MF (PPX *	_	
31	t262_000	heidenischer	ADJA	hèidenisch	Pos.Fem.Dat.Sg.st	(NX *	_	
32	t263_000	diete	NA	dièt	Dat.Sg	 * ) ) )	_	
33	t264_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t265_000	Josepch	NE	Joseph	Nom.Sg	(S (Frag (NX * )	_	
2	t266_000	si	PPER	ër	*.Akk.Pl.3	(PreF (NX * ) )	_	
3	t267_000	dâr	PAVD	dâr/+in	_	(LB (VX *	_	
4	t268_000	in	PAVAP	in/dâr+	_	 *	_	
5	t269_000	ladete	VVFIN	laden	*.Past.Sg.3	 * ) )	_	
6	t270_000	-	$_	_	_	 * )	_	
7	t271_000	wande	KO*	wante	_	(Frag *	_	
8	t272_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX *	_	
9	t273_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
10	t274_000	landes	NA	lant	Gen.Sg	 *	_	
11	t275_000	nâch	APPR	nâh	_	(PPX *	_	
12	t276_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
13	t277_000	küninge	NA	küni(n)g	Dat.Sg	 * ) ) ) ) )	_	
14	t278_000	pflegete	VVFIN	pflègen	*.Past.Sg.3	(LB (VX * ) )	_	
15	t279_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t280_000	diu	DDART	dër	Fem.Nom.Sg	(S (Frag *	_	
2	t281_000	selbe	DDA	sëlb	Fem.Nom.Sg.wk	 *	_	
3	t282_000	gotes	NA	got	Gen.Sg	(NX * )	_	
4	t283_000	diet	NA	dièt	Nom.Sg	(NX * )	_	
5	t284_000	-	$_	_	_	 * )	_	
6	t285_000	diu	DDS	dër	Fem.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t286_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
8	t287_000	Pharaoe	NE	Pharao	Dat.Sg	(MF (NX * )	_	
9	t288_000	vile	AVD	vil(e)	_	 *	_	
10	t289_000	liep	ADJD	lièb	Pos....0	 * )	_	
11	t290_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t291_000	die	DDART	dër	Fem.Akk.Sg	(S (Frag (NX *	_	
2	t292_000	wîle	NA	wîl(e)	Akk.Sg	 * )	_	
3	t293_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
4	t294_000	lebete	VVFIN	lëben	*.Past.Sg.3	(LB (VX * ) )	_	
5	t295_000	-	$_	_	_	 * )	_	
6	t296_000	vile	AVD	vil(e)	_	(PreF *	_	
7	t297_000	grôzlîche	AVD	grôz-lîche	_	 * )	_	
8	t298_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
9	t299_000	in	PPER	ër	*.Akk.Pl.3	(PreF (NX * ) )	_	
10	t299_001	gebete	VVFIN	gëben	*.Past.Sg.3	(LB (VX * ) )	_	
11	t300_000	-	$_	_	_	 *	_	
12	t301_000	durch	APPR	durh	_	(Frag (PPX *	_	
13	t302_000	Josephes	NE	Joseph	Gen.Sg	(NX * ) )	_	
14	t303_000	willen	NA	wille	Akk.Sg	(NX * )	_	
15	t304_000	-	$_	_	_	 * )	_	
16	t305_000	sînes	DPOSA	sîn	Masc.Gen.Sg.st	(Frag (NX *	_	
17	t306_000	trûtgesellen	NA	trût-ge-sèlle	Gen.Sg	 * )	_	
18	t307_000	-	$_	_	_	 *	_	
19	t308_000	der	DRELS	dër	Masc.Nom.Sg	(Frag (NX * )	_	
20	t309_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX *	_	
21	t310_000	zuo	APPR	ze	_	(PPX *	_	
22	t311_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
23	t312_000	handen	NA	hant	Dat.Pl	 * ) ) )	_	
24	t313_000	-	$_	_	_	 * ) )	_	
25	t314_000	hæte	VAFIN	haben	*.Past.Sg.3	(Cl (LB (VX * ) )	_	
26	t315_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
27	t316_000	lant	NA	lant	Akk.Sg	 * ) )	_	
28	t317_000	gewunnen	VVPP	ge-winnen	_	(RB (VX * ) )	_	
29	t318_000	-	$_	_	_	 *	_	
30	t319_000	schatz	NA	schatz	Akk.Sg	(Frag (NX * )	_	
31	t320_000	-	$_	_	_	 * )	_	
32	t321_000	und	KON	unte	_	(Frag *	_	
33	t322_000	eigen	NA	èigen	Akk.Sg	(NX * )	_	
34	t323_000	-	$_	_	_	 * )	_	
35	t324_000	joch	KON	joh	_	(Frag *	_	
36	t325_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
37	t326_000	vihe	NA	vihe	Akk.Sg	 * )	_	
38	t327_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t328_000	sîner	DPOSA	sîn	*.Gen.Pl.st	(S (Cl (PreF (NX *	_	
2	t329_000	genâde	NA	ge-nâde	Gen.Pl	 * ) )	_	
3	t330_000	muosen	VMFIN	müèzen	*.Past.Pl.3	(LB (VX * ) )	_	
4	t331_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX *	_	
5	t332_000	alle	DID	all	*.Nom.Pl..=.st	 * ) )	_	
6	t333_000	leben	VVINF	lëben	_	(RB (VX * ) )	_	
7	t334_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t335_000	sô	KO*	sô	_	(S (Frag *	_	
2	t336_000	Josepch	NE	Joseph	Nom.Sg	(NX * )	_	
3	t337_000	unde	KON	unte	_	 *	_	
4	t338_000	Pharao	NE	Pharao	Nom.Sg	(PreF (NX * ) )	_	
5	t339_000	verschiet	VVFIN	ver-schèiden	Ind.Past.Sg.3	(LB (VX * ) )	_	
6	t340_000	-	$_	_	_	 * )	_	
7	t341_000	den	DDART	dër	*.Dat.Pl	(Frag (NX *	_	
8	t342_000	juden	NA	jude	Dat.Pl	 * )	_	
9	t343_000	iz	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
10	t344_000	übele	AVD	übel(e)	_	(PreF * )	_	
11	t345_000	ergiengen	VVFIN	er-gân	Ind.Past.Pl.3	(LB (VX * ) )	_	
12	t346_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t347_000	ein	DIART	èin	Masc.Nom.Sg.0	(S (Frag (NX *	_	
2	t348_000	ander	DIA	ander	Masc.0.Nom.Sg.wk	 *	_	
3	t349_000	Pharao	NE	Pharao	Nom.Sg	 * )	_	
4	t350_000	daz	DDART	dër	Neut.Akk.Sg	(PreF (NX *	_	
5	t351_000	rîche	NA	rîche	Akk.Sg	 * ) )	_	
6	t352_000	besaz	VVFIN	be-sitzen	Ind.Past.Sg.3	(LB (VX * ) )	_	
7	t353_000	-	$_	_	_	 *	_	
8	t354_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
9	t355_000	vile	AVD	vil(e)	_	(MF *	_	
10	t356_000	schiere	AVD	schière	_	 * )	_	
11	t357_000	vergaz	VVFIN	ver-gëzzen	Ind.Past.Sg.3	(RB (VX * ) )	_	
12	t358_000	-	$_	_	_	 * ) )	_	
13	t359_000	der	DDART	dër	*.Gen.Pl	(Frag (NX *	_	
14	t360_000	manigen	DIA	manig	*.Gen.Pl.wk	 *	_	
15	t361_000	guottæte	NA	guot-tât	Gen.Pl	 * )	_	
16	t362_000	-	$_	_	_	 *	_	
17	t363_000	die	DRELS	dër	*.Akk.Pl	(Cl (LB (NX * ) )	_	
18	t364_000	got	NA	got	Nom.Sg	(MF (NX * ) )	_	
19	t365_000	erboten	VVPP	er-bièten	_	(RB (VX *	_	
20	t366_000	hæte	VAFIN	haben	*.Past.Sg.3	 * ) )	_	
21	t367_000	-	$_	_	_	 * ) )	_	
22	t368_000	durch	APPR	durh	_	(Frag (PPX *	_	
23	t369_000	sîne	DPOSA	sîn	*.Akk.Pl.st	(NX *	_	
24	t370_000	liebe	ADJA	lièb	Pos.*.Akk.Pl.st	 *	_	
25	t371_000	trûte	NA	trût(e)	Akk.Pl	 * ) )	_	
26	t372_000	-	$_	_	_	 * )	_	
27	t373_000	der	DDART	dër	Fem.Dat.Sg	(Frag (NX *	_	
28	t374_000	heidenischen	ADJA	hèidenisch	Pos.Fem.Dat.Sg.wk	 *	_	
29	t375_000	diete	NA	dièt	Dat.Sg	 * )	_	
30	t376_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t377_000	sîn	DPOSA	sîn	Neut.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t378_000	herze	NA	hërze	Nom.Sg	 * ) )	_	
3	t379_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t380_000	mit	APPR	mit	_	(MF (PPX *	_	
5	t381_000	hazze	NA	hazz	Dat.Sg	(NX * ) ) )	_	
6	t382_000	bekoret	VVPP	be-kor(e)n	_	(RB (VX * ) )	_	
7	t383_000	-	$_	_	_	 * )	_	
8	t384_000	des	DDS	dër	Neut.Gen.Sg	(Cl (PreF (NX * ) )	_	
9	t385_000	muosen	VMFIN	müèzen	*.Past.Pl.3	(LB (VX * ) )	_	
10	t386_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
11	t387_000	entgelten	VVINF	ent-gëlten	_	(RB (VX * ) )	_	
12	t388_000	durch	APPR	durh	_	(PostF (PPX *	_	
13	t389_000	nôt	NA	nôt	Akk.Sg	(NX * ) ) )	_	
14	t390_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t391_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t392_000	küninc	NA	küni(n)g	Nom.Sg	 *	_	
3	t393_000	zuo	APPR	ze	_	(PPX *	_	
4	t394_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
5	t395_000	râtgeben	NA	rât-gëbe	Dat.Pl	 * ) ) ) )	_	
6	t396_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
7	t397_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t398_000	uns	PPER	wir	Dat.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t399_000	wehset	VVFIN	wahsen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t400_000	vile	AVD	vil(e)	_	(MF *	_	
4	t401_000	lîhte	AVD	lîhte	_	 *	_	
5	t402_000	ungemach	NA	un-ge-mach	Nom.Sg	(NX * ) )	_	
6	t403_000	-	$_	_	_	 * )	_	
7	t404_000	von	APPR	von	_	(PPX *	_	
8	t405_000	den	DDS	dër	*.Dat.Pl	(NX * ) )	_	
9	t406_000	die	DRELS	dër	*.Akk.Pl	(Cl (LB (NX * ) )	_	
10	t407_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * )	_	
11	t408_000	niener	AVD	nièner	_	 * )	_	
12	t408_001	kennen	VVFIN	kènnen	*.Pres.Pl.1	(RB (VX * ) )	_	
13	t409_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t410_000	hier	AVD	hièr	_	(S (Cl (PreF * )	_	
2	t411_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t412_000	liute	NA	liut	Nom.Pl	(MF (NX * )	_	
4	t413_000	harte	AVD	harte	_	 *	_	
5	t414_000	vremede	ADJN	vrèm(e)de	Pos.*.Nom.Pl.0	 * )	_	
6	t415_000	-	$_	_	_	 *	_	
7	t416_000	solich	DDA	so-l(i)ch	Fem.Akk.Sg.0	(Frag (NX *	_	
8	t417_000	êwe	NA	êwe	Akk.Sg	 * )	_	
9	t418_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
10	t419_000	begânt	VVFIN	be-gân	Ind.Pres.Pl.3	(LB (VX * ) )	_	
11	t420_000	-	$_	_	_	 *	_	
12	t421_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX * ) )	_	
13	t422_000	unsere	DPOSA	unser	Fem.Akk.Sg.st	(MF (NX *	_	
14	t423_000	site	NA	site	Akk.Sg	 * )	_	
15	t424_000	niene	AVD	niène	_	 * )	_	
16	t425_000	hânt	VAFIN	haben	Ind.Pres.Pl.3	(RB (VX * ) )	_	
17	t426_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t427_000	unsere	DPOSA	unser	*.Akk.Pl.st	(S (Frag (NX *	_	
2	t428_000	gote	NA	got	Akk.Pl	 * )	_	
3	t429_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
4	t430_000	vermanent	VVFIN	ver-manen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
5	t431_000	-	$_	_	_	 * )	_	
6	t432_000	einen	DIART	èin	Masc.Akk.Sg.st	(Frag *	_	
7	t433_000	hôhen	ADJA	hôh	Pos.Masc.Akk.Sg.*	 *	_	
8	t434_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
9	t435_000	ane	PTKVZ	ane/>+bëten	_	(VX *	_	
10	t436_000	betent	VVFIN	bëten/ane>+	Ind.Pres.Pl.3	 * )	_	
11	t437_000	-	$_	_	_	 *	_	
12	t438_000	des	DRELS	dër	Neut.Gen.Sg	(Cl (LB (NX * ) )	_	
13	t439_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
14	t440_000	niener	AVD	nièner	_	 * )	_	
15	t441_000	kenne	VVFIN	kènnen	*.Pres.Sg.1	(RB (VX * ) )	_	
16	t442_000	-	$_	_	_	 * ) )	_	
17	t443_000	noch	KON	noh	_	(Frag *	_	
18	t444_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
19	t445_000	in	APPR	in	_	(PPX *	_	
20	t446_000	mîneme	DPOSA	mîn	Neut.Dat.Sg.st	(NX *	_	
21	t447_000	künne	NA	künne	Dat.Sg	 * ) )	_	
22	t448_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t449_000	ire	DPOSA	ir(e)	*.Nom.Pl.0	(S (Cl (PreF (NX *	_	
2	t450_000	werc	NA	wërk	Nom.Pl	 * ) )	_	
3	t451_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
4	t452_000	ouch	AVD	ouch	_	(MF *	_	
5	t453_000	wunderlich	ADJD	wunter-lich	Pos....0	 * )	_	
6	t454_000	-	$_	_	_	 *	_	
7	t455_000	den	DDART	dër	*.Dat.Pl	(Frag *	_	
8	t456_000	unseren	DPOSN	unser	*.Dat.Pl.st	 *	_	
9	t457_000	niewewiht	NA	ni-wiht	Nom.Sg	(NX * )	_	
10	t458_000	gelîch	ADJD	ge-lîch	Pos....0	 *	_	
11	t459_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t460_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t461_000	vastent	VVFIN	vasten	Ind.Pres.Pl.3	(LB (VX (VX * )	_	
3	t462_000	unde	KON	unte	_	 *	_	
4	t463_000	vîrent	VVFIN	vîren	Ind.Pres.Pl.3	(VX * ) ) )	_	
5	t464_000	-	$_	_	_	 *	_	
6	t465_000	ire	DPOSA	ir(e)	*.Akk.Pl.0	(Frag (NX *	_	
7	t466_000	kint	NA	kind	Akk.Pl	 * )	_	
8	t467_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
9	t468_000	besnîdent	VVFIN	be-snîden	Ind.Pres.Pl.3	(LB (VX * ) )	_	
10	t469_000	an	APPR	ane	_	(MF (PPX *	_	
11	t469_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
12	t470_000	ahtoden	ADJA	aht(od)	Pos.Masc.Dat.Sg.wk	 *	_	
13	t471_000	tage	NA	tag	Dat.Sg	 * ) ) )	_	
14	t472_000	-	$_	_	_	 * ) )	_	
15	t473_000	ze	APPR	ze	_	(Cl (PreF (PPX *	_	
16	t473_001	toufe	NA	toufe	Dat.Sg	(NX * ) ) )	_	
17	t474_000	wel	VMFIN	wèllen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
18	t475_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
19	t476_000	daz	DDS	dër	Neut.Akk.Sg	(NX * )	_	
20	t477_000	haben	VAINF	haben	_	(VX * ) )	_	
21	t478_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t479_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t480_000	uns	PPER	wir	Dat.Pl.1	(NX * ) )	_	
3	t481_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
4	t482_000	gênt	VVFIN	gân	Ind.Pres.Pl.3	(LB (VX * ) ) )	_	
5	t483_000	sô	KO*	sô	_	(Frag *	_	
6	t484_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
7	t485_000	betent	VVFIN	bëten	Ind.Pres.Pl.3	(LB (VX * ) )	_	
8	t486_000	-	$_	_	_	 * )	_	
9	t487_000	unser	PPER	wir	Gen.Pl.1	(Frag (NX * )	_	
10	t488_000	niene	AVD	niène	_	(PreF * )	_	
11	t489_000	pflegent	VVFIN	pflëgen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
12	t490_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t491_000	trinken	NA	trinken	Akk.Sg	(S (Frag (NX * )	_	
2	t492_000	unde	KON	unte	_	 *	_	
3	t493_000	unser	DPOSA	unser	Neut.Akk.Sg.0	(NX *	_	
4	t494_000	ezzen	NA	ëzzen	Akk.Sg	 * )	_	
5	t495_000	-	$_	_	_	 * )	_	
6	t496_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
7	t497_000	habent	VAFIN	haben	Ind.Pres.Pl.3	(LB (VX * ) )	_	
8	t498_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX *	_	
9	t499_000	ze	APPR	ze	_	(PPX *	_	
10	t499_001	hazze	NA	hazz	Dat.Sg	(NX * ) ) ) )	_	
11	t500_000	-	$_	_	_	 * )	_	
12	t501_000	ir	PPER	ir	Nom.Pl.2	(Cl (PreF (NX * ) )	_	
13	t502_000	vernemet	VVIMP	ver-nëmen	Pl.2	(LB (VX * ) )	_	
14	t503_000	rehte	AVD	rëhte	_	(MF * )	_	
15	t504_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
16	t505_000	ich	PPER	ich	Nom.Sg.1	(NX * )	_	
17	t506_000	iu	PPER	ir	Dat.Pl.2	(PreF (NX * ) )	_	
18	t507_000	sage	VVFIN	sagen	*.Pres.Sg.1	(LB (VX * ) )	_	
19	t508_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t509_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t510_000	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t510_001	schulen	VMFIN	sol(e)n	*.Pres.Pl.1	 * ) )	_	
4	t511_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * ) )	_	
5	t512_000	vertragen	VVINF	ver-tragen	_	(RB (VX * ) )	_	
6	t513_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t514_000	nû	AVD	nû	_	(S (Cl (PreF * )	_	
2	t515_000	vernemet	VVIMP	ver-nëmen	Pl.2	(LB (VX * ) )	_	
3	t516_000	mîne	DPOSA	mîn	*.Nom.Pl.st	(MF *	_	
4	t517_000	holden	ADJA	hold	Pos.*.Nom.Pl..%.wk	 * )	_	
5	t518_000	-	$_	_	_	 *	_	
6	t519_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
7	t520_000	ich	PPER	ich	Nom.Sg.1	(NX * )	_	
8	t521_000	iu	PPER	ir	Dat.Pl.2	(NX * )	_	
9	t522_000	sagen	VVINF	sagen	_	(PreF (VX * ) )	_	
10	t523_000	welle	VMFIN	wèllen	Subj.Pres.Sg.1	(LB (VX * ) )	_	
11	t524_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t525_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t526_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t527_000	guote	ADJA	guot	Pos.*.Nom.Pl.st	(MF (NX *	_	
4	t528_000	knehte	NA	knëht	Nom.Pl	 * ) )	_	
5	t529_000	-	$_	_	_	 * )	_	
6	t530_000	geturren	VMFIN	ge-turren	*.Pres.Pl.3	(Cl (LB (VX * ) )	_	
7	t531_000	wole	AVD	wol(e)	_	(MF * )	_	
8	t532_000	vehten	VVINF	vëhten	_	(RB (VX * ) )	_	
9	t533_000	-	$_	_	_	 * )	_	
10	t534_000	und	KON	unte	_	(Cl (PrePreF * )	_	
11	t535_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t536_000	in	APPR	in	_	(MF (PPX *	_	
13	t536_001	ditze	DDA	dise	Neut.Akk.Sg	(NX *	_	
14	t537_000	lant	NA	lant	Akk.Sg	 * ) ) )	_	
15	t538_000	-	$_	_	_	 *	_	
16	t539_000	dechein	DIA	deh-èin	Masc.Nom.Sg.0	(Frag (NX *	_	
17	t540_000	unser	DPOSA	unser	Masc.Nom.Sg.0	 *	_	
18	t541_000	vîent	NA	vîent	Nom.Sg	 * )	_	
19	t542_000	-	$_	_	_	 * ) )	_	
20	t543_000	ir	PPER	ër	*.Gen.Pl.3	(Cl (PreF (NX * ) )	_	
21	t544_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
22	t545_000	sô	AVD	sô	_	(MF *	_	
23	t546_000	wunderlîche	AVD	wunter-lîche	_	 *	_	
24	t547_000	vile	AVD	vil(e)	_	 * )	_	
25	t548_000	-	$_	_	_	 * )	_	
26	t549_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
27	t550_000	kêrent	VVFIN	kêren	Ind.Pres.Pl.3	(LB (VX * ) )	_	
28	t551_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
29	t551_001	sich	PRF	sich	Akk	(NX *	_	
30	t552_000	zuoze	APPR	zuo-ze	_	(PPX *	_	
31	t553_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * ) ) ) )	_	
32	t554_000	-	$_	_	_	 * )	_	
33	t555_000	wir	PPER	wir	Nom.Pl.1	(Frag (NX * )	_	
34	t556_000	haben	VAFIN	haben	*.Pres.Pl.1	(VX *	_	
35	t557_000	verloren	VVPP	ver-lièsen	_	 * )	_	
36	t558_000	wîp	NA	wîb	Akk.Sg	(NX * )	_	
37	t559_000	unde	KON	unte	_	 *	_	
38	t560_000	kint	NA	kind	Akk.Sg	(NX * )	_	
39	t561_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t562_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t563_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t564_000	sorgelîchiu	ADJA	sorge-lich	Pos.Neut.Nom.Pl.st	(MF (NX *	_	
4	t565_000	dinc	NA	ding	Nom.Pl	 * ) )	_	
5	t566_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t567_000	schalke	NA	schalk	Nom.Pl	(S (Frag (NX * )	_	
2	t568_000	unde	KON	unte	_	 *	_	
3	t569_000	diuwe	NA	diuw	Nom.Pl	(NX * )	_	
4	t570_000	-	$_	_	_	 * )	_	
5	t571_000	mügen	VMFIN	mügen	*.Pres.Pl.3	(Cl (LB (VX * ) )	_	
6	t572_000	uns	PPER	wir	Akk.Pl.1	(MF (NX * )	_	
7	t573_000	balde	AVD	balde	_	 * )	_	
8	t574_000	riuwen	VVINF	riuwen	_	(RB (VX * ) )	_	
9	t575_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t576_000	wir	PPER	wir	Nom.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t577_000	schulen	VMFIN	sol(e)n	*.Pres.Pl.1	(LB (VX * ) )	_	
3	t578_000	wîslîche	AVD	wîs-lîche	_	(MF * )	_	
4	t579_000	varen	VVINF	var(e)n	_	(RB (VX * ) )	_	
5	t580_000	-	$_	_	_	 *	_	
6	t581_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
7	t582_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * )	_	
8	t583_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
9	t584_000	êr	AVD	êr	_	 *	_	
10	t585_000	wole	AVD	wol(e)	_	 * )	_	
11	t586_000	bewaren	VVFIN	be-war(e)n	*.Pres.Pl.1	(RB (VX * ) )	_	
12	t587_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t588_000	sîne	DPOSA	sîn	*.Akk.Pl.st	(S (Frag (NX *	_	
2	t589_000	probeste	NA	probest	Akk.Pl	 * )	_	
3	t590_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
4	t591_000	dô	AVD	dô	_	(PreF * )	_	
5	t592_000	machete	VVFIN	machen	*.Past.Sg.3	(LB (VX * ) )	_	
6	t593_000	-	$_	_	_	 * )	_	
7	t594_000	als	KO*	all-sô	_	(Frag *	_	
8	t595_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
9	t596_000	gewalt	NA	ge-walt	Akk.Sg	(PreF (NX * ) )	_	
10	t597_000	habete	VAFIN	haben	*.Past.Sg.3	(LB (VX * ) )	_	
11	t598_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t599_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t600_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t601_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * ) )	_	
4	t602_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
5	t603_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
6	t604_000	vuoren	VVFIN	var(e)n	*.Past.Pl.3	(RB (VX * ) )	_	
7	t605_000	-	$_	_	_	 * ) ) )	_	
8	t606_000	die	DDART	dër	*.Akk.Pl	(Cl (PreF (NX *	_	
9	t607_000	juden	NA	jude	Akk.Pl	 * ) )	_	
10	t608_000	sameneten	VVFIN	samenen	*.Past.Pl.3	(LB (VX * ) )	_	
11	t609_000	-	$_	_	_	 * )	_	
12	t610_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
13	t611_000	nâmen	VVFIN	nëmen	Ind.Past.Pl.3	(LB (VX * ) )	_	
14	t612_000	algemeine	AVD	all-ge-mèine	_	(MF * )	_	
15	t613_000	-	$_	_	_	 *	_	
16	t614_000	ziegel	NA	ziègel	Akk.Pl	(Frag (NX * )	_	
17	t615_000	unde	KON	unte	_	 *	_	
18	t616_000	steine	NA	stèin	Akk.Pl	(NX * )	_	
19	t617_000	-	$_	_	_	 * )	_	
20	t618_000	noch	KON	noh	_	(Frag *	_	
21	t619_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
22	t620_000	ne	PTKNEG	ne	_	(LB (VX *	_	
23	t620_001	getwalten	VVFIN	ge-twèllen	*.Past.Pl.3	 * ) )	_	
24	t621_000	-	$_	_	_	 *	_	
25	t622_000	êr	KOUS	êr	_	(Cl (LB * )	_	
26	t623_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
27	t624_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * ) )	_	
28	t625_000	gemacheten	VVFIN	ge-machen	*.Past.Pl.3	(RB (VX * ) )	_	
29	t626_000	-	$_	_	_	 * ) )	_	
30	t627_000	zwô	CARDA	zwêne	Fem.Akk.Pl.st	(Frag (NX *	_	
31	t628_000	bürge	NA	burg	Akk.Pl	 *	_	
32	t629_000	âne	APPR	âne	_	(PPX *	_	
33	t630_000	lôn	NA	lôn	Akk.Sg	(NX * ) ) )	_	
34	t631_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t632_000	die	DDART	dër	Fem.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t633_000	einen	CARDS	èin	Fem.Akk.Sg.wk	 * ) )	_	
3	t634_000	nante	VVFIN	nènnen	*.Past.Sg.3	(LB (VX * ) )	_	
4	t635_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
5	t636_000	Phiton	NE	Phiton	Nom.Sg	 * ) )	_	
6	t637_000	-	$_	_	_	 * )	_	
7	t638_000	diu	DDART	dër	Fem.Nom.Sg	(Cl (PreF (NX *	_	
8	t639_000	ander	DIS	ander	Fem.Nom.Sg.wk	 * ) )	_	
9	t640_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
10	t641_000	Ramasses	NE	Ramasses	Nom.Sg	(MF (NX * ) )	_	
11	t642_000	-	$_	_	_	 * )	_	
12	t643_000	lützel	AVD	lützel	_	(Cl (PreF * )	_	
13	t644_000	vlêhte	VVFIN	vlêhen	Ind.Past.Sg.3	(LB (VX * ) )	_	
14	t644_001	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
15	t645_000	si	PPER	ër	*.Akk.Pl.3	(NX *	_	
16	t646_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
17	t647_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t648_000	die	DDART	dër	*.Nom.Pl	(S (Cl (PreF (NX *	_	
2	t649_000	probeste	NA	probest	Nom.Pl	 * ) )	_	
3	t650_000	tâten	VVFIN	tuon	Ind.Past.Pl.3	(LB (VX * ) )	_	
4	t651_000	durch	APPR	durh	_	(MF (PPX *	_	
5	t651_001	nôt	NA	nôt	Akk.Sg	(NX * ) ) )	_	
6	t652_000	-	$_	_	_	 *	_	
7	t653_000	daz	DRELS	dër	Neut.Akk.Sg	(MF (PPX (NX (Cl (LB (NX * ) )	_	
8	t654_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
9	t655_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
10	t656_000	hêrre	NA	hêrre	Nom.Sg	 * ) )	_	
11	t657_000	gebôt	VVFIN	ge-bièten	Ind.Past.Sg.3	(RB (VX * ) )	_	
12	t658_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t659_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t660_000	rîten	VVFIN	rîten	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t661_000	after	APPR	after	_	(MF (PPX *	_	
4	t662_000	lande	NA	lant	Dat.Sg	(NX * ) ) ) )	_	
5	t663_000	die	DDART	dër	*.Akk.Pl	(Frag (NX *	_	
6	t664_000	juden	NA	jude	Akk.Pl	 * )	_	
7	t665_000	samenente	VVPS	samenen	_	(VX * )	_	
8	t666_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t667_000	gotes	NA	got	Gen.Sg	(S (Frag (NX * )	_	
2	t668_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
3	t669_000	vergâzen	VVFIN	ver-gëzzen	Ind.Past.Pl.3	(LB (VX * ) )	_	
4	t670_000	-	$_	_	_	 * )	_	
5	t671_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
6	t671_001	ne	PTKNEG	ne	_	(LB (VX *	_	
7	t672_000	wolten	VMFIN	wèllen	*.Past.Pl.3	 * ) )	_	
8	t673_000	si	PPER	ër	*.Akk.Pl.3	(MF (NX * ) )	_	
9	t674_000	erlâzen	VVINF	er-lâzen	_	(RB (VX * ) )	_	
10	t675_000	-	$_	_	_	 * )	_	
11	t676_000	schalclîcher	ADJA	schalk-lich	Pos.Fem.Gen.Sg.st	(NX *	_	
12	t677_000	vorhte	NA	vorht(e)	Gen.Sg	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t678_000	-	$_	_	_	(S *	_	
2	t679_000	diulîcher	ADJA	diu-lich	Pos.*.Gen.Pl.st	(Frag (NX *	_	
3	t680_000	werke	NA	wërk	Gen.Pl	 * )	_	
4	t681_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t682_000	der	DRELS	dër	Masc.Nom.Sg	(S (Cl (LB (NX *	_	
2	t683_000	von	APPR	von	_	(PPX *	_	
3	t684_000	adele	NA	adel	Dat.Sg	(NX * ) ) ) )	_	
4	t685_000	was	VAFIN	wësen	Ind.Past.Sg.3	(RB (VX *	_	
5	t686_000	geboren	VVPP	ge-bër(e)n	_	 * ) )	_	
6	t687_000	-	$_	_	_	 * )	_	
7	t688_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t689_000	muose	VMFIN	müèzen	*.Past.Sg.3	(LB (VX * ) )	_	
9	t690_000	beren	VVINF	bèr(e)n	_	(RB (VX * ) )	_	
10	t691_000	daz	DDART	dër	Neut.Akk.Sg	(PostF (NX *	_	
11	t692_000	hore	NA	horw	Akk.Sg	 * ) )	_	
12	t693_000	-	$_	_	_	 *	_	
13	t694_000	die	DDART	dër	*.Akk.Pl	(Frag (NX *	_	
14	t695_000	hêrlîchen	ADJA	hêr-lich	Pos.*.Akk.Pl.wk	 *	_	
15	t696_000	knehte	NA	knëht	Akk.Pl	 * )	_	
16	t697_000	-	$_	_	_	 * )	_	
17	t698_000	den	DDART	dër	Masc.Akk.Sg	(Frag (NX *	_	
18	t699_000	leim	NA	lèim	Akk.Sg	 * )	_	
19	t700_000	und	KON	unte	_	 *	_	
20	t701_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
21	t702_000	letten	NA	lètte	Akk.Sg	 * )	_	
22	t703_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t704_000	mit	APPR	mit	_	(S (Frag (PPX *	_	
2	t705_000	handen	NA	hant	Dat.Pl	(NX * ) )	_	
3	t706_000	vile	AVD	vil(e)	_	 *	_	
4	t707_000	wîzen	ADJN	wîz	Pos.Fem.Dat.Pl.*	 *	_	
5	t708_000	-	$_	_	_	 * )	_	
6	t709_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t710_000	worhten	VVFIN	wirken	*.Past.Pl.3	(LB (VX * ) )	_	
8	t711_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX *	_	
9	t712_000	ze	APPR	ze	_	(PPX *	_	
10	t712_001	vlîze	NA	vlîz	Dat.Sg	(NX * ) ) ) )	_	
11	t713_000	-	$_	_	_	 *	_	
12	t714_000	mit	APPR	mit	_	(Frag (PPX *	_	
13	t715_000	micheler	ADJA	michel	Pos.Fem.Dat.Sg.st	(NX *	_	
14	t716_000	noete	NA	nôt	Dat.Sg	 * ) )	_	
15	t717_000	-	$_	_	_	 * )	_	
16	t718_000	die	DDART	dër	Fem.Akk.Sg	(Frag (NX *	_	
17	t719_000	mûre	NA	mûre	Akk.Sg	 * )	_	
18	t720_000	vile	AVD	vil(e)	_	 *	_	
19	t721_000	stæte	ADJD	stæte	Pos....0	 *	_	
20	t722_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t723_000	die	DDART	dër	*.Nom.Pl	(S (Frag (NX *	_	
2	t724_000	hêrren	NA	hêrre	Nom.Pl	 * )	_	
3	t725_000	dô	AVD	dô	_	(PreF * )	_	
4	t726_000	klageten	VVFIN	klagen	*.Past.Pl.3	(LB (VX * ) )	_	
5	t727_000	-	$_	_	_	 * )	_	
6	t728_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
7	t729_000	nôt	NA	nôt	Akk.Sg	 *	_	
8	t730_000	die	DRELS	dër	Fem.Akk.Sg	(Cl (LB (NX * ) )	_	
9	t731_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
10	t732_000	habeten	VAFIN	haben	*.Past.Pl.3	(RB (VX * ) )	_	
11	t733_000	-	$_	_	_	 * ) )	_	
12	t734_000	wande	KO*	wante	_	(Frag *	_	
13	t735_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
14	t736_000	verschelket	VVPP	ver-schèlken	_	(VX *	_	
15	t737_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	 * )	_	
16	t738_000	ze	APPR	ze	_	 *	_	
17	t739_000	vile	AVD	vil(e)	_	 *	_	
18	t740_000	manigen	DIA	manig	*.Dat.Pl.st	(NX *	_	
19	t741_000	jâren	NA	jâr	Dat.Pl	 * )	_	
20	t742_000	-	$_	_	_	 * )	_	
21	t743_000	ze	APPR	ze	_	(Frag (PPX *	_	
22	t743_001	hoehe	NA	hoèhe	Dat.Sg	(NX * ) )	_	
23	t744_000	joch	AVD	joh	_	 *	_	
24	t745_000	ze	APPR	ze	_	(PPX *	_	
25	t746_000	spotte	NA	spott	Dat.Sg	(NX * ) )	_	
26	t747_000	-	$_	_	_	 * )	_	
27	t748_000	der	DDART	dër	*.Gen.Pl	(Frag (NX *	_	
28	t749_000	heidenere	ADJA	hèiden	Pos.*.Gen.Pl.st	 *	_	
29	t750_000	knehte	NA	knëht	Gen.Pl	 * )	_	
30	t751_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t752_000	der	DDART	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t753_000	küninc	NA	küni(n)g	Nom.Sg	 * )	_	
3	t754_000	in	PPER	ër	*.Akk.Pl.3	(NX * )	_	
4	t755_000	alrihte	AVD	all-rihte	_	 *	_	
5	t756_000	-	$_	_	_	 * )	_	
6	t757_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t758_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
8	t759_000	si	PPER	ër	*.Akk.Pl.3	(MF (NX * ) )	_	
9	t760_000	vernicken	VVINF	ver-nicken	_	(RB (VX * ) )	_	
10	t761_000	-	$_	_	_	 *	_	
11	t762_000	mit	APPR	mit	_	(Frag (PPX *	_	
12	t763_000	micheleme	ADJA	michel	Pos.Masc.Dat.Sg.st	(NX *	_	
13	t764_000	sêre	NA	sêr	Dat.Sg	 * ) )	_	
14	t765_000	-	$_	_	_	 *	_	
15	t766_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
16	t767_000	ir	PPER	ër	*.Gen.Pl.3	(MF (NX * ) )	_	
17	t768_000	ne	PTKNEG	ne	_	(RB (VX *	_	
18	t768_001	würde	VAFIN	wërden	Subj.Past.Sg.3	 * ) )	_	
19	t769_000	mêrer	AVD	mêr(e)	Comp	(PostF * )	_	
20	t770_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t771_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t772_000	tiuvel	NA	tiuvel	Nom.Sg	 * ) )	_	
3	t773_000	gap	VVFIN	gëben	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t774_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
5	t775_000	rât	NA	rât	Akk.Sg	 * ) )	_	
6	t776_000	-	$_	_	_	 *	_	
7	t777_000	wande	KO*	wante	_	(Frag *	_	
8	t778_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
9	t779_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (NX *	_	
10	t779_001	bezzeren	ADJD	bèzzer	Pos.Masc.Akk.Sg.*	 * ) )	_	
11	t780_000	ne	PTKNEG	ne	_	(LB (VX *	_	
12	t781_000	hât	VAFIN	haben	Ind.Pres.Sg.3	 * ) )	_	
13	t782_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t783_000	den	DDART	dër	*.Dat.Pl	(S (Frag (NX *	_	
2	t784_000	hebeammen	NA	hèbe-amme	Dat.Pl	 * )	_	
3	t785_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
4	t786_000	gebôt	VVFIN	ge-bièten	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t787_000	-	$_	_	_	 *	_	
6	t788_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
7	t789_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
8	t790_000	tâten	VVFIN	tuon	Ind.Past.Pl.3	(RB (VX * ) )	_	
9	t791_000	daz	DDART	dër	Neut.Akk.Sg	(PostF (NX *	_	
10	t792_000	mort	NA	mord	Akk.Sg	 * ) )	_	
11	t793_000	-	$_	_	_	 * ) )	_	
12	t794_000	mit	APPR	mit	_	(Frag (PPX *	_	
13	t795_000	michelen	ADJA	michel	Pos.*.Dat.Pl.*	(NX *	_	
14	t796_000	sünden	NA	sünte	Dat.Pl	 * ) )	_	
15	t797_000	-	$_	_	_	 * )	_	
16	t798_000	an	APPR	ane	_	(Frag (PPX *	_	
17	t799_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
18	t800_000	hêbrêischen	ADJA	hêbrêisch	Pos.*.Dat.Pl.*	 *	_	
19	t801_000	kinden	NA	kind	Dat.Pl	 * ) )	_	
20	t802_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t803_000	verliesen	VVINF	ver-lièsen	_	(S (Cl (PreF (VX * ) )	_	
2	t804_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t805_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
4	t806_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
5	t807_000	degene	NA	dëgen	Akk.Pl	 * ) )	_	
6	t808_000	-	$_	_	_	 * )	_	
7	t809_000	unde	KON	unte	_	(Frag *	_	
8	t810_000	behalten	VVINF	be-halten	_	(VX * )	_	
9	t811_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
10	t812_000	megede	NA	maged	Akk.Pl	 * )	_	
11	t813_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t814_000	Sephôra	NE	Sèphôra	Nom.Sg	(S (Frag (NX * )	_	
2	t815_000	unde	KON	unte	_	 *	_	
3	t816_000	Fua	NE	Fua	Nom.Sg	(NX *	_	
4	t817_000	mit	APPR	mit	_	(PPX *	_	
5	t818_000	micheler	ADJA	michel	Pos.Fem.Dat.Sg.st	(NX *	_	
6	t819_000	triuwe	NA	triuwe	Dat.Sg	 * ) ) )	_	
7	t820_000	-	$_	_	_	 * )	_	
8	t821_000	bewegeten	VVFIN	be-wègen	*.Past.Pl.3	(Cl (LB (VX * ) )	_	
9	t822_000	ire	DPOSA	ir(e)	Neut.Akk.Pl.0	(MF (NX *	_	
10	t823_000	herze	NA	hërze	Akk.Pl	 * ) )	_	
11	t824_000	-	$_	_	_	 *	_	
12	t825_000	über	APPR	über	_	(Frag (PPX *	_	
13	t826_000	dere	DDART	dër	*.Gen.Pl	(NX *	_	
14	t827_000	kinde	NA	kind	Gen.Pl	 * ) )	_	
15	t828_000	smerzen	NA	smërze	Akk.Pl	(NX * )	_	
16	t829_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t830_000	dô	AVD	dô	_	(S (Cl (PreF * )	_	
2	t830_001	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t831_000	dorfte	VMFIN	durfen	*.Past.Sg.3	 * ) )	_	
4	t832_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
5	t833_000	rabe	NA	rabe	Nom.Sg	 * ) )	_	
6	t834_000	-	$_	_	_	 * )	_	
7	t835_000	bluotigen	ADJA	bluotig	Pos.Masc.Akk.Sg.*	(Frag (NX *	_	
8	t836_000	snabel	NA	snabel	Akk.Sg	 * )	_	
9	t837_000	haben	VAINF	haben	_	(VX * )	_	
10	t838_000	-	$_	_	_	 * )	_	
11	t839_000	dô	AVD	dô	_	(Cl (PreF * )	_	
12	t840_000	mahten	VMFIN	mügen	*.Past.Pl.3	(LB (VX * ) )	_	
13	t841_000	die	DDART	dër	*.Nom.Pl	(MF (NX *	_	
14	t842_000	gire	NA	gir(e)	Nom.Pl	 * ) )	_	
15	t843_000	-	$_	_	_	 * )	_	
16	t844_000	verliesen	VVINF	ver-lièsen	_	(Frag (VX * )	_	
17	t845_000	ire	DPOSA	ir(e)	Neut.Akk.Pl.0	(NX *	_	
18	t846_000	giwen	NA	giwen	Akk.Pl	 * )	_	
19	t847_000	-	$_	_	_	 * )	_	
20	t848_000	joch	KON	joh	_	(Frag *	_	
21	t849_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
22	t850_000	wolv	NA	wolv	Nom.Sg	 *	_	
23	t851_000	grâwe	ADJN	grâw	Pos.Masc.Nom.Sg.wk	 * )	_	
24	t852_000	-	$_	_	_	 * )	_	
25	t853_000	ne	PTKNEG	ne	_	(Cl (LB (VX *	_	
26	t853_001	dorfte	VMFIN	durfen	*.Past.Sg.3	 * ) )	_	
27	t854_000	dare	AVD	dar(e)	_	(MF * )	_	
28	t855_000	gâhen	VVINF	gâhen	_	(RB (VX * ) )	_	
29	t856_000	-	$_	_	_	 *	_	
30	t857_000	noch	KON	noh	_	(Frag *	_	
31	t858_000	die	DDART	dër	*.Nom.Pl	(NX *	_	
32	t859_000	hessehunde	NA	hèsse-hunt	Nom.Pl	 * )	_	
33	t860_000	-	$_	_	_	 * )	_	
34	t861_000	mit	APPR	mit	_	(Frag (PPX *	_	
35	t862_000	hungerigen	ADJA	hungerig	Pos.Masc.Dat.Sg.wk	(NX *	_	
36	t863_000	munde	NA	mund	Dat.Sg	 * ) )	_	
37	t864_000	-	$_	_	_	 * )	_	
38	t865_000	wande	KO*	wante	_	(Frag *	_	
39	t866_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
40	t867_000	kindelîne	NA	kindelîn	Gen.Pl	 * )	_	
41	t868_000	bluot	NA	bluot	Nom.Sg	(NX * )	_	
42	t869_000	-	$_	_	_	 * ) )	_	
43	t870_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(Cl (LB (VX * ) )	_	
44	t871_000	vile	AVD	vil(e)	_	(MF *	_	
45	t872_000	wole	AVD	wol(e)	_	 * )	_	
46	t873_000	behuot	VVPP	be-hüèten	_	(RB (VX * ) )	_	
47	t874_000	-	$_	_	_	 *	_	
48	t875_000	von	APPR	von	_	(Frag (PPX *	_	
49	t876_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
50	t877_000	wîbe	NA	wîb	Gen.Pl	 * ) )	_	
51	t878_000	vorhten	NA	vorht(e)	Dat.Pl	(NX * )	_	
52	t879_000	-	$_	_	_	 *	_	
53	t880_000	die	DRELS	dër	*.Akk.Pl	(Cl (LB (NX * ) )	_	
54	t881_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX *	_	
55	t882_000	ze	APPR	ze	_	(PPX *	_	
56	t882_001	gote	NA	got	Dat.Sg	(NX * ) ) ) )	_	
57	t883_000	habeten	VAFIN	haben	*.Past.Pl.3	(RB (VX * ) )	_	
58	t884_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t885_000	lôn	NA	lôn	Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t886_000	entviengen	VVFIN	ent-vâhen	*.Past.Pl.3	(LB (VX * ) )	_	
3	t887_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX *	_	
4	t888_000	sîn	PPER	ër	Neut.Gen.Sg.3	(NX *	_	
5	t889_000	von	APPR	von	_	(PPX *	_	
6	t890_000	ime	PPER	ër	Neut.Dat.Sg.3	(NX * ) ) ) ) )	_	
7	t891_000	-	$_	_	_	 * )	_	
8	t892_000	grôzen	ADJA	grôz	Pos.Masc.Akk.Sg.*	(Cl (PreF (NX *	_	
9	t893_000	rîchtuom	NA	rîch-tuom	Akk.Sg	 * ) )	_	
10	t894_000	gap	VVFIN	gëben	Ind.Past.Sg.3	(LB (VX * ) )	_	
11	t895_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
12	t896_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
13	t897_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t898_000	der	DDART	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t899_000	küninc	NA	küni(n)g	Nom.Sg	 * )	_	
3	t900_000	niene	AVD	niène	_	(PreF * )	_	
4	t901_000	twalte	VVFIN	twèllen	*.Past.Sg.3	(LB (VX * ) )	_	
5	t902_000	-	$_	_	_	 * )	_	
6	t903_000	die	DDART	dër	*.Akk.Pl	(Frag (NX *	_	
7	t904_000	ammen	NA	amme	Akk.Pl	 * )	_	
8	t905_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
9	t906_000	zuo	PTKVZ	zuo/>+laden	_	 *	_	
10	t906_001	ze	APPR	ze	_	(PreF (PPX *	_	
11	t906_002	ime	PPER	ër	Neut.Dat.Sg.3	(NX * ) ) )	_	
12	t907_000	ladete	VVFIN	laden/zuo>+	*.Past.Sg.3	(LB (VX * ) )	_	
13	t908_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t909_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t910_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t911_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
4	t912_000	übellîchen	AVD	übel-lîche	_	 *	_	
5	t913_000	zuo	AVD	zuo	_	 * )	_	
6	t914_000	-	$_	_	_	 * )	_	
7	t915_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t916_000	vrâgete	VVFIN	vrâgen	*.Past.Sg.3	(LB (VX * ) )	_	
9	t917_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
10	t918_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
11	t919_000	wolten	VMFIN	wèllen	*.Past.Pl.3	(LB (VX * ) )	_	
12	t920_000	tuon	VVINF	tuon	_	(RB (VX * ) )	_	
13	t921_000	-	$_	_	_	 *	_	
14	t922_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
15	t923_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
16	t924_000	behielten	VVFIN	be-halten	*.Past.Pl.3	(RB (VX * ) )	_	
17	t925_000	die	DDART	dër	*.Akk.Pl	(PostF (NX *	_	
18	t926_000	degene	NA	dëgen	Akk.Pl	 * ) )	_	
19	t927_000	-	$_	_	_	 * ) )	_	
20	t928_000	alsô	AVD	all-sô	_	(Frag *	_	
21	t929_000	wole	AVD	wol(e)	_	 *	_	
22	t930_000	sam	KO*	sam(e)	_	 *	_	
23	t931_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
24	t932_000	megede	NA	maged	Akk.Pl	 * )	_	
25	t933_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t934_000	karc	ADJD	karg	Pos....0	(S (Cl (PreF * )	_	
2	t935_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t936_000	ir	DPOSA	ir(e)	Fem.Nom.Sg.st	(MF (NX *	_	
4	t937_000	antwürte	NA	ant-würte	Nom.Sg	 * ) )	_	
5	t938_000	-	$_	_	_	 *	_	
6	t939_000	durch	APPR	durh	_	(Frag (PPX *	_	
7	t940_000	minne	NA	minne	Akk.Sg	(NX * ) )	_	
8	t941_000	und	KON	unte	_	 *	_	
9	t942_000	durch	AVD	durh	_	 *	_	
10	t943_000	vorhte	NA	vorht(e)	Akk.Sg	(NX * )	_	
11	t944_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t945_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t946_000	sprâchen	VVFIN	sprëchen	Ind.Past.Pl.3	(LB (VX * ) )	_	
3	t947_000	in	APPR	in	_	(MF (PPX *	_	
4	t948_000	triuwen	NA	triuwe	Dat.Pl	(NX * ) ) )	_	
5	t949_000	-	$_	_	_	 *	_	
6	t950_000	die	DDART	dër	*.Nom.Pl	(Frag (NX *	_	
7	t951_000	hêbrêischen	ADJA	hêbrêisch	Pos.*.Nom.Pl.wk	 *	_	
8	t952_000	vrouwen	NA	vrouwe	Nom.Pl	 * )	_	
9	t953_000	-	$_	_	_	 * ) )	_	
10	t954_000	die	DDS	dër	*.Nom.Pl	(Cl (PreF (NX * ) )	_	
11	t955_000	kunden	VMFIN	kunnen	*.Past.Pl.3	(LB (VX * ) )	_	
12	t956_000	selbe	DDD	sëlb	Fem.Nom.Sg.st	(MF *	_	
13	t957_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
14	t958_000	list	NA	list	Akk.Sg	 * ) )	_	
15	t959_000	-	$_	_	_	 *	_	
16	t960_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX *	_	
17	t961_000	zuo	APPR	ze	_	(PPX *	_	
18	t962_000	kintbette	NA	kind-bètte	Dat.Sg	(NX * ) ) ) )	_	
19	t963_000	guot	ADJD	guot	Pos....0	(MF * )	_	
20	t964_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX * ) )	_	
21	t965_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t966_000	alsô	KO*	all-sô	_	(S (Frag *	_	
2	t967_000	wir	PPER	wir	Nom.Pl.1	(NX * )	_	
3	t968_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
4	t969_000	haben	VAFIN	haben	*.Pres.Pl.1	(VX *	_	
5	t970_000	vernomen	VVPP	ver-nëmen	_	 * )	_	
6	t971_000	-	$_	_	_	 *	_	
7	t972_000	swenne	AVG	swanne	_	(Cl (LB * )	_	
8	t973_000	wir	PPER	wir	Nom.Pl.1	(MF (NX *	_	
9	t974_000	zuoze	APPR	zuo-ze	_	(PPX *	_	
10	t974_001	in	PPER	ër	*.Dat.Pl.3	(NX * ) ) ) )	_	
11	t975_000	komen	VVFIN	komen	*.Pres.Pl.1	(RB (VX * ) )	_	
12	t976_000	-	$_	_	_	 * ) )	_	
13	t977_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
14	t978_000	habent	VAFIN	haben	Ind.Pres.Pl.3	(LB (VX * ) )	_	
15	t979_000	unser	PPER	wir	Gen.Pl.1	(MF (NX * )	_	
16	t980_000	vile	AVD	vil(e)	_	 *	_	
17	t981_000	guoten	ADJA	guot	Pos.Masc.Akk.Sg.*	(NX *	_	
18	t982_000	rât	NA	rât	Akk.Sg	 * ) )	_	
19	t983_000	-	$_	_	_	 * )	_	
20	t984_000	ire	DPOSA	ir(e)	Fem.Akk.Sg.0	(Cl (PreF (NX *	_	
21	t985_000	geburt	NA	ge-burt	Akk.Sg	 * ) )	_	
22	t986_000	hânt	VAFIN	haben	Ind.Pres.Pl.3	(LB (VX * ) )	_	
23	t987_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
24	t988_000	vüre	PTKVZ	vür(e)/>+bringen	_	(RB (VX *	_	
25	t989_000	brâht	VVPP	bringen/vür(e)>+	_	 * ) )	_	
26	t990_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t991_000	der	DDART	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t992_000	küninc	NA	küni(n)g	Nom.Sg	 * )	_	
3	t993_000	wole	AVD	wol(e)	_	(PreF * )	_	
4	t994_000	sach	VVFIN	sëhen	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t995_000	-	$_	_	_	 *	_	
6	t996_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
7	t997_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX *	_	
8	t998_000	mit	APPR	mit	_	(PPX *	_	
9	t999_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) ) )	_	
10	t1000_000	vrume	AVD	vrum	_	 * )	_	
11	t1001_000	ne	PTKNEG	ne	_	(RB (VX *	_	
12	t1001_001	was	VAFIN	wësen	Ind.Past.Sg.3	 * ) )	_	
13	t1002_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1003_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1004_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1005_000	alle	DIA	all	*.Akk.Pl.st	(MF (NX *	_	
4	t1006_000	sîne	DPOSA	sîn	*.Akk.Pl.st	 *	_	
5	t1007_000	diete	NA	dièt	Akk.Pl	 * ) )	_	
6	t1008_000	-	$_	_	_	 * )	_	
7	t1009_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
8	t1009_001	ne	PTKNEG	ne	_	(LB (VX *	_	
9	t1010_000	liezen	VVFIN	lâzen	*.Past.Pl.3	 * ) )	_	
10	t1011_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
11	t1012_000	nieht	PTKNEG	niht	_	 * )	_	
12	t1013_000	-	$_	_	_	 *	_	
13	t1014_000	swaz	PG	swër	Neut.Nom.Sg.st	(Frag (NX * )	_	
14	t1015_000	dâ	AVD	dâr	_	(PreF * )	_	
15	t1016_000	würde	VAFIN	wërden	Subj.Past.Sg.3	(LB (VX * ) )	_	
16	t1017_000	degene	NA	dëgen	Nom.Pl	(MF (NX * ) )	_	
17	t1018_000	-	$_	_	_	 * ) )	_	
18	t1019_000	die	DDS	dër	*.Akk.Pl	(Cl (PreF (NX * ) )	_	
19	t1020_000	scholten	VMFIN	sol(e)n	*.Past.Pl.3	(LB (VX * ) )	_	
20	t1021_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
21	t1022_000	ersterben	VVINF	er-stërben	_	(RB (VX * ) )	_	
22	t1023_000	-	$_	_	_	 * )	_	
23	t1024_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
24	t1025_000	scholten	VMFIN	sol(e)n	*.Past.Pl.3	(LB (VX * ) )	_	
25	t1026_000	iz	PPER	ër	Neut.Akk.Sg.3	(MF (NX * ) )	_	
26	t1027_000	bedenken	VVINF	be-dènken	_	(RB (VX * ) )	_	
27	t1028_000	-	$_	_	_	 * )	_	
28	t1029_000	ze	APPR	ze	_	(Frag (PPX *	_	
29	t1029_001	wazzere	NA	wazzer	Dat.Sg	(NX * ) )	_	
30	t1030_000	ertrenken	VVINF	er-trènken	_	(VX * )	_	
31	t1031_000	-	$_	_	_	 * )	_	
32	t1032_000	die	DDART	dër	*.Akk.Pl	(Frag (NX *	_	
33	t1033_000	megede	NA	maged	Akk.Pl	 * )	_	
34	t1034_000	leben	VVINF	lëben	_	(PreF (VX * ) )	_	
35	t1035_000	liezen	VVFIN	lâzen	*.Past.Pl.3	(LB (VX * ) )	_	
36	t1036_000	-	$_	_	_	 * )	_	
37	t1037_000	ir	PPER	ër	*.Gen.Pl.3	(Frag (NX * )	_	
38	t1038_000	schône	AVD	schône	_	 *	_	
39	t1039_000	geniezen	VVINF	ge-nièzen	_	(VX * )	_	
40	t1040_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1041_000	under	APPR	unter	_	(S (Cl (PreF (PPX *	_	
2	t1042_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t1043_000	juden	NA	jude	Dat.Pl	 * ) ) )	_	
4	t1044_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t1045_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
6	t1046_000	man	NA	mann	Nom.Sg	 * ) )	_	
7	t1047_000	-	$_	_	_	 *	_	
8	t1048_000	des	DRELS	dër	Neut.Gen.Sg	(PostF (Cl (LB (NX * ) )	_	
9	t1049_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
10	t1050_000	genennen	VVINF	ge-nènnen	_	(VX * )	_	
11	t1051_000	niene	AVD	niène	_	 * )	_	
12	t1052_000	kan	VMFIN	kunnen	Ind.Pres.Sg.1	(RB (VX * ) )	_	
13	t1053_000	-	$_	_	_	 * ) ) )	_	
14	t1054_000	von	APPR	von	_	(Cl (PreF (PPX *	_	
15	t1055_000	Levi	NE	Levi	Dat.Sg	(NX * ) ) )	_	
16	t1056_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
17	t1057_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
18	t1058_000	geboren	VVPP	ge-bër(e)n	_	(RB (VX * ) )	_	
19	t1059_000	-	$_	_	_	 * )	_	
20	t1060_000	ein	DIART	èin	Neut.Akk.Sg.0	(Cl (PreF (NX *	_	
21	t1061_000	wîp	NA	wîb	Akk.Sg	 * ) )	_	
22	t1062_000	hæte	VAFIN	haben	*.Past.Sg.3	(LB (VX * ) )	_	
23	t1063_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (MF (NX * )	_	
24	t1064_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * ) ) )	_	
25	t1065_000	erkuren	VVFIN	er-kièsen	*.Past.Pl.3	(LB (VX * ) )	_	
26	t1066_000	-	$_	_	_	 *	_	
27	t1067_000	ûzer	APPR	ûzer	_	(Frag (PPX *	_	
28	t1068_000	sîneme	DPOSA	sîn	Neut.Dat.Sg.st	(NX *	_	
29	t1069_000	geslehte	NA	ge-slèhte	Dat.Sg	 *	_	
30	t1070_000	ze	APPR	ze	_	(PPX *	_	
31	t1070_001	sîn	PPER	ër	Masc.Gen.Sg.3	(NX *	_	
32	t1071_000	selbes	DDD	sëlb	Masc.Gen.Sg.st	 * ) ) ) )	_	
33	t1072_000	bette	NA	bètte	Dat.Sg	(NX * )	_	
34	t1073_000	-	$_	_	_	 * ) )	_	
35	t1074_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
36	t1075_000	hæte	VAFIN	haben	*.Past.Sg.3	(LB (VX * ) )	_	
37	t1076_000	si	PPER	ër	Fem.Akk.Sg.3	(MF (NX * ) )	_	
38	t1077_000	genomen	VVPP	nëmen	_	(RB (VX * ) )	_	
39	t1078_000	zuo	APPR	ze	_	(PostF (PPX *	_	
40	t1079_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
41	t1080_000	êlîchen	ADJA	ê-lich	Pos.Fem.Dat.Sg.wk	 *	_	
42	t1081_000	kone	NA	kone	Dat.Sg	 * ) ) )	_	
43	t1082_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1083_000	diu	DDS	dër	Fem.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t1084_000	entvienc	VVFIN	ent-vâhen	Ind.Past.Sg.3	(LB (VX (VX * )	_	
3	t1085_000	unde	KON	unte	_	 *	_	
4	t1086_000	gebar	VVFIN	ge-bër(e)n	Ind.Past.Sg.3	(VX * ) ) )	_	
5	t1087_000	-	$_	_	_	 *	_	
6	t1088_000	ein	DIART	èin	Neut.Akk.Sg.0	(Frag *	_	
7	t1089_000	vile	AVD	vil(e)	_	 *	_	
8	t1090_000	êrlîchez	ADJA	êr-lich	Pos.Neut.Akk.Sg.st	(NX *	_	
9	t1091_000	barn	NA	barn	Akk.Sg	 * )	_	
10	t1092_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1093_000	durch	APPR	durh	_	(S (Cl (PreF (PPX *	_	
2	t1094_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
3	t1095_000	sîne	DPOSA	sîn	Fem.Akk.Sg.st	 *	_	
4	t1096_000	schoene	NA	schoène	Akk.Sg	 * ) ) )	_	
5	t1097_000	hal	VVFIN	hël(e)n	Ind.Past.Sg.3	(LB (VX * ) )	_	
6	t1098_000	si	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
7	t1098_001	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
8	t1099_000	drî	CARDA	drî	*.Akk.Pl.st	(NX *	_	
9	t1100_000	mânôde	NA	mânôd	Akk.Pl	 * ) )	_	
10	t1101_000	-	$_	_	_	 *	_	
11	t1102_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
12	t1103_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
13	t1104_000	ungewizzen	ADJD	un-ge-wizzen	Pos....0	 * )	_	
14	t1105_000	was	VAFIN	wësen	Ind.Past.Sg.3	(RB (VX * ) )	_	
15	t1106_000	-	$_	_	_	 *	_	
16	t1107_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
17	t1108_000	si	PPER	ër	Fem.Nom.Sg.3	(MF (NX *	_	
18	t1109_000	sîn	PPER	ër	Masc.Gen.Sg.3	(NX * ) ) )	_	
19	t1110_000	genesen	VVPP	ge-nësen	_	(RB (VX *	_	
20	t1111_000	was	VAFIN	wësen	Ind.Past.Sg.3	 * ) )	_	
21	t1112_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1113_000	dô	KOUS	dô	_	(S (Cl (LB * )	_	
2	t1114_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
3	t1115_000	dâ	PAVD	dâr/+zuo	_	(RB (VX *	_	
4	t1116_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
5	t1117_000	bekom	VVFIN	be-komen	Ind.Past.Sg.3	 * ) )	_	
6	t1118_000	-	$_	_	_	 *	_	
7	t1119_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t1120_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
9	t1121_000	ne	PTKNEG	ne	_	(RB (VX *	_	
10	t1121_001	mahte	VMFIN	mügen	*.Past.Sg.3	 * ) )	_	
11	t1122_000	langer	AVD	lange	_	(PostF *	_	
12	t1123_000	sîn	VAINF	sîn	_	(VX * )	_	
13	t1124_000	verholen	VVPP	ver-hël(e)n	_	(VX * ) )	_	
14	t1125_000	-	$_	_	_	 * ) )	_	
15	t1126_000	ûzer	APPR	ûzer	_	(Frag (PPX *	_	
16	t1127_000	binezze	NA	binezz	Dat.Sg	(NX * ) )	_	
17	t1128_000	si	PPER	ër	Fem.Nom.Sg.3	(PreF (NX * ) )	_	
18	t1129_000	worhte	VVFIN	wirken	*.Past.Sg.3	(LB (VX * ) )	_	
19	t1130_000	-	$_	_	_	 * ) )	_	
20	t1131_000	eine	CARDA	èin	Fem.Akk.Sg.st	(NX *	_	
21	t1132_000	zeinen	NA	zèine	Akk.Sg	 * )	_	
22	t1133_000	der	DRELS	dër	Fem.Gen.Sg	(Cl (LB (NX * ) )	_	
23	t1134_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * ) )	_	
24	t1135_000	bedorfte	VVFIN	be-durfen	*.Past.Sg.3	(RB (VX * ) )	_	
25	t1136_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1137_000	diu	DDART	dër	Fem.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t1138_000	muoter	NA	muoter	Nom.Sg	 * ) )	_	
3	t1139_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t1140_000	wîse	ADJD	wîs(e)	Pos....0	(MF * )	_	
5	t1141_000	-	$_	_	_	 *	_	
6	t1142_000	mit	APPR	mit	_	(Frag (PPX *	_	
7	t1143_000	beche	NA	bëch	Dat.Sg	(NX * ) )	_	
8	t1144_000	und	KON	unte	_	 *	_	
9	t1145_000	mit	APPR	mit	_	(PPX *	_	
10	t1146_000	firnîse	NA	firnîs	Dat.Sg	(NX * ) )	_	
11	t1147_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
12	t1148_000	zeine	NA	zèine	Akk.Sg	 * )	_	
13	t1149_000	si	PPER	ër	Fem.Nom.Sg.3	(PreF (NX * ) )	_	
14	t1150_000	verklenete	VVFIN	ver-klënen	*.Past.Sg.3	(LB (VX * ) )	_	
15	t1151_000	-	$_	_	_	 * )	_	
16	t1152_000	daz	DDART	dër	Neut.Akk.Sg	(Frag (NX *	_	
17	t1153_000	kint	NA	kind	Akk.Sg	 * )	_	
18	t1154_000	si	PPER	ër	Fem.Nom.Sg.3	(PreF (NX * ) )	_	
19	t1155_000	dâr	PAVD	dâr/+in	_	(LB (VX *	_	
20	t1156_000	in	PAVAP	in/dâr+	_	 *	_	
21	t1157_000	legete	VVFIN	lègen	*.Past.Sg.3	 * ) )	_	
22	t1158_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1159_000	mit	APPR	mit	_	(S (Frag (PPX *	_	
2	t1160_000	grôzem	ADJA	grôz	Pos.Masc.Dat.Sg.st	(NX *	_	
3	t1161_000	ungemache	NA	un-ge-mach	Dat.Sg	 * ) )	_	
4	t1162_000	-	$_	_	_	 * )	_	
5	t1163_000	si	PPER	ër	Fem.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
6	t1164_000	verstal	VVFIN	ver-stël(e)n	Ind.Past.Sg.3	(LB (VX * ) )	_	
7	t1165_000	sich	PRF	sich	Akk	(MF (NX *	_	
8	t1166_000	zuo	APPR	ze	_	(PPX *	_	
9	t1167_000	einem	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
10	t1168_000	bache	NA	bach	Dat.Sg	 * ) ) ) )	_	
11	t1169_000	-	$_	_	_	 *	_	
12	t1170_000	an	APPR	ane	_	(Frag (PPX *	_	
13	t1171_000	die	DDS	dër	Fem.Akk.Sg	(NX * ) )	_	
14	t1172_000	drâte	AVD	drâte	_	(PreF * )	_	
15	t1173_000	si	PPER	ër	Fem.Nom.Sg.3	(NX * )	_	
16	t1174_000	daz	DDART	dër	Neut.Akk.Sg	(PreF (NX *	_	
17	t1175_000	kint	NA	kind	Akk.Sg	 * ) )	_	
18	t1176_000	verlie	VVFIN	ver-lâzen	Ind.Past.Sg.3	(LB (VX * ) )	_	
19	t1177_000	-	$_	_	_	 * ) )	_	
20	t1178_000	heim	AVD	hèim	_	(Frag *	_	
21	t1179_000	si	PPER	ër	Fem.Nom.Sg.3	(NX * )	_	
22	t1180_000	trûrente	VVPS	trûren	_	(VX *	_	
23	t1181_000	gie	VVFIN	gân	Ind.Past.Sg.3	 * )	_	
24	t1182_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1183_000	sîn	DPOSA	sîn	Fem.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t1184_000	swester	NA	swëster	Nom.Sg	 * ) )	_	
3	t1185_000	iedoch	KOUS	iè-doh	_	(LB * )	_	
4	t1186_000	wâr	ADJD	wâr	Pos....0	(MF * )	_	
5	t1187_000	nam	VVFIN	nëmen	Ind.Past.Sg.3	(RB (VX * ) )	_	
6	t1188_000	-	$_	_	_	 *	_	
7	t1189_000	wie	AVW	wiè	_	(Frag *	_	
8	t1190_000	sîniu	DPOSA	sîn	Neut.Nom.Pl.st	(PreF (NX *	_	
9	t1191_000	dinc	NA	ding	Nom.Pl	 * ) )	_	
10	t1192_000	solten	VMFIN	sol(e)n	*.Past.Pl.3	(LB (VX * ) )	_	
11	t1193_000	varen	VVINF	var(e)n	_	(RB (VX * ) )	_	
12	t1194_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1195_000	gotes	NA	got	Gen.Sg	(S (Frag (NX * )	_	
2	t1196_000	werc	NA	wërk	Nom.Pl	(PreF (NX * ) )	_	
3	t1197_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
4	t1198_000	wunderlich	ADJD	wunter-lich	Pos....0	(MF * )	_	
5	t1199_000	-	$_	_	_	 * )	_	
6	t1200_000	in	PPER	ër	*.Dat.Pl.3	(Cl (PreF (NX * ) )	_	
7	t1201_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t1202_000	niuweht	NA	niht	Nom.Sg	(MF (NX * )	_	
9	t1203_000	gelîch	ADJD	ge-lîch	Pos....0	 * )	_	
10	t1204_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1205_000	Pharaoes	NE	Pharao	Gen.Sg	(S (Frag (NX * )	_	
2	t1206_000	tohter	NA	tohter(e)	Nom.Sg	(NX * )	_	
3	t1207_000	-	$_	_	_	 * )	_	
4	t1208_000	unde	KON	unte	_	(Frag *	_	
5	t1209_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
6	t1210_000	kindes	NA	kind	Gen.Sg	 * )	_	
7	t1211_000	swester	NA	swëster	Nom.Sg	(NX * )	_	
8	t1212_000	-	$_	_	_	 * )	_	
9	t1213_000	mit	APPR	mit	_	(Frag (PPX *	_	
10	t1214_000	megeden	NA	maged	Dat.Pl	(NX * ) )	_	
11	t1215_000	vile	AVD	vil(e)	_	 *	_	
12	t1216_000	schoenen	ADJN	schoène	Pos.*.Dat.Pl.*	 *	_	
13	t1217_000	-	$_	_	_	 * )	_	
14	t1218_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
15	t1219_000	wolten	VMFIN	wèllen	*.Past.Pl.3	(LB (VX * ) )	_	
16	t1220_000	sich	PRF	sich	Akk	(MF (NX * ) )	_	
17	t1221_000	erküelen	VVINF	er-küèlen	_	(RB (VX * ) )	_	
18	t1222_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1223_000	dô	KOUS	dô	_	(S (Cl (LB * )	_	
2	t1224_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
3	t1225_000	sich	PRF	sich	Akk	(NX * ) )	_	
4	t1226_000	baden	VVFIN	baden	*.Pres.Pl.3	(RB (VX * ) )	_	
5	t1227_000	-	$_	_	_	 *	_	
6	t1228_000	sô	KO*	sô	_	(Frag *	_	
7	t1229_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX *	_	
8	t1230_000	willen	NA	wille	Gen.Pl	(NX * ) ) )	_	
9	t1231_000	habeten	VAFIN	haben	*.Past.Pl.3	(LB (VX * ) )	_	
10	t1232_000	-	$_	_	_	 * ) )	_	
11	t1233_000	diu	DDART	dër	Fem.Nom.Sg	(Cl (PreF (NX *	_	
12	t1234_000	vrouwe	NA	vrouwe	Nom.Sg	 *	_	
13	t1235_000	in	APPR	in	_	(PPX *	_	
14	t1235_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
15	t1236_000	sahere	NA	saher	Dat.Sg	 * ) ) ) )	_	
16	t1237_000	gesach	VVFIN	ge-sëhen	Ind.Past.Sg.3	(LB (VX * ) )	_	
17	t1238_000	-	$_	_	_	 * )	_	
18	t1239_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
19	t1240_000	kretzen	NA	krètze	Akk.Sg	 * )	_	
20	t1241_000	dâ	PAVD	dâr/.+inne	_	(Frag *	_	
21	t1242_000	daz	DDART	dër	Neut.Nom.Sg	(PreF (NX *	_	
22	t1243_000	kint	NA	kind	Nom.Sg	 * ) )	_	
23	t1244_000	inne	PAVAP	inne/dâr.+	_	(LB (VX *	_	
24	t1245_000	was	VAFIN	wësen	Ind.Past.Sg.3	 * ) )	_	
25	t1246_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1247_000	si	PPER	ër	Fem.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1248_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1249_000	eine	DIART	èin	Fem.Akk.Sg.st	(MF (NX *	_	
4	t1250_000	maget	NA	maged	Akk.Sg	 *	_	
5	t1251_000	junge	ADJN	jung	Pos.Fem.Akk.Sg.st	 * ) )	_	
6	t1252_000	-	$_	_	_	 *	_	
7	t1253_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t1254_000	si	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
9	t1255_000	in	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
10	t1256_000	ire	PPER	ër	Fem.Dat.Sg.3	(NX * ) )	_	
11	t1257_000	gewünne	VVFIN	ge-winnen	Subj.Past.Sg.3	(RB (VX * ) )	_	
12	t1258_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1259_000	schiere	AVD	schière	_	(S (Frag *	_	
2	t1260_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(VX *	_	
3	t1261_000	ervollet	VVPP	er-vollen	_	 * )	_	
4	t1262_000	-	$_	_	_	 *	_	
5	t1263_000	daz	DRELS	dër	Neut.Nom.Sg	(Cl (LB (NX * ) )	_	
6	t1264_000	diu	DDART	dër	Fem.Nom.Sg	(MF (NX *	_	
7	t1265_000	vrouwe	NA	vrouwe	Nom.Sg	 * ) )	_	
8	t1266_000	gebôt	VVFIN	ge-bièten	Ind.Past.Sg.3	(RB (VX * ) )	_	
9	t1267_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1268_000	ûf	PTKVZ	ûf/>+tuon	_	(S (Frag (VX *	_	
2	t1269_000	tet	VVFIN	tuon/ûf>+	Ind.Past.Sg.3	 * )	_	
3	t1270_000	si	PPER	ër	Fem.Nom.Sg.3	(NX * )	_	
4	t1271_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
5	t1272_000	zeine	NA	zèine	Akk.Sg	 * )	_	
6	t1273_000	-	$_	_	_	 * )	_	
7	t1274_000	si	PPER	ër	Fem.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
8	t1275_000	hôrte	VVFIN	hoèren	*.Past.Sg.3	(LB (VX * ) )	_	
9	t1276_000	dâr	PAVD	dâr/+inne	_	(MF (VX *	_	
10	t1277_000	inne	PAVAP	inne/dâr+	_	 *	_	
11	t1278_000	weinen	VVINF	wèinen	_	 * ) )	_	
12	t1279_000	-	$_	_	_	 *	_	
13	t1280_000	einen	DIART	èin	Masc.Akk.Sg.st	(Frag (NX *	_	
14	t1281_000	wênigen	ADJA	wênig	Pos.Masc.Akk.Sg.*	 *	_	
15	t1282_000	knaben	NA	knabe	Akk.Sg	 * )	_	
16	t1283_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1284_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t1285_000	begunde	VVFIN	be-ginnen	*.Past.Sg.3	(LB (VX * ) )	_	
3	t1286_000	si	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
4	t1287_000	erbermede	NA	er-bèrm(e)de	Akk.Sg	(NX * )	_	
5	t1288_000	haben	VAINF	haben	_	(VX * ) )	_	
6	t1289_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1290_000	si	PPER	ër	Fem.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1291_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1292_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
4	t1293_000	ze	APPR	ze	_	(PPX *	_	
5	t1293_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) ) )	_	
6	t1294_000	-	$_	_	_	 *	_	
7	t1295_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t1296_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX *	_	
9	t1297_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
10	t1298_000	hêbrêischen	ADJA	hêbrêisch	Pos.*.Gen.Pl.wk	 *	_	
11	t1299_000	kinde	NA	kind	Gen.Pl	 * ) ) )	_	
12	t1300_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(RB (VX * ) )	_	
13	t1301_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1302_000	diu	DDART	dër	Fem.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t1303_000	swester	NA	swëster	Nom.Sg	 * ) )	_	
3	t1304_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t1305_000	dô	AVD	dô	_	(MF * )	_	
5	t1306_000	-	$_	_	_	 *	_	
6	t1307_000	der	DDART	dër	Fem.Dat.Sg	(Frag (NX *	_	
7	t1308_000	juncvrouwen	NA	jung-vrouwe	Dat.Sg	 * )	_	
8	t1309_000	zuo	AVD	zuo	_	 *	_	
9	t1310_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1311_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t1312_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t1313_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
4	t1314_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
5	t1315_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
6	t1316_000	gewinne	VVFIN	ge-winnen	*.Pres.Sg.1	(RB (VX * ) )	_	
7	t1317_000	-	$_	_	_	 * ) )	_	
8	t1318_000	eine	DIART	èin	*.Akk.Sg.st	(Frag (NX *	_	
9	t1319_000	kintammen	NA	kind-amme	Akk.Sg	 * )	_	
10	t1320_000	-	$_	_	_	 *	_	
11	t1321_000	diu	DRELS	dër	Fem.Nom.Sg	(Cl (LB (NX * ) )	_	
12	t1322_000	uns	PPER	wir	Dat.Pl.1	(MF (NX * )	_	
13	t1323_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
14	t1324_000	kint	NA	kind	Akk.Sg	 * ) )	_	
15	t1325_000	behalte	VVFIN	be-halten	Subj.Pres.Sg.3	(RB (VX * ) )	_	
16	t1326_000	-	$_	_	_	 *	_	
17	t1327_000	unz	KOUS	unz(e)	_	(PostF (Cl (LB * )	_	
18	t1328_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX *	_	
19	t1329_000	sîn	PPER	ër	Neut.Gen.Sg.3	(NX *	_	
20	t1330_000	selbes	DDD	sëlb	Neut.Gen.Sg.st	 * ) ) )	_	
21	t1331_000	walte	VVFIN	walten	*.Past.Sg.3	(RB (VX * ) )	_	
22	t1332_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1333_000	si	PPER	ër	Fem.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1334_000	gebôt	VVFIN	ge-bièten	Ind.Past.Sg.3	(LB (VX * ) ) )	_	
3	t1335_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
4	t1336_000	si	PPER	ër	Fem.Nom.Sg.3	(MF (NX * ) )	_	
5	t1337_000	tæte	VVFIN	tuon	Subj.Past.Sg.3	(RB (VX * ) )	_	
6	t1338_000	-	$_	_	_	 * )	_	
7	t1339_000	alsô	KO*	all-sô	_	(Frag *	_	
8	t1340_000	si	PPER	ër	Fem.Nom.Sg.3	(NX * )	_	
9	t1341_000	geredet	VVPP	rèden	_	(VX *	_	
10	t1342_000	hæte	VAFIN	haben	*.Past.Sg.3	 * )	_	
11	t1343_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1344_000	diu	DDART	dër	Fem.Nom.Sg	(S (Frag (NX *	_	
2	t1345_000	dierne	NA	dièrne	Nom.Sg	 * )	_	
3	t1346_000	vile	AVD	vil(e)	_	(PreF *	_	
4	t1347_000	harte	AVD	harte	_	 * )	_	
5	t1348_000	gâhete	VVFIN	gâhen	*.Past.Sg.3	(LB (VX * ) )	_	
6	t1349_000	-	$_	_	_	 * )	_	
7	t1350_000	die	DDART	dër	Fem.Nom.Sg	(Frag (NX *	_	
8	t1351_000	muoter	NA	muoter	Nom.Sg	 * )	_	
9	t1352_000	dâr	AVD	dâr	_	(PreF * )	_	
10	t1353_000	brâhte	VVFIN	bringen	Ind.Past.Sg.3	(LB (VX * ) )	_	
11	t1354_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1355_000	si	PPER	ër	Fem.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1356_000	bevalh	VVFIN	be-vëlhen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1357_000	ir	PPER	ër	Fem.Dat.Sg.3	(MF (NX * )	_	
4	t1358_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
5	t1359_000	wênigen	ADJA	wênig	Pos.Masc.Akk.Sg.*	 *	_	
6	t1360_000	jungelinc	NA	jungeling	Akk.Sg	 * ) )	_	
7	t1361_000	-	$_	_	_	 * )	_	
8	t1362_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t1363_000	nante	VVFIN	nènnen	*.Past.Sg.3	(LB (VX * ) )	_	
10	t1364_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
11	t1365_000	Mosî	NE	Moses	Akk.Sg	 * )	_	
12	t1366_000	unde	KON	unte	_	 *	_	
13	t1367_000	ire	DPOSA	ir(e)	Neut.Akk.Sg.0	(NX *	_	
14	t1368_000	kint	NA	kind	Akk.Sg	 * ) )	_	
15	t1369_000	-	$_	_	_	 * )	_	
16	t1370_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
17	t1371_000	quît	VVFIN	quëden	Ind.Pres.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1372_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1373_000	deme	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t1374_000	wazzere	NA	wazzer	Dat.Sg	 * ) )	_	
4	t1375_000	ich	PPER	ich	Nom.Sg.1	(NX * )	_	
5	t1376_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (NX * ) )	_	
6	t1377_000	nam	VVFIN	nëmen	Ind.Past.Sg.1	(LB (VX * ) )	_	
7	t1378_000	-	$_	_	_	 * )	_	
8	t1379_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
9	t1380_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t1381_000	Mosî	NE	Moses	Nom.Sg	(MF (NX * )	_	
11	t1382_000	bînamen	AVD	bî-namen	_	 * )	_	
12	t1383_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1384_000	daz	DDART	dër	Neut.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t1385_000	kint	NA	kind	Akk.Sg	 * ) )	_	
3	t1386_000	nam	VVFIN	nëmen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t1387_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
5	t1388_000	selbe	DDA	sëlb	Neut.Nom.Sg.wk	 *	_	
6	t1389_000	wîp	NA	wîb	Nom.Sg	 * ) )	_	
7	t1390_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1391_000	si	PPER	ër	Fem.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1392_000	behielte	VVFIN	be-halten	Subj.Past.Sg.3	(LB (VX * ) )	_	
3	t1393_000	iz	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t1394_000	wole	AVD	wol(e)	_	 * )	_	
5	t1395_000	wande	KO*	wante	_	(Frag *	_	
6	t1396_000	iz	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
7	t1397_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
8	t1398_000	ire	PPER	ër	Fem.Dat.Sg.3	(MF (NX * )	_	
9	t1399_000	liep	ADJD	lièb	Pos....0	 * )	_	
10	t1400_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1401_000	ze	APPR	ze	_	(S (Frag (PPX *	_	
2	t1401_001	genandem	ADJA	ge-nant	Pos.Masc.Dat.Sg.st	(NX *	_	
3	t1402_000	tagedinge	NA	tage-ding	Dat.Sg	 * ) )	_	
4	t1403_000	-	$_	_	_	 * )	_	
5	t1404_000	brâhte	VVFIN	bringen	Ind.Past.Sg.3	(Cl (LB (VX * ) )	_	
6	t1405_000	si	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
7	t1406_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
8	t1407_000	widere	AVD	wider(e)	_	 * )	_	
9	t1408_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1409_000	diu	DDART	dër	Fem.Nom.Sg	(S (Frag (NX *	_	
2	t1410_000	juncvrouwe	NA	jung-vrouwe	Nom.Sg	 *	_	
3	t1411_000	hêre	ADJN	hêr(e)	Pos.Fem.Nom.Sg.0	 * )	_	
4	t1412_000	-	$_	_	_	 * )	_	
5	t1413_000	entvienc	VVFIN	ent-vâhen	Ind.Past.Sg.3	(Cl (LB (VX * ) )	_	
6	t1414_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
7	t1415_000	mit	APPR	mit	_	(PPX *	_	
8	t1416_000	êren	NA	êre	Dat.Pl	(NX * ) ) ) )	_	
9	t1417_000	-	$_	_	_	 * )	_	
10	t1418_000	si	PPER	ër	Fem.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
11	t1419_000	zechete	VVFIN	zëchen	*.Past.Sg.3	(LB (VX * ) )	_	
12	t1420_000	wole	AVD	wol(e)	_	(MF *	_	
13	t1421_000	sîniu	DPOSA	sîn	Neut.Akk.Pl.st	(NX *	_	
14	t1422_000	dinc	NA	ding	Akk.Pl	 * ) )	_	
15	t1423_000	-	$_	_	_	 *	_	
16	t1424_000	wande	KO*	wante	_	(Frag *	_	
17	t1425_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
18	t1426_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
19	t1427_000	ire	DPOSA	ir(e)	Neut.Nom.Sg.0	(MF (NX *	_	
20	t1428_000	vundenez	ADJA	vinden	Pos.Neut.Nom.Sg.st	 *	_	
21	t1429_000	kint	NA	kind	Nom.Sg	 * ) )	_	
22	t1430_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1431_000	swie	AVG	swiè	_	(S (Cl (LB * )	_	
2	t1432_000	sô	AVD	sô	_	(MF *	_	
3	t1433_000	er	PPER	ër	Masc.Nom.Sg.3	(NX *	_	
4	t1434_000	selbe	DDD	sëlb	Masc,Neut.Nom.Sg.wk	 * ) )	_	
5	t1435_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(RB (VX * ) )	_	
6	t1436_000	-	$_	_	_	 * )	_	
7	t1437_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t1438_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
9	t1439_000	si	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
10	t1440_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
11	t1441_000	behalten	VVINF	be-halten	_	(VX * ) )	_	
12	t1442_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1443_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t1444_000	sage	VVFIN	sagen	*.Pres.Sg.1	(LB (VX * ) )	_	
3	t1445_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
4	t1446_000	iu	PPER	ir	Dat.Pl.2	(NX *	_	
5	t1447_000	ze	APPR	ze	_	(PPX *	_	
6	t1447_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) ) )	_	
7	t1448_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1449_000	nâch	APPR	nâh	_	(S (Frag (PPX *	_	
2	t1450_000	etelîchen	DIA	ëte-lich	*.Dat.Pl.st	(NX *	_	
3	t1451_000	jâren	NA	jâr	Dat.Pl	 * ) )	_	
4	t1452_000	-	$_	_	_	 *	_	
5	t1453_000	dô	KOUS	dô	_	(Cl (LB * )	_	
6	t1454_000	Mosî	NE	Moses	Nom.Sg	(MF (NX * ) )	_	
7	t1455_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(RB (VX * ) )	_	
8	t1456_000	ze	APPR	ze	_	(PostF (PPX *	_	
9	t1456_001	manne	NA	mann	Dat.Sg	(NX * ) ) )	_	
10	t1457_000	-	$_	_	_	 * ) )	_	
11	t1458_000	zuo	APPR	ze	_	(Frag (PPX *	_	
12	t1459_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
13	t1460_000	bruoderen	NA	bruoder	Dat.Pl	 * ) )	_	
14	t1461_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
15	t1462_000	san	VVFIN	sinnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
16	t1463_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1464_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1465_000	gesach	VVFIN	ge-sëhen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1466_000	ire	DPOSA	ir(e)	*.Akk.Pl.0	(MF (NX *	_	
4	t1467_000	arbeite	NA	arbèit	Akk.Pl	 * ) )	_	
5	t1468_000	-	$_	_	_	 * )	_	
6	t1469_000	diu	DDS	dër	Neut.Akk.Pl	(Cl (PreF (NX * ) )	_	
7	t1470_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
8	t1471_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
9	t1472_000	inniclîche	AVD	innig-lîche	_	 *	_	
10	t1473_000	leit	ADJD	lèid	Pos....0	 * )	_	
11	t1474_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1475_000	eines	DIART	èin	Masc.Gen.Sg.st	(S (Frag (NX *	_	
2	t1476_000	tages	NA	tag	Gen.Sg	 * )	_	
3	t1477_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
4	t1478_000	gestuont	VVFIN	ge-stân	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t1479_000	-	$_	_	_	 *	_	
6	t1480_000	dô	KOUS	dô	_	(Cl (LB * )	_	
7	t1481_000	sich	PRF	sich	Akk	(MF (NX * )	_	
8	t1482_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
9	t1483_000	strît	NA	strît	Nom.Sg	 * ) )	_	
10	t1484_000	huop	VVFIN	hèben	Ind.Past.Sg.3	(RB (VX * ) )	_	
11	t1485_000	-	$_	_	_	 * ) )	_	
12	t1486_000	under	APPR	unter	_	(Frag (PPX *	_	
13	t1487_000	zwein	CARDA	zwêne	*.Dat.Pl.st	(NX *	_	
14	t1488_000	knehten	NA	knëht	Dat.Pl	 * ) )	_	
15	t1489_000	-	$_	_	_	 * )	_	
16	t1490_000	die	DDS	dër	*.Nom.Pl	(Cl (PreF (NX * ) )	_	
17	t1491_000	wurben	VVFIN	wërben	*.Past.Pl.3	(LB (VX * ) )	_	
18	t1492_000	unrehte	AVD	un-rëhte	_	(MF * )	_	
19	t1493_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1494_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t1495_000	eine	CARDS	èin	Masc.Nom.Sg.wk	 * ) )	_	
3	t1496_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t1497_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX *	_	
5	t1498_000	vone	APPR	von	_	(PPX *	_	
6	t1499_000	künne	NA	künne	Dat.Sg	(NX * ) ) )	_	
7	t1500_000	liep	ADJD	lièb	Pos....0	 * )	_	
8	t1501_000	-	$_	_	_	 * )	_	
9	t1502_000	doch	AVD	doh	_	(Cl (PreF * )	_	
10	t1503_000	ne	PTKNEG	ne	_	(LB (VX *	_	
11	t1504_000	lie	VVFIN	lâzen	Ind.Past.Sg.3	 * ) )	_	
12	t1505_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
13	t1506_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
14	t1507_000	heidenische	ADJA	hèidenisch	Pos.Masc.Nom.Sg.wk	 *	_	
15	t1508_000	man	NA	mann	Nom.Sg	 * )	_	
16	t1509_000	nieht	PTKNEG	niht	_	 * )	_	
17	t1510_000	-	$_	_	_	 * )	_	
18	t1511_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
19	t1511_001	ne	PTKNEG	ne	_	(LB (VX *	_	
20	t1512_000	rafste	VVFIN	rèfsen	*.Past.Sg.3	 * ) )	_	
21	t1512_001	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
22	t1513_000	mit	APPR	mit	_	(PPX *	_	
23	t1514_000	slegen	NA	slag	Dat.Pl	(NX * ) ) )	_	
24	t1515_000	swære	ADJD	swære	Pos....0	 * )	_	
25	t1516_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1517_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t1518_000	erbalc	VVFIN	er-bëlgen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1519_000	sich	PRF	sich	Akk	(MF (NX * )	_	
4	t1520_000	Mosî	NE	Moses	Nom.Sg	(NX *	_	
5	t1521_000	ze	APPR	ze	_	(PPX *	_	
6	t1521_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) ) )	_	
7	t1522_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1523_000	umbe	PTKVZ	umbe/>+sëhen	_	(S (Frag (VX *	_	
2	t1523_001	sehen	VVINF	sëhen/umbe>+	_	 * )	_	
3	t1524_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
4	t1524_001	began	VVFIN	be-ginnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t1525_000	-	$_	_	_	 *	_	
6	t1526_000	obe	KOUS	obe	_	(Cl (LB * )	_	
7	t1527_000	dâ	AVD	dâr	_	(MF * )	_	
8	t1528_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(RB (VX * ) )	_	
9	t1529_000	ieman	DIA	iè-mann	*.Nom.Sg.st	(PostF * )	_	
10	t1530_000	-	$_	_	_	 *	_	
11	t1531_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Frag (NX * )	_	
12	t1532_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (NX * ) )	_	
13	t1533_000	mohte	VMFIN	mügen	*.Past.Sg.3	(LB (VX * ) )	_	
14	t1534_000	melden	VVINF	mëlden	_	(RB (VX * ) )	_	
15	t1535_000	-	$_	_	_	 * ) ) ) )	_	
16	t1536_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
17	t1537_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
18	t1538_000	gerne	AVD	gërne	_	(MF *	_	
19	t1539_000	selbe	DDD	sëlb	Masc.Nom.Sg.wk	 * )	_	
20	t1540_000	-	$_	_	_	 * )	_	
21	t1541_000	rechen	VVINF	rëchen	_	(Frag (VX * )	_	
22	t1542_000	sînen	DPOSA	sîn	Masc.Akk.Sg.st	(NX *	_	
23	t1543_000	anden	NA	ante	Akk.Sg	 * )	_	
24	t1544_000	-	$_	_	_	 * )	_	
25	t1545_000	mit	APPR	mit	_	(Frag (PPX *	_	
26	t1546_000	sîn	PPER	ër	Masc.Gen.Sg.3	(NX *	_	
27	t1547_000	selbes	DDD	sëlb	Masc.Gen.Sg.st	 * ) )	_	
28	t1548_000	handen	NA	hant	Dat.Pl	(NX * )	_	
29	t1549_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1550_000	dô	KOUS	dô	_	(S (Cl (LB * )	_	
2	t1551_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t1552_000	dô	AVD	dô	_	 *	_	
4	t1553_000	nieman	DIA	niè-mann	*.Akk.Sg.st	 * )	_	
5	t1554_000	ne	PTKNEG	ne	_	(RB (VX *	_	
6	t1554_001	sach	VVFIN	sëhen	Ind.Past.Sg.3	 * ) )	_	
7	t1555_000	-	$_	_	_	 *	_	
8	t1556_000	den	DDART	dër	Masc.Akk.Sg	(Frag (NX *	_	
9	t1557_000	sînen	DPOSA	sîn	Masc.Akk.Sg.st	 *	_	
10	t1558_000	kunden	NA	kunde	Akk.Sg	 * )	_	
11	t1559_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
12	t1560_000	rach	VVFIN	rëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
13	t1561_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1562_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1563_000	sluoc	VVFIN	slahen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1564_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
4	t1565_000	ze	APPR	ze	_	(PPX *	_	
5	t1565_001	tôde	NA	tôd	Dat.Sg	(NX * ) ) ) )	_	
6	t1566_000	-	$_	_	_	 * )	_	
7	t1567_000	und	KON	unte	_	(Cl (PrePreF * )	_	
8	t1568_000	barc	VVFIN	bërgen	Ind.Past.Sg.3	(LB (VX * ) )	_	
9	t1569_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
10	t1570_000	in	APPR	in	_	(PPX *	_	
11	t1570_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
12	t1571_000	erde	NA	ërde	Dat.Sg	 * ) ) ) )	_	
13	t1572_000	-	$_	_	_	 *	_	
14	t1573_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
15	t1574_000	nieman	DIA	niè-mann	*.Nom.Sg.st	(MF * )	_	
16	t1575_000	ne	PTKNEG	ne	_	(RB (VX *	_	
17	t1575_001	sæhe	VVFIN	sëhen	Subj.Past.Sg.3	 * ) )	_	
18	t1576_000	-	$_	_	_	 * ) )	_	
19	t1577_000	waz	PW	wër	Neut.Nom.Sg.st	(Frag *	_	
20	t1578_000	dâ	AVD	dâr	_	(PreF *	_	
21	t1579_000	geschehen	VVINF	ge-schëhen	_	(VX * ) )	_	
22	t1580_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
23	t1581_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1582_000	morgene	AVD	morgen(e)	_	(S (Frag *	_	
2	t1583_000	ze	APPR	ze	_	(PPX *	_	
3	t1583_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
4	t1584_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
5	t1585_000	zît	NA	zît	Dat.Sg	 * ) )	_	
6	t1586_000	-	$_	_	_	 * )	_	
7	t1587_000	gesach	VVFIN	ge-sëhen	Ind.Past.Sg.3	(Cl (LB (VX * ) )	_	
8	t1588_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
9	t1589_000	abe	AVD	aber	_	 *	_	
10	t1590_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
11	t1591_000	strît	NA	strît	Akk.Sg	 * ) )	_	
12	t1592_000	-	$_	_	_	 *	_	
13	t1593_000	von	APPR	von	_	(Frag (PPX *	_	
14	t1594_000	zwein	CARDA	zwêne	*.Dat.Pl.st	(NX *	_	
15	t1595_000	hûsgenôzen	NA	hûs-ge-nôz(e)	Dat.Pl	 * ) )	_	
16	t1596_000	-	$_	_	_	 * )	_	
17	t1597_000	schelten	NA	schëlten	Akk.Sg	(Frag (NX * )	_	
18	t1598_000	grôze	AVD	grôze	_	 *	_	
19	t1599_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1600_000	zuo	APPR	ze	_	(S (Frag (PPX *	_	
2	t1601_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
3	t1602_000	einem	CARDS	èin	Masc.Dat.Sg.st	 * ) )	_	
4	t1603_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
5	t1604_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
6	t1605_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1606_000	durch	APPR	durh	_	(S (Frag *	_	
2	t1607_000	waz	PW	wër	Neut.Akk.Sg.st	(PreF * )	_	
3	t1608_000	tuost	VVFIN	tuon	*.Pres.Sg.2	(LB (VX * ) )	_	
4	t1609_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
5	t1610_000	ungemach	NA	un-ge-mach	Akk.Sg	(NX * ) )	_	
6	t1611_000	-	$_	_	_	 * )	_	
7	t1612_000	dîneme	DPOSA	dîn	Masc.Dat.Sg.st	(Frag (NX *	_	
8	t1613_000	künnelinge	NA	künneling	Dat.Sg	 * )	_	
9	t1614_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1615_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t1616_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t1617_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
4	t1618_000	erwinden	VVINF	er-winten	_	(RB (VX * ) )	_	
5	t1619_000	-	$_	_	_	 *	_	
6	t1620_000	slege	NA	slag	Gen.Pl	(Frag (NX * )	_	
7	t1621_000	unde	KON	unte	_	 *	_	
8	t1622_000	stôze	NA	stôz	Gen.Pl	(NX * )	_	
9	t1623_000	-	$_	_	_	 * ) )	_	
10	t1624_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(Cl (LB (VX * ) )	_	
11	t1625_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
12	t1626_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) )	_	
13	t1627_000	erlâzen	VVINF	er-lâzen	_	(RB (VX * ) )	_	
14	t1628_000	-	$_	_	_	 *	_	
15	t1629_000	durch	APPR	durh	_	(Frag *	_	
16	t1630_000	die	DDART	dër	Fem.Akk.Sg	 *	_	
17	t1631_000	gotes	NA	got	Gen.Sg	(NX * )	_	
18	t1632_000	minne	NA	minne	Akk.Sg	(NX * )	_	
19	t1633_000	-	$_	_	_	 * ) )	_	
20	t1634_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(Cl (LB (VX * ) )	_	
21	t1635_000	dû	PPER	dû	Nom.Sg.2	(MF (NX *	_	
22	t1636_000	es	PPER	ër	Neut.Gen.Sg.3	(NX * ) ) )	_	
23	t1637_000	erwinden	VVINF	er-winten	_	(RB (VX * ) )	_	
24	t1638_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1639_000	der	DDART	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t1640_000	eine	CARDS	èin	Masc.Nom.Sg.wk	 * )	_	
3	t1641_000	ime	PPER	ër	Masc.Dat.Sg.3	(PreF (NX * ) )	_	
4	t1642_000	antwurte	VVFIN	ant-würten	*.Past.Sg.3	(LB (VX * ) )	_	
5	t1643_000	-	$_	_	_	 * )	_	
6	t1644_000	mit	APPR	mit	_	(Frag (PPX *	_	
7	t1645_000	übellîcheme	ADJA	übel-lich	Pos.Neut.Dat.Sg.st	(NX *	_	
8	t1646_000	worte	NA	wort	Dat.Sg	 * ) )	_	
9	t1647_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1648_000	wer	PW	wër	Masc.Nom.Sg.st	(S (Cl (PreF * )	_	
2	t1649_000	gap	VVFIN	gëben	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1650_000	dich	PPER	dû	Akk.Sg.2	(MF (NX * )	_	
4	t1651_000	mir	PPER	ich	Dat.Sg.1	(NX *	_	
5	t1652_000	ze	APPR	ze	_	(PPX *	_	
6	t1652_001	hêrren	NA	hêrre	Dat.Sg	(NX * ) ) ) )	_	
7	t1653_000	-	$_	_	_	 *	_	
8	t1654_000	oder	KON	oder	_	(Frag *	_	
9	t1655_000	ze	APPR	ze	_	(PPX *	_	
10	t1655_001	rihtære	NA	rihtære	Dat.Sg	(NX * ) )	_	
11	t1656_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1657_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t1658_000	wæne	VVFIN	wænen	*.Pres.Sg.1	(LB (VX * ) )	_	
3	t1659_000	dû	PPER	dû	Nom.Sg.2	(Frag (NX * )	_	
4	t1660_000	mir	PPER	ich	Dat.Sg.1	(PreF (NX * ) )	_	
5	t1661_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
6	t1662_000	tuon	VVINF	tuon	_	(RB (VX * ) )	_	
7	t1663_000	-	$_	_	_	 * )	_	
8	t1664_000	alsô	KO*	all-sô	_	(Frag *	_	
9	t1665_000	gesteren	AVD	gëster(e)n	_	 *	_	
10	t1666_000	vruo	AVD	vruo	_	 *	_	
11	t1667_000	-	$_	_	_	 * )	_	
12	t1668_000	der	DDART	dër	*.Gen.Pl	(Frag (NX *	_	
13	t1669_000	heidene	NA	hèiden	Gen.Pl	 * )	_	
14	t1670_000	knehte	NA	knëht	Dat.Sg	(NX * )	_	
15	t1671_000	-	$_	_	_	 * ) )	_	
16	t1672_000	dû	PPER	dû	Nom.Sg.2	(Cl (PreF (NX * ) )	_	
17	t1673_000	varest	VVFIN	var(e)n	*.Pres.Sg.2	(LB (VX * ) )	_	
18	t1674_000	vile	AVD	vil(e)	_	(MF *	_	
19	t1675_000	unrehte	AVD	un-rëhte	_	 * )	_	
20	t1676_000	-	$_	_	_	 *	_	
21	t1677_000	den	DRELS	dër	Masc.Akk.Sg	(PostF (Cl (LB (NX * ) )	_	
22	t1678_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
23	t1679_000	dort	AVD	dort	_	 * )	_	
24	t1680_000	hâst	VAFIN	haben	*.Pres.Sg.2	(RB (VX *	_	
25	t1681_000	erslagen	VVPP	er-slahen	_	 * ) )	_	
26	t1682_000	-	$_	_	_	 * ) ) )	_	
27	t1683_000	in	APPR	in	_	(Frag (PPX *	_	
28	t1684_000	deme	DDART	dër	Masc.Dat.Sg	(NX *	_	
29	t1685_000	sande	NA	sant	Dat.Sg	 * ) )	_	
30	t1686_000	begraben	VVINF	be-graben	_	(VX * )	_	
31	t1687_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1688_000	Mosî	NE	Moses	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t1689_000	erkom	VVFIN	er-komen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1690_000	sich	PRF	sich	Akk	(MF (NX * )	_	
4	t1691_000	harte	AVD	harte	_	 * )	_	
5	t1692_000	-	$_	_	_	 *	_	
6	t1693_000	sus	AVD	sus	_	(Frag *	_	
7	t1694_000	getâner	ADJA	ge-tân	Pos.*.Gen.Pl.st	(NX *	_	
8	t1695_000	worte	NA	wort	Gen.Pl	 * )	_	
9	t1696_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1697_000	harte	AVD	harte	_	(S (Frag *	_	
2	t1698_000	wunderen	VVINF	wunter(e)n	_	(VX * )	_	
3	t1699_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (NX * ) )	_	
4	t1700_000	began	VVFIN	be-ginnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t1701_000	-	$_	_	_	 * )	_	
6	t1702_000	wer	PW	wër	Masc.Nom.Sg.st	(Frag *	_	
7	t1703_000	offen	ADJD	offen	Pos....0	 *	_	
8	t1704_000	habete	VAFIN	haben	*.Past.Sg.3	(VX *	_	
9	t1705_000	getân	VVPP	tuon	_	 * )	_	
10	t1706_000	-	$_	_	_	 * )	_	
11	t1707_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
12	t1708_000	man	NA	mann	Akk.Sg	 *	_	
13	t1709_000	den	DRELS	dër	Masc.Akk.Sg	(Cl (LB (NX * ) )	_	
14	t1710_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
15	t1711_000	habete	VAFIN	haben	*.Past.Sg.3	(RB (VX *	_	
16	t1712_000	erslagen	VVPP	er-slahen	_	 * ) )	_	
17	t1713_000	-	$_	_	_	 * ) )	_	
18	t1714_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
19	t1714_001	ne	PTKNEG	ne	_	(LB (VX *	_	
20	t1715_000	wolte	VMFIN	wèllen	*.Past.Sg.3	 * ) )	_	
21	t1716_000	iz	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
22	t1717_000	nieman	DIA	niè-mann	*.Dat.Sg.st	 * )	_	
23	t1718_000	ne	PTKNEG	ne	_	(RB (VX *	_	
24	t1718_001	sagen	VVINF	sagen	_	 * ) )	_	
25	t1719_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1720_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t1721_000	küninc	NA	küni(n)g	Nom.Sg	 *	_	
3	t1722_000	Pharao	NE	Pharao	Nom.Sg	 * ) )	_	
4	t1723_000	vernam	VVFIN	ver-nëmen	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t1724_000	-	$_	_	_	 * )	_	
6	t1725_000	Mosî	NE	Moses	Nom.Sg	(Frag (NX * )	_	
7	t1726_000	habete	VAFIN	haben	*.Past.Sg.3	(VX *	_	
8	t1727_000	erslagen	VVPP	er-slahen	_	 * )	_	
9	t1728_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
10	t1729_000	man	NA	mann	Akk.Sg	 * )	_	
11	t1730_000	-	$_	_	_	 * )	_	
12	t1731_000	der	DDS	dër	*.Gen.Pl	(Frag (NX *	_	
13	t1732_000	sîner	DPOSA	sîn	*.Gen.Pl.st	(NX *	_	
14	t1733_000	lantliute	NA	lant-liut	Gen.Pl	 * ) )	_	
15	t1734_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1735_000	dô	AVD	dô	_	(S (Cl (PreF * )	_	
2	t1736_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1737_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
4	t1738_000	behüeten	VVINF	be-hüèten	_	(VX * ) )	_	
5	t1739_000	-	$_	_	_	 *	_	
6	t1740_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
7	t1741_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
8	t1742_000	danne	AVD	danne	_	 * )	_	
9	t1742_001	sünne	VVFIN	sinnen	Subj.Past.Sg.3	(RB (VX * ) )	_	
10	t1743_000	-	$_	_	_	 * ) )	_	
11	t1744_000	noch	KON	noh	_	(Frag *	_	
12	t1745_000	ime	PPER	ër	Masc.Dat.Sg.3	(PreF (NX * ) )	_	
13	t1746_000	enttrünne	VVFIN	ent-trinnen	Subj.Past.Sg.3	(LB (VX * ) )	_	
14	t1747_000	-	$_	_	_	 * ) )	_	
15	t1748_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
16	t1749_000	ne	PTKNEG	ne	_	(LB (VX *	_	
17	t1750_000	wolte	VMFIN	wèllen	*.Past.Sg.3	 * ) )	_	
18	t1751_000	iz	PPER	ër	Neut.Akk.Sg.3	(MF (NX * ) )	_	
19	t1752_000	nieht	PTKNEG	niht	_	(RB (VX *	_	
20	t1753_000	verkiesen	VVINF	ver-kièsen	_	 * ) )	_	
21	t1754_000	-	$_	_	_	 * )	_	
22	t1755_000	man	PI	man	*.Nom.Sg.st	(Cl (PreF (NX * ) )	_	
23	t1756_000	ne	PTKNEG	ne	_	(LB (VX *	_	
24	t1756_001	muose	VMFIN	müèzen	*.Past.Sg.3	 * ) )	_	
25	t1757_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * ) )	_	
26	t1758_000	verliesen	VVINF	ver-lièsen	_	(RB (VX * ) )	_	
27	t1759_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1760_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t1761_000	hêrre	NA	hêrre	Nom.Sg	 * ) )	_	
3	t1762_000	vlôch	VVFIN	vlièhen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t1763_000	durch	APPR	durh	_	(MF (PPX *	_	
5	t1764_000	nôt	NA	nôt	Akk.Sg	(NX * ) ) )	_	
6	t1765_000	-	$_	_	_	 *	_	
7	t1766_000	wande	KO*	wante	_	(Frag *	_	
8	t1767_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
9	t1768_000	vorhte	VVFIN	vürhten	*.Past.Sg.3	(LB (VX * ) )	_	
10	t1769_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
11	t1770_000	tôt	NA	tôd	Akk.Sg	 * ) )	_	
12	t1771_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1772_000	ûz	APPR	ûz	_	(S (Frag (PPX *	_	
2	t1773_000	deme	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t1774_000	lande	NA	lant	Dat.Sg	 * ) )	_	
4	t1775_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
5	t1776_000	enttran	VVFIN	ent-trinnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
6	t1777_000	-	$_	_	_	 * )	_	
7	t1778_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
8	t1779_000	getwalte	VVFIN	ge-twèl(e)n	*.Past.Sg.3	(LB (VX * ) )	_	
9	t1780_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
10	t1781_000	Madian	NE	Madian	Akk.Sg	 * ) )	_	
11	t1782_000	-	$_	_	_	 * )	_	
12	t1783_000	dâr	AVD	dâr	_	(Frag *	_	
13	t1784_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
14	t1785_000	was	VAFIN	wësen	Ind.Past.Sg.3	(VX *	_	
15	t1786_000	enttrunnen	VVPP	ent-trinnen	_	 * )	_	
16	t1787_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1788_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1789_000	gesaz	VVFIN	ge-sitzen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1790_000	zuo	APPR	ze	_	(MF (PPX *	_	
4	t1791_000	einem	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
5	t1792_000	brunnen	NA	brunne	Dat.Sg	 * ) ) )	_	
6	t1793_000	-	$_	_	_	 *	_	
7	t1794_000	unz	KOUS	unz(e)	_	(PostF (Cl (LB * )	_	
8	t1795_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
9	t1796_000	sich	PRF	sich	Akk	(NX * ) )	_	
10	t1797_000	berihte	VVFIN	be-rihten	Subj.Pres.Sg.3	(RB (VX * ) )	_	
11	t1798_000	-	$_	_	_	 * ) )	_	
12	t1799_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
13	t1800_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
14	t1801_000	tuon	VVINF	tuon	_	(PreF (VX * ) )	_	
15	t1802_000	mohte	VMFIN	mügen	*.Past.Sg.3	(LB (VX * ) )	_	
16	t1803_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1804_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1805_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1806_000	in	APPR	in	_	(MF (PPX *	_	
4	t1807_000	deme	DDART	dër	Neut.Dat.Sg	(NX *	_	
5	t1808_000	lande	NA	lant	Dat.Sg	 * ) ) )	_	
6	t1809_000	-	$_	_	_	 *	_	
7	t1810_000	gewisse	AVD	ge-wisse	_	(Frag *	_	
8	t1811_000	ellende	ADJD	èl-lènte	Pos....0	 *	_	
9	t1812_000	-	$_	_	_	 * ) )	_	
10	t1813_000	noch	KON	noh	_	(Cl (PrePreF * )	_	
11	t1814_000	ne	PTKNEG	ne	_	(LB (VX *	_	
12	t1814_001	hæte	VAFIN	haben	*.Past.Sg.3	 * ) )	_	
13	t1815_000	ze	APPR	ze	_	(MF (PPX *	_	
14	t1816_000	sîner	DPOSA	sîn	Fem.Dat.Sg.st	(NX *	_	
15	t1817_000	vrâge	NA	vrâge	Dat.Sg	 * ) ) )	_	
16	t1818_000	-	$_	_	_	 *	_	
17	t1819_000	necheinen	DIA	neh-èin	Masc.Akk.Sg.st	(Frag (NX *	_	
18	t1820_000	râtære	NA	râtære	Akk.Sg	 * )	_	
19	t1821_000	-	$_	_	_	 * )	_	
20	t1822_000	noch	KON	noh	_	(Frag *	_	
21	t1823_000	necheinen	DIA	neh-èin	Masc.Akk.Sg.st	(NX *	_	
22	t1824_000	râtgeben	NA	rât-gëbe	Akk.Sg	 * )	_	
23	t1825_000	-	$_	_	_	 * )	_	
24	t1826_000	wie	AVW	wiè	_	(Frag *	_	
25	t1827_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
26	t1828_000	vürder	AVD	vürder	_	(PreF * )	_	
27	t1829_000	solte	VMFIN	sol(e)n	*.Past.Sg.3	(LB (VX * ) )	_	
28	t1830_000	leben	VVINF	lëben	_	(RB (VX * ) )	_	
29	t1831_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1832_000	mîn	DPOSA	mîn	Masc.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t1833_000	êwewart	NA	ê(we)-wart(e)	Nom.Sg	 * ) )	_	
3	t1834_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t1835_000	in	APPR	in	_	(MF (PPX *	_	
5	t1836_000	madian	NE	Mâdian	Dat.Sg	(NX * ) ) )	_	
6	t1837_000	-	$_	_	_	 * )	_	
7	t1838_000	tohter	NA	tohter	Gen.Pl	(Cl (PreF (NX * ) )	_	
8	t1839_000	hæte	VAFIN	haben	*.Past.Sg.3	(LB (VX * ) )	_	
9	t1840_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
10	t1841_000	sibene	CARDS	siben	*.Akk.Pl.st	(NX * ) )	_	
11	t1842_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1843_000	die	DDS	dër	*.Nom.Pl	(S (Cl (PreF (NX * ) )	_	
2	t1844_000	komen	VVFIN	komen	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t1845_000	sâ	AVD	sâr	_	(MF *	_	
4	t1846_000	ze	APPR	ze	_	(PPX *	_	
5	t1846_001	stunte	NA	stunt(e)	Dat.Sg	(NX * ) ) )	_	
6	t1847_000	-	$_	_	_	 *	_	
7	t1848_000	über	APPR	über	_	(Frag (PPX *	_	
8	t1849_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
9	t1850_000	selben	DDA	sëlb	Masc.Akk.Sg.st	 *	_	
10	t1851_000	brunnen	NA	brunne	Akk.Sg	 * ) )	_	
11	t1852_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1853_000	si	PPER	ër	Fem.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t1854_000	wolten	VMFIN	wèllen	*.Past.Pl.3	(LB (VX * ) )	_	
3	t1855_000	des	DDS	dër	Neut.Gen.Sg	(MF (NX * ) )	_	
4	t1856_000	beginnen	VVINF	be-ginnen	_	(RB (VX * ) )	_	
5	t1857_000	-	$_	_	_	 * )	_	
6	t1858_000	des	DDART	dër	Neut.Gen.Sg	(Frag (NX *	_	
7	t1859_000	wazzeres	NA	wazzer	Gen.Sg	 * )	_	
8	t1860_000	gewinnen	VVINF	ge-winnen	_	(VX * )	_	
9	t1861_000	-	$_	_	_	 * )	_	
10	t1862_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
11	t1863_000	getrünke	VVFIN	ge-trinken	Subj.Past.Sg.3	(LB (VX * ) )	_	
12	t1864_000	ire	DPOSA	ir(e)	*.Akk.Pl.0	(MF (NX *	_	
13	t1865_000	vihe	NA	vihe	Akk.Pl	 * ) )	_	
14	t1866_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1867_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t1868_000	begunden	VVFIN	be-ginnen	*.Past.Pl.3	(LB (VX * ) )	_	
3	t1869_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
4	t1870_000	weren	VVINF	wèr(e)n	_	(VX * ) )	_	
5	t1871_000	-	$_	_	_	 *	_	
6	t1872_000	hirte	NA	hirte	Nom.Pl	(Frag (NX * )	_	
7	t1873_000	unsüeze	ADJD	un-süèze	Pos....0	 *	_	
8	t1874_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1875_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t1876_000	wolten	VMFIN	wèllen	*.Past.Pl.3	(LB (VX * ) )	_	
3	t1877_000	si	PPER	ër	*.Akk.Pl.3	(MF (NX * ) )	_	
4	t1878_000	verstôzen	VVINF	ver-stôzen	_	(RB (VX * ) )	_	
5	t1879_000	-	$_	_	_	 * )	_	
6	t1880_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
7	t1881_000	ne	PTKNEG	ne	_	(LB (VX *	_	
8	t1881_001	wolten	VMFIN	wèllen	*.Past.Pl.3	 * ) )	_	
9	t1882_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
10	t1883_000	gunnen	VVINF	gunnen	_	(RB (VX * ) )	_	
11	t1884_000	-	$_	_	_	 *	_	
12	t1885_000	des	DDART	dër	Masc.Gen.Sg	(Frag (NX *	_	
13	t1886_000	selben	DDA	sëlb	Masc.Gen.Sg.wk	 *	_	
14	t1887_000	brunnen	NA	brunne	Gen.Sg	 * )	_	
15	t1888_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1889_000	die	DDART	dër	*.Nom.Pl	(S (Frag (NX *	_	
2	t1890_000	knehte	NA	knëht	Nom.Pl	 * )	_	
3	t1891_000	und	KON	unte	_	 *	_	
4	t1892_000	diu	DDART	dër	Neut.Nom.Pl	(NX *	_	
5	t1893_000	siben	CARDA	siben	Neut.Nom.Pl.0	 *	_	
6	t1894_000	wîp	NA	wîb	Nom.Pl	 * )	_	
7	t1895_000	-	$_	_	_	 * )	_	
8	t1896_000	obe	APPR	obe	_	(Cl (PreF (PPX *	_	
9	t1897_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
10	t1898_000	nüeschen	NA	nuosch	Dat.Pl	 * ) ) )	_	
11	t1899_000	hæten	VAFIN	haben	*.Past.Pl.3	(LB (VX * ) )	_	
12	t1900_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
13	t1901_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
14	t1902_000	strît	NA	strît	Akk.Sg	 * ) )	_	
15	t1903_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1904_000	wande	KO*	wante	_	(S (Frag *	_	
2	t1905_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
3	t1906_000	wîbe	NA	wîb	Gen.Pl	 * )	_	
4	t1907_000	krefte	NA	kraft	Nom.Pl	(NX * )	_	
5	t1908_000	-	$_	_	_	 * )	_	
6	t1909_000	wider	APPR	wider	_	(Cl (PreF (PPX *	_	
7	t1910_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
8	t1911_000	manne	NA	mann	Akk.Pl	 * ) ) )	_	
9	t1912_000	ne	PTKNEG	ne	_	(LB (VX *	_	
10	t1912_001	tohte	VVFIN	tugen	*.Past.Sg.3	 * ) )	_	
11	t1913_000	-	$_	_	_	 * )	_	
12	t1914_000	Mosî	NE	Moses	Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t1914_001	half	VVFIN	hëlfen	Ind.Past.Sg.3	(LB (VX * ) )	_	
14	t1915_000	den	DDART	dër	*.Dat.Pl	(MF (NX *	_	
15	t1916_000	megeden	NA	maged	Dat.Pl	 * ) )	_	
16	t1917_000	-	$_	_	_	 *	_	
17	t1918_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
18	t1919_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
19	t1920_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
20	t1921_000	sige	NA	sig(e)	Akk.Sg	 * ) )	_	
21	t1922_000	erwurben	VVFIN	er-wërben	*.Past.Pl.3	(RB (VX * ) )	_	
22	t1923_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1924_000	ire	DPOSA	ir(e)	*.Akk.Pl.0	(S (Frag (NX *	_	
2	t1925_000	vihe	NA	vihe	Akk.Pl	 * )	_	
3	t1926_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
4	t1927_000	in	PPER	ër	*.Dat.Pl.3	(PreF (NX * ) )	_	
5	t1928_000	getrankte	VVFIN	ge-trènken	*.Past.Sg.3	(LB (VX * ) )	_	
6	t1929_000	-	$_	_	_	 * )	_	
7	t1930_000	ire	DPOSA	ir(e)	Masc.Nom.Sg.0	(Frag (NX *	_	
8	t1931_000	vater	NA	vater	Nom.Sg	 *	_	
9	t1932_000	Jetro	NE	Jètro	Nom.Sg	 * )	_	
10	t1933_000	dâ	PAVD	dâr/+nâh	_	 *	_	
11	t1933_001	nâch	PAVAP	nâh/dâr+	_	 *	_	
12	t1934_000	ime	PPER	ër	Masc.Dat.Sg.3	(PreF (NX *	_	
13	t1935_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
14	t1936_000	dankete	VVFIN	danken	*.Past.Sg.3	(LB (VX * ) )	_	
15	t1937_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1938_000	heim	AVD	hèim	_	(S (Cl (PreF * )	_	
2	t1939_000	kêrten	VVFIN	kêren	*.Past.Pl.3	(LB (VX * ) )	_	
3	t1940_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
4	t1941_000	vroelîchen	AVD	vroè-lîche	_	 * )	_	
5	t1942_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1943_000	ietro	NE	Ietro	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t1944_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t1945_000	minniclîchen	AVD	minnig-lîche	_	(MF * )	_	
4	t1946_000	-	$_	_	_	 *	_	
5	t1947_000	wie	AVW	wiè	_	(Frag *	_	
6	t1948_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
7	t1949_000	sô	AVD	sô	_	(PreF *	_	
8	t1950_000	schiere	AVD	schière	_	 * )	_	
9	t1951_000	komen	VVFIN	komen	*.Pres.Pl.3	(LB (VX * ) )	_	
10	t1952_000	-	$_	_	_	 *	_	
11	t1953_000	des	DRELS	dër	Neut.Gen.Sg	(Cl (LB (NX * ) )	_	
12	t1954_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
13	t1955_000	gewon	ADJD	ge-won(e)	Pos....0	 * )	_	
14	t1956_000	ne	PTKNEG	ne	_	(RB (VX *	_	
15	t1956_001	wâren	VAFIN	wësen	Ind.Past.Pl.3	 * ) )	_	
16	t1957_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1958_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t1959_000	antwürten	VVFIN	ant-würten	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t1960_000	ime	PPER	ër	Masc.Dat.Sg.3	(PreF (MF (NX * )	_	
4	t1961_000	dô	AVD	dô	_	 *	_	
5	t1962_000	-	$_	_	_	 * ) )	_	
6	t1963_000	daz	KOUS	dazz	_	(LB * )	_	
7	t1964_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
8	t1965_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(RB (VX * ) )	_	
9	t1966_000	komen	VVINF	komen	_	(PostF (VX * )	_	
10	t1967_000	zuo	AVD	zuo	_	 *	_	
11	t1968_000	ein	CARDA	èin	Masc.Nom.Sg.0	(NX *	_	
12	t1969_000	man	NA	mann	Nom.Sg	 *	_	
13	t1970_000	von	APPR	von	_	(PPX *	_	
14	t1971_000	Egiptenlant	NE	Egipte(n)-lant	Dat.Sg	(NX * ) ) ) )	_	
15	t1972_000	-	$_	_	_	 *	_	
16	t1973_000	des	DRELS	dër	Neut.Gen.Sg	(PostF (Cl (LB (NX * ) )	_	
17	t1974_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
18	t1975_000	niener	AVD	nièner	_	 * )	_	
19	t1976_000	kanten	VVFIN	kènnen	*.Past.Pl.3	(RB (VX * ) )	_	
20	t1977_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1978_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1979_000	habete	VAFIN	haben	*.Past.Sg.3	(LB (VX * ) )	_	
3	t1980_000	uns	PPER	wir	Akk.Pl.1	(PreF (MF (NX * ) ) )	_	
4	t1981_000	geledigete	VVFIN	ge-lèdigen	*.Past.Sg.3	(LB (VX * ) )	_	
5	t1982_000	-	$_	_	_	 * )	_	
6	t1983_000	von	APPR	von	_	(Frag *	_	
7	t1984_000	der	DDART	dër	Fem.Dat.Sg	 *	_	
8	t1985_000	vore	PTKVZ	vor(e)/>+sagen	_	(VX *	_	
9	t1986_000	gesaget	VVPP	sagen/vor(e)>+	_	 * )	_	
10	t1987_000	nôt	NA	nôt	Dat.Sg	(NX * )	_	
11	t1988_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1989_000	daz	DDART	dër	Neut.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t1990_000	wazzer	NA	wazzer	Akk.Sg	 * ) )	_	
3	t1991_000	schuopf	VVFIN	schèpfen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t1992_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
5	t1993_000	selbe	DDD	sëlb	Masc.Nom.Sg.wk	 * ) )	_	
6	t1994_000	-	$_	_	_	 * )	_	
7	t1995_000	unser	DPOSA	unser	Neut.Akk.Sg.0	(Cl (PreF (NX *	_	
8	t1996_000	vihe	NA	vihe	Akk.Sg	 * ) )	_	
9	t1997_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
10	t1998_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
11	t1999_000	labente	VVPS	laben	_	(VX * ) )	_	
12	t2000_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2001_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2002_000	antwurte	VVFIN	ant-würten	*.Past.Sg.3	(LB (VX * ) )	_	
3	t2003_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
4	t2004_000	ietro	NE	Ietro	Nom.Sg	(NX * ) )	_	
5	t2005_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2006_000	ware	AVW	war(e)	_	(S (Cl (PreF * )	_	
2	t2007_000	kome	VVFIN	komen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t2008_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
4	t2009_000	selbe	DDA	sëlb	Masc.Nom.Sg.wk	 *	_	
5	t2010_000	man	NA	mann	Nom.Sg	 * )	_	
6	t2011_000	dô	AVD	dô	_	 * )	_	
7	t2012_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2013_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2014_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2015_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF *	_	
4	t2016_000	vile	AVD	vil(e)	_	 *	_	
5	t2017_000	rehter	ADJA	rëht	Pos.Masc.Nom.Sg.st	(NX *	_	
6	t2018_000	site	NA	site	Nom.Sg	 * ) )	_	
7	t2019_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2020_000	der	DRELS	dër	Masc.Nom.Sg	(S (Frag (NX * )	_	
2	t2021_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
3	t2022_000	anderm	DIS	ander	Masc.Dat.Sg.st	 * )	_	
4	t2023_000	wole	AVD	wol(e)	_	(PreF * )	_	
5	t2024_000	vert	VVFIN	var(e)n/mit(e)<+	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t2025_000	mite	PTKVZ	mit(e)/<+var(e)n	_	(RB * )	_	
7	t2026_000	-	$_	_	_	 *	_	
8	t2027_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
9	t2028_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
10	t2029_000	etelîche	DIA	ëte-lich	Fem.Akk.Sg.st	(NX *	_	
11	t2030_000	êre	NA	êre	Akk.Sg	 * )	_	
12	t2031_000	-	$_	_	_	 *	_	
13	t2032_000	dâr	AVD	dâr	_	 *	_	
14	t2033_000	engegene	AVD	en-gègen(e)	_	 * )	_	
15	t2034_000	kêre	VVFIN	kêren	Subj.Pres.Sg.3	(RB (VX * ) )	_	
16	t2035_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2036_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t2037_000	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t2037_001	wile	VMFIN	wèllen	Ind.Pres.Sg.1	 * ) )	_	
4	t2038_000	nieht	PTKNEG	niht	_	(MF *	_	
5	t2039_000	langer	AVD	lange	_	 * )	_	
6	t2040_000	biten	VVINF	biten	_	(RB (VX * ) )	_	
7	t2041_000	-	$_	_	_	 * )	_	
8	t2042_000	ir	PPER	ir	Nom.Pl.2	(Cl (PreF (NX * ) )	_	
9	t2043_000	sulet	VMFIN	sol(e)n	*.Pres.Pl.2	(LB (VX * ) )	_	
10	t2044_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
11	t2044_001	here	AVD	hër(e)	_	 * )	_	
12	t2045_000	in	PTKVZ	in/>+lèiten	_	(RB (VX *	_	
13	t2045_001	leiten	VVINF	lèiten/in>+	_	 * ) )	_	
14	t2046_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2047_000	ir	PPER	ir	Nom.Pl.2	(S (Cl (PreF (NX * ) )	_	
2	t2048_000	îlet	VVFIN	îlen	*.Pres.Pl.2	(LB (VX * ) )	_	
3	t2049_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
4	t2050_000	here	AVD	hër(e)	_	 *	_	
5	t2051_000	ze	APPR	ze	_	(PPX *	_	
6	t2051_001	mir	PPER	ich	Dat.Sg.1	(NX * ) )	_	
7	t2052_000	laden	VVINF	laden	_	(VX * ) )	_	
8	t2053_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2054_000	wir	PPER	wir	Nom.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t2055_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.1	(LB (VX * ) )	_	
3	t2056_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
4	t2057_000	wole	AVD	wol(e)	_	 * )	_	
5	t2058_000	mite	PTKVZ	mit(e)/>+var(e)n	_	(RB (VX *	_	
6	t2059_000	varen	VVINF	var(e)n/mit(e)>+	_	 * ) )	_	
7	t2060_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2061_000	unser	DPOSA	unser	Neut.Akk.Sg.0	(S (Cl (PreF (NX *	_	
2	t2062_000	brôt	NA	brôt	Akk.Sg	 * ) )	_	
3	t2063_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t2064_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
5	t2065_000	ezzen	VVINF	ëzzen	_	(RB (VX * ) )	_	
6	t2066_000	-	$_	_	_	 * )	_	
7	t2067_000	sînes	DPOSA	sîn	Neut.Gen.Sg.st	(Frag (NX *	_	
8	t2068_000	leides	NA	lèid	Gen.Sg	 * )	_	
9	t2069_000	vergezzen	VVINF	ver-gëzzen	_	(VX * )	_	
10	t2070_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2071_000	dô	AVD	dô	_	(S (Cl (PreF *	_	
2	t2072_000	Mosî	NE	Moses	Nom.Sg	(NX *	_	
3	t2073_000	zuoze	APPR	zuo-ze	_	(PPX *	_	
4	t2073_001	ime	PPER	ër	Masc.Dat.Sg.3	(NX * ) ) ) )	_	
5	t2074_000	kom	VVFIN	komen	Ind.Past.Sg.3	(LB (VX * ) )	_	
6	t2075_000	-	$_	_	_	 * )	_	
7	t2076_000	dô	AVD	dô	_	(Cl (PreF * )	_	
8	t2077_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(LB (VX * ) )	_	
9	t2078_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
10	t2079_000	wole	AVD	wol(e)	_	 * )	_	
11	t2080_000	entvangen	VVPP	ent-vâhen	_	(RB (VX * ) )	_	
12	t2081_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2082_000	ietwederer	DIS	ièd-wëder	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t2083_000	sich	PRF	sich	Akk	(NX * )	_	
3	t2084_000	dô	AVD	dô	_	(PreF * )	_	
4	t2085_000	vröuwete	VVFIN	vröuwen	*.Past.Sg.3	(LB (VX * ) )	_	
5	t2086_000	-	$_	_	_	 *	_	
6	t2087_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
7	t2088_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
8	t2089_000	vunden	VVPP	vinden	_	(RB (VX *	_	
9	t2090_000	habete	VAFIN	haben	*.Past.Sg.3	 * ) )	_	
10	t2091_000	-	$_	_	_	 * ) )	_	
11	t2092_000	gelîchen	ADJA	ge-lîch	Pos.Masc.Akk.Sg.*	(Frag (NX *	_	
12	t2093_000	gesellen	NA	ge-sèlle	Akk.Sg	 * )	_	
13	t2094_000	-	$_	_	_	 * )	_	
14	t2095_000	al	AVD	al	_	(Frag *	_	
15	t2096_000	zuo	APPR	ze	_	(PPX *	_	
16	t2097_000	sînem	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
17	t2098_000	willen	NA	wille	Dat.Sg	 * ) )	_	
18	t2099_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2100_000	sô	KO*	sô	_	(S (Frag *	_	
2	t2101_000	der	DDART	dër	Masc.Nom.Sg	 *	_	
3	t2102_000	ellende	ADJA	èl-lènte	Pos.Masc.Nom.Sg.0	(PreF * )	_	
4	t2103_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t2104_000	-	$_	_	_	 * )	_	
6	t2105_000	sô	KO*	sô	_	(Frag *	_	
7	t2106_000	iz	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
8	t2107_000	ime	PPER	ër	Masc.Dat.Sg.3	(PreF (NX * ) )	_	
9	t2108_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t2109_000	an	APPR	ane	_	(MF (PPX *	_	
11	t2110_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
12	t2111_000	noete	NA	nôt	Akk.Pl	 * ) ) )	_	
13	t2112_000	-	$_	_	_	 * )	_	
14	t2113_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
15	t2114_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t2115_000	ofte	AVD	ofte	_	(MF *	_	
17	t2116_000	willic	ADJD	willig	Pos....0	 * )	_	
18	t2117_000	-	$_	_	_	 *	_	
19	t2118_000	deme	DDS	dër	Masc.Dat.Sg	(MF (NX * ) )	_	
20	t2119_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
21	t2120_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * ) )	_	
22	t2121_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX * ) )	_	
23	t2122_000	genædic	ADJD	ge-nædig	Pos....0	(PostF * )	_	
24	t2123_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2124_000	ietro	NE	Ietro	Nom.Sg	(S (Frag (NX * )	_	
2	t2125_000	triuwen	NA	triuwe	Akk.Pl	(PreF (NX * ) )	_	
3	t2126_000	san	VVFIN	sinnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t2127_000	-	$_	_	_	 * )	_	
5	t2128_000	Mosî	NE	Moses	Dat.Sg	(Cl (PreF (NX * ) )	_	
6	t2129_000	gap	VVFIN	gëben	Ind.Past.Sg.3	(LB (VX * ) )	_	
7	t2130_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
8	t2131_000	sephoram	NE	Sephora	Akk.Sg	(NX * ) )	_	
9	t2132_000	-	$_	_	_	 *	_	
10	t2133_000	sîne	DPOSA	sîn	Fem.Akk.Sg.st	(Frag (NX *	_	
11	t2134_000	tohter	NA	tohter	Akk.Sg	 *	_	
12	t2135_000	ze	APPR	ze	_	(PPX *	_	
13	t2135_001	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
14	t2136_000	kone	NA	kone	Dat.Sg	 * ) ) )	_	
15	t2137_000	-	$_	_	_	 * )	_	
16	t2138_000	als	KO*	all-sô	_	(Frag *	_	
17	t2139_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
18	t2140_000	tuon	VVINF	tuon	_	(PreF (VX * ) )	_	
19	t2141_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t2142_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2143_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t2144_000	bat	VVFIN	biten	Ind.Past.Sg.3	(LB (VX * ) ) )	_	
3	t2145_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
4	t2146_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
5	t2147_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * ) )	_	
6	t2148_000	swüere	VVFIN	swèr(e)n	Subj.Past.Sg.3	(RB (VX * ) )	_	
7	t2149_000	-	$_	_	_	 *	_	
8	t2150_000	noch	KON	noh	_	(Frag *	_	
9	t2151_000	von	APPR	von	_	(PreF (PPX *	_	
10	t2152_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * ) ) )	_	
11	t2153_000	ne	PTKNEG	ne	_	(LB (VX *	_	
12	t2153_001	vüere	VVFIN	var(e)n	Subj.Past.Sg.3	 * ) )	_	
13	t2154_000	-	$_	_	_	 * )	_	
14	t2155_000	und	KON	unte	_	(Frag *	_	
15	t2156_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
16	t2157_000	stæte	ADJD	stæte	Pos....0	(PreF * )	_	
17	t2158_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
18	t2159_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2160_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2161_000	würde	VAFIN	wërden	Subj.Past.Sg.3	(LB (VX * ) )	_	
3	t2162_000	sîn	DPOSA	sîn	Neut.Nom.Sg.0	(MF (NX *	_	
4	t2163_000	gevüere	NA	ge-vüère	Nom.Sg	 * ) )	_	
5	t2164_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2165_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t2166_000	machet	VVFIN	machen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2167_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
4	t2168_000	gelîche	AVD	ge-lîche	_	 * )	_	
5	t2169_000	-	$_	_	_	 *	_	
6	t2170_000	ime	PPER	ër	Masc.Dat.Sg.3	(Frag (NX *	_	
7	t2171_000	selbem	DDD	sëlb	Masc.Dat.Sg.st	 * )	_	
8	t2172_000	ebenrîche	AVD	ëben-rîche	_	 *	_	
9	t2173_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2174_000	wir	PPER	wir	Nom.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t2175_000	lesen	VVFIN	lësen	*.Pres.Pl.1	(LB (VX * ) ) )	_	
3	t2176_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
4	t2177_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
5	t2178_000	in	PPER	ër	*.Akk.Sg.3	(NX * ) )	_	
6	t2179_000	gewerete	VVFIN	ge-wër(e)n	*.Past.Sg.3	(RB (VX * ) )	_	
7	t2180_000	-	$_	_	_	 *	_	
8	t2181_000	des	DRELS	dër	Neut.Gen.Sg	(PostF (Cl (LB (NX * ) )	_	
9	t2182_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
10	t2183_000	an	APPR	ane	_	(PPX *	_	
11	t2184_000	in	PPER	ër	*.Akk.Sg.3	(NX * ) ) ) )	_	
12	t2185_000	gerete	VVFIN	gër(e)n	*.Past.Sg.3	(RB (VX * ) )	_	
13	t2186_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2187_000	über	APPR	über	_	(S (Frag (PPX *	_	
2	t2188_000	unmanige	DIA	un-manig	*.Akk.Pl.st	(NX *	_	
3	t2189_000	tage	NA	tag	Akk.Pl	 * ) )	_	
4	t2190_000	Sephôra	NE	Sèphôra	Nom.Sg	(PreF (NX * ) )	_	
5	t2191_000	begunde	VVFIN	be-ginnen	*.Past.Sg.3	(LB (VX * ) )	_	
6	t2192_000	tragen	VVINF	tragen	_	(MF (VX * ) )	_	
7	t2193_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2194_000	si	PPER	ër	Fem.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t2195_000	gebar	VVFIN	ge-bër(e)n	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t2196_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
4	t2197_000	knaben	NA	knabe	Akk.Sg	 * ) )	_	
5	t2198_000	-	$_	_	_	 * )	_	
6	t2199_000	sîn	DPOSA	sîn	Masc.Nom.Sg.0	(Cl (PreF (NX *	_	
7	t2200_000	vater	NA	vater	Nom.Sg	 * ) )	_	
8	t2201_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
9	t2202_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
10	t2203_000	Gersan	NE	Gersan	Nom.Sg	(NX * ) )	_	
11	t2204_000	-	$_	_	_	 * )	_	
12	t2205_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t2206_000	quît	VVFIN	quëden	Ind.Pres.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2207_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t2208_000	wart	VAFIN	wërden	Ind.Past.Sg.1	(LB (VX * ) )	_	
3	t2209_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
4	t2210_000	künde	ADJD	künde	Pos....0	 * )	_	
5	t2211_000	-	$_	_	_	 *	_	
6	t2212_000	in	APPR	in	_	(Frag (PPX *	_	
7	t2213_000	vremedeme	ADJA	vrèm(e)de	Pos.Neut.Dat.Sg.st	(NX *	_	
8	t2214_000	lande	NA	lant	Dat.Sg	 * ) )	_	
9	t2215_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2216_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2217_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t2218_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
4	t2219_000	bezeichenlîcher	ADJA	be-zèichen-lich	Pos.Masc.Nom.Sg.st	 *	_	
5	t2220_000	name	NA	name	Nom.Sg	 * ) )	_	
6	t2221_000	-	$_	_	_	 * )	_	
7	t2222_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
8	t2223_000	mohte	VMFIN	mügen	*.Past.Sg.3	(LB (VX * ) )	_	
9	t2224_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
10	t2225_000	vile	AVD	vil(e)	_	 *	_	
11	t2226_000	gerne	AVD	gërne	_	 *	_	
12	t2227_000	haben	VAINF	haben	_	(VX * ) )	_	
13	t2228_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2229_000	dâ	PAVD	dâr/+nâh	_	(S (Frag *	_	
2	t2229_001	nâch	PAVAP	nâh/dâr+	_	 *	_	
3	t2230_000	über	APPR	über	_	(PPX *	_	
4	t2231_000	gewonelich	ADJA	ge-won(e)-lich	Pos.Neut.Akk.Sg.0	(NX *	_	
5	t2232_000	zît	NA	zît	Akk.Sg	 * ) )	_	
6	t2233_000	-	$_	_	_	 * )	_	
7	t2234_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(Cl (LB (VX * ) )	_	
8	t2235_000	swanger	ADJD	swanger	Pos....0	(MF *	_	
9	t2236_000	daz	DDART	dër	Neut.Nom.Sg	(NX *	_	
10	t2237_000	selbe	DDA	sëlb	Neut.Nom.Sg.wk	 *	_	
11	t2238_000	wîp	NA	wîb	Nom.Sg	 * ) )	_	
12	t2239_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2240_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2241_000	vröuwete	VVFIN	vröuwen	*.Past.Sg.3	(LB (VX * ) )	_	
3	t2242_000	sich	PRF	sich	Akk	(MF (NX * )	_	
4	t2243_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
5	t2244_000	vater	NA	vater	Nom.Sg	 *	_	
6	t2245_000	guote	ADJN	guot	Pos.Masc.Nom.Sg.wk	 * ) )	_	
7	t2246_000	-	$_	_	_	 *	_	
8	t2247_000	von	APPR	von	_	(Frag (PPX *	_	
9	t2248_000	alleme	DIA	all	Masc.Dat.Sg.st	(NX *	_	
10	t2249_000	sînem	DPOSA	sîn	Masc.Dat.Sg.st	 *	_	
11	t2250_000	muote	NA	muot	Dat.Sg	 * ) )	_	
12	t2251_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2252_000	dô	KOUS	dô	_	(S (Cl (LB * )	_	
2	t2253_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
3	t2254_000	tac	NA	tag	Nom.Sg	 * )	_	
4	t2255_000	dô	AVD	dô	_	 * )	_	
5	t2256_000	bekom	VVFIN	be-komen	Ind.Past.Sg.3	(RB (VX * ) )	_	
6	t2257_000	-	$_	_	_	 *	_	
7	t2258_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t2259_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
9	t2260_000	kint	NA	kind	Nom.Sg	 * ) )	_	
10	t2261_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(RB (VX *	_	
11	t2262_000	geboren	VVPP	ge-bër(e)n	_	 * ) )	_	
12	t2263_000	-	$_	_	_	 * ) ) )	_	
13	t2264_000	iz	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
14	t2265_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(LB (VX * ) )	_	
15	t2266_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
16	t2267_000	degen	NA	dëgen	Nom.Sg	 * ) )	_	
17	t2268_000	-	$_	_	_	 *	_	
18	t2269_000	lustsam	ADJN	lust-sam	Pos.Masc.Nom.Sg.0	(MF * )	_	
19	t2270_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2271_000	sîn	DPOSA	sîn	Masc.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t2272_000	vater	NA	vater	Nom.Sg	 * ) )	_	
3	t2273_000	schuof	VVFIN	schèpfen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t2274_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
5	t2275_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
6	t2276_000	namen	NA	name	Akk.Sg	 * ) )	_	
7	t2277_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2278_000	Elizer	NE	Elizer	Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2279_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2280_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
4	t2281_000	dich	PPER	dû	Akk.Sg.2	(NX * ) )	_	
5	t2281_001	nennen	VVINF	nènnen	_	(RB (VX * ) )	_	
6	t2282_000	-	$_	_	_	 * )	_	
7	t2283_000	dâ	PAVD	dâr/+bî	_	(Cl (LB (VX *	_	
8	t2284_000	bî	PAVAP	bî/dâr+	_	 *	_	
9	t2285_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	 * ) )	_	
10	t2286_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
11	t2287_000	dich	PPER	dû	Akk.Sg.2	(NX * ) )	_	
12	t2288_000	erkennen	VVINF	er-kènnen	_	(RB (VX * ) )	_	
13	t2289_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2290_000	daz	DDART	dër	Neut.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t2291_000	wort	NA	wort	Nom.Sg	 * ) )	_	
3	t2292_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t2293_000	trôstbære	ADJD	trôst-bære	Pos....0	(MF * )	_	
5	t2294_000	-	$_	_	_	 * )	_	
6	t2295_000	iz	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
7	t2296_000	quît	VVFIN	quëden	Ind.Pres.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2297_000	got	NA	got	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2298_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2299_000	mîn	DPOSA	mîn	Masc.Nom.Sg.0	(MF (NX *	_	
4	t2300_000	helfære	NA	hëlfære	Nom.Sg	 * ) )	_	
5	t2301_000	-	$_	_	_	 *	_	
6	t2302_000	wande	KO*	wante	_	(Frag *	_	
7	t2303_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
8	t2304_000	mich	PPER	ich	Akk.Sg.1	(PreF (NX * ) )	_	
9	t2305_000	nam	VVFIN	nëmen	Ind.Past.Sg.3	(LB (VX * ) )	_	
10	t2306_000	gesunden	ADJD	ge-sunt	Pos.Masc.Akk.Sg.*	(MF * )	_	
11	t2307_000	-	$_	_	_	 * )	_	
12	t2308_000	vone	APPR	von	_	(Frag (PPX *	_	
13	t2309_000	Pharaoes	NE	Pharao	Gen.Sg	(NX * ) )	_	
14	t2310_000	handen	NA	hant	Dat.Pl	(NX * )	_	
15	t2311_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2312_000	nû	AVD	nû	_	(S (Cl (PreF * )	_	
2	t2312_001	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t2313_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.1	 * ) )	_	
4	t2314_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * ) )	_	
5	t2315_000	nieht	PTKNEG	niht	_	(RB (VX *	_	
6	t2316_000	twelen	VVINF	twël(e)n	_	 * ) )	_	
7	t2317_000	-	$_	_	_	 * )	_	
8	t2318_000	wir	PPER	wir	Nom.Pl.1	(Cl (PreF (NX * ) )	_	
9	t2319_000	ne	PTKNEG	ne	_	(LB (VX *	_	
10	t2319_001	beginnen	VVFIN	be-ginnen	*.Pres.Pl.1	 * ) )	_	
11	t2320_000	zelen	VVINF	zèl(e)n	_	(MF (VX * ) )	_	
12	t2321_000	-	$_	_	_	 *	_	
13	t2322_000	wie	AVW	wiè	_	(Frag *	_	
14	t2323_000	iz	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
15	t2324_000	dâ	PAVD	dâr/+zuo	_	(LB (VX *	_	
16	t2325_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
17	t2326_000	ergienc	VVFIN	er-gân	Ind.Past.Sg.3	 * ) )	_	
18	t2327_000	-	$_	_	_	 *	_	
19	t2328_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
20	t2329_000	hêbrêischiu	ADJA	hêbrêisch	Pos.Fem.Nom.Sg.st	(MF (NX *	_	
21	t2330_000	diet	NA	dièt	Nom.Sg	 * )	_	
22	t2331_000	-	$_	_	_	 *	_	
23	t2332_000	mit	APPR	mit	_	(PPX *	_	
24	t2333_000	allem	DIA	all	Masc.Dat.Sg.st	(NX *	_	
25	t2334_000	ire	DPOSA	ir(e)	Masc.Dat.Sg.0	 *	_	
26	t2335_000	vande	NA	vand	Dat.Sg	 * ) )	_	
27	t2336_000	-	$_	_	_	 * )	_	
28	t2337_000	vuor	VVFIN	var(e)n	Ind.Past.Sg.3	(RB (VX * ) )	_	
29	t2338_000	heim	AVD	hèim	_	(PostF *	_	
30	t2339_000	ze	APPR	ze	_	(PPX *	_	
31	t2340_000	lande	NA	lant	Dat.Sg	(NX * ) ) )	_	
32	t2341_000	-	$_	_	_	 * ) )	_	
33	t2342_000	als	KO*	all-sô	_	(Frag *	_	
34	t2343_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
35	t2344_000	got	NA	got	Nom.Sg	(PreF (NX * ) )	_	
36	t2345_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
37	t2346_000	-	$_	_	_	 *	_	
38	t2347_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
39	t2348_000	si	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
40	t2349_000	dâ	AVD	dâr	_	 * )	_	
41	t2350_000	holete	VVFIN	hol(e)n	*.Past.Sg.3	(RB (VX * ) )	_	
42	t2351_000	-	$_	_	_	 * ) )	_	
43	t2352_000	mit	APPR	mit	_	(Frag (PPX *	_	
44	t2353_000	wunderen	NA	wunter	Dat.Pl	(NX *	_	
45	t2354_000	manicvalt	ADJN	manig-valt	Pos.*.Dat.Pl.0	 * ) )	_	
46	t2355_000	-	$_	_	_	 *	_	
47	t2356_000	der	DRELS	dër	*.Gen.Pl	(Cl (LB (NX * ) )	_	
48	t2357_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
49	t2358_000	hæte	VAFIN	haben	*.Past.Sg.3	(RB (VX * ) )	_	
50	t2359_000	gewalt	NA	ge-walt	Akk.Sg	(PostF (NX * ) )	_	
51	t2360_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2361_000	âne	APPR	âne	_	(S (Frag (PPX *	_	
2	t2362_000	werc	NA	wërk	Akk.Sg	(NX *	_	
3	t2363_000	tougen	ADJN	tougen	Pos.Neut.Akk.Sg.0	 * ) )	_	
4	t2364_000	-	$_	_	_	 * )	_	
5	t2365_000	sô	AVD	sô	_	(Cl (PreF * )	_	
6	t2366_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
7	t2367_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
8	t2368_000	erougen	VVINF	er-ougen	_	(RB (VX * ) )	_	
9	t2369_000	-	$_	_	_	 *	_	
10	t2370_000	sîne	DPOSA	sîn	Fem.Akk.Sg.st	(Frag (NX *	_	
11	t2371_000	kraft	NA	kraft	Akk.Sg	 *	_	
12	t2372_000	grôze	ADJN	grôz	Pos.Fem.Akk.Sg.st	 * )	_	
13	t2373_000	-	$_	_	_	 *	_	
14	t2374_000	êr	KOUS	êr	_	(Cl (LB * )	_	
15	t2375_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
16	t2375_001	si	PPER	ër	Fem.Akk.Sg.3	(NX * )	_	
17	t2376_000	ie	AVD	iè	_	 * )	_	
18	t2377_000	verliezen	VVFIN	ver-lâzen	*.Past.Pl.3	(RB (VX * ) )	_	
19	t2378_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2379_000	iz	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t2380_000	geschach	VVFIN	ge-schëhen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t2381_000	über	APPR	über	_	(MF (PPX *	_	
4	t2382_000	manigen	DIA	manig	Masc.Akk.Sg.st	(NX *	_	
5	t2383_000	tac	NA	tag	Akk.Sg	 * ) ) )	_	
6	t2384_000	-	$_	_	_	 *	_	
7	t2385_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t2386_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
9	t2387_000	küninc	NA	küni(n)g	Nom.Sg	 *	_	
10	t2388_000	Pharao	NE	Pharao	Nom.Sg	 * ) )	_	
11	t2389_000	erstarp	VVFIN	er-stërben	Ind.Past.Sg.3	(RB (VX * ) )	_	
12	t2390_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2391_000	ein	DIART	èin	Masc.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t2392_000	anderer	DIS	ander	Masc.Nom.Sg.st	 * ) )	_	
3	t2393_000	besaz	VVFIN	be-sitzen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t2394_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
5	t2395_000	rîche	NA	rîche	Akk.Sg	 * ) )	_	
6	t2396_000	-	$_	_	_	 * )	_	
7	t2397_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t2397_001	ne	PTKNEG	ne	_	(LB (VX *	_	
9	t2398_000	wolte	VMFIN	wèllen	*.Past.Sg.3	 * ) )	_	
10	t2399_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
11	t2400_000	nieht	PTKNEG	niht	_	(RB (VX *	_	
12	t2401_000	entwîchen	VVINF	ent-wîchen	_	 * ) )	_	
13	t2402_000	-	$_	_	_	 * )	_	
14	t2403_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
15	t2404_000	werkes	NA	wërk	Gen.Sg	 *	_	
16	t2405_000	des	DRELS	dër	Neut.Gen.Sg	(Cl (LB (NX * ) )	_	
17	t2406_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
18	t2407_000	tâten	VVFIN	tuon	Ind.Past.Pl.3	(RB (VX * ) )	_	
19	t2408_000	-	$_	_	_	 * ) )	_	
20	t2409_000	unde	KON	unte	_	(Frag *	_	
21	t2410_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
22	t2411_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
23	t2412_000	ane	PTKVZ	ane/>+bringen	_	(VX *	_	
24	t2413_000	brâhten	VVFIN	bringen/ane>+	Ind.Past.Pl.3	 * )	_	
25	t2414_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2415_000	mit	APPR	mit	_	(S (Frag (PPX *	_	
2	t2416_000	sûftôden	NA	sûftôd	Dat.Pl	(NX *	_	
3	t2417_000	manigen	DIN	manig	*.Dat.Pl.st	 * ) )	_	
4	t2418_000	-	$_	_	_	 * )	_	
5	t2419_000	riefen	VVFIN	ruofen	*.Past.Pl.3	(Cl (LB (VX * ) )	_	
6	t2420_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX *	_	
7	t2421_000	ze	APPR	ze	_	(PPX *	_	
8	t2421_001	himele	NA	himel	Dat.Sg	(NX * ) ) ) )	_	
9	t2422_000	-	$_	_	_	 * )	_	
10	t2423_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
11	t2424_000	klageten	VVFIN	klagen	*.Past.Pl.3	(LB (VX * ) )	_	
12	t2425_000	ire	DPOSA	ir(e)	*.Akk.Pl.0	(MF (NX *	_	
13	t2426_000	noete	NA	nôt	Akk.Pl	 * )	_	
14	t2427_000	manicvalt	ADJD	manig-valt	Pos....0	 * )	_	
15	t2428_000	-	$_	_	_	 *	_	
16	t2429_000	die	DRELS	dër	*.Akk.Pl	(PostF (Cl (LB (NX * ) )	_	
17	t2430_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
18	t2431_000	liten	VVFIN	lîden	*.Past.Pl.3	(RB (VX * ) )	_	
19	t2432_000	über	APPR	über	_	(PostF (PPX *	_	
20	t2433_000	tac	NA	tag	Akk.Sg	(NX * ) ) )	_	
21	t2434_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2435_000	got	NA	got	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2436_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
3	t2437_000	si	PPER	ër	*.Akk.Pl.3	(MF (NX * ) )	_	
4	t2438_000	erhoeren	VVINF	er-hoèren	_	(RB (VX * ) )	_	
5	t2439_000	-	$_	_	_	 *	_	
6	t2440_000	durch	APPR	durh	_	(Frag (PPX *	_	
7	t2441_000	liebe	NA	lièbe	Akk.Sg	(NX *	_	
8	t2442_000	ire	DPOSA	ir(e)	*.Gen.Pl.0	(NX *	_	
9	t2443_000	vordere	NA	vorder(e)	Gen.Pl	 * ) ) )	_	
10	t2444_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2445_000	Mosî	NE	Moses	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2446_000	hielt	VVFIN	halten	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t2447_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
4	t2448_000	vihe	NA	vihe	Akk.Sg	 * ) )	_	
5	t2449_000	-	$_	_	_	 *	_	
6	t2450_000	daz	DRELS	dër	Neut.Akk.Sg	(MF (NX (Cl (LB (NX *	_	
7	t2451_000	sîn	PPER	ër	Masc.Gen.Sg.3	(NX * ) ) )	_	
8	t2452_000	was	VAFIN	wësen	Ind.Past.Sg.3	(RB (VX * ) )	_	
9	t2453_000	unde	KON	unte	_	(PostF *	_	
10	t2454_000	sînes	DPOSA	sîn	Masc.Gen.Sg.st	(NX *	_	
11	t2455_000	sweher	NA	swëher	Gen.Sg	 * ) )	_	
12	t2456_000	-	$_	_	_	 * ) ) )	_	
13	t2457_000	in	APPR	in	_	(Frag (PPX *	_	
14	t2458_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
15	t2459_000	wüeste	NA	wüèste	Dat.Sg	 * ) )	_	
16	t2460_000	verre	AVD	vërre	_	 *	_	
17	t2461_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2462_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t2463_000	kom	VVFIN	komen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t2464_000	zuo	APPR	ze	_	(MF (PPX *	_	
4	t2465_000	Orep	NE	Oreb	Dat.Sg	(NX * ) )	_	
5	t2466_000	einem	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
6	t2467_000	berge	NA	bërg	Dat.Sg	 * ) )	_	
7	t2468_000	-	$_	_	_	 * )	_	
8	t2469_000	dâ	AVD	dâr	_	(Cl (PreF * )	_	
9	t2470_000	erschein	VVFIN	er-schînen	Ind.Past.Sg.3	(LB (VX * ) )	_	
10	t2471_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
11	t2472_000	got	NA	got	Nom.Sg	(NX * ) )	_	
12	t2473_000	der	DDART	dër	Masc.Nom.Sg	(Frag *	_	
13	t2474_000	geware	ADJA	ge-war(e)	Pos.Masc.Nom.Sg.wk	 *	_	
14	t2475_000	-	$_	_	_	 * )	_	
15	t2476_000	als	KO*	all-sô	_	(Frag *	_	
16	t2477_000	iz	PPER	ër	Neut.Nom.Sg.3	(PreF (NX *	_	
17	t2478_000	louch	NA	louch	Nom.Sg	 *	_	
18	t2479_000	viures	NA	viur	Gen.Sg	(NX * ) ) )	_	
19	t2480_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
20	t2481_000	-	$_	_	_	 * )	_	
21	t2482_000	in	APPR	in	_	(Frag (PPX *	_	
22	t2483_000	mittem	ADJA	mitte	Pos.Masc.Dat.Sg.st	(NX *	_	
23	t2484_000	deme	DDART	dër	Neut.Dat.Sg	 *	_	
24	t2485_000	gespreide	NA	ge-sprèide	Dat.Sg	 * ) )	_	
25	t2486_000	-	$_	_	_	 * )	_	
26	t2487_000	wole	AVD	wol(e)	_	(Frag *	_	
27	t2488_000	verre	AVD	vërre	_	 *	_	
28	t2489_000	an	APPR	ane	_	(PPX *	_	
29	t2490_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
30	t2491_000	heide	NA	hèide	Dat.Sg	 * ) )	_	
31	t2492_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2493_000	daz	DDART	dër	Neut.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t2494_000	viur	NA	viur	Nom.Sg	 * ) )	_	
3	t2495_000	was	VAFIN	wësen/ane<.+	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t2496_000	dâr	AVD	dâr	_	(MF *	_	
5	t2497_000	obenân	AVD	obenân	_	 * )	_	
6	t2498_000	ane	PTKVZ	ane/<.+wësen	_	(RB * )	_	
7	t2499_000	-	$_	_	_	 *	_	
8	t2500_000	daz	DDART	dër	Neut.Nom.Sg	(Frag (NX *	_	
9	t2501_000	holz	NA	holz	Nom.Sg	 * )	_	
10	t2502_000	iedoch	AVD	iè-doh	_	(PreF *	_	
11	t2503_000	niene	AVD	niène	_	 * )	_	
12	t2504_000	bran	VVFIN	brinnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
13	t2505_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2506_000	michel	ADJA	michel	Pos.Neut.Nom.Sg.0	(S (Frag (NX *	_	
2	t2507_000	wunder	NA	wunter	Nom.Sg	 * )	_	
3	t2508_000	dô	AVD	dô	_	(PreF * )	_	
4	t2509_000	genam	VVFIN	ge-nëmen	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t2510_000	-	$_	_	_	 * )	_	
6	t2511_000	den	DDART	dër	Masc.Akk.Sg	(Frag *	_	
7	t2512_000	vile	AVD	vil(e)	_	 *	_	
8	t2513_000	tiurlîchen	ADJA	tiur-lich	Pos.Masc.Akk.Sg.*	(NX *	_	
9	t2514_000	man	NA	mann	Akk.Sg	 * ) )	_	
10	t2515_000	waz	PW	wër	Neut.Nom.Sg.st	(Cl (PreF (NX *	_	
11	t2516_000	diu	DDART	dër	Fem.Nom.Sg	 *	_	
12	t2517_000	sache	NA	sache	Nom.Sg	 * ) )	_	
13	t2518_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
14	t2519_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2520_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t2521_000	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t2521_001	gesach	VVFIN	ge-sëhen	Ind.Past.Sg.3	 * ) )	_	
4	t2522_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
5	t2523_000	nie	AVD	niè	_	 *	_	
6	t2524_000	mêrer	AVD	mêr(e)	Comp	 * )	_	
7	t2525_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2526_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t2527_000	begunde	VVFIN	be-ginnen	*.Past.Sg.3	(LB (VX * ) )	_	
3	t2528_000	dare	AVD	dar(e)	_	(MF *	_	
4	t2529_000	gâhen	VVINF	gâhen	_	(VX * ) )	_	
5	t2530_000	-	$_	_	_	 *	_	
6	t2531_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
7	t2532_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
8	t2533_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * ) )	_	
9	t2534_000	besehe	VVFIN	be-sëhen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
10	t2535_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2536_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t2537_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
3	t2538_000	gerne	AVD	gërne	_	(MF * )	_	
4	t2539_000	ervinden	VVINF	er-vinden	_	(RB (VX * ) )	_	
5	t2540_000	-	$_	_	_	 * )	_	
6	t2541_000	waz	PW	wër	Neut.Nom.Sg.st	(Cl (PreF * )	_	
7	t2542_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
8	t2543_000	an	APPR	ane	_	(MF (PPX *	_	
9	t2544_000	disen	DDA	dise	*.Dat.Pl	(NX *	_	
10	t2545_000	dingen	NA	ding	Dat.Pl	 * ) ) )	_	
11	t2546_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2547_000	dô	AVD	dô	_	(S (Cl (PreF * )	_	
2	t2547_001	gesach	VVFIN	ge-sëhen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t2548_000	got	NA	got	Nom.Sg	(MF (NX *	_	
4	t2549_000	der	DDART	dër	Masc.Nom.Sg	 *	_	
5	t2550_000	guote	ADJA	guot	Pos.Masc.Nom.Sg.wk	 * ) )	_	
6	t2551_000	-	$_	_	_	 * )	_	
7	t2552_000	waz	PW	wër	Neut.Nom.Sg.st	(Cl (PreF * )	_	
8	t2553_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
9	t2554_000	in	APPR	in	_	(MF (PPX *	_	
10	t2554_001	sînem	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
11	t2555_000	muote	NA	muot	Dat.Sg	 * ) ) )	_	
12	t2556_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2557_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t2558_000	mitteme	ADJA	mitte	Pos.Masc.Dat.Sg.st	(NX *	_	
3	t2559_000	deme	DDART	dër	Neut.Dat.Sg	 *	_	
4	t2560_000	gespreide	NA	ge-sprèide	Dat.Sg	 * ) )	_	
5	t2561_000	-	$_	_	_	 * )	_	
6	t2562_000	in	APPR	in	_	(Frag (PPX *	_	
7	t2563_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
8	t2564_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
9	t2565_000	heide	NA	hèide	Dat.Sg	 * ) )	_	
10	t2566_000	-	$_	_	_	 * )	_	
11	t2567_000	zwire	AVD	zwir(e)	_	(PreF * )	_	
12	t2568_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
13	t2569_000	got	NA	got	Nom.Sg	(PreF (NX * ) )	_	
14	t2570_000	nante	VVFIN	nènnen	*.Past.Sg.3	(LB (VX * ) )	_	
15	t2571_000	-	$_	_	_	 *	_	
16	t2572_000	wole	AVD	wol(e)	_	(PreF * )	_	
17	t2573_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
18	t2574_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (NX * ) )	_	
19	t2575_000	bekante	VVFIN	be-kènnen	*.Past.Sg.3	(LB (VX * ) )	_	
20	t2576_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2577_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t2578_000	ander	DIS	ander	Masc.0.Nom.Sg.wk	 * ) )	_	
3	t2579_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2580_000	hier	AVD	hièr	_	(S (Cl (PreF * )	_	
2	t2581_000	bin	VAFIN	sîn	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t2582_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
4	t2583_000	-	$_	_	_	 * )	_	
5	t2584_000	wie	AVW	wiè	_	(Cl (PreF * )	_	
6	t2585_000	bekennest	VVFIN	be-kènnen	*.Pres.Sg.2	(LB (VX * ) )	_	
7	t2586_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
8	t2587_000	mich	PPER	ich	Akk.Sg.1	(NX * ) )	_	
9	t2588_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2589_000	got	NA	got	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2590_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t2591_000	abe	AVD	aber	_	(MF *	_	
4	t2592_000	sâ	AVD	sâr	_	 * )	_	
5	t2593_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2594_000	twele	VVFIN	twël(e)n	Subj.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t2595_000	eine	DIART	èin	Fem.Akk.Sg.st	(MF (NX *	_	
3	t2596_000	wîle	NA	wîl(e)	Akk.Sg	 * ) )	_	
4	t2597_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2598_000	nieht	PTKNEG	niht	_	(S (Frag *	_	
2	t2599_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
3	t2600_000	ne	PTKNEG	ne	_	(LB (VX *	_	
4	t2600_001	gâhest	VVFIN	gâhen	*.Pres.Sg.2	 * ) )	_	
5	t2601_000	-	$_	_	_	 * )	_	
6	t2602_000	here	AVD	hër(e)	_	(Cl (PreF *	_	
7	t2603_000	sô	AVD	sô	_	 *	_	
8	t2604_000	harte	AVD	harte	_	 *	_	
9	t2605_000	-	$_	_	_	 * )	_	
10	t2606_000	nâhest	VVFIN	nâhen	*.Pres.Sg.2	(LB (VX * ) )	_	
11	t2607_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2608_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t2609_000	ziehes	VVFIN	zièhen	*.Pres.Sg.2	(LB (VX * ) )	_	
3	t2610_000	mit	APPR	mit	_	(MF (PPX *	_	
4	t2611_000	muozen	NA	muoze	Dat.Pl	(NX * ) ) )	_	
5	t2612_000	-	$_	_	_	 *	_	
6	t2613_000	dîn	DPOSA	dîn	*.Akk.Pl.0	(Frag (NX *	_	
7	t2614_000	geschuohe	NA	ge-schuohe	Akk.Pl	 *	_	
8	t2615_000	von	APPR	von	_	(PPX *	_	
9	t2616_000	dînen	DPOSA	dîn	*.Dat.Pl.st	(NX *	_	
10	t2617_000	vuozen	NA	vuoz	Dat.Pl	 * ) ) )	_	
11	t2618_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2619_000	heilic	ADJD	hèilig	Pos....0	(S (Cl (PreF * )	_	
2	t2620_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2621_000	alliu	DIA	all	Fem.Nom.Sg.st	(MF (NX *	_	
4	t2622_000	disiu	DDA	dise	Fem.Nom.Sg	 *	_	
5	t2623_000	stat	NA	stat	Nom.Sg	 * ) )	_	
6	t2624_000	-	$_	_	_	 *	_	
7	t2625_000	swâ	AVG	swâr	_	(PostF (Cl (LB * )	_	
8	t2626_000	sô	AVD	sô	_	(MF *	_	
9	t2627_000	dîn	DPOSA	dîn	Masc.Nom.Sg.0	(NX *	_	
10	t2628_000	vuoz	NA	vuoz	Nom.Sg	 * ) )	_	
11	t2629_000	stât	VVFIN	stân	Ind.Pres.Sg.3	(RB (VX * ) )	_	
12	t2630_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2631_000	got	NA	got	Nom.Sg	(S (Frag (NX *	_	
2	t2632_000	in	APPR	in	_	(PPX *	_	
3	t2632_001	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
4	t2633_000	minnen	NA	minne	Dat.Pl	 * ) ) )	_	
5	t2634_000	-	$_	_	_	 * )	_	
6	t2635_000	tet	VVFIN	tuon	Ind.Past.Sg.3	(Cl (LB (VX * ) )	_	
7	t2636_000	sich	PRF	sich	Akk	(MF (NX * )	_	
8	t2637_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX *	_	
9	t2638_000	in	APPR	in	_	(PPX *	_	
10	t2638_001	künde	NA	künde	Dat.Sg	(NX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2639_000	ze	PTKA	ze	_	(S (Frag *	_	
2	t2639_001	wâre	NA	wâr	Dat.Sg	(PreF (NX * ) )	_	
3	t2640_000	pfligen	VVFIN	pflëgen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
4	t2641_000	ich	PPER	ich	Nom.Sg.1	(MF (NX *	_	
5	t2642_000	es	PPER	ër	Neut.Gen.Sg.3	(NX * ) )	_	
6	t2643_000	mich	PRF	ich	*.Akk.Sg.st	(NX * ) )	_	
7	t2644_000	-	$_	_	_	 * )	_	
8	t2645_000	got	NA	got	Nom.Sg	(Cl (PreF (NX *	_	
9	t2646_000	dînes	DPOSA	dîn	Masc.Gen.Sg.st	(NX *	_	
10	t2647_000	vaters	NA	vater	Gen.Sg	 * ) ) )	_	
11	t2648_000	bin	VAFIN	sîn	Ind.Pres.Sg.1	(LB (VX * ) )	_	
12	t2649_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
13	t2650_000	-	$_	_	_	 *	_	
14	t2651_000	got	NA	got	Nom.Sg	(Frag (NX *	_	
15	t2652_000	Abrahames	NE	Abraham	Gen.Sg	(NX * ) )	_	
16	t2653_000	-	$_	_	_	 * )	_	
17	t2654_000	got	NA	got	Nom.Sg	(Frag (NX *	_	
18	t2655_000	Isaakes	NE	Isaak	Gen.Sg	(NX * ) )	_	
19	t2656_000	-	$_	_	_	 * )	_	
20	t2657_000	got	NA	got	Nom.Sg	(Frag (NX *	_	
21	t2658_000	Jakobes	NE	Jakob	Gen.Sg	(NX * ) )	_	
22	t2659_000	-	$_	_	_	 * )	_	
23	t2660_000	unde	KON	unte	_	(Frag *	_	
24	t2661_000	alles	DIA	all	Neut.Gen.Sg.st	(NX *	_	
25	t2662_000	dînes	DPOSA	dîn	Neut.Gen.Sg.st	 *	_	
26	t2663_000	künnes	NA	künne	Gen.Sg	 * )	_	
27	t2664_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2665_000	dise	DDA	dise	Fem.Akk.Sg	(S (Frag (NX *	_	
2	t2666_000	rede	NA	rède	Akk.Sg	 * )	_	
3	t2667_000	Mosî	NE	Moses	Nom.Sg	(PreF (NX * ) )	_	
4	t2668_000	gehôrte	VVFIN	ge-hoèren	*.Past.Sg.3	(LB (VX * ) )	_	
5	t2669_000	-	$_	_	_	 * )	_	
6	t2670_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	(Frag (NX *	_	
7	t2671_000	antlütze	NA	ant-lütze	Akk.Sg	 * )	_	
8	t2672_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
9	t2673_000	nider	AVD	nider(e)	_	(PreF * )	_	
10	t2674_000	kêrte	VVFIN	kêren	*.Past.Sg.3	(LB (VX * ) )	_	
11	t2675_000	-	$_	_	_	 * )	_	
12	t2676_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
13	t2677_000	verbarc	VVFIN	ver-bërgen	Ind.Past.Sg.3	(LB (VX * ) )	_	
14	t2678_000	sîniu	DPOSA	sîn	Neut.Akk.Pl.st	(MF (NX *	_	
15	t2679_000	ougen	NA	ouge	Akk.Pl	 * ) )	_	
16	t2680_000	-	$_	_	_	 * )	_	
17	t2681_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
18	t2681_001	ne	PTKNEG	ne	_	(LB (VX *	_	
19	t2681_002	getorste	VMFIN	ge-turren	*.Past.Sg.3	 * ) )	_	
20	t2682_000	nieht	PTKNEG	niht	_	(RB (VX *	_	
21	t2683_000	schouwen	VVINF	schouwen	_	 * ) )	_	
22	t2684_000	-	$_	_	_	 *	_	
23	t2685_000	vore	APPR	vor(e)	_	(Frag (PPX *	_	
24	t2686_000	sîner	DPOSA	sîn	Fem.Dat.Sg.st	(NX *	_	
25	t2687_000	mennischheite	NA	mèn(ni)sch-hèit	Dat.Sg	 * ) )	_	
26	t2688_000	-	$_	_	_	 * )	_	
27	t2689_000	ze	APPR	ze	_	(Frag (PPX *	_	
28	t2689_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
29	t2690_000	grôzen	ADJA	grôz	Pos.Fem.Dat.Sg.wk	 *	_	
30	t2691_000	goteheite	NA	gote-hèit	Dat.Sg	 * ) )	_	
31	t2692_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2693_000	dô	AVD	dô	_	(S (Cl (PreF * )	_	
2	t2694_000	quat	VVFIN	quëden	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t2695_000	diu	DDART	dër	Fem.Nom.Sg	(MF *	_	
4	t2696_000	gotes	NA	got	Gen.Sg	(NX * )	_	
5	t2697_000	stimme	NA	stimme	Nom.Sg	(NX * ) )	_	
6	t2698_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2699_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t2700_000	sach	VVFIN	sëhen	Ind.Past.Sg.1	(LB (VX * ) )	_	
3	t2701_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
4	t2702_000	quelsunge	NA	quèlsunge	Akk.Sg	 * ) )	_	
5	t2703_000	-	$_	_	_	 *	_	
6	t2704_000	mînes	DPOSA	mîn	Neut.Gen.Sg.st	(Frag (NX *	_	
7	t2705_000	lieben	ADJA	lièb	Pos.Neut.Gen.Sg.wk	 *	_	
8	t2706_000	liutes	NA	liut	Gen.Sg	 * )	_	
9	t2707_000	-	$_	_	_	 * )	_	
10	t2708_000	in	APPR	in	_	(Frag (PPX *	_	
11	t2708_001	lande	NA	lant	Dat.Sg	(NX *	_	
12	t2709_000	Pharaoes	NE	Pharao	Gen.Sg	(NX * ) ) )	_	
13	t2710_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2711_000	sînen	DPOSA	sîn	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t2712_000	wuof	NA	wuof	Akk.Sg	 * )	_	
3	t2713_000	ich	PPER	ich	Nom.Sg.1	(NX * )	_	
4	t2714_000	hân	VAFIN	haben	Ind.Pres.Sg.1	(VX *	_	
5	t2715_000	vernomen	VVPP	ver-nëmen	_	 * )	_	
6	t2716_000	-	$_	_	_	 * )	_	
7	t2717_000	diu	DDART	dër	Fem.Nom.Sg	(Cl (PreF (NX *	_	
8	t2718_000	scherpfe	NA	schèrpfe	Nom.Sg	 *	_	
9	t2719_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
10	t2720_000	heidene	NA	hèiden	Gen.Pl	 * ) ) )	_	
11	t2721_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t2722_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
13	t2723_000	obe	AVD	obe	_	 * )	_	
14	t2724_000	-	$_	_	_	 * )	_	
15	t2725_000	ire	DPOSA	ir(e)	Masc.Akk.Sg.0	(Cl (PreF (NX *	_	
16	t2726_000	sêr	NA	sêr	Akk.Sg	 * ) )	_	
17	t2727_000	hân	VAFIN	haben	Ind.Pres.Sg.1	(LB (VX * ) )	_	
18	t2728_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
19	t2729_000	vernomen	VVPP	ver-nëmen	_	(RB (VX * ) )	_	
20	t2730_000	-	$_	_	_	 * )	_	
21	t2731_000	durch	APPR	durh	_	(Cl (PreF (PPX *	_	
22	t2732_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) ) )	_	
23	t2733_000	bin	VAFIN	sîn	Ind.Pres.Sg.1	(LB (VX * ) )	_	
24	t2734_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
25	t2735_000	here	AVD	hër(e)	_	 * )	_	
26	t2736_000	komen	VVPP	komen	_	(RB (VX * ) )	_	
27	t2737_000	-	$_	_	_	 *	_	
28	t2738_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
29	t2739_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
30	t2740_000	si	PPER	ër	*.Akk.Pl.3	(NX *	_	
31	t2741_000	von	APPR	von	_	(PPX *	_	
32	t2742_000	egipto	NE	egiptus	Dat.Sg	(NX * ) ) )	_	
33	t2743_000	-	$_	_	_	 * )	_	
34	t2744_000	loese	VVFIN	loèsen	*.Pres.Sg.1	(RB (VX * ) )	_	
35	t2745_000	mit	APPR	mit	_	(PostF (PPX *	_	
36	t2746_000	gewelte	NA	ge-walt	Dat.Sg	(NX * ) ) )	_	
37	t2747_000	-	$_	_	_	 * ) )	_	
38	t2748_000	von	APPR	von	_	(Frag (PPX *	_	
39	t2749_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
40	t2750_000	ellende	NA	èl-lènte	Dat.Sg	 * ) )	_	
41	t2751_000	-	$_	_	_	 * ) )	_	
42	t2752_000	ze	APPR	ze	_	(Cl (PreF (PPX *	_	
43	t2752_001	bezzereme	ADJA	bèzzer	Comp.Neut.Dat.Sg.st	(NX *	_	
44	t2752_002	lande	NA	lant	Dat.Sg	 * ) ) )	_	
45	t2753_000	sante	VVFIN	sènten	*.Past.Sg.1	(LB (VX * ) )	_	
46	t2754_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2755_000	dâ	AVD	dâr	_	(S (Cl (PreF * )	_	
2	t2756_000	vliuzet	VVFIN	vlièzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2757_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
4	t2758_000	honicseim	NA	honig-sèim	Nom.Sg	 *	_	
5	t2759_000	milche	NA	milch	Gen.Sg	(NX * )	_	
6	t2760_000	ein	DIART	èin	Masc.Nom.Sg.0	 * )	_	
7	t2761_000	vile	AVD	vil(e)	_	 *	_	
8	t2762_000	michel	ADJA	michel	Pos.Masc.Nom.Sg.0	(NX *	_	
9	t2763_000	teil	NA	tèil	Nom.Sg	 * ) )	_	
10	t2764_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2765_000	die	DDART	dër	*.Akk.Pl	(S (Cl (PreF (NX *	_	
2	t2766_000	stete	NA	stat	Akk.Pl	 * ) )	_	
3	t2767_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
4	t2768_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
5	t2769_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
6	t2770_000	nennen	VVINF	nènnen	_	(RB (VX * ) )	_	
7	t2771_000	-	$_	_	_	 * )	_	
8	t2772_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t2773_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
10	t2774_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
11	t2775_000	si	PPER	ër	*.Akk.Pl.3	(NX * ) )	_	
12	t2776_000	erkennen	VVINF	er-kènnen	_	(RB (VX * ) )	_	
13	t2777_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2778_000	von	APPR	von	_	(S (PPX *	_	
2	t2779_000	siben	CARDA	siben	*.Dat.Pl.0	(NX *	_	
3	t2780_000	küningen	NA	küni(n)g	Dat.Pl	 * ) )	_	
4	t2781_000	die	DRELS	dër	*.Akk.Pl	(Cl (LB (NX * ) )	_	
5	t2782_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
6	t2782_001	habent	VAFIN	haben	Ind.Pres.Pl.3	(RB (VX * ) )	_	
7	t2783_000	-	$_	_	_	 * )	_	
8	t2784_000	dere	DDS	dër	*.Gen.Pl	(Cl (PreF (NX * ) )	_	
9	t2785_000	gewinnest	VVFIN	ge-winnen	*.Pres.Sg.2	(LB (VX * ) )	_	
10	t2786_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
11	t2787_000	gewalt	NA	ge-walt	Akk.Sg	(NX * ) )	_	
12	t2788_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2789_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2790_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t2791_000	wizzen	VVINF	wizzen	_	(RB (VX * ) )	_	
4	t2792_000	ire	DPOSA	ir(e)	*.Akk.Pl.0	(PostF (NX *	_	
5	t2793_000	namen	NA	name	Akk.Pl	 * ) )	_	
6	t2794_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2795_000	der	DDS	dër	Masc.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2796_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2797_000	alsus	AVD	all-sus	_	(MF * )	_	
4	t2798_000	getân	VVPP	tuon	_	(RB (VX * ) )	_	
5	t2799_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2800_000	einer	CARDS	èin	Masc.Nom.Sg.st	(S (Frag (NX *	_	
2	t2801_000	chananeus	NE	Chananeus	Nom.Sg	 * )	_	
3	t2802_000	-	$_	_	_	 * )	_	
4	t2803_000	der	DDART	dër	Masc.Nom.Sg	(Frag (NX *	_	
5	t2804_000	ander	DIS	ander	Masc.Nom.Sg.0	 *	_	
6	t2805_000	etheus	NE	Etheus	Nom.Sg	 * )	_	
7	t2806_000	-	$_	_	_	 * )	_	
8	t2807_000	der	DDART	dër	Masc.Nom.Sg	(Frag (NX *	_	
9	t2808_000	dritte	ADJS	dritt	Pos.Masc.Nom.Sg.wk	 *	_	
10	t2809_000	amorreus	NE	Amorreus	Nom.Sg	 * )	_	
11	t2810_000	-	$_	_	_	 * )	_	
12	t2811_000	der	DDART	dër	Masc.Nom.Sg	(Frag (NX *	_	
13	t2812_000	vierde	ADJS	vièrd	Pos.Masc.Nom.Sg.wk	 *	_	
14	t2813_000	verezeus	NE	Verezeus	Nom.Sg	 * )	_	
15	t2814_000	-	$_	_	_	 * )	_	
16	t2815_000	der	DDART	dër	Masc.Nom.Sg	(Frag (NX *	_	
17	t2816_000	vünfte	ADJS	vünft	Pos.Masc.Nom.Sg.wk	 *	_	
18	t2817_000	eveus	NE	Eveus	Nom.Sg	 * )	_	
19	t2818_000	-	$_	_	_	 * )	_	
20	t2819_000	der	DDART	dër	Masc.Nom.Sg	(Frag (NX *	_	
21	t2820_000	sehste	ADJS	sëhst	Pos.Masc.Nom.Sg.wk	 *	_	
22	t2821_000	iebuseus	NE	Iebuseus	Nom.Sg	 * )	_	
23	t2822_000	-	$_	_	_	 * )	_	
24	t2823_000	der	DDART	dër	Masc.Nom.Sg	(Frag (NX *	_	
25	t2824_000	sibende	ADJS	sibent	Pos.Masc.Nom.Sg.wk	 *	_	
26	t2825_000	gereseus	NE	Gereseus	Nom.Sg	 * )	_	
27	t2826_000	-	$_	_	_	 * )	_	
28	t2827_000	die	DDS	dër	*.Akk.Pl	(Cl (PreF (NX * ) )	_	
29	t2828_000	nenne	VVFIN	nènnen	*.Pres.Sg.1	(LB (VX * ) )	_	
30	t2829_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
31	t2830_000	dir	PPER	dû	Dat.Sg.2	(NX * )	_	
32	t2831_000	sus	AVD	sus	_	 * )	_	
33	t2832_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2833_000	nû	AVD	nû	_	(S (Cl (PreF * )	_	
2	t2834_000	kum	VVIMP	komen	Sg.2	(LB (VX * ) )	_	
3	t2835_000	nâher	AVD	nâhe	_	(MF *	_	
4	t2836_000	her	AVD	hër(e)	_	 *	_	
5	t2837_000	zuo	APPR	ze	_	(PPX *	_	
6	t2838_000	mir	PPER	ich	Dat.Sg.1	(NX * ) ) )	_	
7	t2839_000	-	$_	_	_	 * )	_	
8	t2840_000	dû	PPER	dû	Nom.Sg.2	(Cl (PreF (NX * ) )	_	
9	t2841_000	vernim	VVIMP	ver-nëmen	Sg.2	(LB (VX * ) )	_	
10	t2842_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
11	t2843_000	ich	PPER	ich	Nom.Sg.1	(PreF (NX * ) )	_	
12	t2844_000	quæde	VVFIN	quëden	Subj.Past.Sg.1	(LB (VX * ) )	_	
13	t2845_000	zuo	APPR	ze	_	(MF (PPX *	_	
14	t2846_000	dir	PPER	dû	Dat.Sg.2	(NX * ) ) )	_	
15	t2847_000	-	$_	_	_	 * ) )	_	
16	t2848_000	vernim	VVIMP	ver-nëmen	Sg.2	(Cl (LB (VX * ) )	_	
17	t2849_000	wole	KO*	wol(e)	_	(MF * )	_	
18	t2850_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
19	t2851_000	ich	PPER	ich	Nom.Sg.1	(NX * )	_	
20	t2852_000	dir	PPER	dû	Dat.Sg.2	(PreF (NX * ) )	_	
21	t2853_000	sage	VVFIN	sagen	*.Pres.Sg.1	(LB (VX * ) )	_	
22	t2854_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2855_000	zuo	APPR	ze	_	(S (Cl (PreF (PPX *	_	
2	t2856_000	Pharaoe	NE	Pharao	Dat.Sg	(NX * ) ) )	_	
3	t2857_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
4	t2858_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
5	t2859_000	varen	VVINF	var(e)n	_	(RB (VX * ) )	_	
6	t2860_000	-	$_	_	_	 * )	_	
7	t2861_000	dû	PPER	dû	Nom.Sg.2	(Cl (PreF (NX * ) )	_	
8	t2862_000	muost	VMFIN	müèzen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
9	t2863_000	von	APPR	von	_	(MF (PPX *	_	
10	t2864_000	ime	PPER	ër	Neut.Dat.Sg.3	(NX * ) ) )	_	
11	t2865_000	gewinnen	VVINF	ge-winnen	_	(RB (VX * ) )	_	
12	t2866_000	-	$_	_	_	 *	_	
13	t2867_000	die	DDART	dër	*.Akk.Pl	(Frag (NX *	_	
14	t2868_000	mîne	DPOSA	mîn	*.Akk.Pl.st	 *	_	
15	t2869_000	jungelinge	NA	jungeling	Akk.Pl	 * )	_	
16	t2870_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2871_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t2872_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t2873_000	leitære	NA	lèitære	Nom.Sg	(MF (NX * )	_	
4	t2874_000	sîn	VAINF	sîn	_	(VX * ) )	_	
5	t2875_000	-	$_	_	_	 * )	_	
6	t2876_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
7	t2877_000	liutes	NA	liut	Gen.Sg	 * )	_	
8	t2878_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t2879_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t2880_000	mîn	DPOSD	mîn	*.-.st	(MF * )	_	
11	t2881_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2882_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t2883_000	guote	ADJA	guot	Pos.Masc.Nom.Sg.wk	 *	_	
3	t2884_000	man	NA	mann	Nom.Sg	 * ) )	_	
4	t2885_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t2886_000	dô	AVD	dô	_	(MF * )	_	
6	t2887_000	-	$_	_	_	 *	_	
7	t2888_000	vile	AVD	vil(e)	_	(Frag *	_	
8	t2889_000	harte	AVD	harte	_	 *	_	
9	t2890_000	erkomenlîche	AVD	er-komen-lîche	_	 *	_	
10	t2891_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2892_000	hêrre	NA	hêrre	Nom.Sg	(S (NX * )	_	
2	t2893_000	wer	PW	wër	Masc.Nom.Sg.st	(Cl (PreF * )	_	
3	t2894_000	bin	VAFIN	sîn	Ind.Pres.Sg.1	(LB (VX * ) )	_	
4	t2895_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
5	t2896_000	-	$_	_	_	 *	_	
6	t2897_000	oder	KON	oder	_	(Frag *	_	
7	t2898_000	wie	AVW	wiè	_	(PreF * )	_	
8	t2899_000	stêt	VVFIN	stân	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t2900_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX *	_	
10	t2901_000	umbe	APPR	umbe	_	(PPX *	_	
11	t2902_000	mich	PPER	ich	Akk.Sg.1	(NX * ) ) ) )	_	
12	t2903_000	-	$_	_	_	 *	_	
13	t2904_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
14	t2905_000	ich	PPER	ich	Nom.Sg.1	(MF (NX *	_	
15	t2906_000	mit	APPR	mit	_	(PPX *	_	
16	t2907_000	Pharaoe	NE	Pharao	Dat.Sg	(NX * ) ) )	_	
17	t2908_000	-	$_	_	_	 * )	_	
18	t2909_000	müge	VMFIN	mügen	Subj.Pres.Sg.1	(RB (VX * ) )	_	
19	t2910_000	haben	VAINF	haben	_	(PostF (VX * )	_	
20	t2911_000	gekoese	NA	ge-koèse	Akk.Sg	(NX * ) )	_	
21	t2912_000	-	$_	_	_	 * ) ) )	_	
22	t2913_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
23	t2914_000	müge	VMFIN	mügen	Subj.Pres.Sg.1	(LB (VX * ) )	_	
24	t2915_000	leiten	VVINF	lèiten	_	(RB (VX * ) )	_	
25	t2916_000	-	$_	_	_	 *	_	
26	t2917_000	sô	AVD	sô	_	(Frag *	_	
27	t2918_000	kreftige	ADJA	krèftig	Pos.*.Akk.Pl.st	(NX *	_	
28	t2919_000	diete	NA	dièt	Akk.Pl	 * )	_	
29	t2920_000	-	$_	_	_	 * )	_	
30	t2921_000	mit	APPR	mit	_	(Frag (PPX *	_	
31	t2922_000	allem	DIA	all	Masc.Dat.Sg.st	(NX *	_	
32	t2923_000	ire	DPOSA	ir(e)	Masc.Dat.Sg.0	 *	_	
33	t2924_000	vande	NA	vand	Dat.Sg	 * ) )	_	
34	t2925_000	-	$_	_	_	 * )	_	
35	t2926_000	von	AVD	von(e)	_	(Frag *	_	
36	t2927_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
37	t2928_000	küninges	NA	küni(n)g	Gen.Sg	 * )	_	
38	t2929_000	lande	NA	lant	Dat.Sg	(NX * )	_	
39	t2930_000	-	$_	_	_	 * )	_	
40	t2931_000	mit	APPR	mit	_	(Frag (PPX *	_	
41	t2932_000	decheiner	DIA	deh-èin	Fem.Dat.Sg.st	(NX *	_	
42	t2933_000	mîner	DPOSA	mîn	Fem.Dat.Sg.st	 *	_	
43	t2934_000	krefte	NA	kraft	Dat.Sg	 * ) )	_	
44	t2935_000	-	$_	_	_	 * )	_	
45	t2936_000	wider	APPR	wider	_	(Frag (PPX *	_	
46	t2937_000	sîner	DPOSA	sîn	Fem.Dat.Sg.st	(NX *	_	
47	t2938_000	hêrschefte	NA	hêr-schaft	Dat.Sg	 * ) )	_	
48	t2939_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2940_000	diu	DDS	dër	Fem.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2941_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2942_000	sô	AVD	sô	_	(MF *	_	
4	t2943_000	unmâzlich	ADJD	un-mâz-lich	Pos....0	 * )	_	
5	t2944_000	-	$_	_	_	 * )	_	
6	t2945_000	und	KON	unte	_	(Cl (PrePreF * )	_	
7	t2946_000	erbilget	VVFIN	er-bëlgen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t2947_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
9	t2948_000	sich	PRF	sich	Akk	(NX *	_	
10	t2949_000	wider	APPR	wider	_	(PPX *	_	
11	t2950_000	mich	PPER	ich	Akk.Sg.1	(NX * ) ) ) )	_	
12	t2951_000	-	$_	_	_	 * )	_	
13	t2952_000	schiere	AVD	schière	_	(Cl (PreF * )	_	
14	t2952_001	bin	VAFIN	sîn	Ind.Pres.Sg.1	(LB (VX * ) )	_	
15	t2953_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
16	t2954_000	erslagen	VVPP	er-slahen	_	(RB (VX * ) )	_	
17	t2955_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2956_000	wie	AVW	wiè	_	(S (Cl (PreF * )	_	
2	t2957_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2958_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
4	t2959_000	danne	AVD	danne	_	 * )	_	
5	t2960_000	varen	VVINF	var(e)n	_	(RB (VX * ) )	_	
6	t2961_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2962_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t2963_000	antwürte	NA	ant-würte	Nom.Sg	 * ) )	_	
3	t2964_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t2965_000	trôstlich	ADJD	trôst-lich	Pos....0	(MF * )	_	
5	t2966_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2967_000	dâr	PAVD	dâr/+umbe	_	(S (Frag *	_	
2	t2968_000	umbe	PAVAP	umbe/dâr+	_	 *	_	
3	t2969_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
4	t2970_000	entwîch	VVIMP	ent-wîchen	Sg.2	(LB (VX * ) )	_	
5	t2971_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2972_000	mit	APPR	mit	_	(S (Cl (PreF (PPX *	_	
2	t2973_000	dir	PPER	dû	Dat.Sg.2	(NX * ) ) )	_	
3	t2974_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
4	t2975_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
5	t2976_000	wonen	VVINF	wonen	_	(RB (VX * ) )	_	
6	t2977_000	-	$_	_	_	 * )	_	
7	t2978_000	von	APPR	von	_	(Cl (PreF (PPX *	_	
8	t2979_000	dir	PPER	dû	Dat.Sg.2	(NX * ) ) )	_	
9	t2980_000	ne	PTKNEG	ne	_	(LB (VX *	_	
10	t2980_001	wile	VMFIN	wèllen	Ind.Pres.Sg.1	 * ) )	_	
11	t2981_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
12	t2982_000	komen	VVINF	komen	_	(RB (VX * ) )	_	
13	t2983_000	-	$_	_	_	 * )	_	
14	t2984_000	mit	APPR	mit	_	(Cl (PreF (PPX *	_	
15	t2985_000	dir	PPER	dû	Dat.Sg.2	(NX * ) ) )	_	
16	t2986_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
17	t2987_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
18	t2988_000	varen	VVINF	var(e)n	_	(RB (VX * ) )	_	
19	t2989_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2990_000	ein	DIART	èin	Neut.Akk.Sg.0	(S (Cl (PreF (NX *	_	
2	t2991_000	zeichen	NA	zèichen	Akk.Sg	 * ) )	_	
3	t2992_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
4	t2993_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
5	t2994_000	haben	VAINF	haben	_	(VX * ) )	_	
6	t2995_000	-	$_	_	_	 * )	_	
7	t2996_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t2997_000	müezen	VMFIN	müèzen	*.Pres.Pl.3	(LB (VX * ) )	_	
9	t2998_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
10	t2999_000	erkennen	VVINF	er-kènnen	_	(RB (VX * ) )	_	
11	t3000_000	-	$_	_	_	 *	_	
12	t3001_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
13	t3002_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
14	t3003_000	dich	PPER	dû	Akk.Sg.2	(NX * )	_	
15	t3004_000	selp	DDD	sëlb	Masc.Nom.Sg.st	 * )	_	
16	t3005_000	sende	VVFIN	sènten	*.Pres.Sg.1	(RB (VX * ) )	_	
17	t3006_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3007_000	ze	APPR	ze	_	(S (Cl (PreF (PPX *	_	
2	t3007_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) )	_	
3	t3008_000	geloube	VVIMP	ge-louben	Sg.2	(LB (VX * ) )	_	
4	t3009_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
5	t3010_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
6	t3011_000	mir	PPER	ich	Dat.Sg.1	(NX * ) )	_	
7	t3012_000	-	$_	_	_	 *	_	
8	t3013_000	swaz	PG	swër	Neut.Akk.Sg.st	(Frag (NX * )	_	
9	t3014_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
10	t3015_000	getuot	VVFIN	ge-tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t3016_000	wider	AVD	wider(e)	_	(MF *	_	
12	t3017_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
13	t3018_000	-	$_	_	_	 * ) )	_	
14	t3019_000	des	DDS	dër	Neut.Gen.Sg	(Cl (PreF (NX * ) )	_	
15	t3020_000	ne	PTKNEG	ne	_	(LB (VX *	_	
16	t3020_001	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	 * ) )	_	
17	t3021_000	nieht	PTKNEG	niht	_	(MF (VX *	_	
18	t3022_000	vergezzen	VVINF	ver-gëzzen	_	 * ) )	_	
19	t3023_000	-	$_	_	_	 * )	_	
20	t3024_000	iz	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
21	t3025_000	ne	PTKNEG	ne	_	(LB (VX *	_	
22	t3025_001	werde	VAFIN	wërden	Subj.Pres.Sg.3	 * ) )	_	
23	t3026_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
24	t3027_000	wider	PTKVZ	wider(e)/>+mëzzen	_	(VX *	_	
25	t3028_000	mezzen	VVINF	mëzzen/wider(e)>+	_	 * ) )	_	
26	t3029_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3030_000	mit	AVD	mit(e)	_	(S (Frag *	_	
2	t3031_000	sô	AVD	sô	_	 *	_	
3	t3032_000	getâneme	ADJA	ge-tân	Pos.Neut.Dat.Sg.st	(NX *	_	
4	t3033_000	here	NA	hèr(e)	Dat.Sg	 * )	_	
5	t3034_000	-	$_	_	_	 * )	_	
6	t3035_000	sô	KO*	sô	_	(Frag *	_	
7	t3036_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
8	t3037_000	ûz	PTKVZ	ûz/>+er-wëgen	_	(LB (VX *	_	
9	t3038_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	 * ) )	_	
10	t3039_000	erwegen	VVINF	er-wëgen/ûz>+	_	(RB (VX * ) )	_	
11	t3040_000	-	$_	_	_	 * )	_	
12	t3041_000	sô	AVD	sô	_	(Cl (PreF * )	_	
13	t3042_000	ne	PTKNEG	ne	_	(LB (VX *	_	
14	t3043_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	 * ) )	_	
15	t3044_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
16	t3045_000	dise	DDA	dise	Fem.Akk.Sg	(NX *	_	
17	t3046_000	strâze	NA	strâze	Akk.Sg	 * ) )	_	
18	t3047_000	-	$_	_	_	 * )	_	
19	t3048_000	niewewiht	NA	ni-wiht	Nom.Sg	(Frag (NX * )	_	
20	t3049_000	verlâzen	VVINF	ver-lâzen	_	(VX * )	_	
21	t3050_000	-	$_	_	_	 * )	_	
22	t3051_000	noch	KON	noh	_	(Frag *	_	
23	t3052_000	dise	DDA	dise	Fem.Akk.Sg	(NX *	_	
24	t3053_000	enge	ADJA	ènge	Pos.Fem.Akk.Sg.0	 *	_	
25	t3054_000	stîge	NA	stîge	Akk.Sg	 * )	_	
26	t3055_000	-	$_	_	_	 * )	_	
27	t3056_000	niewewiht	NA	ni-wiht	Nom.Sg	(Frag (NX * )	_	
28	t3057_000	vermîden	VVINF	ver-mîden	_	(VX * )	_	
29	t3058_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3059_000	nû	AVD	nû	_	(S (Cl (PreF * )	_	
2	t3060_000	merke	VVIMP	mèrken	Sg.2	(LB (VX * ) )	_	
3	t3061_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
4	t3062_000	ich	PPER	ich	Nom.Sg.1	(NX * )	_	
5	t3063_000	dir	PPER	dû	Dat.Sg.2	(PreF (NX * ) )	_	
6	t3064_000	welle	VMFIN	wèllen	Subj.Pres.Sg.1	(LB (VX * ) )	_	
7	t3065_000	sagen	VVINF	sagen	_	(RB (VX * ) )	_	
8	t3066_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3067_000	hier	AVD	hièr	_	(S (Cl (PreF * )	_	
2	t3068_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t3069_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
4	t3070_000	vüre	PTKVZ	vür(e)/>+var(e)n	_	(RB (VX *	_	
5	t3071_000	varen	VVINF	var(e)n/vür(e)>+	_	 * ) )	_	
6	t3072_000	-	$_	_	_	 *	_	
7	t3073_000	mit	APPR	mit	_	(Frag (PPX *	_	
8	t3074_000	michelen	ADJA	michel	Pos.*.Dat.Pl.*	(NX *	_	
9	t3075_000	minnen	NA	minne	Dat.Pl	 * ) )	_	
10	t3076_000	-	$_	_	_	 * ) )	_	
11	t3077_000	ein	DIART	èin	Neut.Akk.Sg.0	(Frag (NX *	_	
12	t3078_000	opfer	NA	opfer	Akk.Sg	 * )	_	
13	t3079_000	mir	PPER	ich	Dat.Sg.1	(NX * )	_	
14	t3080_000	bringen	VVINF	bringen	_	(VX * )	_	
15	t3081_000	-	$_	_	_	 * )	_	
16	t3082_000	vile	AVD	vil(e)	_	(Frag *	_	
17	t3083_000	wunderlîchen	AVD	wunter-lîche	_	 *	_	
18	t3084_000	schône	AVD	schône	_	 *	_	
19	t3085_000	-	$_	_	_	 * )	_	
20	t3086_000	an	APPR	ane	_	(Frag (PPX *	_	
21	t3087_000	disses	DDA	dise	Masc.Gen.Sg	(NX *	_	
22	t3088_000	berges	NA	bërg	Gen.Sg	 * ) )	_	
23	t3089_000	hoehe	NA	hoèhe	Akk.Sg	(NX * )	_	
24	t3090_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3091_000	Mosî	NE	Moses	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3092_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3093_000	ze	APPR	ze	_	(MF (PPX *	_	
4	t3093_001	gote	NA	got	Dat.Sg	(NX * ) ) )	_	
5	t3094_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3095_000	nû	AVD	nû	_	(S (Cl (PreF * )	_	
2	t3096_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t3097_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
4	t3098_000	sîn	VAINF	sîn	_	(VX * )	_	
5	t3099_000	dîn	DPOSA	dîn	Masc.Nom.Sg.0	(NX *	_	
6	t3100_000	bote	NA	bote	Nom.Sg	 * ) )	_	
7	t3101_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3102_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t3103_000	kume	VVFIN	komen	*.Pres.Sg.1	(LB (VX * ) )	_	
3	t3104_000	ze	APPR	ze	_	(MF (PPX *	_	
4	t3104_001	deme	DDART	dër	Neut.Dat.Sg	(NX *	_	
5	t3105_000	liute	NA	liut	Dat.Sg	 * ) ) )	_	
6	t3106_000	-	$_	_	_	 *	_	
7	t3107_000	alsô	KO*	all-sô	_	(Frag *	_	
8	t3108_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
9	t3109_000	mir	PPER	ich	Dat.Sg.1	(PreF (NX * ) )	_	
10	t3110_000	gebiutest	VVFIN	ge-bièten	Ind.Pres.Sg.2	(LB (VX * ) )	_	
11	t3111_000	hiute	AVD	hiute	_	(MF * )	_	
12	t3112_000	-	$_	_	_	 * ) )	_	
13	t3113_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
14	t3114_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t3115_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
16	t3116_000	sagen	VVINF	sagen	_	(RB (VX * ) )	_	
17	t3117_000	-	$_	_	_	 *	_	
18	t3118_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
19	t3119_000	ich	PPER	ich	Nom.Sg.1	(MF (NX *	_	
20	t3120_000	von	APPR	von	_	(PPX *	_	
21	t3121_000	dir	PPER	dû	Dat.Sg.2	(NX * ) ) ) )	_	
22	t3122_000	vare	VVFIN	var(e)n	*.Pres.Sg.1	(RB (VX * ) )	_	
23	t3123_000	-	$_	_	_	 * ) ) )	_	
24	t3124_000	dû	PPER	dû	Nom.Sg.2	(Cl (PreF (NX * ) )	_	
25	t3125_000	sîst	VAFIN	sîn	Subj.Pres.Sg.2	(LB (VX * ) )	_	
26	t3126_000	ire	DPOSA	ir(e)	Masc.Nom.Sg.0	(MF (NX *	_	
27	t3127_000	vater	NA	vater	Nom.Sg	 *	_	
28	t3128_000	got	NA	got	Nom.Sg	 * ) )	_	
29	t3129_000	-	$_	_	_	 * )	_	
30	t3130_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
31	t3131_000	schulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
32	t3132_000	behalten	VVINF	be-halten	_	(RB (VX * ) )	_	
33	t3133_000	dîn	DPOSA	dîn	Neut.Akk.Sg.0	(PostF (NX *	_	
34	t3134_000	gebot	NA	ge-bot	Akk.Sg	 * ) )	_	
35	t3135_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3136_000	obe	KOUS	obe	_	(S (Cl (LB * )	_	
2	t3137_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
3	t3138_000	danne	AVD	danne	_	 * )	_	
4	t3139_000	wellen	VMFIN	wèllen	*.Pres.Pl.3	(RB (VX * ) )	_	
5	t3140_000	-	$_	_	_	 * )	_	
6	t3141_000	den	DDART	dër	Masc.Akk.Sg	(Frag (NX *	_	
7	t3142_000	dînen	DPOSA	dîn	Masc.Akk.Sg.st	 *	_	
8	t3143_000	namen	NA	name	Akk.Sg	 * )	_	
9	t3144_000	erkennen	VVINF	er-kènnen	_	(VX * )	_	
10	t3145_000	-	$_	_	_	 * )	_	
11	t3146_000	waz	PW	wër	Neut.Akk.Sg.st	(Cl (PreF * )	_	
12	t3147_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.1	(LB (VX * ) )	_	
13	t3148_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
14	t3149_000	in	PPER	ër	*.Dat.Pl.3	(NX * )	_	
15	t3150_000	denne	AVD	danne	_	 * )	_	
16	t3151_000	sagen	VVINF	sagen	_	(RB (VX * ) )	_	
17	t3152_000	-	$_	_	_	 *	_	
18	t3153_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
19	t3154_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
20	t3155_000	ze	PTKA	ze	_	 *	_	
21	t3156_000	wâre	NA	wâr	Dat.Sg	(NX * ) )	_	
22	t3157_000	mügen	VMFIN	mügen	*.Pres.Pl.3	(RB (VX * ) )	_	
23	t3158_000	haben	VAINF	haben	_	(PostF (VX * ) )	_	
24	t3159_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3160_000	dô	AVD	dô	_	(S (Cl (PreF * )	_	
2	t3161_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3162_000	got	NA	got	Nom.Sg	(MF (NX * )	_	
4	t3163_000	lûte	AVD	lûte	_	 * )	_	
5	t3164_000	-	$_	_	_	 *	_	
6	t3165_000	ze	PTKA	ze	_	(Frag *	_	
7	t3165_001	Mosî	NE	Moses	Dat.Sg	(NX * )	_	
8	t3166_000	sîneme	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
9	t3167_000	trûte	NA	trût(e)	Dat.Sg	 * )	_	
10	t3168_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3169_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t3170_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t3171_000	den	DDART	dër	*.Dat.Pl	(MF (NX *	_	
4	t3172_000	juden	NA	jude	Dat.Pl	 * ) )	_	
5	t3173_000	sagen	VVINF	sagen	_	(RB (VX * ) )	_	
6	t3174_000	daz	DDS	dër	Neut.Akk.Sg	(PostF (NX * ) )	_	
7	t3175_000	-	$_	_	_	 *	_	
8	t3176_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
9	t3177_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
10	t3178_000	mich	PPER	ich	Akk.Sg.1	(NX * ) )	_	
11	t3179_000	erkennen	VVFIN	er-kènnen	*.Pres.Pl.3	(RB (VX * ) )	_	
12	t3180_000	deste	AVD	dëste	_	(PostF *	_	
13	t3181_000	bazzer	AVD	bazz	Comp	 * )	_	
14	t3182_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3183_000	mîn	DPOSA	mîn	Masc.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t3184_000	name	NA	name	Nom.Sg	 * ) )	_	
3	t3185_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t3186_000	alsus	AVD	all-sus	_	(MF * )	_	
5	t3187_000	getân	VVPP	tuon	_	(RB (VX * ) )	_	
6	t3188_000	-	$_	_	_	 * )	_	
7	t3189_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
8	t3190_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
9	t3191_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
10	t3192_000	vüre	AVD	vür(e)	_	 *	_	
11	t3193_000	wâr	NA	wâr	Dat.Sg	(NX * )	_	
12	t3194_000	haben	VAINF	haben	_	(VX * ) )	_	
13	t3195_000	-	$_	_	_	 * )	_	
14	t3196_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
15	t3197_000	bin	VAFIN	sîn	Ind.Pres.Sg.1	(LB (VX * ) ) )	_	
16	t3198_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX *	_	
17	t3199_000	ich	PPER	ich	Nom.Sg.1	 * ) )	_	
18	t3200_000	bin	VAFIN	sîn	Ind.Pres.Sg.1	(RB (VX * ) )	_	
19	t3201_000	-	$_	_	_	 * )	_	
20	t3202_000	der	DDART	dër	Masc.Nom.Sg	(Cl (PreF (NX *	_	
21	t3203_000	name	NA	name	Nom.Sg	 * ) )	_	
22	t3204_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
23	t3205_000	tiefen	ADJA	tièf	Pos.Masc.Akk.Sg.*	(MF (NX *	_	
24	t3206_000	sin	NA	sinn	Akk.Sg	 * ) )	_	
25	t3207_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3208_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t3209_000	sages	VVFIN	sagen	*.Pres.Sg.2	(LB (VX * ) )	_	
3	t3210_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
4	t3211_000	alsô	KO*	all-sô	_	(Frag *	_	
5	t3212_000	iz	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
6	t3213_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t3214_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3215_000	ze	APPR	ze	_	(S (Cl (PreF (PPX *	_	
2	t3216_000	iu	PPER	ir	Dat.Pl.2	(NX * ) ) )	_	
3	t3217_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t3218_000	mich	PPER	ich	Akk.Sg.1	(MF (NX * ) )	_	
5	t3219_000	gesant	VVPP	sènten	_	(RB (VX * ) )	_	
6	t3220_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
7	t3221_000	dâ	AVD	dâr	_	(MF * )	_	
8	t3222_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX * ) )	_	
9	t3223_000	-	$_	_	_	 * ) )	_	
10	t3224_000	got	NA	got	Nom.Sg	(Frag (NX * )	_	
11	t3225_000	unde	KON	unte	_	 *	_	
12	t3226_000	hêrre	NA	hêrre	Nom.Sg	(NX * )	_	
13	t3227_000	-	$_	_	_	 * )	_	
14	t3228_000	iuwerer	DPOSA	iuwer	*.Gen.Pl.st	(Frag (NX *	_	
15	t3229_000	vordere	NA	vorder(e)	Gen.Pl	 * )	_	
16	t3230_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3231_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t3232_000	name	NA	name	Nom.Sg	 * ) )	_	
3	t3233_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t3234_000	mir	PPER	ich	Dat.Sg.1	(MF (NX *	_	
5	t3235_000	ze	APPR	ze	_	(PPX *	_	
6	t3235_001	êren	NA	êre	Dat.Pl	(NX * ) ) ) )	_	
7	t3236_000	-	$_	_	_	 *	_	
8	t3237_000	ze	APPR	ze	_	(Frag *	_	
9	t3237_001	vile	AVD	vil(e)	_	 *	_	
10	t3238_000	manigen	DIA	manig	*.Dat.Pl.st	(NX *	_	
11	t3239_000	êwen	NA	êwe	Dat.Pl	 * )	_	
12	t3240_000	-	$_	_	_	 * )	_	
13	t3241_000	vone	APPR	von	_	(Frag (PPX *	_	
14	t3242_000	künne	NA	künne	Dat.Sg	(NX *	_	
15	t3243_000	ze	APPR	ze	_	(PPX *	_	
16	t3243_001	künne	NA	künne	Dat.Sg	(NX * ) ) ) )	_	
17	t3244_000	-	$_	_	_	 * )	_	
18	t3245_000	ze	APPR	ze	_	(Frag *	_	
19	t3245_001	vile	AVD	vil(e)	_	 *	_	
20	t3246_000	maniger	DIA	manig	Fem.Dat.Sg.st	(NX *	_	
21	t3247_000	wünne	NA	wünne	Dat.Sg	 * )	_	
22	t3248_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3249_000	nû	AVD	nû	_	(S (Cl (PreF * )	_	
2	t3250_000	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t3250_001	bit	VVIMP	biten	Sg.2	 * ) ) )	_	
4	t3251_000	sunder	KOUS	sunter	_	(Cl (LB * )	_	
5	t3252_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
6	t3253_000	var	VVIMP	var(e)n	Sg.2	(RB (VX * ) )	_	
7	t3254_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3255_000	den	DDART	dër	*.Dat.Pl	(S (Frag *	_	
2	t3256_000	altesten	ADJA	alt	Pos.*.Dat.Pl..%.*	 *	_	
3	t3257_000	allen	DIN	all	*.Dat.Pl.st	(PreF * )	_	
4	t3258_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
5	t3259_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
6	t3260_000	sagen	VVINF	sagen	_	(RB (VX * ) )	_	
7	t3261_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3262_000	got	NA	got	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3263_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t3264_000	mich	PPER	ich	Akk.Sg.1	(MF (NX *	_	
4	t3265_000	zuo	APPR	ze	_	(PPX *	_	
5	t3266_000	iu	PPER	ir	Dat.Pl.2	(NX * ) ) )	_	
6	t3267_000	here	AVD	hër(e)	_	 * )	_	
7	t3268_000	gesant	VVPP	sènten	_	(RB (VX * ) )	_	
8	t3269_000	-	$_	_	_	 *	_	
9	t3270_000	in	APPR	in	_	(Frag (PPX *	_	
10	t3270_001	diz	DDA	dise	Neut.Akk.Sg	(NX *	_	
11	t3271_000	heidene	ADJA	hèiden	Pos.Neut.Akk.Sg.wk	 *	_	
12	t3272_000	lant	NA	lant	Akk.Sg	 * ) )	_	
13	t3273_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3274_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t3275_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
3	t3276_000	ouch	AVD	ouch	_	(MF * )	_	
4	t3277_000	erschînen	VVINF	er-schînen	_	(RB (VX * ) )	_	
5	t3278_000	-	$_	_	_	 *	_	
6	t3279_000	mînem	DPOSA	mîn	Masc.Dat.Sg.st	(Frag (NX *	_	
7	t3280_000	broedem	ADJA	broède	Pos.Masc.Dat.Sg.st	 *	_	
8	t3281_000	lîbe	NA	lîb	Dat.Sg	 * )	_	
9	t3282_000	-	$_	_	_	 * ) )	_	
10	t3283_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
11	t3284_000	geruochte	VVFIN	ge-ruochen	*.Past.Sg.3	(LB (VX * ) )	_	
12	t3285_000	sich	PRF	sich	Akk	(MF (NX * )	_	
13	t3286_000	nennen	VVINF	nènnen	_	(VX * ) )	_	
14	t3287_000	-	$_	_	_	 *	_	
15	t3288_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
16	t3289_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * )	_	
17	t3290_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) )	_	
18	t3291_000	erkennen	VVFIN	er-kènnen	*.Pres.Pl.1	(RB (VX * ) )	_	
19	t3292_000	-	$_	_	_	 * ) ) )	_	
20	t3293_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
21	t3294_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
22	t3295_000	sô	AVD	sô	_	(MF *	_	
23	t3296_000	wole	AVD	wol(e)	_	 * )	_	
24	t3297_000	tuon	VVINF	tuon	_	(RB (VX * ) )	_	
25	t3298_000	-	$_	_	_	 * )	_	
26	t3299_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
27	t3300_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
28	t3301_000	iuwer	PPER	ir	Gen.Pl.2	(MF (NX * ) )	_	
29	t3302_000	wîsen	VVINF	wîsen	_	(RB (VX * ) )	_	
30	t3303_000	-	$_	_	_	 * )	_	
31	t3304_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
32	t3305_000	iuch	PPER	ir	Akk.Pl.2	(MF (NX * )	_	
33	t3306_000	hinnen	AVD	hinnen	_	 * )	_	
34	t3307_000	leiten	VVINF	lèiten	_	(RB (VX * ) )	_	
35	t3308_000	-	$_	_	_	 *	_	
36	t3309_000	von	APPR	von	_	(Frag (PPX *	_	
37	t3310_000	disen	DDA	dise	*.Dat.Pl	(NX *	_	
38	t3311_000	arbeiten	NA	arbèit	Dat.Pl	 * ) )	_	
39	t3312_000	-	$_	_	_	 * )	_	
40	t3313_000	ze	APPR	ze	_	(Frag (PPX *	_	
41	t3313_001	michelen	ADJA	michel	Pos.*.Dat.Pl.*	(NX *	_	
42	t3314_000	wünnen	NA	wünne	Dat.Pl	 * ) )	_	
43	t3315_000	-	$_	_	_	 * )	_	
44	t3316_000	mit	APPR	mit	_	(Frag (PPX *	_	
45	t3317_000	konen	NA	kone	Dat.Pl	(NX * ) )	_	
46	t3318_000	joch	AVD	joh	_	 *	_	
47	t3319_000	mit	APPR	mit	_	(PPX *	_	
48	t3320_000	kinden	NA	kind	Dat.Pl	(NX * ) )	_	
49	t3321_000	-	$_	_	_	 * )	_	
50	t3322_000	von	APPR	von	_	(Frag (PPX *	_	
51	t3323_000	iuwerem	DPOSA	iuwer	Neut.Dat.Sg.st	(NX *	_	
52	t3324_000	ellende	NA	èl-lènte	Dat.Sg	 * ) )	_	
53	t3325_000	-	$_	_	_	 * )	_	
54	t3326_000	ze	APPR	ze	_	(Frag (PPX *	_	
55	t3326_001	bezzereme	ADJA	bèzzer	Comp.Neut.Dat.Sg.st	(NX *	_	
56	t3327_000	lande	NA	lant	Dat.Sg	 * ) )	_	
57	t3328_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3329_000	ir	PPER	ir	Nom.Pl.2	(S (Frag (NX * )	_	
2	t3330_000	werdet	VAFIN	wërden	*.Pres.Pl.2	(VX *	_	
3	t3331_000	geweret	VVPP	wër(e)n	_	 * )	_	
4	t3332_000	-	$_	_	_	 *	_	
5	t3333_000	al	DIA	all	Neut.Gen.Sg.0	(Cl (LB (NX *	_	
6	t3334_000	des	DRELS	dër	Neut.Gen.Sg	 * ) )	_	
7	t3335_000	iuwer	DPOSA	iuwer	Masc.Nom.Sg.0	(MF (NX *	_	
8	t3336_000	muot	NA	muot	Nom.Sg	 * ) )	_	
9	t3337_000	gert	VVFIN	gër(e)n	Ind.Pres.Sg.3	(RB (VX * ) )	_	
10	t3338_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3339_000	rîchtuom	NA	rîch-tuom	Nom.Sg	(S (Frag (NX * )	_	
2	t3340_000	-	$_	_	_	 * )	_	
3	t3341_000	und	KON	unte	_	(Frag *	_	
4	t3342_000	êre	NA	êre	Nom.Sg	(NX * )	_	
5	t3343_000	-	$_	_	_	 * )	_	
6	t3344_000	vile	AVD	vil(e)	_	(Frag *	_	
7	t3345_000	bezzere	ADJN	bèzzer	Comp.Masc.Nom.Sg.wk	 *	_	
8	t3346_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3347_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t3348_000	gewinnent	VVFIN	ge-winnen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t3349_000	hebe	NA	hèbe	Akk.Sg	(MF (NX *	_	
4	t3350_000	grôze	ADJN	grôz	Pos.Fem.Akk.Sg.st	 * ) )	_	
5	t3351_000	-	$_	_	_	 *	_	
6	t3352_000	swenne	AVG	swanne	_	(PostF (Cl (LB * )	_	
7	t3353_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
8	t3354_000	bestôzent	VVFIN	be-stôzen	Ind.Pres.Pl.3	(RB (VX * ) )	_	
9	t3355_000	-	$_	_	_	 *	_	
10	t3356_000	-	FM	[!]	_	(PostF * )	_	
11	t3357_000	-	$_	_	_	 * ) )	_	
12	t3358_000	den	DDART	dër	Masc.Akk.Sg	(Frag (NX *	_	
13	t3359_000	heiden	NA	hèiden	Akk.Sg	 * )	_	
14	t3360_000	-	FM	[!]	_	 *	_	
15	t3361_000	-	$_	_	_	 * )	_	
16	t3362_000	-	FM	[!]	_	(Frag *	_	
17	t3363_000	-	$_	_	_	 * )	_	
18	t3364_000	den	DDART	dër	Masc.Akk.Sg	(Frag *	_	
19	t3365_000	stolzen	ADJA	stolz	Pos.Masc.Akk.Sg.*	 *	_	
20	t3366_000	-	FM	[!]	_	 *	_	
21	t3367_000	-	$_	_	_	 * )	_	
22	t3368_000	den	DDART	dër	Masc.Akk.Sg	(Frag *	_	
23	t3369_000	tumben	ADJA	tumb	Pos.Masc.Akk.Sg.*	 *	_	
24	t3370_000	-	FM	[!]	_	 *	_	
25	t3371_000	-	$_	_	_	 * )	_	
26	t3372_000	den	DDART	dër	Masc.Akk.Sg	(Frag *	_	
27	t3373_000	rîchen	ADJA	rîche	Pos.Masc.Akk.Sg.*	 *	_	
28	t3374_000	-	FM	[!]	_	 *	_	
29	t3375_000	-	$_	_	_	 * )	_	
30	t3376_000	den	DDART	dër	Masc.Akk.Sg	(Frag (NX *	_	
31	t3377_000	küninc	NA	küni(n)g	Akk.Sg	 * )	_	
32	t3378_000	-	FM	[!]	_	 *	_	
33	t3379_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3380_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3381_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t3382_000	wesen	VAINF	wësen	_	(MF (VX * )	_	
4	t3383_000	ir	PPER	ër	*.Nom.Sg.3	(NX *	_	
5	t3384_000	lôn	NA	lôn	Nom.Sg	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3385_000	milch	NA	milch	Nom.Sg	(S (Frag (NX * )	_	
2	t3386_000	unde	KON	unte	_	 *	_	
3	t3387_000	honicseim	NA	honig-sèim	Nom.Sg	(NX * )	_	
4	t3388_000	-	$_	_	_	 * )	_	
5	t3389_000	dâ	AVD	dâr	_	(Cl (PreF * )	_	
6	t3390_000	schaffen	VVFIN	schaffen	Subj.Pres.Pl.3	(LB (VX * ) )	_	
7	t3391_000	ire	DPOSA	ir(e)	Neut.Akk.Sg.0	(MF (NX *	_	
8	t3392_000	heim	NA	hèim	Akk.Sg	 * ) )	_	
9	t3393_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3394_000	des	DDS	dër	Masc.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3395_000	gewere	VVFIN	ge-wër(e)n	*.Pres.Sg.1	(LB (VX * ) )	_	
3	t3396_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
4	t3397_000	si	PPER	ër	*.Akk.Pl.3	(NX * )	_	
5	t3398_000	ze	PTKA	ze	_	 *	_	
6	t3398_001	wâre	NA	wâr	Dat.Sg	(NX * ) )	_	
7	t3399_000	-	$_	_	_	 * )	_	
8	t3400_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
9	t3401_000	gehiez	VVFIN	ge-hèizen	Ind.Past.Sg.1	(LB (VX * ) )	_	
10	t3402_000	iz	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
11	t3403_000	Abrahame	NE	Abraham	Dat.Sg	(NX * ) )	_	
12	t3404_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3405_000	swenne	AVG	swanne	_	(S (Cl (LB * )	_	
2	t3406_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
3	t3407_000	gehoerent	VVFIN	ge-hoèren	Ind.Pres.Pl.3	(RB (VX * ) )	_	
4	t3408_000	den	DDART	dër	Masc.Akk.Sg	(PostF (NX *	_	
5	t3409_000	geheize	NA	ge-hèiz(e)	Akk.Sg	 * ) )	_	
6	t3410_000	-	$_	_	_	 * )	_	
7	t3411_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
8	t3412_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t3413_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
10	t3414_000	liep	ADJD	lièb	Pos....0	 *	_	
11	t3415_000	unde	KON	unte	_	 *	_	
12	t3416_000	zeiz	ADJD	zèiz	Pos....0	 * )	_	
13	t3417_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3418_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t3419_000	vernement	VVFIN	ver-nëmen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t3420_000	dîne	DPOSA	dîn	Fem.Akk.Sg.st	(MF (NX *	_	
4	t3421_000	stimme	NA	stimme	Akk.Sg	 * ) )	_	
5	t3422_000	-	$_	_	_	 *	_	
6	t3423_000	mit	APPR	mit	_	(Frag (PPX *	_	
7	t3424_000	lieplîcher	ADJA	lièb-lich	Pos.Fem.Dat.Sg.st	(NX *	_	
8	t3425_000	minne	NA	minne	Dat.Sg	 * ) )	_	
9	t3426_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3427_000	nû	AVD	nû	_	(S (Cl (PreF * )	_	
2	t3428_000	hoere	VVFIN	hoèren	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t3429_000	abe	AVD	aber	_	(MF *	_	
4	t3430_000	here	AVD	hër(e)	_	 *	_	
5	t3431_000	ze	APPR	ze	_	(PPX *	_	
6	t3431_001	mir	PPER	ich	Dat.Sg.1	(NX * ) ) )	_	
7	t3432_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3433_000	die	DDART	dër	*.Akk.Pl	(S (Cl (PreF (NX *	_	
2	t3434_000	althêrren	NA	alt-hêrre	Akk.Pl	 * ) )	_	
3	t3435_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
4	t3436_000	zuo	APPR	ze	_	(MF (PPX *	_	
5	t3437_000	dir	PRF	dû	*.Dat.Sg.st	(NX * ) ) )	_	
6	t3438_000	-	$_	_	_	 * )	_	
7	t3439_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t3440_000	genc	VVIMP	gân	Sg.2	(LB (VX * ) )	_	
9	t3441_000	zuo	APPR	ze	_	(MF (PPX *	_	
10	t3442_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
11	t3443_000	küninge	NA	küni(n)g	Dat.Sg	 *	_	
12	t3444_000	Pharaoe	NE	Pharao	Dat.Sg	 * ) ) )	_	
13	t3445_000	-	$_	_	_	 * )	_	
14	t3446_000	dû	PPER	dû	Nom.Sg.2	(Cl (PreF (NX * ) )	_	
15	t3447_000	sprich	VVIMP	sprëchen	Sg.2	(LB (VX * ) )	_	
16	t3448_000	gezogenlîche	AVD	ge-zogen-lîche	_	(MF *	_	
17	t3449_000	unde	KON	unte	_	 *	_	
18	t3450_000	schône	AVD	schône	_	 * )	_	
19	t3451_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3452_000	got	NA	got	Nom.Sg	(S (Frag (NX *	_	
2	t3453_000	hêrre	NA	hêrre	Nom.Sg	 *	_	
3	t3454_000	dirre	DDA	dise	*.Gen.Pl	(NX *	_	
4	t3455_000	liute	NA	liut	Gen.Pl	 * ) )	_	
5	t3456_000	-	$_	_	_	 * )	_	
6	t3457_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t3458_000	ladet	VVFIN	laden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t3459_000	unsich	PPER	wir	Akk.Pl.1	(MF (NX * )	_	
9	t3460_000	hiute	AVD	hiute	_	 * )	_	
10	t3461_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3462_000	in	APPR	in	_	(S (Cl (PreF (PPX *	_	
2	t3463_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
3	t3464_000	wüeste	NA	wüèste	Akk.Sg	 * ) ) )	_	
4	t3465_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.1	(LB (VX * ) )	_	
5	t3466_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * ) )	_	
6	t3467_000	varen	VVINF	var(e)n	_	(RB (VX * ) )	_	
7	t3468_000	-	$_	_	_	 *	_	
8	t3469_000	drî	CARDA	drî	*.Nom.Pl.st	(Frag (NX *	_	
9	t3470_000	tage	NA	tag	Nom.Pl	 * )	_	
10	t3471_000	vile	AVD	vil(e)	_	 *	_	
11	t3472_000	vram	AVD	vram	_	 *	_	
12	t3473_000	-	$_	_	_	 * ) )	_	
13	t3474_000	opfer	NA	opfer	Akk.Sg	(Cl (PreF (NX * ) )	_	
14	t3475_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.1	(LB (VX * ) )	_	
15	t3476_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * ) )	_	
16	t3477_000	bringen	VVINF	bringen	_	(RB (VX * ) )	_	
17	t3478_000	-	$_	_	_	 *	_	
18	t3479_000	dem	DDART	dër	Masc.Dat.Sg	(Frag (NX *	_	
19	t3480_000	êwigem	ADJA	êwig	Pos.Masc.Dat.Sg.st	 *	_	
20	t3481_000	küninge	NA	küni(n)g	Dat.Sg	 * )	_	
21	t3482_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3483_000	swenne	AVG	swanne	_	(S (Cl (LB * )	_	
2	t3484_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t3485_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) )	_	
4	t3486_000	gehoeret	VVFIN	ge-hoèren	Ind.Pres.Sg.3	(RB (VX * ) )	_	
5	t3487_000	-	$_	_	_	 * )	_	
6	t3488_000	sîn	DPOSA	sîn	Neut.Nom.Sg.0	(Frag (NX *	_	
7	t3489_000	herze	NA	hërze	Nom.Sg	 * )	_	
8	t3490_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(VX *	_	
9	t3491_000	erhertet	VVPP	er-hèrten	_	 * )	_	
10	t3492_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3493_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t3494_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t3495_000	si	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
4	t3496_000	dâ	AVD	dâr	_	 * )	_	
5	t3497_000	behaben	VVINF	be-haben	_	(RB (VX * ) )	_	
6	t3498_000	-	$_	_	_	 * )	_	
7	t3499_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
8	t3499_001	ne	PTKNEG	ne	_	(LB (VX *	_	
9	t3500_000	lât	VVFIN	lâzen	Ind.Pres.Sg.3	 * ) )	_	
10	t3501_000	si	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
11	t3502_000	danne	AVD	danne	_	 *	_	
12	t3503_000	varen	VVINF	var(e)n	_	(VX * ) )	_	
13	t3504_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3505_000	in	APPR	in	_	(S (Frag (PPX *	_	
2	t3506_000	mîner	DPOSA	mîn	Fem.Dat.Sg.st	(NX *	_	
3	t3507_000	starken	ADJA	stark	Pos.Fem.Dat.Sg.wk	 *	_	
4	t3508_000	hant	NA	hant	Dat.Sg	 * ) )	_	
5	t3509_000	-	$_	_	_	 * )	_	
6	t3510_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t3511_000	wesen	VAFIN	wësen	*.Pres.Pl.3	(LB (VX * ) )	_	
8	t3512_000	ire	DPOSA	ir(e)	*.Nom.Pl.0	(MF (NX *	_	
9	t3513_000	vande	NA	vand	Nom.Pl	 * ) )	_	
10	t3514_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3515_000	mîne	DPOSA	mîn	Fem.Akk.Sg.st	(S (Cl (PreF (NX *	_	
2	t3516_000	hant	NA	hant	Akk.Sg	 * ) )	_	
3	t3517_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
4	t3518_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
5	t3519_000	denen	VVINF	dènen	_	(RB (VX * ) )	_	
6	t3520_000	-	$_	_	_	 * )	_	
7	t3521_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t3522_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
9	t3523_000	slahen	VVINF	slahen	_	(RB (VX * ) )	_	
10	t3524_000	dere	DDART	dër	*.Gen.Pl	(PostF (NX *	_	
11	t3525_000	heidene	NA	hèiden	Gen.Pl	 * )	_	
12	t3526_000	here	NA	hèr(e)	Akk.Sg	(NX * ) )	_	
13	t3527_000	-	$_	_	_	 *	_	
14	t3528_000	in	APPR	in	_	(Frag (PPX *	_	
15	t3529_000	alleme	DIA	all	Neut.Dat.Sg.st	(NX *	_	
16	t3530_000	wundere	NA	wunter	Dat.Sg	 *	_	
17	t3531_000	mîn	DPOSN	mîn	Neut.Dat.Sg.0	 * ) )	_	
18	t3532_000	-	$_	_	_	 *	_	
19	t3533_000	daz	KOUS	dazz	_	(Frag *	_	
20	t3534_000	ich	PPER	ich	Nom.Sg.1	(PreF (NX * ) )	_	
21	t3535_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
22	t3536_000	würken	VVINF	wirken	_	(RB (VX * ) )	_	
23	t3537_000	under	APPR	unter	_	(PostF (PPX *	_	
24	t3538_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) ) )	_	
25	t3539_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3540_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t3541_000	lât	VVFIN	lâzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t3542_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
4	t3543_000	iuch	PPER	ir	Akk.Pl.2	(NX * )	_	
5	t3544_000	dannen	AVD	dannen	_	 * )	_	
6	t3545_000	-	$_	_	_	 *	_	
7	t3546_000	iedoch	AVD	iè-doh	_	(Frag *	_	
8	t3547_000	mit	APPR	mit	_	(PPX *	_	
9	t3548_000	unwillen	NA	un-wille	Dat.Pl	(NX * ) )	_	
10	t3549_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3550_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t3551_000	gibe	VVFIN	gëben	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t3552_000	diseme	DDA	dise	Neut.Dat.Sg	(MF (NX *	_	
4	t3553_000	liute	NA	liut	Dat.Sg	 * ) )	_	
5	t3554_000	-	$_	_	_	 *	_	
6	t3555_000	genâde	NA	ge-nâde	Akk.Sg	(Frag (NX *	_	
7	t3556_000	vore	APPR	vor(e)	_	(PPX *	_	
8	t3557_000	heidenischer	ADJA	hèidenisch	Pos.Fem.Dat.Sg.st	(NX *	_	
9	t3558_000	diete	NA	dièt	Dat.Sg	 * ) ) )	_	
10	t3559_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3560_000	wanne	KO*	wante	_	(S (Cl (PreF * )	_	
2	t3561_000	swenne	AVG	swanne	_	(LB * )	_	
3	t3562_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * )	_	
4	t3563_000	dannen	AVD	dannen	_	 * )	_	
5	t3564_000	vart	VVFIN	var(e)n	*.Pres.Pl.2	(RB (VX * ) )	_	
6	t3565_000	-	$_	_	_	 * )	_	
7	t3566_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t3567_000	ne	PTKNEG	ne	_	(LB (VX *	_	
9	t3568_000	habet	VAFIN	haben	Ind.Pres.Sg.3	 * ) )	_	
10	t3569_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * )	_	
11	t3570_000	îtele	ADJA	îtel	Pos.Fem.Akk.Sg.st	(NX *	_	
12	t3571_000	hant	NA	hant	Akk.Sg	 * ) )	_	
13	t3572_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3573_000	ir	PPER	ir	Nom.Pl.2	(S (Cl (PreF (NX * ) )	_	
2	t3574_000	habet	VAFIN	haben	*.Pres.Pl.2	(LB (VX * ) )	_	
3	t3575_000	iz	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
4	t3576_000	ze	APPR	ze	_	(PPX *	_	
5	t3576_001	site	NA	site	Dat.Sg	(NX * ) ) ) )	_	
6	t3577_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3578_000	iuweriu	DPOSA	iuwer	Neut.Akk.Pl.st	(S (Cl (PreF (NX *	_	
2	t3579_000	wîp	NA	wîb	Akk.Pl	 * ) )	_	
3	t3580_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t3581_000	biten	VVINF	biten	_	(MF (VX * ) )	_	
5	t3582_000	-	$_	_	_	 *	_	
6	t3583_000	von	APPR	von	_	(Frag (PPX *	_	
7	t3584_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
8	t3585_000	hûshêrren	NA	hûs-hêrre	Dat.Pl	 * ) )	_	
9	t3586_000	-	$_	_	_	 * )	_	
10	t3587_000	joch	AVD	joh	_	(Frag *	_	
11	t3588_000	von	APPR	von	_	(PPX *	_	
12	t3589_000	ire	DPOSA	ir(e)	*.Dat.Pl.0	(NX *	_	
13	t3590_000	gebûren	NA	ge-bûr(e)	Dat.Pl	 * ) )	_	
14	t3591_000	-	$_	_	_	 * )	_	
15	t3592_000	silberîne	ADJA	silberîn	Pos.*.Akk.Pl.st	(Frag (NX *	_	
16	t3593_000	napfe	NA	napf	Akk.Pl	 * )	_	
17	t3594_000	-	$_	_	_	 * ) )	_	
18	t3595_000	güldîne	ADJA	güldîn	Pos.*.Akk.Pl.st	(NX *	_	
19	t3596_000	köpfe	NA	kopf	Akk.Pl	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3597_000	-	$_	_	_	(S *	_	
2	t3598_000	die	DDART	dër	Fem.Akk.Sg	(Frag (NX *	_	
3	t3599_000	tiurlîchen	ADJA	tiur-lich	Pos.Fem.Akk.Sg.wk	 *	_	
4	t3600_000	anelege	NA	ane-lège	Akk.Sg	 * )	_	
5	t3601_000	-	$_	_	_	 * )	_	
6	t3602_000	den	DDART	dër	*.Dat.Pl	(Cl (PreF (NX *	_	
7	t3603_000	kinden	NA	kind	Dat.Pl	 * ) )	_	
8	t3604_000	solte	VMFIN	sol(e)n	*.Pres.Pl.2	(LB (VX * ) )	_	
9	t3605_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * )	_	
10	t3606_000	si	PPER	ër	*.Akk.Pl.3	(NX * ) )	_	
11	t3607_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
12	t3608_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3609_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t3610_000	werdent	VAFIN	wërden	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t3611_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
4	t3612_000	beroubet	VVPP	be-rouben	_	(RB (VX * ) )	_	
5	t3613_000	-	$_	_	_	 * )	_	
6	t3614_000	dâ	PAVD	dâr/+mit(e)	_	(Cl (LB (VX *	_	
7	t3615_000	mite	PAVAP	mit(e)/dâr+	_	 *	_	
8	t3616_000	büezet	VVFIN	büèzen	*.Pres.Pl.2	 * ) )	_	
9	t3617_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * )	_	
10	t3618_000	iuwere	DPOSA	iuwer	Fem.Akk.Sg.st	(NX *	_	
11	t3619_000	nôt	NA	nôt	Akk.Sg	 * ) )	_	
12	t3620_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3621_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t3622_000	bote	NA	bote	Nom.Sg	 *	_	
3	t3623_000	es	PPER	ër	Neut.Gen.Sg.3	(NX * ) ) )	_	
4	t3624_000	antwurte	VVFIN	ant-würten	*.Past.Sg.3	(LB (VX * ) )	_	
5	t3625_000	-	$_	_	_	 *	_	
6	t3626_000	mit	AVD	mit(e)	_	(Frag *	_	
7	t3627_000	sus	AVD	sus	_	 *	_	
8	t3628_000	getânen	ADJA	ge-tân	Pos.*.Dat.Pl.*	(NX *	_	
9	t3629_000	worten	NA	wort	Dat.Pl	 * )	_	
10	t3630_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3631_000	daz	DDART	dër	Neut.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t3632_000	liut	NA	liut	Nom.Sg	 * ) )	_	
3	t3633_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t3634_000	ungehôrsam	ADJD	un-ge-hôr-sam	Pos....0	(MF * )	_	
5	t3635_000	-	$_	_	_	 * )	_	
6	t3636_000	nieht	PTKNEG	niht	_	(Frag (VX *	_	
7	t3637_000	vernemen	VVINF	ver-nëmen	_	 * )	_	
8	t3638_000	iz	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
9	t3639_000	ne	PTKNEG	ne	_	(LB (VX *	_	
10	t3639_001	kan	VMFIN	kunnen	Ind.Pres.Sg.3	 * ) )	_	
11	t3640_000	-	$_	_	_	 *	_	
12	t3641_000	swenne	AVG	swanne	_	(Cl (LB * )	_	
13	t3642_000	diu	DDART	dër	Fem.Nom.Sg	(MF (NX *	_	
14	t3643_000	rede	NA	rède	Nom.Sg	 * ) )	_	
15	t3644_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(RB (VX * ) )	_	
16	t3645_000	in	PPER	ër	*.Dat.Pl.3	(PostF (NX * )	_	
17	t3646_000	wæge	ADJD	wæge	Pos....0	 * )	_	
18	t3647_000	-	$_	_	_	 *	_	
19	t3648_000	si	PPER	ër	*.Nom.Pl.3	(PostF (Cl (PreF (NX * ) )	_	
20	t3648_001	ne	PTKNEG	ne	_	(PreF (LB (VX *	_	
21	t3649_000	geloubent	VVFIN	ge-louben	Ind.Pres.Pl.3	 * ) ) )	_	
22	t3650_000	daz	DRELS	dër	Neut.Akk.Sg	(LB (NX * ) )	_	
23	t3651_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
24	t3652_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
25	t3652_001	sage	VVFIN	sagen	*.Pres.Sg.1	(RB (VX * ) )	_	
26	t3653_000	-	$_	_	_	 * ) ) ) )	_	
27	t3654_000	noch	KON	noh	_	(Cl (PrePreF * )	_	
28	t3655_000	ne	PTKNEG	ne	_	(LB (VX *	_	
29	t3655_001	hoerent	VVFIN	hoèren	Ind.Pres.Pl.3	 * ) )	_	
30	t3656_000	mîne	DPOSA	mîn	Fem.Akk.Sg.st	(MF (NX *	_	
31	t3657_000	stimme	NA	stimme	Akk.Sg	 * ) )	_	
32	t3658_000	-	$_	_	_	 * )	_	
33	t3659_000	quedent	VVFIN	quëden	Ind.Pres.Pl.3	(LB (VX * ) )	_	
34	t3660_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
35	t3661_000	vare	VVFIN	var(e)n	*.Pres.Sg.1	(LB (VX * ) )	_	
36	t3662_000	mit	APPR	mit	_	(MF (PPX *	_	
37	t3663_000	trügenlîchen	ADJA	trüge(n)-lich	Pos.*.Dat.Pl.*	(NX *	_	
38	t3664_000	dingen	NA	ding	Dat.Pl	 * ) ) )	_	
39	t3665_000	-	$_	_	_	 *	_	
40	t3666_000	noch	KON	noh	_	(Frag *	_	
41	t3667_000	ich	PPER	ich	Nom.Sg.1	(PreF (NX * ) )	_	
42	t3668_000	ne	PTKNEG	ne	_	(LB (VX *	_	
43	t3668_001	gesæhe	VVFIN	ge-sëhen	Subj.Past.Sg.1	 * ) )	_	
44	t3669_000	dich	PPER	dû	Akk.Sg.2	(MF (NX * )	_	
45	t3670_000	nie	AVD	niè	_	 * )	_	
46	t3671_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3672_000	waz	PW	wër	Neut.Akk.Sg.st	(S (Cl (PreF * )	_	
2	t3673_000	quide	VVFIN	quëden	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t3674_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
4	t3675_000	danne	AVD	danne	_	 *	_	
5	t3676_000	wider	APPR	wider	_	(PPX *	_	
6	t3677_000	sie	PPER	ër	*.Akk.Pl.3	(NX * ) ) )	_	
7	t3678_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3679_000	got	NA	got	Nom.Sg	(S (Frag (NX * )	_	
2	t3680_000	vrâgen	VVINF	vrâgen	_	(PreF (VX * ) )	_	
3	t3681_000	began	VVFIN	be-ginnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t3682_000	-	$_	_	_	 * )	_	
5	t3683_000	den	DDART	dër	Masc.Akk.Sg	(Frag *	_	
6	t3684_000	vile	AVD	vil(e)	_	 *	_	
7	t3685_000	tiurlîchen	ADJA	tiur-lich	Pos.Masc.Akk.Sg.*	(NX *	_	
8	t3686_000	man	NA	mann	Akk.Sg	 * )	_	
9	t3687_000	-	$_	_	_	 * )	_	
10	t3688_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
11	t3689_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX *	_	
12	t3690_000	in	APPR	in	_	(PPX *	_	
13	t3690_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
14	t3691_000	hant	NA	hant	Dat.Sg	 * ) ) ) )	_	
15	t3692_000	hæte	VAFIN	haben	Subj.Past.Sg.3	(LB (VX * ) )	_	
16	t3693_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3694_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t3695_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3696_000	eine	CARDA	èin	Fem.Nom.Sg.st	(S (NX *	_	
2	t3697_000	gerte	NA	gèrte	Nom.Sg	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3698_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t3699_000	quat	VVFIN	quëden	Ind.Past.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3700_000	wirf	VVIMP	wërfen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3701_000	si	PPER	ër	Fem.Akk.Sg.3	(MF (NX *	_	
3	t3702_000	an	APPR	ane	_	(PPX *	_	
4	t3703_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
5	t3704_000	erde	NA	ërde	Akk.Sg	 * ) ) ) )	_	
6	t3705_000	-	$_	_	_	 * )	_	
7	t3706_000	sich	PRF	sich	Akk	(NX * )	_	
8	t3707_000	ze	APPR	ze	_	(Frag *	_	
9	t3707_001	wiu	PW	wër	*.Instr.Sg.st	 *	_	
10	t3708_000	si	PPER	ër	Fem.Nom.Sg.3	(PreF (NX * ) )	_	
11	t3709_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
12	t3710_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3711_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t3712_000	weiz	VVFIN	wizzen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t3713_000	daz	DDART	dër	Neut.Nom.Sg	(Frag (NX *	_	
4	t3714_000	selbe	DDA	sëlb	Neut.Nom.Sg.wk	 *	_	
5	t3715_000	wort	NA	wort	Nom.Sg	 * )	_	
6	t3716_000	-	$_	_	_	 * ) )	_	
7	t3717_000	schiere	AVD	schière	_	(Frag *	_	
8	t3718_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(VX *	_	
9	t3719_000	ervollet	VVPP	er-vollen	_	 * )	_	
10	t3720_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3721_000	si	PPER	ër	Fem.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t3722_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3723_000	ze	APPR	ze	_	(MF (PPX *	_	
4	t3723_001	einem	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
5	t3724_000	slangen	NA	slange	Dat.Sg	 * ) ) )	_	
6	t3725_000	-	$_	_	_	 *	_	
7	t3726_000	grôzem	ADJN	grôz	Pos.Masc.Dat.Sg.st	(Frag *	_	
8	t3727_000	unde	KON	unte	_	 *	_	
9	t3728_000	langem	ADJN	lang	Pos.Masc.Dat.Sg.st	 *	_	
10	t3729_000	-	$_	_	_	 * )	_	
11	t3730_000	harte	AVD	harte	_	(Frag *	_	
12	t3731_000	egebære	ADJN	ège-bære	Pos.Masc.Dat.Sg.0	 *	_	
13	t3732_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3733_000	der	DDART	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t3734_000	man	NA	mann	Nom.Sg	 * )	_	
3	t3735_000	untrâge	AVD	un-trâge	_	 *	_	
4	t3736_000	-	$_	_	_	 * )	_	
5	t3737_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(Cl (LB (VX * ) )	_	
6	t3738_000	dannen	AVD	dannen	_	(MF * )	_	
7	t3739_000	springen	VVINF	springen	_	(RB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3740_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t3741_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3742_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
4	t3743_000	erwinden	VVINF	er-winten	_	(VX * ) )	_	
5	t3744_000	-	$_	_	_	 * )	_	
6	t3745_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
7	t3746_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
8	t3747_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
9	t3748_000	vâhen	VVINF	vâhen	_	(VX * )	_	
10	t3749_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
11	t3750_000	zagel	NA	zagel	Akk.Sg	 * ) )	_	
12	t3751_000	-	$_	_	_	 * )	_	
13	t3752_000	vaste	AVD	vaste	_	(Frag *	_	
14	t3753_000	in	APPR	in	_	(PPX *	_	
15	t3753_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
16	t3754_000	hant	NA	hant	Dat.Sg	 * ) )	_	
17	t3755_000	haben	VAINF	haben	_	(VX * )	_	
18	t3756_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3757_000	varwe	NA	varwe	Dat.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3758_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3758_001	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
4	t3759_000	misselich	ADJD	misse-lich	Pos....0	 * )	_	
5	t3760_000	-	$_	_	_	 * )	_	
6	t3761_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t3762_000	duhte	VVFIN	dunken	Ind.Past.Sg.3	(LB (VX * ) )	_	
8	t3763_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
9	t3764_000	ungewærlich	ADJD	un-ge-wær-lich	Pos....0	 * )	_	
10	t3765_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3766_000	iedoch	KOUS	iè-doh	_	(S (Cl (LB * )	_	
2	t3767_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
3	t3768_000	ne	PTKNEG	ne	_	(RB (VX *	_	
4	t3768_001	twalte	VVFIN	twèllen	*.Past.Sg.3	 * ) )	_	
5	t3769_000	-	$_	_	_	 *	_	
6	t3770_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	(Frag (NX *	_	
7	t3771_000	gebot	NA	ge-bot	Akk.Sg	 * )	_	
8	t3772_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
9	t3772_001	ervulte	VVFIN	er-vüllen	*.Past.Sg.3	(LB (VX * ) )	_	
10	t3773_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3774_000	der	DDART	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t3775_000	slange	NA	slange	Nom.Sg	 * )	_	
3	t3776_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(VX *	_	
4	t3777_000	verwandelet	VVPP	ver-wantel(e)n	_	 * )	_	
5	t3778_000	-	$_	_	_	 * )	_	
6	t3779_000	in	APPR	in	_	(PPX *	_	
7	t3780_000	eine	CARDA	èin	Fem.Akk.Sg.st	(NX *	_	
8	t3781_000	gerte	NA	gèrte	Akk.Sg	 * ) )	_	
9	t3782_000	weiz	VVFIN	wizzen	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
10	t3783_000	got	NA	got	Nom.Sg	(MF (NX * ) )	_	
11	t3784_000	-	$_	_	_	 *	_	
12	t3785_000	in	APPR	in	_	(Frag (PPX *	_	
13	t3785_001	ire	DPOSA	ir(e)	Neut.Akk.Sg.0	(NX *	_	
14	t3786_000	rehtez	ADJA	rëht	Pos.Neut.Akk.Sg.st	 *	_	
15	t3787_000	bilede	NA	bil(e)de	Akk.Sg	 * ) )	_	
16	t3788_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3789_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3790_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3791_000	ein	DIART	èin	Neut.Nom.Sg.0	(MF (NX *	_	
4	t3792_000	zeichen	NA	zèichen	Nom.Sg	 * )	_	
5	t3793_000	edele	AVD	èdel(e)	_	 * )	_	
6	t3794_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3795_000	got	NA	got	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3796_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3797_000	zuo	APPR	ze	_	(MF (PPX *	_	
4	t3798_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
5	t3799_000	manne	NA	mann	Dat.Sg	 * ) ) )	_	
6	t3800_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3801_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3802_000	habe	VAFIN	haben	*.Pres.Sg.1	(LB (VX * ) )	_	
3	t3803_000	ich	PPER	ich	Nom.Sg.1	(MF (NX *	_	
4	t3804_000	umbe	APPR	umbe	_	(PPX *	_	
5	t3805_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) ) ) )	_	
6	t3806_000	getân	VVPP	tuon	_	(RB (VX * ) )	_	
7	t3807_000	-	$_	_	_	 *	_	
8	t3808_000	obe	KOUS	obe	_	(PostF (Cl (LB * )	_	
9	t3809_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
10	t3810_000	niene	AVD	niène	_	 * )	_	
11	t3811_000	gelouben	VVFIN	ge-louben	*.Pres.Pl.3	(RB (VX * ) )	_	
12	t3812_000	dir	PPER	dû	Dat.Sg.2	(PostF (NX * ) )	_	
13	t3813_000	-	$_	_	_	 *	_	
14	t3814_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
15	t3815_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
16	t3816_000	bin	VAFIN	sîn	Ind.Pres.Sg.1	(RB (VX * ) )	_	
17	t3817_000	erschînen	VVINF	er-schînen	_	(PostF (VX * )	_	
18	t3818_000	dir	PPER	dû	Dat.Sg.2	(NX * ) ) ) ) ) )	_	
19	t3819_000	ich	PPER	ich	Nom.Sg.1	(Frag (NX *	_	
20	t3820_000	got	NA	got	Nom.Sg	 *	_	
21	t3821_000	hêrre	NA	hêrre	Nom.Sg	 * )	_	
22	t3822_000	-	$_	_	_	 * )	_	
23	t3823_000	dîner	DPOSA	dîn	*.Gen.Pl.st	(Frag (NX *	_	
24	t3824_000	vordere	NA	vorder(e)	Gen.Pl	 * )	_	
25	t3825_000	-	$_	_	_	 * )	_	
26	t3826_000	got	NA	got	Nom.Sg	(Frag (NX *	_	
27	t3827_000	Abrahames	NE	Abraham	Gen.Sg	(NX * ) )	_	
28	t3828_000	-	$_	_	_	 * )	_	
29	t3829_000	got	NA	got	Nom.Sg	(Frag (NX *	_	
30	t3830_000	Isaac	NE	Isaak	Gen.Sg	(NX * ) )	_	
31	t3831_000	-	$_	_	_	 * )	_	
32	t3832_000	got	NA	got	Nom.Sg	(Frag (NX *	_	
33	t3833_000	Jakobes	NE	Jakob	Gen.Sg	(NX * ) )	_	
34	t3834_000	-	$_	_	_	 * )	_	
35	t3835_000	und	KON	unte	_	(Frag *	_	
36	t3836_000	alles	DIA	all	Neut.Gen.Sg.st	(NX *	_	
37	t3837_000	dînes	DPOSA	dîn	Neut.Gen.Sg.st	 *	_	
38	t3838_000	künnes	NA	künne	Gen.Sg	 * )	_	
39	t3839_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3840_000	got	NA	got	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3841_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3842_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
4	t3843_000	zuo	AVD	zuo	_	 * )	_	
5	t3844_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3845_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t3846_000	sage	VVFIN	sagen	*.Pres.Sg.1	(LB (VX * ) )	_	
3	t3847_000	dir	PPER	dû	Dat.Sg.2	(MF (NX * ) )	_	
4	t3848_000	wie	AVW	wiè	_	(Frag *	_	
5	t3849_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
6	t3850_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3851_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t3852_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
3	t3853_000	dîne	DPOSA	dîn	Fem.Akk.Sg.st	(MF (NX *	_	
4	t3854_000	hant	NA	hant	Akk.Sg	 * ) )	_	
5	t3855_000	-	$_	_	_	 *	_	
6	t3856_000	schiere	AVD	schière	_	(Frag *	_	
7	t3857_000	in	APPR	in	_	(PPX *	_	
8	t3858_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
9	t3859_000	dîn	DPOSA	dîn	Neut.Akk.Sg.0	 *	_	
10	t3860_000	gewant	NA	ge-want	Akk.Sg	 * ) )	_	
11	t3861_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3862_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t3863_000	weiz	VVFIN	wizzen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t3864_000	er	PPER	ër	Masc.Nom.Sg.3	(Frag (NX * )	_	
4	t3865_000	iz	PPER	ër	Neut.Akk.Sg.3	(PreF (NX * ) )	_	
5	t3866_000	ne	PTKNEG	ne	_	(LB (VX *	_	
6	t3866_001	liez	VVFIN	lâzen	Ind.Past.Sg.3	 * ) )	_	
7	t3867_000	-	$_	_	_	 * )	_	
8	t3868_000	in	APPR	in	_	(Frag (PPX *	_	
9	t3869_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
10	t3870_000	buosem	NA	buosem	Akk.Sg	 * ) )	_	
11	t3871_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
12	t3872_000	si	PPER	ër	Fem.Akk.Sg.3	(PreF (NX * ) )	_	
13	t3873_000	stiez	VVFIN	stôzen	Ind.Past.Sg.3	(LB (VX * ) )	_	
14	t3874_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3875_000	als	KO*	all-sô	_	(S (Frag *	_	
2	t3876_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
3	t3877_000	si	PPER	ër	Fem.Akk.Sg.3	(NX * )	_	
4	t3878_000	abe	AVD	aber	_	 *	_	
5	t3879_000	ûz	PTKVZ	ûz/>+zièhen	_	(VX *	_	
6	t3880_000	zôch	VVFIN	zièhen/ûz>+	Ind.Past.Sg.3	 * )	_	
7	t3881_000	-	$_	_	_	 * )	_	
8	t3882_000	dô	AVD	dô	_	(Cl (PreF * )	_	
9	t3883_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(LB (VX * ) )	_	
10	t3884_000	ein	DIART	èin	Neut.Nom.Sg.0	(MF (NX *	_	
11	t3885_000	zeichen	NA	zèichen	Nom.Sg	 * )	_	
12	t3886_000	vile	AVD	vil(e)	_	 *	_	
13	t3887_000	grôz	ADJN	grôz	Pos.Neut.Nom.Sg.0	 * )	_	
14	t3888_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3889_000	si	PPER	ër	Fem.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t3890_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3891_000	wîz	ADJD	wîz	Pos....0	(MF *	_	
4	t3892_000	sam	KO*	sam(e)	_	 *	_	
5	t3893_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
6	t3894_000	snê	NA	snêw	Nom.Sg	 * ) )	_	
7	t3895_000	-	$_	_	_	 *	_	
8	t3896_000	gelîch	ADJD	ge-lîch	Pos....0	(Frag *	_	
9	t3897_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
10	t3898_000	miselsuhte	NA	misel-suht	Dat.Sg	 * )	_	
11	t3899_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3900_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t3901_000	man	NA	mann	Nom.Sg	 * ) )	_	
3	t3902_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t3903_000	in	APPR	in	_	(MF (PPX *	_	
5	t3904_000	sorgen	NA	sorge	Dat.Pl	(NX * ) ) )	_	
6	t3905_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3906_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t3907_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3908_000	si	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
4	t3909_000	in	PPER	ër	*.Akk.Pl.3	(NX * )	_	
5	t3910_000	abe	AVD	aber	_	 *	_	
6	t3911_000	bergen	VVINF	bërgen	_	(VX * ) )	_	
7	t3912_000	-	$_	_	_	 * )	_	
8	t3913_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
9	t3914_000	weiz	VVFIN	wizzen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
10	t3915_000	er	PPER	ër	Masc.Nom.Sg.3	(Frag (NX * )	_	
11	t3916_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
12	t3917_000	abe	AVD	aber	_	(PreF *	_	
13	t3918_000	dô	AVD	dô	_	 * )	_	
14	t3919_000	ne	PTKNEG	ne	_	(LB (VX *	_	
15	t3919_001	liez	VVFIN	lâzen	Ind.Past.Sg.3	 * ) )	_	
16	t3920_000	-	$_	_	_	 * )	_	
17	t3921_000	in	APPR	in	_	(Frag (PPX *	_	
18	t3921_001	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
19	t3922_000	buosem	NA	buosem	Akk.Sg	 * ) )	_	
20	t3923_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
21	t3924_000	si	PPER	ër	Fem.Akk.Sg.3	(PreF (NX * ) )	_	
22	t3925_000	stiez	VVFIN	stôzen	Ind.Past.Sg.3	(LB (VX * ) )	_	
23	t3926_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3927_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t3928_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3929_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
4	t3930_000	abe	AVD	aber	_	 *	_	
5	t3931_000	sâ	AVD	sâr	_	 *	_	
6	t3932_000	besehen	VVINF	be-sëhen	_	(VX * ) )	_	
7	t3933_000	-	$_	_	_	 *	_	
8	t3934_000	wie	AVW	wiè	_	(Frag *	_	
9	t3935_000	ire	PPER	ër	Fem.Dat.Sg.3	(PreF (NX * ) )	_	
10	t3936_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
11	t3937_000	geschehen	VVINF	ge-schëhen	_	(MF (VX * ) )	_	
12	t3938_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3939_000	si	PPER	ër	Fem.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t3940_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t3940_001	abe	AVD	aber	_	(PreF (MF * ) )	_	
4	t3941_000	pflige	VVFIN	pflëgen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
5	t3942_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
6	t3943_000	mich	PRF	ich	*.Akk.Sg.st	(NX * ) )	_	
7	t3944_000	-	$_	_	_	 *	_	
8	t3945_000	dem	DDART	dër	Neut.Dat.Sg	(Frag (NX *	_	
9	t3946_000	anderem	DIA	ander	Neut.Dat.Sg.st	 *	_	
10	t3947_000	vleische	NA	vlèisch	Dat.Sg	 * )	_	
11	t3948_000	gelîch	ADJD	ge-lîch	Pos....0	 *	_	
12	t3949_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3950_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(S (LB (VX * ) )	_	
2	t3951_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
3	t3952_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
4	t3952_001	ne	PTKNEG	ne	_	(RB (VX *	_	
5	t3953_000	meinent	VVFIN	mèinen	Ind.Pres.Pl.3	 * ) )	_	
6	t3954_000	-	$_	_	_	 *	_	
7	t3955_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t3956_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
9	t3957_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
10	t3958_000	hân	VAFIN	haben	Ind.Pres.Sg.1	(RB (VX *	_	
11	t3959_000	erzeiget	VVPP	er-zèigen	_	 * ) )	_	
12	t3960_000	-	$_	_	_	 * ) )	_	
13	t3961_000	noch	KON	noh	_	(Frag *	_	
14	t3962_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
15	t3963_000	niene	AVD	niène	_	(PreF * )	_	
16	t3964_000	geloubent	VVFIN	ge-louben	Ind.Pres.Pl.3	(LB (VX * ) )	_	
17	t3965_000	-	$_	_	_	 *	_	
18	t3966_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
19	t3967_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
20	t3968_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
21	t3969_000	hân	VAFIN	haben	Ind.Pres.Sg.1	(RB (VX *	_	
22	t3970_000	erouget	VVPP	er-ougen	_	 * ) )	_	
23	t3971_000	-	$_	_	_	 * ) ) )	_	
24	t3972_000	sô	AVD	sô	_	(Cl (PreF * )	_	
25	t3973_000	sehen	VVFIN	sëhen	*.Pres.Pl.1	(LB (VX * ) )	_	
26	t3974_000	abe	AVD	aber	_	(MF *	_	
27	t3975_000	dâr	PAVD	dâr/+zuo	_	 *	_	
28	t3976_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
29	t3977_000	-	$_	_	_	 *	_	
30	t3978_000	daz	DRELS	dër	Neut.Nom.Sg	(PostF (Cl (LB (NX *	_	
31	t3979_000	dû	PPER	dû	Nom.Sg.2	 * ) )	_	
32	t3980_000	noch	AVD	noh	_	(MF * )	_	
33	t3981_000	süles	VVFIN	sül(e)n	*.Pres.Sg.2	(RB (VX * ) )	_	
34	t3982_000	tuon	VVINF	tuon	_	(PostF (VX * ) )	_	
35	t3983_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3984_000	daz	DDART	dër	Neut.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t3985_000	wazzer	NA	wazzer	Akk.Sg	 * ) )	_	
3	t3986_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
4	t3987_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
5	t3988_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
6	t3989_000	-	$_	_	_	 * )	_	
7	t3990_000	an	APPR	ane	_	(Frag (PPX *	_	
8	t3991_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
9	t3992_000	erde	NA	ërde	Akk.Sg	 * ) )	_	
10	t3993_000	giezen	VVINF	gièzen	_	(VX * )	_	
11	t3994_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3995_000	swaz	PG	swër	Neut.Nom.Sg.st	(S (Frag (NX *	_	
2	t3996_000	sîn	PPER	ër	Neut.Gen.Sg.3	(NX * ) )	_	
3	t3997_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(VX *	_	
4	t3998_000	geschaffen	VVPP	schèpfen	_	 * )	_	
5	t3999_000	-	$_	_	_	 * )	_	
6	t4000_000	ze	APPR	ze	_	(Frag (PPX *	_	
7	t4000_001	bluote	NA	bluot	Dat.Sg	(NX * ) )	_	
8	t4001_000	ich	PPER	ich	Nom.Sg.1	(NX * )	_	
9	t4002_000	in	PPER	ër	*.Dat.Pl.3	(NX * )	_	
10	t4003_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
11	t4004_000	mache	VVFIN	machen	*.Pres.Sg.1	(LB (VX * ) )	_	
12	t4005_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4006_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t4007_000	wizzest	VVFIN	wizzen	*.Pres.Sg.2	(LB (VX * ) )	_	
3	t4008_000	vone	APPR	von	_	(MF (PPX *	_	
4	t4009_000	mir	PPER	ich	Dat.Sg.1	(NX * ) ) )	_	
5	t4010_000	-	$_	_	_	 * )	_	
6	t4011_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t4012_000	geloubent	VVFIN	ge-louben	Ind.Pres.Pl.3	(LB (VX * ) )	_	
8	t4013_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
9	t4014_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
10	t4015_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4016_000	dô	AVD	dô	_	(S (Cl (PreF * )	_	
2	t4017_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t4018_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
4	t4019_000	bote	NA	bote	Nom.Sg	 *	_	
5	t4020_000	guote	ADJN	guot	Pos.Masc.Nom.Sg.wk	 * ) )	_	
6	t4021_000	-	$_	_	_	 *	_	
7	t4022_000	mit	APPR	mit	_	(Frag (PPX *	_	
8	t4023_000	erkomenlîchem	ADJA	er-komen-lich	Pos.Masc.Dat.Sg.st	(NX *	_	
9	t4024_000	muote	NA	muot	Dat.Sg	 * ) )	_	
10	t4025_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4026_000	mir	PPER	ich	Dat.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t4027_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(PreF (LB (VX * ) ) )	_	
3	t4028_000	ne	PTKNEG	ne	_	(LB (VX *	_	
4	t4028_001	weiz	VVFIN	wizzen	Ind.Pres.Sg.3	 * ) )	_	
5	t4028_002	waz	PW	wër	Neut.Nom.Sg.st	(MF *	_	
6	t4029_000	geschehen	VVINF	ge-schëhen	_	(VX * ) )	_	
7	t4030_000	-	$_	_	_	 *	_	
8	t4031_000	daz	KOUS	dazz	_	(PostF (Frag *	_	
9	t4032_000	ich	PPER	ich	Nom.Sg.1	(PreF (NX * ) )	_	
10	t4033_000	ne	PTKNEG	ne	_	(LB (VX *	_	
11	t4033_001	mac	VMFIN	mügen	Ind.Pres.Sg.1	 * ) )	_	
12	t4034_000	nieht	PTKNEG	niht	_	(RB (VX *	_	
13	t4035_000	reden	VVINF	rèden	_	 * ) )	_	
14	t4036_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4037_000	hiute	AVD	hiute	_	(S (Cl (PreF * )	_	
2	t4038_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4039_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
4	t4040_000	dritte	ADJA	dritt	Pos.Masc.Nom.Sg.wk	 *	_	
5	t4041_000	tac	NA	tag	Nom.Sg	 * ) )	_	
6	t4042_000	-	$_	_	_	 *	_	
7	t4043_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t4044_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
9	t4045_000	reden	VVINF	rèden	_	(VX * )	_	
10	t4046_000	niene	AVD	niène	_	 * )	_	
11	t4047_000	mac	VMFIN	mügen	Ind.Pres.Sg.1	(RB (VX * ) )	_	
12	t4048_000	-	$_	_	_	 * ) ) )	_	
13	t4049_000	mîn	DPOSA	mîn	Fem.Nom.Sg.0	(Cl (PreF (NX *	_	
14	t4050_000	zunge	NA	zunge	Nom.Sg	 * ) )	_	
15	t4051_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t4052_000	træge	ADJD	træge	Pos....0	(MF * )	_	
17	t4053_000	-	$_	_	_	 *	_	
18	t4054_000	denne	KOUS	danne	_	(PostF (Cl (LB * )	_	
19	t4055_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
20	t4056_000	gewone	ADJD	ge-won(e)	Pos....0	 * )	_	
21	t4057_000	wære	VAFIN	wësen	Subj.Past.Sg.1	(RB (VX * ) )	_	
22	t4058_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4059_000	von	APPR	von	_	(S (Cl (PreF (PPX *	_	
2	t4060_000	diu	DDS	dër	*.Instr.Sg	(NX * ) ) )	_	
3	t4061_000	sende	VVIMP	sènten	Sg.2	(LB (VX * ) )	_	
4	t4062_000	hêrre	NA	hêrre	Nom.Sg	(MF (NX * ) )	_	
5	t4063_000	-	$_	_	_	 *	_	
6	t4064_000	boten	NA	bote	Akk.Pl	(Frag (NX *	_	
7	t4065_000	bezzere	ADJN	bèzzer	Comp.*.Akk.Pl.st	 * )	_	
8	t4066_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4067_000	got	NA	got	Nom.Sg	(S (Frag (NX * )	_	
2	t4068_000	vrâgen	VVINF	vrâgen	_	(PreF (VX * ) )	_	
3	t4069_000	began	VVFIN	be-ginnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t4070_000	-	$_	_	_	 * )	_	
5	t4071_000	den	DDART	dër	Masc.Akk.Sg	(Frag (NX *	_	
6	t4072_000	selben	DDA	sëlb	Masc.Akk.Sg.st	 *	_	
7	t4073_000	man	NA	mann	Akk.Sg	 * )	_	
8	t4074_000	-	$_	_	_	 *	_	
9	t4075_000	dô	KOUS	dô	_	(Cl (LB * )	_	
10	t4076_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
11	t4077_000	zwîvelte	VVFIN	zwîvel(e)n	*.Past.Sg.3	(RB (VX * ) )	_	
12	t4078_000	-	$_	_	_	 * ) )	_	
13	t4079_000	an	APPR	ane	_	(Frag (PPX *	_	
14	t4080_000	sînem	DPOSA	sîn	Neut.Dat.Sg.st	(NX *	_	
15	t4081_000	worte	NA	wort	Dat.Sg	 * ) )	_	
16	t4082_000	-	$_	_	_	 * )	_	
17	t4083_000	wer	PW	wër	Masc.Nom.Sg.st	(Frag *	_	
18	t4084_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
19	t4085_000	mennischen	NA	mèn(ni)sche	Gen.Sg	 * )	_	
20	t4086_000	munt	NA	mund	Akk.Sg	(NX * )	_	
21	t4087_000	-	$_	_	_	 * )	_	
22	t4088_000	hæte	VAFIN	haben	*.Past.Sg.3	(Frag (VX *	_	
23	t4089_000	gezimberet	VVPP	ge-zimber(e)n	_	 * )	_	
24	t4090_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4091_000	den	DDART	dër	Masc.Akk.Sg	(S (Frag *	_	
2	t4092_000	stummen	ADJA	stumm	Pos.Masc.Akk.Sg.*	 *	_	
3	t4093_000	und	KON	unte	_	 *	_	
4	t4094_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
5	t4095_000	tôren	NA	tôr(e)	Akk.Sg	 * )	_	
6	t4096_000	-	$_	_	_	 * )	_	
7	t4097_000	mit	APPR	mit	_	(Frag (PPX *	_	
8	t4098_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
9	t4099_000	touben	ADJA	toub	Pos.*.Dat.Pl.*	 *	_	
10	t4100_000	ôren	NA	ôre	Dat.Pl	 * ) )	_	
11	t4101_000	-	$_	_	_	 * )	_	
12	t4102_000	gesehente	ADJS	ge-sëhen	Pos.*.Akk.Pl.st	(Frag (NX * )	_	
13	t4103_000	unde	KON	unte	_	 *	_	
14	t4104_000	blinde	ADJA	blint	Pos.*.Akk.Pl..%.st	 *	_	
15	t4105_000	-	$_	_	_	 * )	_	
16	t4106_000	bin	VAFIN	sîn	Ind.Pres.Sg.1	(Cl (LB (VX * ) )	_	
17	t4107_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
18	t4108_000	biledente	VVPS	bil(e)den	_	(VX * ) )	_	
19	t4109_000	-	$_	_	_	 *	_	
20	t4110_000	ich	PPER	ich	Nom.Sg.1	(Frag (NX * )	_	
21	t4111_000	alterseine	ADJD	alter(e)s-èine	Pos....0	 *	_	
22	t4112_000	-	$_	_	_	 * )	_	
23	t4113_000	ander	DIS	ander	Masc.Nom.Sg.0	(Frag (NX *	_	
24	t4114_000	necheine	DIS	neh-èin	Masc.Nom.Sg.wk	 * )	_	
25	t4115_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4116_000	von	APPR	von	_	(S (Cl (PreF (PPX *	_	
2	t4117_000	diu	DDS	dër	*.Instr.Sg	(NX * ) ) )	_	
3	t4118_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
4	t4119_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
5	t4120_000	varen	VVINF	var(e)n	_	(RB (VX * ) )	_	
6	t4121_000	-	$_	_	_	 * )	_	
7	t4122_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
8	t4123_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
9	t4124_000	dich	PPER	dû	Akk.Sg.2	(MF (NX * ) )	_	
10	t4125_000	bewaren	VVINF	be-war(e)n	_	(RB (VX * ) )	_	
11	t4126_000	-	$_	_	_	 * )	_	
12	t4127_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
13	t4128_000	bin	VAFIN	sîn	Ind.Pres.Sg.1	(LB (VX * ) )	_	
14	t4129_000	in	APPR	in	_	(MF (PPX *	_	
15	t4130_000	dînem	DPOSA	dîn	Masc.Dat.Sg.st	(NX *	_	
16	t4131_000	munde	NA	mund	Dat.Sg	 * ) ) )	_	
17	t4132_000	-	$_	_	_	 * )	_	
18	t4133_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
19	t4134_000	tuon	VVFIN	tuon	Ind.Pres.Sg.1	(LB (VX * ) )	_	
20	t4135_000	dir	PPER	dû	Dat.Sg.2	(MF (NX *	_	
21	t4136_000	in	APPR	in	_	(PPX *	_	
22	t4137_000	künde	NA	künde	Akk.Sg	(NX * ) ) ) )	_	
23	t4138_000	-	$_	_	_	 *	_	
24	t4139_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
25	t4140_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
26	t4141_000	vermîdest	VVFIN	ver-mîden	*.Pres.Sg.2	(LB (VX * ) )	_	
27	t4142_000	-	$_	_	_	 * ) )	_	
28	t4143_000	redest	VVFIN	rëden	*.Pres.Sg.2	(Cl (LB (VX (VX * )	_	
29	t4144_000	oder	KON	oder	_	 *	_	
30	t4145_000	swîgest	VVFIN	swîgen	*.Pres.Sg.2	(VX * ) ) )	_	
31	t4146_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4147_000	Mosî	NE	Moses	Nom.Sg	(S (Frag (NX *	_	
2	t4148_000	der	DDART	dër	Masc.Nom.Sg	 *	_	
3	t4149_000	guote	ADJA	guot	Pos.Masc.Nom.Sg.wk	 * )	_	
4	t4150_000	-	$_	_	_	 * )	_	
5	t4151_000	ienoch	AVD	iè-noh	_	(Cl (PreF * )	_	
6	t4152_000	zwîvelte	VVFIN	zwîvel(e)n	*.Past.Sg.3	(LB (VX * ) )	_	
7	t4153_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4154_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t4155_000	quat	VVFIN	quëden	Ind.Past.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4156_000	hêrre	NA	hêrre	Nom.Sg	(S (NX * )	_	
2	t4157_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
3	t4158_000	bite	VVFIN	biten	*.Pres.Sg.1	(LB (VX * ) )	_	
4	t4159_000	dich	PPER	dû	Akk.Sg.2	(MF (NX * ) )	_	
5	t4160_000	-	$_	_	_	 * )	_	
6	t4161_000	noch	AVD	noh	_	(Cl (PreF * )	_	
7	t4162_000	erlâze	VVFIN	er-lâzen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
8	t4162_001	es	PPER	ër	Neut.Gen.Sg.3	(MF (NX * )	_	
9	t4163_000	mich	PPER	ich	Akk.Sg.1	(NX * ) )	_	
10	t4164_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4165_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t4166_000	sende	VVIMP	sènten	Sg.2	(LB (VX * ) )	_	
3	t4167_000	dâr	AVD	dâr	_	(MF * ) )	_	
4	t4168_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
5	t4169_000	tuge	VVFIN	tugen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
6	t4170_000	-	$_	_	_	 * )	_	
7	t4171_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
8	t4172_000	ne	PTKNEG	ne	_	(LB (VX *	_	
9	t4173_000	bin	VAFIN	sîn	Ind.Pres.Sg.1	 * ) )	_	
10	t4174_000	necheine	DIA	neh-èin	Masc,Fem.Nom.Sg.wk	(MF (NX *	_	
11	t4175_000	vrume	NA	vrume	Nom.Sg	 * ) )	_	
12	t4176_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4177_000	ze	PTKA	ze	_	(S (Frag *	_	
2	t4178_000	verre	AVD	vërre	_	(PreF * )	_	
3	t4179_000	habete	VAFIN	haben	*.Past.Sg.3	(LB (VX * ) )	_	
4	t4180_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
5	t4181_000	geredet	VVPP	rèden	_	(RB (VX * ) )	_	
6	t4182_000	-	$_	_	_	 * )	_	
7	t4183_000	got	NA	got	Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t4184_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(LB (VX * ) )	_	
9	t4185_000	sîn	PPER	ër	Neut.Gen.Sg.3	(MF (NX * ) )	_	
10	t4186_000	beweget	VVPP	be-wègen	_	(RB (VX * ) )	_	
11	t4187_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4188_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t4189_000	quat	VVFIN	quëden	Ind.Past.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4190_000	dîn	DPOSA	dîn	Masc.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t4191_000	bruoder	NA	bruoder	Nom.Sg	 * ) )	_	
3	t4192_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t4193_000	ze	APPR	ze	_	(MF (PPX *	_	
5	t4193_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) )	_	
6	t4194_000	-	$_	_	_	 *	_	
7	t4195_000	genuoc	AVD	ge-nuog(e)	_	(Frag *	_	
8	t4196_000	redespæhe	ADJD	rède-spæhe	Pos....0	 *	_	
9	t4197_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4198_000	vile	AVD	vil(e)	_	(S (PreF *	_	
2	t4199_000	wole	AVD	wol(e)	_	 * )	_	
3	t4200_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
4	t4201_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (NX * ) )	_	
5	t4202_000	erkennet	VVFIN	er-kènnen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t4203_000	-	$_	_	_	 *	_	
7	t4204_000	Aaron	NE	Aaron	Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t4205_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t4206_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
10	t4207_000	genennet	VVPP	nènnen	_	(RB (VX * ) )	_	
11	t4208_000	-	$_	_	_	 * )	_	
12	t4209_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
13	t4210_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t4211_000	von	APPR	von	_	(MF (PPX *	_	
15	t4212_000	Levi	NE	Levi	Dat.Sg	(NX * ) ) )	_	
16	t4213_000	geboren	VVPP	ge-bër(e)n	_	(RB (VX * ) )	_	
17	t4214_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4215_000	engegene	AVD	en-gègen(e)	_	(S (Cl (PreF * )	_	
2	t4216_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4217_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
4	t4218_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
5	t4219_000	komen	VVINF	komen	_	(RB (VX * ) )	_	
6	t4220_000	-	$_	_	_	 * )	_	
7	t4221_000	als	KO*	all-sô	_	(Frag *	_	
8	t4222_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
9	t4223_000	ane	PTKVZ	ane/>+sëhen	_	(VX *	_	
10	t4224_000	sihet	VVFIN	sëhen/ane>+	Ind.Pres.Sg.3	 * )	_	
11	t4225_000	dich	PPER	dû	Akk.Sg.2	(NX * )	_	
12	t4226_000	-	$_	_	_	 *	_	
13	t4227_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
14	t4228_000	sîn	DPOSA	sîn	Neut.Nom.Sg.0	(MF (NX *	_	
15	t4229_000	herze	NA	hërze	Nom.Sg	 * ) )	_	
16	t4230_000	vröuwet	VVFIN	vröuwen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
17	t4231_000	sich	PRF	sich	Akk	(PostF (NX * ) )	_	
18	t4232_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4233_000	nieht	PTKNEG	niht	_	(S (Frag *	_	
2	t4234_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
3	t4235_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (NX * ) )	_	
4	t4236_000	ne	PTKNEG	ne	_	(LB (VX *	_	
5	t4236_001	verdagest	VVFIN	ver-dagen	*.Pres.Sg.2	 * ) )	_	
6	t4237_000	-	$_	_	_	 * )	_	
7	t4238_000	dise	DDA	dise	Fem.Akk.Sg	(Frag (NX *	_	
8	t4239_000	rede	NA	rède	Akk.Sg	 * )	_	
9	t4240_000	ime	PPER	ër	Masc.Dat.Sg.3	(PreF (NX * ) )	_	
10	t4241_000	sagest	VVFIN	sagen	*.Pres.Sg.2	(LB (VX * ) )	_	
11	t4242_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4243_000	in	APPR	in	_	(S (Frag (PPX *	_	
2	t4243_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
3	t4244_000	munde	NA	mund	Dat.Sg	 *	_	
4	t4245_000	sîneme	DPOSN	sîn	Masc.Dat.Sg.st	 * ) )	_	
5	t4246_000	-	$_	_	_	 * )	_	
6	t4247_000	sam	AVD	sam(e)	_	(Frag *	_	
7	t4248_000	in	APPR	in	_	(PPX *	_	
8	t4249_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
9	t4250_000	dîneme	DPOSS	dîn	Masc.Dat.Sg.st	 * ) )	_	
10	t4251_000	-	$_	_	_	 * )	_	
11	t4252_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(Cl (LB (VX * ) )	_	
12	t4253_000	ich	PPER	ich	Nom.Sg.1	(MF (NX *	_	
13	t4254_000	selbe	DDD	sëlb	Fem.Nom.Sg.wk	 * ) )	_	
14	t4255_000	redenen	VVINF	rèdenen	_	(RB (VX * ) )	_	
15	t4256_000	-	$_	_	_	 *	_	
16	t4257_000	mit	APPR	mit	_	(Frag (PPX *	_	
17	t4258_000	michelen	ADJA	michel	Pos.*.Dat.Pl.*	(NX *	_	
18	t4259_000	triuwen	NA	triuwe	Dat.Pl	 * ) )	_	
19	t4260_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4261_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t4262_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t4263_000	iu	PPER	ir	Akk.Pl.2	(MF (NX * )	_	
4	t4264_000	wærlîchen	AVD	wær-lîche	_	 * )	_	
5	t4265_000	-	$_	_	_	 * )	_	
6	t4266_000	niemer	AVD	nièmer	_	(Frag *	_	
7	t4267_000	geswîchen	VVINF	ge-swîchen	_	(VX * )	_	
8	t4268_000	-	$_	_	_	 * )	_	
9	t4269_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
10	t4270_000	lêre	VVFIN	lêren	*.Pres.Sg.1	(LB (VX * ) )	_	
11	t4271_000	iuch	PPER	ir	Akk.Pl.2	(MF (NX *	_	
12	t4272_000	ze	APPR	ze	_	(PPX *	_	
13	t4272_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) ) )	_	
14	t4273_000	-	$_	_	_	 *	_	
15	t4274_000	wie	AVW	wiè	_	(Frag *	_	
16	t4275_000	ir	PPER	ir	Nom.Pl.2	(PreF (NX * ) )	_	
17	t4276_000	solte	VMFIN	sol(e)n	*.Pres.Pl.2	(LB (VX * ) )	_	
18	t4277_000	gebâren	VVINF	ge-bâren	_	(RB (VX * ) )	_	
19	t4278_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4279_000	dîn	DPOSA	dîn	Masc.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t4280_000	bruoder	NA	bruoder	Nom.Sg	 * ) )	_	
3	t4281_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
4	t4282_000	dîn	DPOSA	dîn	Masc.Nom.Sg.0	(MF (NX *	_	
5	t4283_000	munt	NA	mund	Nom.Sg	 * ) )	_	
6	t4284_000	-	$_	_	_	 * )	_	
7	t4285_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
8	t4286_000	tuon	VVFIN	tuon	Ind.Pres.Sg.1	(LB (VX * ) )	_	
9	t4287_000	iz	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
10	t4288_000	abe	AVD	aber	_	 *	_	
11	t4289_000	dir	PPER	dû	Dat.Sg.2	(NX * )	_	
12	t4290_000	kunt	ADJD	kund	Pos....0	 * )	_	
13	t4291_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4292_000	in	APPR	in	_	(S (Frag (PPX *	_	
2	t4292_001	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t4293_000	rehten	ADJA	rëht	Pos.*.Dat.Pl.*	 *	_	
4	t4294_000	minnen	NA	minne	Dat.Pl	 * ) )	_	
5	t4295_000	-	$_	_	_	 * )	_	
6	t4296_000	ir	PPER	ir	Nom.Pl.2	(Cl (PreF (NX * ) )	_	
7	t4297_000	helfet	VVFIN	hëlfen	*.Pres.Pl.2	(LB (VX * ) )	_	
8	t4298_000	einen	DIS	èin	*.Dat.Pl.st	(MF (NX *	_	
9	t4299_000	anderen	DIS	ander	*.Dat.Pl.st	 * ) )	_	
10	t4300_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4301_000	dise	DDA	dise	Fem.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t4302_000	gerten	NA	gèrte	Akk.Sg	 * ) )	_	
3	t4303_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
4	t4304_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
5	t4305_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
6	t4306_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
7	t4307_000	-	$_	_	_	 * )	_	
8	t4308_000	die	DDS	dër	Fem.Akk.Sg	(Cl (PreF (NX * ) )	_	
9	t4309_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
10	t4310_000	dû	PPER	dû	Nom.Sg.2	(MF (NX *	_	
11	t4311_000	in	APPR	in	_	(PPX *	_	
12	t4311_001	dîne	DPOSA	dîn	Fem.Akk.Sg.st	(NX *	_	
13	t4312_000	hant	NA	hant	Akk.Sg	 * ) ) ) )	_	
14	t4313_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
15	t4314_000	-	$_	_	_	 * )	_	
16	t4315_000	sô	AVD	sô	_	(Cl (PreF * )	_	
17	t4316_000	tuost	VVFIN	tuon	*.Pres.Sg.2	(LB (VX * ) )	_	
18	t4317_000	dû	PPER	dû	Nom.Sg.2	(MF (NX *	_	
19	t4318_000	ze	APPR	ze	_	(PPX *	_	
20	t4318_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) ) )	_	
21	t4319_000	-	$_	_	_	 *	_	
22	t4320_000	diu	DDART	dër	Neut.Akk.Pl	(Frag (NX *	_	
23	t4321_000	zeichen	NA	zèichen	Akk.Pl	 *	_	
24	t4322_000	urmære	ADJN	ur-mære	Pos.Neut.Akk.Pl.st	 * )	_	
25	t4323_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4324_000	dô	KOUS	dô	_	(S (Cl (LB * )	_	
2	t4325_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
3	t4326_000	heilige	ADJA	hèilig	Pos.Masc.Nom.Sg.wk	 *	_	
4	t4327_000	man	NA	mann	Nom.Sg	 * )	_	
5	t4328_000	-	$_	_	_	 *	_	
6	t4329_000	ze	APPR	ze	_	(PPX *	_	
7	t4329_001	gote	NA	got	Dat.Sg	(NX * ) )	_	
8	t4330_000	urloup	NA	ur-loub	Akk.Sg	(NX * ) )	_	
9	t4331_000	genam	VVFIN	ge-nëmen	Ind.Past.Sg.3	(RB (VX * ) ) )	_	
10	t4332_000	wole	AVD	wol(e)	_	(Cl (PreF * )	_	
11	t4333_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
12	t4334_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * ) )	_	
13	t4335_000	geschehen	VVPP	ge-schëhen	_	(RB (VX * ) )	_	
14	t4336_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4337_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t4338_000	vuor	VVFIN	var(e)n	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t4339_000	heim	AVD	hèim	_	(MF *	_	
4	t4340_000	ze	APPR	ze	_	(PPX *	_	
5	t4340_001	sînem	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
6	t4341_000	sweher	NA	swëher	Dat.Sg	 * ) ) )	_	
7	t4342_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4343_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t4344_000	begunde	VVFIN	be-ginnen	*.Past.Sg.3	(LB (VX * ) )	_	
3	t4345_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
4	t4346_000	sagen	VVINF	sagen	_	(VX * ) )	_	
5	t4347_000	-	$_	_	_	 *	_	
6	t4348_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
7	t4349_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (MF (NX *	_	
8	t4350_000	ze	APPR	ze	_	(PPX *	_	
9	t4350_001	lande	NA	lant	Dat.Sg	(NX * ) ) ) ) )	_	
10	t4351_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
11	t4352_000	varen	VVINF	var(e)n	_	(RB (VX * ) )	_	
12	t4353_000	-	$_	_	_	 *	_	
13	t4354_000	ze	APPR	ze	_	(PostF (PPX *	_	
14	t4354_001	sîneme	DPOSA	sîn	Neut.Dat.Sg.st	(NX *	_	
15	t4355_000	geslehte	NA	ge-slèhte	Dat.Sg	 * ) ) )	_	
16	t4356_000	-	$_	_	_	 *	_	
17	t4357_000	ersinden	VVINF	er-sinden	_	(PostF (VX * )	_	
18	t4358_000	wie	AVW	wiè	_	 *	_	
19	t4359_000	iz	PPER	ër	Neut.Nom.Sg.3	(NX * ) )	_	
20	t4360_000	mahte	VMFIN	mügen	*.Past.Sg.3	(RB (VX * ) )	_	
21	t4361_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4362_000	urloup	NA	ur-loub	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t4363_000	gap	VVFIN	gëben	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t4364_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
4	t4365_000	dô	AVD	dô	_	 * )	_	
5	t4366_000	-	$_	_	_	 *	_	
6	t4367_000	sîn	DPOSA	sîn	Masc.Nom.Sg.0	(Frag (NX *	_	
7	t4368_000	sweher	NA	swëher	Nom.Sg	 *	_	
8	t4369_000	Jetro	NE	Jètro	Nom.Sg	 * )	_	
9	t4370_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4371_000	mit	APPR	mit	_	(S (Cl (PreF (PPX *	_	
2	t4372_000	heile	NA	hèile	Dat.Sg	(NX * ) ) )	_	
3	t4373_000	müezest	VMFIN	müèzen	Subj.Pres.Sg.2	(LB (VX * ) )	_	
4	t4374_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
5	t4375_000	varen	VVINF	var(e)n	_	(RB (VX * ) )	_	
6	t4376_000	-	$_	_	_	 * )	_	
7	t4377_000	dîn	DPOSA	dîn	Masc.Nom.Sg.0	(Cl (PreF (NX *	_	
8	t4378_000	got	NA	got	Nom.Sg	 * ) )	_	
9	t4379_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t4380_000	dich	PPER	dû	Akk.Sg.2	(MF (NX * ) )	_	
11	t4381_000	bewaren	VVINF	be-war(e)n	_	(RB (VX * ) )	_	
12	t4382_000	-	$_	_	_	 * )	_	
13	t4383_000	dich	PPER	dû	Akk.Sg.2	(Cl (PreF (NX * ) )	_	
14	t4384_000	sende	VVFIN	sènten	Subj.Pres.Sg.3	(LB (VX * ) )	_	
15	t4385_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
16	t4386_000	mit	AVD	mit(e)	_	 *	_	
17	t4387_000	gesunte	NA	ge-sunt(e)	Dat.Sg	(NX * ) )	_	
18	t4388_000	-	$_	_	_	 *	_	
19	t4389_000	heim	AVD	hèim	_	(Frag *	_	
20	t4390_000	ze	APPR	ze	_	(PPX *	_	
21	t4390_001	dîneme	DPOSA	dîn	Neut.Dat.Sg.st	(NX *	_	
22	t4391_000	lande	NA	lant	Dat.Sg	 * ) )	_	
23	t4392_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4393_000	Moses	NE	Moses	Nom.Sg	(S (Frag (NX * )	_	
2	t4394_000	sich	PRF	sich	Akk	(NX * )	_	
3	t4395_000	dô	AVD	dô	_	(PreF * )	_	
4	t4396_000	vröuwete	VVFIN	vröuwen	*.Past.Sg.3	(LB (VX * ) )	_	
5	t4397_000	-	$_	_	_	 *	_	
6	t4398_000	des	DRELS	dër	Neut.Gen.Sg	(Cl (LB (NX * ) )	_	
7	t4399_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
8	t4400_000	vernomen	VVPP	ver-nëmen	_	(RB (VX *	_	
9	t4401_000	habete	VAFIN	haben	*.Past.Sg.3	 * ) )	_	
10	t4402_000	-	$_	_	_	 * ) )	_	
11	t4403_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
12	t4404_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	(LB (VX * ) )	_	
13	t4405_000	verscheiden	VVINF	ver-schèiden	_	(MF (VX * ) )	_	
14	t4406_000	-	$_	_	_	 *	_	
15	t4407_000	die	DRELS	dër	*.Nom.Pl	(PostF (Cl (LB (NX * ) )	_	
16	t4408_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * ) )	_	
17	t4409_000	tâten	VVFIN	tuon	Ind.Past.Pl.3	(RB (VX * ) )	_	
18	t4410_000	leide	NA	lèide	Akk.Sg	(PostF (NX * ) )	_	
19	t4411_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4412_000	dô	AVD	dô	_	(S (Cl (PreF * )	_	
2	t4413_000	nam	VVFIN	nëmen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t4414_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
4	t4415_000	wîp	NA	wîb	Akk.Sg	(NX * )	_	
5	t4416_000	unde	KON	unte	_	 *	_	
6	t4417_000	kint	NA	kind	Akk.Sg	(NX * ) )	_	
7	t4418_000	-	$_	_	_	 * )	_	
8	t4419_000	vuorte	VVFIN	vüèren	*.Past.Sg.3	(Cl (LB (VX * ) )	_	
9	t4420_000	iz	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
10	t4421_000	allez	DID	all	Neut.Akk.Sg.st	 *	_	
11	t4422_000	an	APPR	ane	_	(PPX *	_	
12	t4423_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
13	t4424_000	sint	NA	sind	Akk.Sg	 * ) ) ) )	_	
14	t4425_000	-	$_	_	_	 *	_	
15	t4426_000	als	KO*	all-sô	_	(Frag *	_	
16	t4427_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
17	t4428_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
18	t4429_000	in	APPR	in	_	(MF (PPX *	_	
19	t4429_001	Egiptenlant	NE	Egipte(n)-lant	Dat.Sg	(NX * ) ) )	_	
20	t4430_000	-	$_	_	_	 * ) )	_	
21	t4431_000	die	DDART	dër	Fem.Akk.Sg	(Cl (PreF (NX *	_	
22	t4432_000	gerte	NA	gèrte	Akk.Sg	 * ) )	_	
23	t4433_000	truoc	VVFIN	tragen	Ind.Past.Sg.3	(LB (VX * ) )	_	
24	t4434_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
25	t4435_000	an	APPR	ane	_	(PPX *	_	
26	t4435_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
27	t4436_000	hant	NA	hant	Dat.Sg	 * ) ) ) )	_	
28	t4437_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4438_000	got	NA	got	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t4439_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t4440_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
4	t4441_000	zuo	AVD	zuo	_	 * )	_	
5	t4442_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4443_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t4444_000	sage	VVFIN	sagen	*.Pres.Sg.1	(LB (VX * ) )	_	
3	t4445_000	dir	PPER	dû	Dat.Sg.2	(MF (NX * )	_	
4	t4446_000	rehte	AVD	rëhte	_	 * )	_	
5	t4447_000	wie	AVW	wiè	_	(Frag *	_	
6	t4448_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
7	t4449_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
8	t4450_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4451_000	niewewiht	NA	ni-wiht	Akk.Sg	(S (Frag (NX * )	_	
2	t4452_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX *	_	
3	t4453_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
4	t4454_000	ne	PTKNEG	ne	_	(LB (VX *	_	
5	t4454_001	mîde	VVIMP	mîden	Sg.2	 * ) )	_	
6	t4455_000	-	$_	_	_	 *	_	
7	t4456_000	des	DRELS	dër	Neut.Gen.Sg	(Cl (LB (NX * ) )	_	
8	t4457_000	dir	PPER	dû	Dat.Sg.2	(MF (NX * ) )	_	
9	t4458_000	geboten	VVPP	ge-bièten	_	(RB (VX *	_	
10	t4459_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	 * ) )	_	
11	t4460_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4461_000	vore	APPR	vor(e)	_	(S (Frag (PPX *	_	
2	t4462_000	Pharaoe	NE	Pharao	Dat.Sg	(NX * ) )	_	
3	t4463_000	-	$_	_	_	 * )	_	
4	t4464_000	zeichen	NA	zèichen	Akk.Pl	(Cl (PreF (NX * ) )	_	
5	t4465_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
6	t4466_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
7	t4467_000	schône	AVD	schône	_	 * )	_	
8	t4468_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4469_000	sîn	DPOSA	sîn	Neut.Nom.Sg.0	(S (Frag (NX *	_	
2	t4470_000	herze	NA	hërze	Nom.Sg	 * )	_	
3	t4471_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(VX *	_	
4	t4472_000	erhertet	VVPP	er-hèrten	_	 * )	_	
5	t4473_000	-	$_	_	_	 * )	_	
6	t4474_000	daz	DDART	dër	Neut.Akk.Sg	(Frag (NX *	_	
7	t4475_000	liut	NA	liut	Akk.Sg	 * )	_	
8	t4476_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
9	t4476_001	ne	PTKNEG	ne	_	(LB (VX *	_	
10	t4477_000	læzet	VVFIN	lâzen	Ind.Pres.Sg.3	 * ) )	_	
11	t4478_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4479_000	zuoze	APPR	zuo-ze	_	(S (Cl (PreF (PPX *	_	
2	t4479_001	ime	PPER	ër	Masc.Dat.Sg.3	(NX * ) ) )	_	
3	t4480_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
4	t4481_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
5	t4482_000	queden	VVINF	quëden	_	(RB (VX * ) )	_	
6	t4483_000	-	$_	_	_	 *	_	
7	t4484_000	alsô	KO*	all-sô	_	(Frag *	_	
8	t4485_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
9	t4486_000	iz	PPER	ër	Neut.Akk.Sg.3	(PreF (NX * ) )	_	
10	t4487_000	hâst	VAFIN	haben	*.Pres.Sg.2	(LB (VX * ) )	_	
11	t4488_000	hier	AVD	hièr	_	(MF * )	_	
12	t4489_000	vernomen	VVPP	ver-nëmen	_	(RB (VX * ) )	_	
13	t4490_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4491_000	ze	APPR	ze	_	(S (Cl (PreF (PPX *	_	
2	t4491_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) )	_	
3	t4492_000	geloube	VVIMP	ge-louben	Sg.2	(LB (VX * ) )	_	
4	t4493_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
5	t4494_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
6	t4495_000	mir	PPER	ich	Dat.Sg.1	(NX * ) )	_	
7	t4496_000	-	$_	_	_	 * )	_	
8	t4497_000	got	NA	got	Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t4498_000	sprichet	VVFIN	sprëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t4499_000	zuo	APPR	ze	_	(MF (PPX *	_	
11	t4500_000	dir	PPER	dû	Dat.Sg.2	(NX * ) ) )	_	
12	t4501_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4502_000	mîn	DPOSA	mîn	Masc.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t4503_000	êrester	ADJA	êr(e)st	Sup.Masc.Nom.Sg.st	 *	_	
3	t4504_000	sun	NA	sun	Nom.Sg	 * ) )	_	
4	t4505_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t4506_000	dise	DDA	dise	Fem.Nom.Sg	(MF (NX *	_	
6	t4507_000	diet	NA	dièt	Nom.Sg	 * ) )	_	
7	t4508_000	-	$_	_	_	 * )	_	
8	t4509_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t4510_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t4511_000	mir	PPER	ich	Dat.Sg.1	(MF (NX * )	_	
11	t4512_000	inniclîchen	AVD	innig-lîche	_	 *	_	
12	t4513_000	liep	ADJD	lièb	Pos....0	 * )	_	
13	t4514_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4515_000	den	DDS	dër	Masc.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t4516_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t4517_000	dû	PPER	dû	Nom.Sg.2	(MF (NX *	_	
4	t4518_000	mit	APPR	mit	_	(PPX *	_	
5	t4519_000	gewelte	NA	ge-walt	Dat.Sg	(NX * ) ) ) )	_	
6	t4520_000	-	$_	_	_	 * )	_	
7	t4521_000	langer	AVD	lange	_	(Frag *	_	
8	t4522_000	gehalten	VVPP	halten	_	(VX * )	_	
9	t4523_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4524_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t4525_000	hân	VAFIN	haben	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t4526_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
4	t4527_000	geboten	VVPP	ge-bièten	_	(RB (VX * ) )	_	
5	t4528_000	dir	PPER	dû	Dat.Sg.2	(PostF (NX * ) )	_	
6	t4529_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4530_000	widere	AVD	wider(e)	_	(S (Cl (PreF * )	_	
2	t4531_000	lâs	VVFIN	lâzen	*.Pres.Sg.2	(LB (VX * ) )	_	
3	t4532_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
4	t4533_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
5	t4534_000	mir	PPER	ich	Dat.Sg.1	(NX * ) )	_	
6	t4535_000	-	$_	_	_	 *	_	
7	t4536_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t4537_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
9	t4538_000	mir	PPER	ich	Dat.Sg.1	(NX * ) )	_	
10	t4539_000	diene	VVFIN	diènen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
11	t4540_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4541_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t4542_000	tuost	VVFIN	tuon	*.Pres.Sg.2	(LB (VX * ) )	_	
3	t4543_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
4	t4544_000	mir	PPER	ich	Dat.Sg.1	(NX * )	_	
5	t4545_000	liebe	NA	lièbe	Akk.Sg	(NX * ) )	_	
6	t4546_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4547_000	ne	PTKNEG	ne	_	(S (Cl (LB (VX *	_	
2	t4548_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	 * ) )	_	
3	t4549_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
4	t4550_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) )	_	
5	t4551_000	lâzen	VVINF	lâzen	_	(RB (VX * ) )	_	
6	t4552_000	-	$_	_	_	 * )	_	
7	t4553_000	des	DDS	dër	Neut.Gen.Sg	(Cl (PreF (NX * ) )	_	
8	t4554_000	ne	PTKNEG	ne	_	(LB (VX *	_	
9	t4554_001	maht	VMFIN	mügen	Ind.Pres.Sg.2	 * ) )	_	
10	t4555_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
11	t4556_000	geniezen	VVINF	ge-nièzen	_	(RB (VX * ) )	_	
12	t4557_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4558_000	ne	PTKNEG	ne	_	(S (Cl (LB (VX *	_	
2	t4558_001	lâst	VVFIN	lâzen	Ind.Pres.Sg.2	 * ) )	_	
3	t4559_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
4	t4560_000	mir	PPER	ich	Dat.Sg.1	(NX * )	_	
5	t4561_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
6	t4562_000	mînen	DPOSS	mîn	Masc.Akk.Sg.st	 * ) )	_	
7	t4563_000	-	$_	_	_	 * )	_	
8	t4564_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
9	t4565_000	erslahe	VVFIN	er-slahen	*.Pres.Sg.1	(LB (VX * ) )	_	
10	t4566_000	dir	PPER	dû	Dat.Sg.2	(MF (NX * )	_	
11	t4567_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
12	t4568_000	dînen	DPOSS	dîn	Masc.Akk.Sg.st	 * ) )	_	
13	t4569_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4570_000	nâch	AVD	nâh	_	(S (Cl (PreF * )	_	
2	t4571_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t4572_000	disiu	DDA	dise	Fem.Nom.Sg	(MF (NX *	_	
4	t4573_000	rede	NA	rède	Nom.Sg	 * ) )	_	
5	t4574_000	ergangen	VVPP	er-gân	_	(RB (VX * ) )	_	
6	t4575_000	-	$_	_	_	 *	_	
7	t4576_000	in	APPR	in	_	(Frag (PPX *	_	
8	t4577_000	sîneme	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
9	t4578_000	sune	NA	sun	Dat.Sg	 *	_	
10	t4579_000	jungen	ADJN	jung	Pos.Masc.Dat.Sg.wk	 * ) )	_	
11	t4580_000	-	$_	_	_	 * ) )	_	
12	t4581_000	got	NA	got	Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t4582_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
14	t4583_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
15	t4584_000	hin	AVD	hin(e)	_	 * )	_	
16	t4585_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
17	t4586_000	-	$_	_	_	 * )	_	
18	t4587_000	dô	AVD	dô	_	(Cl (PreF *	_	
19	t4588_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * ) )	_	
20	t4589_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
21	t4590_000	in	APPR	in	_	(MF (PPX *	_	
22	t4591_000	einem	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
23	t4592_000	wege	NA	wëg	Dat.Sg	 * ) ) )	_	
24	t4593_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4594_000	Sephôra	NE	Sèphôra	Nom.Sg	(S (Frag (NX * )	_	
2	t4595_000	diu	DDART	dër	Fem.Nom.Sg	(NX *	_	
3	t4596_000	amme	NA	amme	Nom.Sg	 * )	_	
4	t4597_000	-	$_	_	_	 * )	_	
5	t4598_000	diu	DDS	dër	Fem.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t4599_000	îlt	VVFIN	îlen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t4600_000	ir	PPER	ër	Fem.Dat.Sg.3	(MF (NX * )	_	
8	t4601_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
9	t4602_000	enblanden	VVINF	en-blanten	_	(VX * ) )	_	
10	t4603_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4604_000	si	PPER	ër	Fem.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t4605_000	nam	VVFIN	nëmen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t4606_000	ir	PPER	ër	Fem.Dat.Sg.3	(MF (NX * )	_	
4	t4607_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
5	t4608_000	wassen	ADJA	wass(e)	Pos.Masc.Akk.Sg.*	 *	_	
6	t4609_000	stein	NA	stèin	Akk.Sg	 * ) )	_	
7	t4610_000	-	$_	_	_	 * )	_	
8	t4611_000	si	PPER	ër	Fem.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
9	t4611_001	ne	PTKNEG	ne	_	(LB (VX *	_	
10	t4611_002	hæte	VAFIN	haben	*.Past.Sg.3	 * ) )	_	
11	t4612_000	mezzer	NA	mèzzer	Gen.Pl	(MF (NX * )	_	
12	t4613_000	nechein	DIS	neh-èin	Neut.Akk.Sg.0	(NX * ) )	_	
13	t4614_000	-	$_	_	_	 * )	_	
14	t4615_000	si	PPER	ër	Fem.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
15	t4616_000	besneit	VVFIN	be-snîden	Ind.Past.Sg.3	(LB (VX * ) )	_	
16	t4617_000	des	DDART	dër	Masc.Gen.Sg	(MF (NX *	_	
17	t4618_000	rîchen	ADJA	rîche	Pos.Masc.Gen.Sg.wk	 *	_	
18	t4619_000	küninges	NA	küni(n)g	Gen.Sg	 * )	_	
19	t4620_000	kint	NA	kind	Akk.Sg	(NX * ) )	_	
20	t4621_000	-	$_	_	_	 * )	_	
21	t4622_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
22	t4623_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	(LB (VX * ) )	_	
23	t4624_000	kerclîchiu	ADJA	kèrk-lich	Pos.Neut.Nom.Pl.st	(MF (NX *	_	
24	t4625_000	dinc	NA	ding	Nom.Pl	 * ) )	_	
25	t4626_000	-	$_	_	_	 * )	_	
26	t4627_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
27	t4628_000	ruorte	VVFIN	rüèren	*.Past.Sg.3	(LB (VX * ) )	_	
28	t4629_000	-	$_	_	_	 *	_	
29	t4630_000	vile	AVD	vil(e)	_	(Frag *	_	
30	t4631_000	süeze	ADJD	süèze	Pos....0	 *	_	
31	t4632_000	-	$_	_	_	 * )	_	
32	t4633_000	des	DDART	dër	Neut.Gen.Sg	(Frag (NX *	_	
33	t4634_000	kindelînes	NA	kindelîn	Gen.Sg	 * )	_	
34	t4635_000	vuoze	NA	vuoz	Akk.Pl	(NX * )	_	
35	t4636_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4637_000	si	PPER	ër	Fem.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t4638_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4639_000	ze	APPR	ze	_	(S (Cl (PreF (PPX *	_	
2	t4639_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) )	_	
3	t4640_000	sagen	VVFIN	sagen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
4	t4641_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
5	t4642_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
6	t4643_000	-	$_	_	_	 * )	_	
7	t4644_000	briutegome	NA	briute-gome	Nom.Sg	(Cl (PreF (NX *	_	
8	t4645_000	bluotes	NA	bluot	Gen.Sg	(NX * ) ) )	_	
9	t4646_000	bist	VAFIN	sîn	Ind.Pres.Sg.2	(LB (VX * ) )	_	
10	t4647_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
11	t4648_000	mir	PPER	ich	Dat.Sg.1	(NX * ) )	_	
12	t4649_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4650_000	got	NA	got	Nom.Sg	(S (Frag (NX * )	_	
2	t4651_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
3	t4652_000	nieht	PTKNEG	niht	_	 *	_	
4	t4653_000	hin	AVD	hin(e)	_	(PreF * )	_	
5	t4654_000	nam	VVFIN	nëmen	Ind.Past.Sg.3	(LB (VX * ) )	_	
6	t4655_000	-	$_	_	_	 * )	_	
7	t4656_000	durch	APPR	durh	_	(Frag *	_	
8	t4657_000	sus	AVD	sus	_	 *	_	
9	t4658_000	getânen	ADJA	ge-tân	Pos.Masc.Akk.Sg.*	(NX *	_	
10	t4659_000	namen	NA	name	Akk.Sg	 * )	_	
11	t4660_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4661_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t4662_000	leip	VVFIN	lîben	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t4663_000	dem	DDART	dër	Masc.Dat.Sg	(MF *	_	
4	t4664_000	jungen	ADJA	jung	Pos.Masc.Dat.Sg.wk	 *	_	
5	t4665_000	durch	APPR	durh	_	(PPX *	_	
6	t4666_000	di	DDART	dër	Fem.Akk.Sg	(NX *	_	
7	t4667_000	besnîdunge	NA	be-snîdunge	Akk.Sg	 * ) ) )	_	
8	t4668_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4669_000	got	NA	got	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t4670_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t4671_000	zuo	APPR	ze	_	(MF (PPX *	_	
4	t4672_000	Aarone	NE	Aaron	Dat.Sg	(NX * ) ) )	_	
5	t4673_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4674_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t4675_000	vares	VVFIN	var(e)n	*.Pres.Sg.2	(LB (VX * ) )	_	
3	t4676_000	zuo	APPR	ze	_	(MF (PPX *	_	
4	t4677_000	dîn	DPOSA	dîn	Masc.Dat.Sg.0	(NX *	_	
5	t4678_000	bruodere	NA	bruoder	Dat.Sg	 * ) ) )	_	
6	t4679_000	-	$_	_	_	 *	_	
7	t4680_000	in	APPR	in	_	(Frag (PPX *	_	
8	t4681_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
9	t4682_000	wüeste	NA	wüèste	Akk.Sg	 * ) )	_	
10	t4683_000	verre	AVD	vërre	_	 *	_	
11	t4684_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4685_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t4686_000	tet	VVFIN	tuon	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t4687_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
4	t4688_000	vile	AVD	vil(e)	_	 *	_	
5	t4689_000	gerne	AVD	gërne	_	 * )	_	
6	t4690_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4691_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t4692_000	kom	VVFIN	komen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t4693_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
4	t4694_000	engegene	AVD	en-gègen(e)	_	 * )	_	
5	t4695_000	-	$_	_	_	 *	_	
6	t4696_000	an	APPR	ane	_	(Frag *	_	
7	t4697_000	dem	DDART	dër	Masc.Dat.Sg	 *	_	
8	t4698_000	gotes	NA	got	Gen.Sg	(NX * )	_	
9	t4699_000	berge	NA	bërg	Dat.Sg	(NX * )	_	
10	t4700_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4701_000	minniclîche	AVD	minnig-lîche	_	(S (PreF * )	_	
2	t4702_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
3	t4703_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (NX * ) )	_	
4	t4704_000	kuste	VVFIN	küssen	*.Past.Sg.3	(LB (VX * ) )	_	
5	t4705_000	-	$_	_	_	 *	_	
6	t4706_000	wie	AVW	wiè	_	(Frag *	_	
7	t4707_000	wole	AVD	wol(e)	_	(PreF *	_	
8	t4708_000	sie	PPER	ër	Fem.Akk.Sg.3	(NX *	_	
9	t4709_000	des	DDS	dër	Masc.Gen.Sg	(NX * ) ) )	_	
10	t4710_000	geluste	VVFIN	ge-lüsten	*.Past.Sg.3	(LB (VX * ) )	_	
11	t4711_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4712_000	Mosî	NE	Moses	Nom.Sg	(S (Frag (NX * )	_	
2	t4713_000	ime	PPER	ër	Masc.Dat.Sg.3	(PreF (NX * ) )	_	
3	t4714_000	sagete	VVFIN	sagen	*.Past.Sg.3	(LB (VX * ) )	_	
4	t4715_000	-	$_	_	_	 * )	_	
5	t4716_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
6	t4717_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
7	t4718_000	gesehen	VVPP	sëhen	_	(VX *	_	
8	t4719_000	habete	VAFIN	haben	*.Past.Sg.3	 * )	_	
9	t4720_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4721_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t4722_000	weiz	VVFIN	wizzen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t4723_000	er	PPER	ër	Masc.Nom.Sg.3	(Frag (NX * )	_	
4	t4724_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
5	t4725_000	zelen	VVINF	zèl(e)n	_	(PreF (VX * ) )	_	
6	t4726_000	began	VVFIN	be-ginnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
7	t4727_000	-	$_	_	_	 * ) )	_	
8	t4728_000	al	DIA	all	Neut.Akk.Pl.st	(NX *	_	
9	t4729_000	diu	DDART	dër	Neut.Akk.Pl	 *	_	
10	t4730_000	wort	NA	wort	Akk.Pl	 *	_	
11	t4731_000	diu	DRELS	dër	Neut.Akk.Pl	(Cl (LB (NX * ) )	_	
12	t4732_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
13	t4733_000	vernam	VVFIN	ver-nëmen	Ind.Past.Sg.3	(RB (VX * ) )	_	
14	t4734_000	-	$_	_	_	 * ) )	_	
15	t4735_000	diu	DDART	dër	Neut.Akk.Pl	(NX *	_	
16	t4736_000	zeichen	NA	zèichen	Akk.Pl	 *	_	
17	t4737_000	diu	DRELS	dër	Neut.Akk.Pl	(Cl (LB (NX * ) )	_	
18	t4738_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
19	t4739_000	hæte	VAFIN	haben	*.Past.Sg.3	(RB (VX * ) )	_	
20	t4740_000	-	$_	_	_	 * ) )	_	
21	t4741_000	zuo	APPR	ze	_	(Frag *	_	
22	t4742_000	der	DDART	dër	Fem.Dat.Sg	 *	_	
23	t4743_000	gotes	NA	got	Gen.Sg	(NX * )	_	
24	t4744_000	diete	NA	dièt	Dat.Sg	(NX * )	_	
25	t4745_000	-	$_	_	_	 * )	_	
26	t4746_000	zuo	APPR	ze	_	(Frag (PPX *	_	
27	t4747_000	deme	DDART	dër	Masc.Dat.Sg	(NX *	_	
28	t4748_000	küninge	NA	küni(n)g	Dat.Sg	 * ) )	_	
29	t4749_000	-	$_	_	_	 * )	_	
30	t4750_000	und	KON	unte	_	(Frag *	_	
31	t4751_000	ze	APPR	ze	_	(PPX *	_	
32	t4751_001	aller	DIA	all	Fem.Dat.Sg.st	(NX *	_	
33	t4752_000	sîner	DPOSA	sîn	Fem.Dat.Sg.st	 *	_	
34	t4753_000	menige	NA	mènige	Dat.Sg	 * ) )	_	
35	t4754_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4755_000	dô	KOUS	dô	_	(S (Cl (LB * )	_	
2	t4756_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX *	_	
3	t4757_000	mit	APPR	mit	_	(PPX *	_	
4	t4758_000	minnen	NA	minne	Dat.Pl	(NX * ) ) )	_	
5	t4759_000	-	$_	_	_	 * )	_	
6	t4760_000	komen	VVFIN	komen	*.Pres.Pl.3	(RB (VX * ) )	_	
7	t4761_000	zesamene	AVD	ze-samen(e)	_	(PostF * )	_	
8	t4762_000	-	$_	_	_	 * )	_	
9	t4763_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
10	t4764_000	îlten	VVFIN	îlen	*.Past.Pl.3	(LB (VX * ) )	_	
11	t4765_000	vile	AVD	vil(e)	_	(MF * )	_	
12	t4766_000	-	$_	_	_	 *	_	
13	t4767_000	drâte	AVD	drâte	_	(MF * )	_	
14	t4768_000	-	$_	_	_	 * )	_	
15	t4769_000	zesamene	AVD	ze-samen(e)	_	(Cl (PreF * )	_	
16	t4770_000	sameneten	VVFIN	samenen	*.Past.Pl.3	(LB (VX * ) )	_	
17	t4771_000	die	DDART	dër	*.Nom.Pl	(MF (NX *	_	
18	t4772_000	althêrren	NA	alt-hêrre	Nom.Pl	 *	_	
19	t4773_000	under	APPR	unter	_	(PPX *	_	
20	t4774_000	in	PRF	ër	*.Dat.Pl.st	(NX * ) ) ) )	_	
21	t4775_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4776_000	Aaron	NE	Aaron	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t4777_000	dô	KOUS	dô	_	(LB * )	_	
3	t4778_000	sagete	VVFIN	sagen	*.Past.Sg.3	(RB (VX * ) )	_	
4	t4779_000	in	PPER	ër	*.Dat.Pl.3	(PostF (NX * ) )	_	
5	t4780_000	-	$_	_	_	 *	_	
6	t4781_000	alle	DIA	all	*.Akk.Pl.st	(Frag (NX *	_	
7	t4782_000	die	DDART	dër	*.Akk.Pl	 *	_	
8	t4783_000	lêre	NA	lêre	Akk.Pl	 * )	_	
9	t4784_000	-	$_	_	_	 *	_	
10	t4785_000	die	DRELS	dër	*.Akk.Pl	(Frag (NX * )	_	
11	t4786_000	got	NA	got	Nom.Sg	(NX * )	_	
12	t4787_000	Mosî	NE	Moses	Dat.Sg	(NX * )	_	
13	t4788_000	-	$_	_	_	 * ) )	_	
14	t4789_000	dem	DDART	dër	Masc.Dat.Sg	(Frag (NX *	_	
15	t4790_000	heiligem	ADJA	hèilig	Pos.Masc.Dat.Sg.st	 *	_	
16	t4791_000	manne	NA	mann	Dat.Sg	 * )	_	
17	t4792_000	-	$_	_	_	 * ) )	_	
18	t4793_000	kunt	ADJD	kund	Pos....0	(Frag *	_	
19	t4794_000	hæte	VAFIN	haben	*.Past.Sg.3	(VX *	_	
20	t4795_000	getân	VVPP	tuon	_	 * )	_	
21	t4796_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4797_000	ouch	KO*	ouch	_	(S (Frag *	_	
2	t4798_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
3	t4799_000	offenete	VVFIN	off(en)en	*.Past.Sg.3	(LB (VX * ) )	_	
4	t4800_000	-	$_	_	_	 * )	_	
5	t4801_000	aller	DIA	all	*.Gen.Pl.st	(Frag (NX *	_	
6	t4802_000	der	DDART	dër	*.Gen.Pl	 *	_	
7	t4803_000	diete	NA	dièt	Gen.Pl	 * )	_	
8	t4804_000	-	$_	_	_	 * )	_	
9	t4805_000	zeichen	NA	zèichen	Akk.Pl	(Frag (NX * )	_	
10	t4806_000	vile	AVD	vil(e)	_	 *	_	
11	t4807_000	schône	AVD	schône	_	 *	_	
12	t4808_000	-	$_	_	_	 *	_	
13	t4809_000	die	DRELS	dër	*.Akk.Pl	(Frag (NX * )	_	
14	t4810_000	er	PPER	ër	Masc.Nom.Sg.3	(NX *	_	
15	t4811_000	vone	APPR	von	_	(PPX *	_	
16	t4812_000	gote	NA	got	Dat.Sg	(NX *	_	
17	t4813_000	vrône	NA	vrôn(e)	Dat.Sg	 * ) ) )	_	
18	t4814_000	-	$_	_	_	 * ) )	_	
19	t4815_000	habete	VAFIN	haben	*.Past.Sg.3	(Frag (VX *	_	
20	t4816_000	gewunnen	VVPP	ge-winnen	_	 * )	_	
21	t4817_000	-	$_	_	_	 * )	_	
22	t4818_000	ze	APPR	ze	_	(Frag (PPX *	_	
23	t4818_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
24	t4819_000	gewissunge	NA	ge-wissunge	Dat.Sg	 * ) )	_	
25	t4820_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4821_000	die	DDART	dër	*.Nom.Pl	(S (Frag (NX *	_	
2	t4822_000	juden	NA	jude	Nom.Pl	 * )	_	
3	t4823_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
4	t4824_000	vernâmen	VVFIN	ver-nëmen	Ind.Past.Pl.3	(LB (VX * ) )	_	
5	t4825_000	-	$_	_	_	 * )	_	
6	t4826_000	heie	ITJ	hèi	_	(Frag *	_	
7	t4827_000	wie	AVW	wiè	_	 *	_	
8	t4828_000	vrô	ADJD	vrô	Pos....0	 *	_	
9	t4829_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
10	t4830_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	(LB (VX * ) )	_	
11	t4831_000	-	$_	_	_	 *	_	
12	t4832_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
13	t4833_000	ir	PPER	ër	*.Gen.Pl.3	(MF (NX * )	_	
14	t4834_000	got	NA	got	Nom.Sg	(NX * ) )	_	
15	t4835_000	gedâhte	VVFIN	ge-dènken	Ind.Past.Sg.3	(RB (VX * ) )	_	
16	t4836_000	-	$_	_	_	 * ) )	_	
17	t4837_000	unde	KON	unte	_	(Frag *	_	
18	t4838_000	ire	PPER	ër	*.Gen.Pl.3	(PreF (NX * ) )	_	
19	t4839_000	gewîste	VVFIN	ge-wîsen	*.Past.Sg.3	(LB (VX * ) )	_	
20	t4840_000	-	$_	_	_	 * )	_	
21	t4841_000	mit	AVD	mit(e)	_	(Frag *	_	
22	t4842_000	sus	AVD	sus	_	 *	_	
23	t4843_000	grôzen	ADJA	grôz	Pos.*.Dat.Pl.*	(NX *	_	
24	t4844_000	dingen	NA	ding	Dat.Pl	 * )	_	
25	t4845_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4846_000	sie	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t4847_000	suochten	VVFIN	suochen	*.Past.Pl.3	(LB (VX * ) )	_	
3	t4848_000	ire	DPOSA	ir(e)	Fem.Akk.Sg.0	(MF (NX *	_	
4	t4849_000	venje	NA	vënje	Akk.Sg	 * ) )	_	
5	t4850_000	-	$_	_	_	 * )	_	
6	t4851_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
7	t4852_000	strahten	VVFIN	strècken	*.Past.Pl.3	(LB (VX * ) )	_	
8	t4853_000	sich	PRF	sich	Akk	(MF (NX * )	_	
9	t4854_000	werde	ADJD	wërd	Pos....0	 * )	_	
10	t4855_000	-	$_	_	_	 *	_	
11	t4856_000	nider	AVD	nider(e)	_	(Frag *	_	
12	t4857_000	zuo	APPR	ze	_	(PPX *	_	
13	t4858_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
14	t4859_000	erde	NA	ërde	Dat.Sg	 * ) )	_	
15	t4860_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4861_000	dô	AVD	dô	_	(S (Cl (PreF * )	_	
2	t4862_000	hôrte	VVFIN	hoèren	*.Past.Sg.3	(LB (VX * ) )	_	
3	t4863_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
4	t4864_000	sûftôt	NA	sûftôd	Akk.Sg	(NX * )	_	
5	t4865_000	unde	KON	unte	_	 *	_	
6	t4866_000	wuoft	NA	wuoft	Akk.Sg	(NX * ) )	_	
7	t4867_000	-	$_	_	_	 * )	_	
8	t4868_000	dô	AVD	dô	_	(Cl (PreF * )	_	
9	t4869_000	sach	VVFIN	sëhen	Ind.Past.Sg.3	(LB (VX * ) )	_	
10	t4870_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
11	t4871_000	weinen	NA	wèinen	Akk.Sg	(NX * )	_	
12	t4872_000	genuoc	AVD	ge-nuog(e)	_	 * )	_	
13	t4873_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4874_000	wer	PW	wër	Masc.Nom.Sg.st	(S (Cl (PreF * )	_	
2	t4875_000	mahte	VMFIN	mügen	*.Past.Sg.3	(LB (VX * ) )	_	
3	t4876_000	vüre	PTKVZ	vür(e)/>+bringen	_	(RB (VX *	_	
4	t4876_001	bringen	VVINF	bringen/vür(e)>+	_	 * ) )	_	
5	t4877_000	-	$_	_	_	 * )	_	
6	t4878_000	gesagen	VVINF	ge-sagen	_	(Frag (VX (VX * )	_	
7	t4879_000	oder	KON	oder	_	 *	_	
8	t4880_000	gesingen	VVINF	ge-singen	_	(VX * ) )	_	
9	t4881_000	-	$_	_	_	 * )	_	
10	t4882_000	wie	AVW	wiè	_	(Frag *	_	
11	t4883_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
12	t4884_000	sich	PRF	sich	Akk	(PreF (NX * ) )	_	
13	t4885_000	vröuweten	VVFIN	vröuwen	*.Past.Pl.3	(LB (VX * ) )	_	
14	t4886_000	-	$_	_	_	 *	_	
15	t4887_000	des	DRELS	dër	Neut.Gen.Sg	(Cl (LB (NX * ) )	_	
16	t4888_000	sie	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
17	t4889_000	vernomen	VVPP	ver-nëmen	_	(RB (VX *	_	
18	t4890_000	habeten	VAFIN	haben	*.Past.Pl.3	 * ) )	_	
19	t4891_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4892_000	mit	APPR	mit	_	(S (Frag (PPX *	_	
2	t4893_000	allem	DIA	all	Masc.Dat.Sg.st	(NX *	_	
3	t4894_000	ire	DPOSA	ir(e)	Masc.Dat.Sg.0	 *	_	
4	t4895_000	muote	NA	muot	Dat.Sg	 * ) )	_	
5	t4896_000	-	$_	_	_	 * )	_	
6	t4897_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
7	t4898_000	lobeten	VVFIN	loben	*.Past.Pl.3	(LB (VX * ) )	_	
8	t4899_000	got	NA	got	Akk.Sg	(MF (NX *	_	
9	t4900_000	den	DDART	dër	Masc.Akk.Sg	 *	_	
10	t4901_000	guoten	ADJA	guot	Pos.Masc.Akk.Sg.*	 * ) )	_	
11	t4902_000	-	$_	_	_	 *	_	
12	t4903_000	ime	PPER	ër	Masc.Dat.Sg.3	(Frag (NX * )	_	
13	t4904_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
14	t4905_000	sich	PRF	sich	Akk	(PreF (NX * ) )	_	
15	t4906_000	ergâben	VVFIN	er-gëben	Ind.Past.Pl.3	(LB (VX * ) )	_	
16	t4907_000	-	$_	_	_	 * )	_	
17	t4908_000	ze	APPR	ze	_	(Frag (PPX *	_	
18	t4908_001	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
19	t4909_000	genâden	NA	ge-nâde	Dat.Pl	 * ) )	_	
20	t4910_000	-	$_	_	_	 * )	_	
21	t4911_000	mit	APPR	mit	_	(Frag (PPX *	_	
22	t4912_000	handen	NA	hant	Dat.Pl	(NX * ) )	_	
23	t4913_000	und	KON	unte	_	 *	_	
24	t4914_000	mit	APPR	mit	_	(PPX *	_	
25	t4915_000	munde	NA	mund	Dat.Sg	(NX * ) )	_	
26	t4916_000	-	$_	_	_	 *	_	
27	t4917_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
28	t4918_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
29	t4919_000	si	PPER	ër	*.Akk.Pl.3	(NX * )	_	
30	t4920_000	gesunde	ADJD	ge-sunt	Pos....0	 *	_	
31	t4921_000	-	$_	_	_	 *	_	
32	t4922_000	heim	AVD	hèim	_	 *	_	
33	t4923_000	ze	APPR	ze	_	(PPX *	_	
34	t4923_001	lande	NA	lant	Dat.Sg	(NX * ) ) )	_	
35	t4924_000	brâhte	VVFIN	bringen	Ind.Past.Sg.3	(RB (VX * ) )	_	
36	t4925_000	-	$_	_	_	 * ) ) )	_	
37	t4926_000	als	KO*	all-sô	_	(Frag *	_	
38	t4927_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
39	t4928_000	geredet	VVPP	rèden	_	(VX *	_	
40	t4929_000	hæte	VAFIN	haben	*.Past.Sg.3	 * )	_	
41	t4930_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4931_000	dô	KOUS	dô	_	(S (Cl (LB * )	_	
2	t4932_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
3	t4933_000	dô	AVD	dô	_	 * )	_	
4	t4934_000	gebeteten	VVFIN	ge-bëten	*.Past.Pl.3	(RB (VX * ) )	_	
5	t4935_000	-	$_	_	_	 *	_	
6	t4936_000	sô	AVD	sô	_	(Frag *	_	
7	t4937_000	vile	AVD	vil(e)	_	 *	_	
8	t4938_000	sô	PTK	sô	_	 *	_	
9	t4939_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
10	t4940_000	wolten	VMFIN	wèllen	*.Past.Pl.3	(LB (VX * ) )	_	
11	t4941_000	-	$_	_	_	 * ) )	_	
12	t4942_000	die	DDART	dër	*.Nom.Pl	(Cl (PreF (NX *	_	
13	t4943_000	boten	NA	bote	Nom.Pl	 *	_	
14	t4944_000	beide	DID	bèide	*.Nom.Pl..=.st	 * ) )	_	
15	t4945_000	vuoren	VVFIN	var(e)n	*.Past.Pl.3	(LB (VX * ) )	_	
16	t4946_000	-	$_	_	_	 *	_	
17	t4947_000	ze	APPR	ze	_	(Frag (PPX *	_	
18	t4947_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
19	t4948_000	küninge	NA	küni(n)g	Dat.Sg	 *	_	
20	t4949_000	Pharaoe	NE	Pharao	Dat.Sg	 * ) )	_	
21	t4950_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4951_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t4952_000	sprâchen	VVFIN	sprëchen	Ind.Past.Pl.3	(LB (VX * ) )	_	
3	t4953_000	baltlîche	AVD	bald-lîche	_	(MF * )	_	
4	t4954_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4955_000	uns	PPER	wir	Akk.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t4956_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4957_000	got	NA	got	Nom.Sg	(MF (NX * ) )	_	
4	t4958_000	der	DDART	dër	Masc.Nom.Sg	(Frag *	_	
5	t4959_000	rîche	ADJA	rîche	Pos.Masc.Nom.Sg.wk	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4960_000	-	$_	_	_	(S *	_	
2	t4961_000	beide	DID	bèide	*.Akk.Pl..=.st	(Frag *	_	
3	t4962_000	her	AVD	hër(e)	_	 *	_	
4	t4963_000	zuo	APPR	ze	_	(PPX *	_	
5	t4964_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
6	t4965_000	gesant	VVPP	sènten	_	(VX * )	_	
7	t4966_000	-	$_	_	_	 * )	_	
8	t4967_000	nâch	APPR	nâh	_	(Frag (PPX *	_	
9	t4968_000	sîner	DPOSA	sîn	Fem.Dat.Sg.st	(NX *	_	
10	t4969_000	gewalt	NA	ge-walt	Dat.Sg	 * ) )	_	
11	t4970_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4971_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t4972_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4973_000	dir	PPER	dû	Dat.Sg.2	(MF (NX * )	_	
4	t4974_000	sagen	VVINF	sagen	_	(VX * ) )	_	
5	t4975_000	-	$_	_	_	 * )	_	
6	t4976_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
7	t4977_000	geturren	VMFIN	ge-turren	*.Pres.Pl.1	(LB (VX * ) )	_	
8	t4978_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * ) )	_	
9	t4979_000	verdagen	VVINF	ver-dagen	_	(RB (VX * ) )	_	
10	t4980_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4981_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t4982_000	habest	VAFIN	haben	*.Pres.Sg.2	(LB (VX * ) )	_	
3	t4983_000	dir	PRF	dû	*.Dat.Sg.st	(MF (NX * )	_	
4	t4984_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
5	t4985_000	dînen	DPOSS	dîn	*.Akk.Pl.st	 * ) )	_	
6	t4986_000	-	$_	_	_	 * )	_	
7	t4987_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t4988_000	lazzest	VVFIN	lazzen	*.Pres.Sg.2	(LB (VX * ) )	_	
9	t4989_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
10	t4990_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
11	t4991_000	sînen	DPOSS	sîn	*.Akk.Pl.st	 * ) )	_	
12	t4992_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4993_000	in	APPR	in	_	(S (Cl (PreF (PPX *	_	
2	t4994_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
3	t4995_000	wüeste	NA	wüèste	Akk.Sg	 * ) ) )	_	
4	t4996_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.1	(LB (VX * ) )	_	
5	t4997_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * ) )	_	
6	t4998_000	varen	VVINF	var(e)n	_	(RB (VX * ) )	_	
7	t4999_000	-	$_	_	_	 *	_	
8	t5000_000	drî	CARDA	drî	*.Nom.Pl.st	(Frag (NX *	_	
9	t5001_000	tage	NA	tag	Nom.Pl	 * )	_	
10	t5002_000	vile	AVD	vil(e)	_	 *	_	
11	t5003_000	vram	AVD	vram	_	 *	_	
12	t5004_000	-	$_	_	_	 * ) )	_	
13	t5005_000	opfer	NA	opfer	Akk.Sg	(Cl (PreF (NX * ) )	_	
14	t5006_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.1	(LB (VX * ) )	_	
15	t5007_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * ) )	_	
16	t5008_000	bringen	VVINF	bringen	_	(RB (VX * ) )	_	
17	t5009_000	-	$_	_	_	 *	_	
18	t5010_000	mit	APPR	mit	_	(Frag (PPX *	_	
19	t5011_000	wîben	NA	wîb	Dat.Pl	(NX * ) )	_	
20	t5012_000	unde	KON	unte	_	 *	_	
21	t5013_000	mit	APPR	mit	_	(PPX *	_	
22	t5014_000	kinden	NA	kind	Dat.Pl	(NX * ) )	_	
23	t5015_000	-	$_	_	_	 * )	_	
24	t5016_000	dem	DDART	dër	Masc.Dat.Sg	(Frag (NX *	_	
25	t5017_000	schepfære	NA	schèpfære	Dat.Sg	 * )	_	
26	t5018_000	-	$_	_	_	 * )	_	
27	t5019_000	der	DDART	dër	*.Gen.Pl	(Frag (NX *	_	
28	t5020_000	himele	NA	himel	Gen.Pl	 * )	_	
29	t5021_000	unde	KON	unte	_	 *	_	
30	t5022_000	der	DDART	dër	Fem.Gen.Sg	(NX *	_	
31	t5023_000	erde	NA	ërde	Gen.Sg	 * )	_	
32	t5024_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5025_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t5026_000	berc	NA	bërg	Nom.Sg	 * ) )	_	
3	t5027_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t5028_000	Orep	NE	Oreb	Nom.Sg	(MF (NX * ) )	_	
5	t5029_000	-	$_	_	_	 * )	_	
6	t5030_000	dâ	AVD	dâr	_	(Cl (PreF * )	_	
7	t5031_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t5032_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
9	t5033_000	opfer	NA	opfer	Nom.Sg	 * )	_	
10	t5034_000	vile	AVD	vil(e)	_	 *	_	
11	t5035_000	wert	ADJD	wërd	Pos....0	 * )	_	
12	t5036_000	-	$_	_	_	 * )	_	
13	t5037_000	dâ	AVD	dâr	_	(Cl (PreF * )	_	
14	t5038_000	geben	VVFIN	gëben	*.Pres.Pl.1	(LB (VX * ) )	_	
15	t5039_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * )	_	
16	t5040_000	gote	NA	got	Dat.Sg	(NX * )	_	
17	t5041_000	unsere	DPOSA	unser	Fem.Akk.Sg.st	(NX *	_	
18	t5042_000	gebe	NA	gëbe	Akk.Sg	 * ) )	_	
19	t5043_000	-	$_	_	_	 *	_	
20	t5044_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
21	t5045_000	uns	PPER	wir	Dat.Pl.1	(MF (NX * )	_	
22	t5046_000	niuwewiht	NA	ni-wiht	Nom.Sg	(NX * ) )	_	
23	t5047_000	geschehe	VVFIN	ge-schëhen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
24	t5048_000	-	$_	_	_	 * ) )	_	
25	t5049_000	vone	APPR	von	_	(Frag (PPX *	_	
26	t5050_000	sühte	NA	suht	Dat.Sg	(NX * ) )	_	
27	t5051_000	oder	KON	oder	_	 *	_	
28	t5052_000	swerte	NA	swërt	Dat.Sg	(NX * )	_	
29	t5053_000	-	$_	_	_	 * )	_	
30	t5054_000	an	APPR	ane	_	(Frag (PPX *	_	
31	t5055_000	unserer	DPOSA	unser	Fem.Dat.Sg.st	(NX *	_	
32	t5056_000	heimverte	NA	hèim-vart	Dat.Sg	 * ) )	_	
33	t5057_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5058_000	der	DDS	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t5059_000	vürespreche	NA	vür(e)-sprëche	Nom.Sg	 * )	_	
3	t5060_000	dô	AVD	dô	_	(PreF * )	_	
4	t5061_000	redete	VVFIN	rèden	*.Past.Sg.3	(LB (VX * ) )	_	
5	t5062_000	-	$_	_	_	 * )	_	
6	t5063_000	als	KO*	all-sô	_	(Frag *	_	
7	t5064_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
8	t5065_000	vernomen	VVPP	ver-nëmen	_	(VX *	_	
9	t5066_000	habete	VAFIN	haben	*.Past.Sg.3	 * )	_	
10	t5067_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5068_000	ze	APPR	ze	_	(S (Cl (PreF (PPX *	_	
2	t5068_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) )	_	
3	t5069_000	geloube	VVIMP	ge-louben	Sg.2	(LB (VX * ) )	_	
4	t5070_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
5	t5071_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
6	t5072_000	mir	PPER	ich	Dat.Sg.1	(NX * ) )	_	
7	t5073_000	-	$_	_	_	 * )	_	
8	t5074_000	got	NA	got	Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t5075_000	sprichet	VVFIN	sprëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t5076_000	zuo	APPR	ze	_	(MF (PPX *	_	
11	t5077_000	dir	PPER	dû	Dat.Sg.2	(NX * ) ) )	_	
12	t5078_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5079_000	mîn	DPOSA	mîn	Masc.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t5080_000	êrester	ADJA	êr(e)st	Sup.Masc.Nom.Sg.st	 *	_	
3	t5081_000	sun	NA	sun	Nom.Sg	 * ) )	_	
4	t5082_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t5083_000	dise	DDA	dise	Fem.Nom.Sg	(MF (NX *	_	
6	t5084_000	diet	NA	dièt	Nom.Sg	 * ) )	_	
7	t5085_000	-	$_	_	_	 * )	_	
8	t5086_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t5087_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t5088_000	mir	PPER	ich	Dat.Sg.1	(MF (NX * )	_	
11	t5089_000	inniclîche	AVD	innig-lîche	_	 *	_	
12	t5090_000	liep	ADJD	lièb	Pos....0	 * )	_	
13	t5091_000	-	$_	_	_	 * )	_	
14	t5092_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
15	t5093_000	ne	PTKNEG	ne	_	(LB (VX *	_	
16	t5093_001	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	 * ) )	_	
17	t5094_000	dû	PPER	dû	Nom.Sg.2	(MF (NX *	_	
18	t5095_000	mit	APPR	mit	_	(PPX *	_	
19	t5096_000	gewelte	NA	ge-walt	Dat.Sg	(NX * ) ) ) )	_	
20	t5097_000	-	$_	_	_	 * )	_	
21	t5098_000	langer	AVD	lange	_	(Frag *	_	
22	t5099_000	gehalten	VVPP	halten	_	(VX * )	_	
23	t5100_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5101_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5102_000	hân	VAFIN	haben	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t5103_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
4	t5104_000	geboten	VVPP	ge-bièten	_	(RB (VX * ) )	_	
5	t5105_000	dir	PPER	dû	Dat.Sg.2	(PostF (NX * ) )	_	
6	t5106_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5107_000	widere	AVD	wider(e)	_	(S (Cl (PreF * )	_	
2	t5108_000	lâz	VVFIN	lâzen	*.Pres.Sg.2	(LB (VX * ) )	_	
3	t5109_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
4	t5110_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
5	t5111_000	mir	PPER	ich	Dat.Sg.1	(NX * ) )	_	
6	t5112_000	-	$_	_	_	 *	_	
7	t5113_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t5114_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
9	t5115_000	mir	PPER	ich	Dat.Sg.1	(NX * ) )	_	
10	t5116_000	diene	VVFIN	diènen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
11	t5117_000	-	$_	_	_	 * ) ) )	_	
12	t5118_000	sô	AVD	sô	_	(Cl (PreF * )	_	
13	t5119_000	tuost	VVFIN	tuon	*.Pres.Sg.2	(LB (VX * ) )	_	
14	t5120_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
15	t5121_000	mir	PPER	ich	Dat.Sg.1	(NX * )	_	
16	t5122_000	liebe	AVD	lièbe	_	 * )	_	
17	t5123_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5124_000	ne	PTKNEG	ne	_	(S (Cl (LB (VX *	_	
2	t5124_001	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	 * ) )	_	
3	t5125_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
4	t5126_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) )	_	
5	t5127_000	lâzen	VVINF	lâzen	_	(RB (VX * ) )	_	
6	t5128_000	-	$_	_	_	 * )	_	
7	t5129_000	des	DDS	dër	Neut.Gen.Sg	(Cl (PreF (NX * ) )	_	
8	t5130_000	ne	PTKNEG	ne	_	(LB (VX *	_	
9	t5131_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	 * ) )	_	
10	t5132_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
11	t5133_000	geniezen	VVINF	ge-nièzen	_	(RB (VX * ) )	_	
12	t5134_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5135_000	ne	PTKNEG	ne	_	(S (Cl (LB (VX *	_	
2	t5135_001	lâst	VVFIN	lâzen	Ind.Pres.Sg.2	 * ) )	_	
3	t5136_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
4	t5137_000	mir	PPER	ich	Dat.Sg.1	(NX * )	_	
5	t5138_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
6	t5139_000	mînen	DPOSS	mîn	Masc.Akk.Sg.st	 * ) )	_	
7	t5140_000	-	$_	_	_	 * )	_	
8	t5141_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
9	t5142_000	erslâ	VVFIN	er-slahen	*.Pres.Sg.1	(LB (VX * ) )	_	
10	t5143_000	dir	PPER	dû	Dat.Sg.2	(MF (NX * )	_	
11	t5144_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
12	t5145_000	dînen	DPOSS	dîn	Masc.Akk.Sg.st	 * ) )	_	
13	t5146_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5147_000	der	DDART	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t5148_000	küninc	NA	küni(n)g	Nom.Sg	 * )	_	
3	t5149_000	in	PPER	ër	*.Dat.Pl.3	(PreF (NX * ) )	_	
4	t5150_000	antwurte	VVFIN	ant-würten	*.Past.Sg.3	(LB (VX * ) )	_	
5	t5151_000	-	$_	_	_	 * )	_	
6	t5152_000	mit	APPR	mit	_	(Frag (PPX *	_	
7	t5153_000	lützelen	ADJA	lützel	Pos.*.Dat.Pl.*	(NX *	_	
8	t5154_000	worten	NA	wort	Dat.Pl	 * ) )	_	
9	t5155_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5156_000	ir	PPER	ir	Nom.Pl.2	(S (NX *	_	
2	t5157_000	hêrren	NA	hêrre	Nom.Pl	 * )	_	
3	t5158_000	wer	PW	wër	Masc.Nom.Sg.st	(Cl (PreF * )	_	
4	t5159_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t5160_000	iuwer	DPOSA	iuwer	Masc.Nom.Sg.0	(MF (NX *	_	
6	t5161_000	got	NA	got	Nom.Sg	 * ) )	_	
7	t5162_000	-	$_	_	_	 *	_	
8	t5163_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
9	t5164_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
10	t5165_000	behalte	VVFIN	be-halten	*.Pres.Sg.1	(RB (VX * ) )	_	
11	t5166_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	(PostF (NX *	_	
12	t5167_000	gebot	NA	ge-bot	Akk.Sg	 * ) )	_	
13	t5168_000	-	$_	_	_	 *	_	
14	t5169_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
15	t5170_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
16	t5171_000	lâze	VVFIN	lâzen	*.Pres.Sg.1	(RB (VX * ) )	_	
17	t5172_000	dise	DDA	dise	Fem.Akk.Sg	(PostF (NX *	_	
18	t5173_000	diet	NA	dièt	Akk.Sg	 * ) )	_	
19	t5174_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5175_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t5176_000	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t5176_001	gevolge	VVFIN	ge-volgen	*.Pres.Sg.1	 * ) )	_	
4	t5176_002	es	PPER	ër	Neut.Gen.Sg.3	(MF (NX * )	_	
5	t5177_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
6	t5178_000	nieht	PTKNEG	niht	_	 * )	_	
7	t5179_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5180_000	daz	DDART	dër	Neut.Akk.Sg	(S (Frag (NX *	_	
2	t5181_000	liut	NA	liut	Akk.Sg	 * )	_	
3	t5182_000	ir	PPER	ir	Nom.Pl.2	(PreF (NX * ) )	_	
4	t5183_000	versûmet	VVFIN	ver-sûmen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t5184_000	-	$_	_	_	 * )	_	
6	t5185_000	mîn	DPOSA	mîn	Masc.Nom.Sg.0	(Frag (NX *	_	
7	t5186_000	dienest	NA	diènest	Nom.Sg	 * )	_	
8	t5187_000	ir	PPER	ir	Nom.Pl.2	(NX * )	_	
9	t5188_000	mir	PPER	ich	Dat.Sg.1	(PreF (NX * ) )	_	
10	t5189_000	irret	VVFIN	irren	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t5190_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5191_000	sus	AVD	sus	_	(S (Frag *	_	
2	t5192_000	getân	ADJA	ge-tân	Pos.Neut.Nom.Sg.0	(NX *	_	
3	t5193_000	gekoese	NA	ge-koèse	Nom.Sg	 * )	_	
4	t5194_000	-	$_	_	_	 * )	_	
5	t5195_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t5196_000	dunket	VVFIN	dunken	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t5197_000	mich	PPER	ich	Akk.Sg.1	(MF (NX * )	_	
8	t5198_000	sô	PTK	sô	_	 *	_	
9	t5199_000	boese	AVD	boèse	_	 * )	_	
10	t5200_000	-	$_	_	_	 * )	_	
11	t5201_000	iz	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
12	t5202_000	en	PTKNEG	ne	_	(LB (VX *	_	
13	t5202_001	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
14	t5203_000	niuwewihtes	NA	ni-wiht	Gen.Sg	(MF (NX * )	_	
15	t5204_000	wert	AVD	wërt	_	 * )	_	
16	t5205_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5206_000	vart	VVIMP	var(e)n	Pl.2	(S (LB (VX * ) )	_	
2	t5207_000	würket	VVFIN	wirken	*.Pres.Pl.2	(Cl (LB (VX * ) )	_	
3	t5208_000	iuwer	DPOSA	iuwer	Neut.Akk.Sg.0	(MF (NX *	_	
4	t5209_000	werc	NA	wërk	Akk.Sg	 * ) )	_	
5	t5210_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5211_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t5212_000	küninc	NA	küni(n)g	Nom.Sg	 * ) )	_	
3	t5213_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t5213_001	lûte	AVD	lûte	_	(MF * )	_	
5	t5214_000	-	$_	_	_	 *	_	
6	t5215_000	ze	APPR	ze	_	(Frag (PPX *	_	
7	t5215_001	aller	DIA	all	Fem.Dat.Sg.st	(NX *	_	
8	t5216_000	sîner	DPOSA	sîn	Fem.Dat.Sg.st	 *	_	
9	t5217_000	diete	NA	dièt	Dat.Sg	 * ) )	_	
10	t5218_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5219_000	iz	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t5220_000	en	PTKNEG	ne	_	(LB (VX *	_	
3	t5220_001	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
4	t5221_000	niuwewihtes	NA	ni-wiht	Gen.Sg	(MF (NX * )	_	
5	t5222_000	wert	ADJD	wërd	Pos....0	 * )	_	
6	t5223_000	-	$_	_	_	 * )	_	
7	t5224_000	ir	PPER	ir	Nom.Pl.2	(Cl (PreF (NX * ) )	_	
8	t5225_000	sehet	VVFIN	sëhen	*.Pres.Pl.2	(LB (VX * ) )	_	
9	t5226_000	wole	AVD	wol(e)	_	(MF * )	_	
10	t5227_000	wie	AVW	wiè	_	(Frag *	_	
11	t5228_000	iz	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
12	t5229_000	vert	VVFIN	var(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t5230_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5231_000	des	DDART	dër	Neut.Gen.Sg	(S (Frag (NX *	_	
2	t5232_000	liutes	NA	liut	Gen.Sg	 * )	_	
3	t5233_000	ist	NA	ist	Nom.Sg	(NX * )	_	
4	t5234_000	worden	VAPP	wërden	_	(VX * )	_	
5	t5235_000	vile	AVD	vil(e)	_	 *	_	
6	t5236_000	-	$_	_	_	 * )	_	
7	t5237_000	niene	AVD	niène	_	(Cl (PreF * )	_	
8	t5238_000	lîbet	VVFIN	lîben	*.Pres.Pl.2	(LB (VX * ) )	_	
9	t5239_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * )	_	
10	t5240_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * ) )	_	
11	t5241_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5242_000	gebet	VVFIN	gëben	*.Pres.Pl.2	(S (Cl (LB (VX * ) )	_	
2	t5243_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * )	_	
3	t5244_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
4	t5245_000	ruowe	NA	ruowe	Akk.Sg	(NX * ) )	_	
5	t5246_000	-	$_	_	_	 * )	_	
6	t5247_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
7	t5248_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t5249_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * )	_	
9	t5250_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
10	t5251_000	genâde	NA	ge-nâde	Akk.Sg	(NX * ) )	_	
11	t5252_000	-	$_	_	_	 * )	_	
12	t5253_000	sô	AVD	sô	_	(Cl (PreF * )	_	
13	t5254_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t5255_000	ire	PPER	ër	Fem.Gen.Sg.3	(MF (NX * )	_	
15	t5256_000	vile	AVD	vil(e)	_	 *	_	
16	t5257_000	mêrer	AVD	mêr(e)	Comp	 * )	_	
17	t5258_000	-	$_	_	_	 *	_	
18	t5259_000	ze	APPR	ze	_	(Frag (PPX *	_	
19	t5259_001	unsereme	DPOSA	unser	Masc.Dat.Sg.st	(NX *	_	
20	t5260_000	sêre	NA	sêr	Dat.Sg	 * ) )	_	
21	t5261_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5262_000	nû	AVD	nû	_	(S (Cl (PreF (PreF * ) )	_	
2	t5262_001	vernemet	VVFIN	ver-nëmen	*.Pres.Pl.2	(LB (VX * ) )	_	
3	t5263_000	wie	AVW	wiè	_	(PreF (MF *	_	
4	t5264_000	ir	PPER	ir	Nom.Pl.2	(NX * ) ) )	_	
5	t5265_000	tuot	VVFIN	tuon	Ind.Pres.Pl.2	(LB (VX * ) )	_	
6	t5266_000	-	$_	_	_	 * )	_	
7	t5267_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t5268_000	dunket	VVFIN	dunken	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t5269_000	mich	PPER	ich	Akk.Sg.1	(MF (NX * )	_	
10	t5270_000	inniclîche	AVD	innig-lîche	_	 *	_	
11	t5271_000	guot	ADJD	guot	Pos....0	 * )	_	
12	t5272_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5273_000	ir	PPER	ir	Nom.Pl.2	(S (Cl (PreF (NX * ) )	_	
2	t5274_000	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t5274_001	solte	VMFIN	sol(e)n	*.Past.Sg.3	 * ) )	_	
4	t5275_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
5	t5276_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
6	t5277_000	-	$_	_	_	 *	_	
7	t5278_000	swie	AVG	swiè	_	(PostF (Cl (LB * )	_	
8	t5279_000	übele	AVD	übel(e)	_	(MF *	_	
9	t5280_000	sô	KO*	sô	_	 *	_	
10	t5281_000	si	PPER	ër	*.Nom.Pl.3	(NX * ) )	_	
11	t5282_000	leben	VVFIN	lëben	*.Pres.Pl.3	(RB (VX * ) )	_	
12	t5283_000	-	$_	_	_	 * ) )	_	
13	t5284_000	daz	DDART	dër	Neut.Akk.Sg	(Frag (NX *	_	
14	t5285_000	strô	NA	strôw	Akk.Sg	 *	_	
15	t5286_000	ze	APPR	ze	_	(PPX *	_	
16	t5286_001	deme	DDART	dër	Neut.Dat.Sg	(NX *	_	
17	t5287_000	viure	NA	viur	Dat.Sg	 * ) ) )	_	
18	t5288_000	-	$_	_	_	 * )	_	
19	t5289_000	ze	APPR	ze	_	(Frag (PPX *	_	
20	t5289_001	der	DDART	dër	*.Gen.Pl	(NX *	_	
21	t5290_000	ziegel	NA	ziègel	Gen.Pl	 * ) )	_	
22	t5291_000	stiure	NA	stiure	Dat.Sg	(NX * )	_	
23	t5292_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5293_000	lât	VVIMP	lâzen	Pl.2	(S (Cl (LB (VX * ) )	_	
2	t5294_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX *	_	
3	t5295_000	selbe	DDD	sëlb	*.Nom.Pl..=.st	 * )	_	
4	t5296_000	samenen	VVINF	samenen	_	(VX * ) )	_	
5	t5297_000	-	$_	_	_	 *	_	
6	t5298_000	stumpfe	NA	stumpf(e)	Akk.Pl	(Frag (NX * )	_	
7	t5299_000	unde	KON	unte	_	 *	_	
8	t5300_000	halme	NA	halm	Akk.Pl	(NX * )	_	
9	t5301_000	-	$_	_	_	 * )	_	
10	t5302_000	ze	APPR	ze	_	(Frag (PPX *	_	
11	t5302_001	der	DDART	dër	*.Gen.Pl	(NX *	_	
12	t5303_000	ziegel	NA	ziègel	Gen.Pl	 * ) )	_	
13	t5304_000	eitere	NA	èiter	Dat.Sg	(NX * )	_	
14	t5305_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5306_000	selbe	DDD	sëlb	Fem.Akk.Sg.st	(S (Frag *	_	
2	t5307_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
3	t5308_000	si	PPER	ër	*.Akk.Pl.3	(PreF (NX * ) )	_	
4	t5309_000	leitten	VVFIN	lèiten	*.Past.Pl.3	(LB (VX * ) )	_	
5	t5310_000	-	$_	_	_	 * )	_	
6	t5311_000	unde	KON	unte	_	(Frag *	_	
7	t5312_000	iedoch	AVD	iè-doh	_	 *	_	
8	t5313_000	aller	AVD	aller	_	 *	_	
9	t5314_000	tagelîche	AVD	tage-lîche	_	 *	_	
10	t5315_000	-	$_	_	_	 * )	_	
11	t5316_000	sô	AVD	sô	_	(Cl (PreF * )	_	
12	t5317_000	gebe	VVFIN	gëben	Subj.Pres.Sg.3	(LB (VX * ) )	_	
13	t5318_000	maniclich	ADJD	manig-lich	Pos....0	(MF * )	_	
14	t5319_000	-	$_	_	_	 *	_	
15	t5320_000	sîne	DPOSA	sîn	Fem.Akk.Sg.st	(Frag (NX *	_	
16	t5321_000	zale	NA	zal(e)	Akk.Sg	 * )	_	
17	t5322_000	gare	AVD	gar(e)	_	 *	_	
18	t5323_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5324_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t5325_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.1	(LB (VX * ) )	_	
3	t5326_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * )	_	
4	t5327_000	in	PPER	ër	*.Akk.Pl.3	(NX * ) )	_	
5	t5328_000	mite	PTKVZ	mit(e)/>+var(e)n	_	(RB (VX *	_	
6	t5329_000	varen	VVINF	var(e)n/mit(e)>+	_	 * ) )	_	
7	t5330_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5331_000	wande	KO*	wante	_	(S (Frag *	_	
2	t5332_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
3	t5333_000	arbeite	NA	arbèit	Akk.Pl	(PreF (NX * ) )	_	
4	t5334_000	ne	PTKNEG	ne	_	(LB (VX *	_	
5	t5334_001	habent	VAFIN	haben	Ind.Pres.Pl.3	 * ) )	_	
6	t5335_000	-	$_	_	_	 * )	_	
7	t5336_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
8	t5337_000	vîrent	VVFIN	vîren	Ind.Pres.Pl.3	(LB (VX (VX * )	_	
9	t5338_000	unde	KON	unte	_	 *	_	
10	t5339_000	klagent	VVFIN	klagen	Ind.Pres.Pl.3	(VX * ) ) )	_	
11	t5340_000	-	$_	_	_	 * )	_	
12	t5341_000	und	KON	unte	_	(Cl (PrePreF * )	_	
13	t5342_000	quedent	VVFIN	quëden	Ind.Pres.Pl.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5343_000	wir	PPER	wir	Nom.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t5344_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.1	(LB (VX * ) )	_	
3	t5345_000	varen	VVINF	var(e)n	_	(RB (VX * ) )	_	
4	t5346_000	-	$_	_	_	 * )	_	
5	t5347_000	opfer	NA	opfer	Akk.Pl	(Frag (NX * )	_	
6	t5348_000	gote	NA	got	Dat.Sg	(NX * )	_	
7	t5349_000	bringen	VVINF	bringen	_	(VX * )	_	
8	t5350_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5351_000	nû	KOUS	nû	_	(S (Cl (LB * )	_	
2	t5352_000	tuon	VVFIN	tuon	*.Pres.Pl.1	(RB (VX * ) )	_	
3	t5353_000	wir	PPER	wir	Nom.Pl.1	(PostF (NX * )	_	
4	t5354_000	in	PPER	ër	*.Dat.Pl.3	(NX * )	_	
5	t5355_000	sô	AVD	sô	_	 *	_	
6	t5356_000	wê	AVD	wê	_	 * )	_	
7	t5357_000	-	$_	_	_	 * )	_	
8	t5358_000	mit	AVD	mit(e)	_	(Cl (PreF *	_	
9	t5359_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
10	t5360_000	werkes	VVFIN	wërken	*.Pres.Sg.2	(LB (VX * ) )	_	
11	t5361_000	sêre	NA	sêr	Dat.Sg	(MF (NX * ) )	_	
12	t5362_000	-	$_	_	_	 *	_	
13	t5363_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
14	t5364_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
15	t5365_000	mêrer	AVD	mêr(e)	Comp	 * )	_	
16	t5365_001	ne	PTKNEG	ne	_	(RB (VX *	_	
17	t5366_000	volgen	VVFIN	volgen	*.Pres.Pl.3	 * ) )	_	
18	t5367_000	-	$_	_	_	 * ) )	_	
19	t5368_000	sus	AVD	sus	_	(Frag *	_	
20	t5369_000	getânen	ADJA	ge-tân	Pos.*.Dat.Pl.*	(NX *	_	
21	t5370_000	spellen	NA	spëll	Dat.Pl	 * )	_	
22	t5371_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5372_000	des	DDART	dër	Masc.Gen.Sg	(S (Frag (NX *	_	
2	t5373_000	küninges	NA	küni(n)g	Gen.Sg	 * )	_	
3	t5374_000	holden	ADJA	hold	Pos.*.Nom.Pl..%.wk	(PreF * )	_	
4	t5375_000	tâten	VVFIN	tuon	Ind.Past.Pl.3	(LB (VX * ) )	_	
5	t5376_000	-	$_	_	_	 * )	_	
6	t5377_000	sô	KO*	sô	_	(Frag *	_	
7	t5378_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
8	t5379_000	vernomen	VVPP	ver-nëmen	_	(VX *	_	
9	t5380_000	hâten	VAFIN	haben	Ind.Past.Pl.3	 * )	_	
10	t5381_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5382_000	sie	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t5383_000	dwungen	VVFIN	dwingen	*.Past.Pl.3	(LB (VX * ) )	_	
3	t5384_000	vile	AVD	vil(e)	_	(MF *	_	
4	t5385_000	starke	AVD	starke	_	 * )	_	
5	t5386_000	-	$_	_	_	 *	_	
6	t5387_000	daz	DDART	dër	Neut.Akk.Sg	(Frag (NX *	_	
7	t5388_000	liut	NA	liut	Akk.Sg	 *	_	
8	t5389_000	zuo	APPR	ze	_	(PPX *	_	
9	t5390_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
10	t5391_000	werke	NA	wërk	Dat.Sg	 * ) ) )	_	
11	t5392_000	-	$_	_	_	 * )	_	
12	t5393_000	mit	APPR	mit	_	(Frag (PPX *	_	
13	t5394_000	slegen	NA	slag	Dat.Pl	(NX * ) )	_	
14	t5395_000	unde	KON	unte	_	 *	_	
15	t5396_000	stôzen	NA	stôz	Dat.Pl	(NX * )	_	
16	t5397_000	-	$_	_	_	 * )	_	
17	t5398_000	wunderlîchen	ADJA	wunter-lich	Pos.*.Dat.Pl.*	(Frag *	_	
18	t5399_000	grôzen	ADJN	grôz	Pos.*.Dat.Pl.*	 *	_	
19	t5400_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5401_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t5402_000	entviengen	VVFIN	ent-vâhen	*.Past.Pl.3	(LB (VX * ) )	_	
3	t5403_000	vile	AVD	vil(e)	_	(MF *	_	
4	t5404_000	manigen	DIA	manig	Masc.Akk.Sg.st	(NX *	_	
5	t5405_000	slac	NA	slag	Akk.Sg	 * ) )	_	
6	t5406_000	-	$_	_	_	 * )	_	
7	t5407_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
8	t5408_000	worhten	VVFIN	wirken	*.Past.Pl.3	(LB (VX * ) )	_	
9	t5409_000	tac	NA	tag	Nom.Sg	(MF (NX * )	_	
10	t5410_000	unde	KON	unte	_	 *	_	
11	t5411_000	naht	NA	naht	Nom.Sg	(NX * ) )	_	
12	t5412_000	-	$_	_	_	 *	_	
13	t5413_000	mit	APPR	mit	_	(Frag (PPX *	_	
14	t5414_000	micheler	ADJA	michel	Pos.Fem.Dat.Sg.st	(NX *	_	
15	t5415_000	riuwe	NA	riuwe	Dat.Sg	 * ) )	_	
16	t5416_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5417_000	alte	ADJA	alt	Pos.*.Nom.Pl..%.st	(S (Frag *	_	
2	t5418_000	und	KON	unte	_	 *	_	
3	t5419_000	junge	ADJA	jung	Pos.*.Nom.Pl..%.st	 *	_	
4	t5420_000	-	$_	_	_	 * )	_	
5	t5421_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
6	t5422_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
7	t5423_000	gesunt	ADJD	ge-sunt	Pos....0	(MF *	_	
8	t5424_000	oder	KON	oder	_	 *	_	
9	t5425_000	siech	ADJD	sièch	Pos....0	 * )	_	
10	t5426_000	-	$_	_	_	 * )	_	
11	t5427_000	man	PI	man	*.Nom.Sg.st	(Cl (PreF (NX * ) )	_	
12	t5428_000	ne	PTKNEG	ne	_	(LB (VX *	_	
13	t5429_000	leip	VVFIN	lîben	Ind.Past.Sg.3	 * ) )	_	
14	t5430_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
15	t5431_000	nieht	PTKNEG	niht	_	 * )	_	
16	t5432_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5433_000	nieman	DIA	niè-mann	*.Akk.Sg.st	(S (Frag *	_	
2	t5434_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
3	t5434_001	ne	PTKNEG	ne	_	(LB (VX *	_	
4	t5434_002	scherten	VVFIN	schèr(e)n	*.Past.Pl.3	 * ) )	_	
5	t5435_000	-	$_	_	_	 *	_	
6	t5436_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX * ) )	_	
7	t5437_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
8	t5438_000	gewalt	NA	ge-walt	Akk.Sg	 * ) )	_	
9	t5439_000	habeten	VAFIN	haben	*.Past.Pl.3	(RB (VX * ) )	_	
10	t5440_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5441_000	die	DDART	dër	*.Akk.Pl	(S (Frag (NX *	_	
2	t5442_000	meistere	NA	mèister	Akk.Pl	 * )	_	
3	t5443_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
4	t5444_000	bliuwen	VVFIN	bliuwen	*.Pres.Pl.3	(LB (VX * ) )	_	
5	t5445_000	-	$_	_	_	 * )	_	
6	t5446_000	unsamfte	AVD	un-samfte	_	(Cl (PreF * )	_	
7	t5447_000	dwingen	VVFIN	dwingen	*.Pres.Pl.3	(LB (VX * ) )	_	
8	t5448_000	-	$_	_	_	 * )	_	
9	t5449_000	swâ	AVG	swâr	_	(Cl (LB * )	_	
10	t5450_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
11	t5451_000	semfte	ADJD	sèmfte	Pos....0	 * )	_	
12	t5452_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	(RB (VX * ) )	_	
13	t5453_000	-	$_	_	_	 *	_	
14	t5454_000	den	DDART	dër	*.Dat.Pl	(Frag (NX *	_	
15	t5455_000	ire	DPOSA	ir(e)	*.Dat.Pl.0	 *	_	
16	t5456_000	undertânen	NA	unter-tân	Dat.Pl	 * )	_	
17	t5457_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5458_000	sprâchen	VVFIN	sprëchen	Ind.Past.Pl.3	(S (LB (VX * ) )	_	
2	t5459_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
3	t5459_001	ne	PTKNEG	ne	_	(LB (VX *	_	
4	t5459_002	solten	VMFIN	sol(e)n	*.Past.Pl.3	 * ) )	_	
5	t5460_000	twellen	VVINF	twèllen	_	(RB (VX * ) )	_	
6	t5461_000	-	$_	_	_	 * )	_	
7	t5462_000	den	DDART	dër	Masc.Akk.Sg	(Frag (NX *	_	
8	t5463_000	ziegel	NA	ziègel	Akk.Sg	 * )	_	
9	t5464_000	wider	AVD	wider	_	 *	_	
10	t5465_000	zelen	VVINF	zèl(e)n	_	(VX * )	_	
11	t5466_000	-	$_	_	_	 * )	_	
12	t5467_000	mit	AVD	mit(e)	_	(Frag *	_	
13	t5468_000	alsolich	DIA	all-so-l(i)ch	Masc.Dat.Sg.st	(NX *	_	
14	t5469_000	vollen	NA	volle	Dat.Sg	 * )	_	
15	t5470_000	-	$_	_	_	 * )	_	
16	t5471_000	sô	KO*	sô	_	(Frag *	_	
17	t5472_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
18	t5473_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	(LB (VX * ) )	_	
19	t5474_000	êr	AVD	êr	_	(MF *	_	
20	t5475_000	gewon	ADJD	ge-won(e)	Pos....0	 * )	_	
21	t5476_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5477_000	ze	APPR	ze	_	(S (Cl (PreF (PPX *	_	
2	t5477_001	Pharaone	NE	Pharao	Dat.Sg	(NX * ) ) )	_	
3	t5478_000	komen	VVFIN	komen	*.Pres.Pl.3	(LB (VX * ) )	_	
4	t5479_000	-	$_	_	_	 * )	_	
5	t5480_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX *	_	
6	t5481_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
7	t5482_000	werkes	NA	wërk	Gen.Sg	 * ) ) )	_	
8	t5483_000	pflâgen	VVFIN	pflëgen	Ind.Past.Pl.3	(RB (VX * ) )	_	
9	t5484_000	-	$_	_	_	 * )	_	
10	t5485_000	wânten	VVFIN	wænen	*.Past.Pl.3	(LB (VX * ) )	_	
11	t5486_000	daz	KOUS	dazz	_	(Frag *	_	
12	t5487_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
13	t5488_000	vunden	VVPP	vinden	_	(VX * )	_	
14	t5489_000	-	$_	_	_	 * )	_	
15	t5490_000	sîner	DPOSA	sîn	Fem.Gen.Sg.st	(Frag (NX *	_	
16	t5491_000	barmunge	NA	barmunge	Gen.Sg	 * )	_	
17	t5492_000	-	$_	_	_	 * )	_	
18	t5493_000	über	APPR	über	_	(Frag (PPX *	_	
19	t5494_000	ire	DPOSA	ir(e)	*.Akk.Pl.0	(NX *	_	
20	t5495_000	smerze	NA	smërze	Akk.Pl	 * ) )	_	
21	t5496_000	-	$_	_	_	 * )	_	
22	t5497_000	sîne	DPOSA	sîn	Fem.Akk.Sg.st	(Frag (NX *	_	
23	t5498_000	barmherze	NA	barm-hërze	Akk.Sg	 * )	_	
24	t5499_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5500_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t5501_000	begunden	VVFIN	be-ginnen	*.Past.Pl.3	(LB (VX * ) )	_	
3	t5502_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
4	t5503_000	klagen	VVINF	klagen	_	(VX * ) )	_	
5	t5504_000	-	$_	_	_	 * )	_	
6	t5505_000	heize	AVD	hèize	_	(Frag *	_	
7	t5506_000	weinende	ADJD	wèinente	Pos....0	 *	_	
8	t5507_000	sagen	VVINF	sagen	_	(VX * )	_	
9	t5508_000	-	$_	_	_	 * )	_	
10	t5509_000	mit	APPR	mit	_	(Frag (PPX *	_	
11	t5510_000	michelen	ADJA	michel	Pos.*.Dat.Pl.*	(NX *	_	
12	t5511_000	riuwen	NA	riuwe	Dat.Pl	 * ) )	_	
13	t5512_000	-	$_	_	_	 * )	_	
14	t5513_000	si	PPER	ër	*.Nom.Pl.3	(Frag (NX * )	_	
15	t5514_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	(VX *	_	
16	t5515_000	zeblûwen	VVPP	zer-bliuwen	_	 * )	_	
17	t5516_000	-	$_	_	_	 * )	_	
18	t5517_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
19	t5518_000	habeten	VAFIN	haben	*.Past.Pl.3	(LB (VX * ) )	_	
20	t5519_000	vile	AVD	vil(e)	_	(MF *	_	
21	t5520_000	grôze	ADJA	grôz	Pos.Fem.Akk.Sg.st	(NX *	_	
22	t5521_000	nôt	NA	nôt	Akk.Sg	 * ) )	_	
23	t5522_000	-	$_	_	_	 * )	_	
24	t5523_000	ire	DPOSA	ir(e)	*.Nom.Pl.0	(Cl (PreF (NX *	_	
25	t5524_000	werc	NA	wërk	Nom.Pl	 * ) )	_	
26	t5525_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
27	t5526_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
28	t5527_000	gemêrt	VVPP	ge-mêren	_	(RB (VX * ) )	_	
29	t5528_000	in	APPR	in	_	(Frag (PPX *	_	
30	t5529_000	aller	DIA	all	Fem.Gen.Sg.st	(NX *	_	
31	t5530_000	slahte	NA	slahte	Gen.Sg	 * ) )	_	
32	t5531_000	wîse	NA	wîs(e)	Dat.Sg	(NX * )	_	
33	t5532_000	-	$_	_	_	 * ) )	_	
34	t5533_000	abe	PTKVZ	abe/>+nëmen	_	(Frag (VX *	_	
35	t5534_000	genomen	VVPP	nëmen/abe>+	_	 * )	_	
36	t5535_000	diu	DDART	dër	Fem.Nom.Sg	(NX *	_	
37	t5536_000	spîse	NA	spîse	Nom.Sg	 * )	_	
38	t5537_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5538_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t5539_000	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t5539_001	lîbest	VVFIN	lîben	*.Pres.Sg.2	 * ) )	_	
4	t5540_000	uns	PPER	wir	Akk.Pl.1	(PreF (MF (NX * ) ) )	_	
5	t5541_000	weiz	VVFIN	wizzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t5542_000	got	NA	got	Nom.Sg	(MF (NX * ) )	_	
7	t5543_000	-	$_	_	_	 * )	_	
8	t5544_000	uns	PPER	wir	Akk.Pl.1	(Cl (PreF (NX * ) )	_	
9	t5545_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
10	t5546_000	bezzere	ADJA	bèzzer	Comp.Masc.Nom.Sg.wk	(MF (NX *	_	
11	t5547_000	der	DDS	dër	Masc.Nom.Sg	 *	_	
12	t5548_000	tôt	NA	tôd	Nom.Sg	 * ) )	_	
13	t5549_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5550_000	wir	PPER	wir	Nom.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t5551_000	sîn	VAFIN	sîn	*.Pres.Pl.1	(LB (VX * ) )	_	
3	t5552_000	dîne	DPOSA	dîn	*.Nom.Pl.st	(MF (NX *	_	
4	t5553_000	schalke	NA	schalk	Nom.Pl	 * ) )	_	
5	t5554_000	-	$_	_	_	 * )	_	
6	t5555_000	dû	PPER	dû	Nom.Sg.2	(Cl (PreF (NX * ) )	_	
7	t5556_000	ruoche	VVIMP	ruochen	Sg.2	(LB (VX * ) )	_	
8	t5557_000	uns	PPER	wir	Akk.Pl.1	(MF (NX * )	_	
9	t5558_000	behalten	VVINF	be-halten	_	(VX * ) )	_	
10	t5559_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5560_000	nû	KOUS	nû	_	(S (Cl (LB * )	_	
2	t5561_000	lîp	VVIMP	lîben	Sg.2	(RB (VX * ) )	_	
3	t5562_000	uns	PPER	wir	Akk.Pl.1	(PostF (NX * )	_	
4	t5563_000	hêrre	NA	hêrre	Nom.Sg	(NX *	_	
5	t5564_000	eteswaz	DIA	ëte(s)-wër	Neut.Nom.Sg.st	 * ) )	_	
6	t5565_000	-	$_	_	_	 *	_	
7	t5566_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t5567_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * ) )	_	
9	t5568_000	dienen	VVFIN	diènen	*.Pres.Pl.1	(RB (VX * ) )	_	
10	t5569_000	-	$_	_	_	 * ) )	_	
11	t5570_000	deste	AVD	dëste	_	(Frag *	_	
12	t5571_000	bazzer	AVD	bazz	Comp	 *	_	
13	t5572_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5573_000	der	DDART	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t5574_000	küninc	NA	küni(n)g	Nom.Sg	 * )	_	
3	t5575_000	in	PPER	ër	*.Dat.Pl.3	(PreF (NX * ) )	_	
4	t5576_000	antwurte	VVFIN	ant-würten	*.Past.Sg.3	(LB (VX * ) )	_	
5	t5577_000	-	$_	_	_	 * )	_	
6	t5578_000	mit	AVD	mit(e)	_	(Frag *	_	
7	t5579_000	zornlîchen	ADJA	zorn-lich	Pos.*.Dat.Pl.*	(NX *	_	
8	t5580_000	worten	NA	wort	Dat.Pl	 * )	_	
9	t5581_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5582_000	ir	PPER	ir	Nom.Pl.2	(S (Cl (PreF (NX * ) )	_	
2	t5583_000	gêt	VVFIN	gân	*.Pres.Pl.2	(LB (VX * ) )	_	
3	t5584_000	müezic	ADJD	müèzig	Pos....0	(MF *	_	
4	t5585_000	alle	DIA	all	*.Nom.Pl.st	(NX *	_	
5	t5586_000	tage	NA	tag	Nom.Pl	 * ) )	_	
6	t5587_000	-	$_	_	_	 * )	_	
7	t5588_000	von	APPR	von	_	(Cl (PreF (PPX *	_	
8	t5589_000	diu	DDS	dër	*.Instr.Sg	(NX * ) ) )	_	
9	t5590_000	hoer	VVFIN	hoèren	Ind.Pres.Sg.1	(LB (VX * ) )	_	
10	t5591_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
11	t5592_000	dise	DDA	dise	Fem.Akk.Sg	(NX *	_	
12	t5593_000	klage	NA	klage	Akk.Sg	 * ) )	_	
13	t5594_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5595_000	hætet	VAFIN	haben	*.Past.Pl.2	(S (Cl (LB (VX * ) )	_	
2	t5596_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * )	_	
3	t5597_000	ieht	AVD	iht	_	 *	_	
4	t5598_000	ze	APPR	ze	_	(PPX *	_	
5	t5598_001	werke	NA	wërk	Dat.Sg	(NX * ) ) )	_	
6	t5599_000	-	$_	_	_	 * )	_	
7	t5600_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t5601_000	ne	PTKNEG	ne	_	(LB (VX *	_	
9	t5602_000	gertet	VVFIN	gèrten	*.Pres.Pl.2	 * ) )	_	
10	t5603_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * )	_	
11	t5604_000	sô	AVD	sô	_	 *	_	
12	t5605_000	starke	AVD	starke	_	 * )	_	
13	t5606_000	-	$_	_	_	 * )	_	
14	t5607_000	allezane	AVD	al(le)zz-ane	_	(Frag *	_	
15	t5608_000	ervüllen	VVINF	er-vüllen	_	(VX * )	_	
16	t5609_000	-	$_	_	_	 * )	_	
17	t5610_000	iuweren	DPOSA	iuwer	Masc.Akk.Sg.st	(Frag (NX *	_	
18	t5611_000	muotwillen	NA	muot-wille	Akk.Sg	 * )	_	
19	t5612_000	-	$_	_	_	 * )	_	
20	t5613_000	noch	KON	noh	_	(Frag *	_	
21	t5614_000	iuwer	DPOSA	iuwer	Neut.Akk.Sg.0	(NX *	_	
22	t5615_000	opfer	NA	opfer	Akk.Sg	 * )	_	
23	t5616_000	geben	VVINF	gëben	_	(VX * )	_	
24	t5617_000	-	$_	_	_	 * )	_	
25	t5618_000	jâ	PTKANT	jâ	_	(Cl (PreF * )	_	
26	t5618_001	ne	PTKNEG	ne	_	(LB (VX *	_	
27	t5619_000	wizzet	VVFIN	wizzen	*.Pres.Pl.2	 * ) )	_	
28	t5620_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * )	_	
29	t5621_000	weme	PW	wër	*.Dat.Sg.st	 * )	_	
30	t5622_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5623_000	diu	DDART	dër	Fem.Nom.Sg	(S (Frag (NX *	_	
2	t5624_000	iuwere	DPOSA	iuwer	Fem.Nom.Sg.wk	 *	_	
3	t5625_000	gesazte	ADJA	sètzen	Pos.Fem.Nom.Sg.wk	 *	_	
4	t5626_000	nôt	NA	nôt	Nom.Sg	 * )	_	
5	t5627_000	-	$_	_	_	 * )	_	
6	t5628_000	diu	DDS	dër	Fem.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t5629_000	ne	PTKNEG	ne	_	(LB (VX *	_	
8	t5629_001	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	 * ) )	_	
9	t5630_000	iu	PPER	ir	Dat.Pl.2	(MF (NX * ) )	_	
10	t5631_000	nieht	PTKNEG	niht	_	(RB (VX *	_	
11	t5632_000	geminneret	VVPP	ge-minner(e)n	_	 * ) )	_	
12	t5633_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5634_000	gêt	VVFIN	gân	*.Pres.Pl.2	(S (Cl (LB (VX * ) )	_	
2	t5635_000	ze	APPR	ze	_	(MF (PPX *	_	
3	t5635_001	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
4	t5636_000	werke	NA	wërk	Dat.Sg	 * ) ) )	_	
5	t5637_000	-	$_	_	_	 * )	_	
6	t5638_000	ir	PPER	ir	Nom.Pl.2	(Cl (PreF (NX * ) )	_	
7	t5639_000	würket	VVFIN	wirken	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t5640_000	vile	AVD	vil(e)	_	(MF *	_	
9	t5641_000	starke	AVD	starke	_	 * )	_	
10	t5642_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5643_000	guot	ADJD	guot	Pos....0	(S (Cl (PreF * )	_	
2	t5644_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5645_000	iuwer	DPOSA	iuwer	Fem.Nom.Sg.0	(MF (NX *	_	
4	t5646_000	kraft	NA	kraft	Nom.Sg	 * ) )	_	
5	t5647_000	-	$_	_	_	 * )	_	
6	t5648_000	würket	VVFIN	wirken	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
7	t5649_000	tac	NA	tag	Nom.Sg	(MF (NX * )	_	
8	t5650_000	unde	KON	unte	_	 *	_	
9	t5651_000	naht	NA	naht	Nom.Sg	(NX * ) )	_	
10	t5652_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5653_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t5654_000	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t5654_001	gît	VVFIN	gëben	Ind.Pres.Sg.3	 * ) )	_	
4	t5655_000	iu	PPER	ir	Dat.Pl.2	(MF (NX *	_	
5	t5656_000	ze	APPR	ze	_	(PPX *	_	
6	t5656_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) ) )	_	
7	t5657_000	-	$_	_	_	 *	_	
8	t5658_000	nieht	PTKNEG	niht	_	(Frag *	_	
9	t5659_000	zuo	APPR	ze	_	(PPX *	_	
10	t5660_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
11	t5661_000	viure	NA	viur	Dat.Sg	 * ) )	_	
12	t5662_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5663_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t5664_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t5665_000	alle	DIA	all	*.Nom.Pl.st	(MF (NX *	_	
4	t5666_000	tage	NA	tag	Nom.Pl	 * ) )	_	
5	t5667_000	-	$_	_	_	 * )	_	
6	t5668_000	haben	VAINF	haben	_	(Frag (VX * )	_	
7	t5669_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
8	t5670_000	ziegele	NA	ziègel	Gen.Pl	 * )	_	
9	t5671_000	zale	NA	zal(e)	Akk.Sg	(NX * )	_	
10	t5672_000	-	$_	_	_	 * )	_	
11	t5673_000	der	DDS	dër	Fem.Gen.Sg	(Cl (PreF (NX * ) )	_	
12	t5674_000	ne	PTKNEG	ne	_	(LB (VX *	_	
13	t5674_001	wile	VMFIN	wèllen	Ind.Pres.Sg.1	 * ) )	_	
14	t5675_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
15	t5676_000	mangelen	VVINF	mangel(e)n	_	(RB (VX * ) )	_	
16	t5677_000	-	$_	_	_	 *	_	
17	t5678_000	in	APPR	in	_	(Frag (PPX *	_	
18	t5678_001	rehten	ADJA	rëht	Pos.*.Dat.Pl.*	(NX *	_	
19	t5679_000	triuwen	NA	triuwe	Dat.Pl	 * ) )	_	
20	t5680_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5681_000	die	DDART	dër	*.Nom.Pl	(S (Frag *	_	
2	t5682_000	armen	ADJA	arm	Pos.*.Nom.Pl..%.wk	 *	_	
3	t5683_000	dô	AVD	dô	_	(PreF * )	_	
4	t5684_000	gehôrten	VVFIN	ge-hoèren	*.Past.Pl.3	(LB (VX * ) )	_	
5	t5685_000	-	$_	_	_	 * )	_	
6	t5686_000	ware	AVW	war(e)	_	(Frag *	_	
7	t5687_000	diu	DDART	dër	Fem.Nom.Sg	(PreF (NX *	_	
8	t5688_000	rede	NA	rède	Nom.Sg	 * ) )	_	
9	t5689_000	kêrte	VVFIN	kêren	*.Past.Sg.3	(LB (VX * ) )	_	
10	t5690_000	-	$_	_	_	 *	_	
11	t5691_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
12	t5692_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
13	t5693_000	ne	PTKNEG	ne	_	(RB (VX *	_	
14	t5693_001	vunden	VVFIN	vinden	*.Past.Pl.3	 * ) )	_	
15	t5694_000	-	$_	_	_	 *	_	
16	t5695_000	genâde	NA	ge-nâde	Akk.Sg	(PostF (NX * ) )	_	
17	t5696_000	der	DRELS	dër	Fem.Gen.Sg	(PostF (Cl (LB (NX * ) )	_	
18	t5697_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
19	t5698_000	sunden	VVFIN	sinden	*.Past.Pl.3	(RB (VX * ) )	_	
20	t5699_000	-	$_	_	_	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5700_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t5701_000	îlten	VVFIN	îlen	*.Past.Pl.3	(LB (VX * ) )	_	
3	t5702_000	dare	AVD	dar(e)	_	(MF *	_	
4	t5703_000	gâch	ADJD	gâh	Pos....0	 * )	_	
5	t5704_000	-	$_	_	_	 * )	_	
6	t5705_000	dâ	AVD	dâr	_	(PreF * )	_	
7	t5706_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
8	t5706_001	die	DDART	dër	*.Akk.Pl	(PreF (NX *	_	
9	t5707_000	boten	NA	bote	Akk.Pl	 * ) )	_	
10	t5708_000	sâhen	VVFIN	sëhen	Ind.Past.Pl.3	(LB (VX * ) )	_	
11	t5709_000	-	$_	_	_	 *	_	
12	t5710_000	die	DRELS	dër	*.Akk.Pl	(Cl (LB (NX * ) )	_	
13	t5711_000	got	NA	got	Nom.Sg	(MF (NX * ) )	_	
14	t5712_000	gesant	VVPP	sènten	_	(RB (VX *	_	
15	t5713_000	hæte	VAFIN	haben	*.Past.Sg.3	 * ) )	_	
16	t5714_000	-	$_	_	_	 * )	_	
17	t5715_000	der	DDS	dër	Fem.Dat.Sg	(Frag (NX * )	_	
18	t5716_000	verdamnet	VVPP	ver-damnen	_	(VX * )	_	
19	t5717_000	diete	NA	dièt	Dat.Sg	(NX * )	_	
20	t5718_000	-	$_	_	_	 *	_	
21	t5719_000	diu	DRELS	dër	Fem.Nom.Sg	(Cl (LB (NX * ) )	_	
22	t5720_000	dâ	AVD	dâr	_	(MF * )	_	
23	t5721_000	was	VAFIN	wësen	Ind.Past.Sg.3	(RB (VX * ) )	_	
24	t5722_000	in	APPR	in	_	(PostF (PPX *	_	
25	t5723_000	sorgen	NA	sorge	Dat.Pl	(NX * ) )	_	
26	t5724_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
27	t5725_000	âbent	NA	âbend	Akk.Sg	 * )	_	
28	t5726_000	unde	KON	unte	_	 *	_	
29	t5727_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
30	t5728_000	morgen	NA	morgen	Akk.Sg	 * ) )	_	
31	t5729_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5730_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t5731_000	hæten	VAFIN	haben	*.Past.Pl.3	(LB (VX * ) )	_	
3	t5732_000	weinôt	NA	wèinôt	Akk.Sg	(MF (NX * )	_	
4	t5733_000	unde	KON	unte	_	 *	_	
5	t5734_000	wuoft	NA	wuoft	Akk.Sg	(NX * ) )	_	
6	t5735_000	-	$_	_	_	 *	_	
7	t5736_000	klagenes	NA	klagen	Gen.Sg	(Frag (NX * )	_	
8	t5737_000	alzoges	AVD	all-zoges	_	 *	_	
9	t5738_000	genuoc	NA	ge-nuog(e)	Nom.Sg	(NX * )	_	
10	t5739_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5740_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t5741_000	sprâchen	VVFIN	sprëchen	Ind.Past.Pl.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5742_000	got	NA	got	Nom.Sg	(S (Frag (NX * )	_	
2	t5743_000	alterseine	AVD	alter(e)s-èine	_	 *	_	
3	t5744_000	-	$_	_	_	 * )	_	
4	t5745_000	sehe	VVFIN	sëhen	Subj.Pres.Sg.3	(Cl (LB (VX (VX * )	_	
5	t5746_000	und	KON	unte	_	 *	_	
6	t5747_000	erteile	VVFIN	er-tèilen	Subj.Pres.Sg.3	(VX * ) ) )	_	
7	t5748_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5749_000	ir	PPER	ir	Nom.Pl.2	(S (Cl (PreF (NX * ) )	_	
2	t5750_000	machet	VVFIN	machen	*.Pres.Pl.2	(LB (VX * ) )	_	
3	t5751_000	unsere	DPOSA	unser	Fem.Akk.Pl.st	(MF (NX *	_	
4	t5752_000	êre	NA	êre	Akk.Pl	 * ) )	_	
5	t5753_000	-	$_	_	_	 *	_	
6	t5754_000	vile	AVD	vil(e)	_	(Frag *	_	
7	t5755_000	boesere	ADJD	boèse	Pos.Fem.Akk.Pl.st	 *	_	
8	t5756_000	-	$_	_	_	 *	_	
9	t5757_000	denne	KOUS	danne	_	(Cl (LB * )	_	
10	t5758_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
11	t5759_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	(RB (VX * ) )	_	
12	t5760_000	-	$_	_	_	 * ) ) )	_	
13	t5761_000	êr	AVD	êr	_	(PreF * )	_	
14	t5762_000	wir	PPER	wir	Nom.Pl.1	(NX * )	_	
15	t5763_000	iuch	PPER	ir	Akk.Pl.2	(PreF (NX * ) )	_	
16	t5764_000	gesâhen	VVFIN	ge-sëhen	Ind.Past.Pl.1	(LB (VX * ) )	_	
17	t5765_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5766_000	in	APPR	in	_	(S (Frag (PPX *	_	
2	t5767_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
3	t5768_000	rîchen	ADJA	rîche	Pos.Masc.Gen.Sg.wk	 *	_	
4	t5769_000	küninges	NA	küni(n)g	Gen.Sg	 * ) )	_	
5	t5770_000	hove	NA	hov	Dat.Sg	(NX * )	_	
6	t5771_000	-	$_	_	_	 * )	_	
7	t5772_000	dâ	AVD	dâr	_	(Cl (PreF * )	_	
8	t5773_000	wâren	VAFIN	wësen	Ind.Past.Pl.1	(LB (VX * ) )	_	
9	t5774_000	wir	PPER	wir	Nom.Pl.1	(MF (NX *	_	
10	t5775_000	ze	APPR	ze	_	(PPX *	_	
11	t5775_001	lobe	NA	lob	Dat.Sg	(NX * ) ) ) )	_	
12	t5776_000	-	$_	_	_	 *	_	
13	t5777_000	vore	APPR	vor(e)	_	(Frag (PPX *	_	
14	t5778_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
15	t5779_000	sînen	DPOSA	sîn	*.Dat.Pl.st	 *	_	
16	t5780_000	knehten	NA	knëht	Dat.Pl	 * ) )	_	
17	t5781_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5782_000	ir	PPER	ir	Nom.Pl.2	(S (Cl (PreF (NX * ) )	_	
2	t5783_000	tâtet	VVFIN	tuon	Ind.Past.Pl.2	(LB (VX * ) )	_	
3	t5784_000	unrehte	AVD	un-rëhte	_	(MF * )	_	
4	t5785_000	-	$_	_	_	 *	_	
5	t5786_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
6	t5787_000	disiu	DDA	dise	Fem.Nom.Sg	(MF (NX *	_	
7	t5788_000	rede	NA	rède	Nom.Sg	 * ) )	_	
8	t5789_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(RB (VX *	_	
9	t5790_000	erhaben	VVPP	er-hèben	_	 * ) )	_	
10	t5791_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5792_000	dâ	PAVD	dâr/+mit(e)	_	(S (Cl (LB (VX *	_	
2	t5793_000	mite	PAVAP	mit(e)/dâr+	_	 *	_	
3	t5794_000	sîn	VAFIN	sîn	Ind.Pres.Pl.1	 * ) )	_	
4	t5795_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * ) )	_	
5	t5796_000	erslagen	VVPP	er-slahen	_	(RB (VX * ) )	_	
6	t5797_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5798_000	Mosî	NE	Moses	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5799_000	erkom	VVFIN	er-komen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t5800_000	sich	PRF	sich	Akk	(MF (NX * )	_	
4	t5801_000	harte	AVD	harte	_	 * )	_	
5	t5802_000	-	$_	_	_	 *	_	
6	t5803_000	sus	AVD	sus	_	(Frag *	_	
7	t5804_000	getâner	ADJA	ge-tân	Pos.*.Gen.Pl.st	(NX *	_	
8	t5805_000	worte	NA	wort	Gen.Pl	 * )	_	
9	t5806_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5807_000	ze	APPR	ze	_	(S (Frag (PPX *	_	
2	t5807_001	gote	NA	got	Dat.Sg	(NX * ) )	_	
3	t5808_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
4	t5809_000	redenen	VVINF	rèdenen	_	(PreF (VX * ) )	_	
5	t5810_000	began	VVFIN	be-ginnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
6	t5811_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5812_000	hêrre	NA	hêrre	Nom.Sg	(S (NX * )	_	
2	t5813_000	waz	PW	wër	Neut.Akk.Sg.st	(Cl (PreF * )	_	
3	t5814_000	hâst	VAFIN	haben	*.Pres.Sg.2	(LB (VX * ) )	_	
4	t5815_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
5	t5816_000	getân	VVPP	tuon	_	(RB (VX * ) )	_	
6	t5817_000	-	$_	_	_	 *	_	
7	t5818_000	ze	APPR	ze	_	(Frag (PPX *	_	
8	t5818_001	diseme	DDA	dise	Neut.Dat.Sg	(NX *	_	
9	t5819_000	armen	ADJA	arm	Pos.Neut.Dat.Sg.wk	 *	_	
10	t5820_000	liute	NA	liut	Dat.Sg	 * ) )	_	
11	t5821_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5822_000	die	DDS	dër	*.Nom.Pl	(S (Frag (NX * )	_	
2	t5823_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(VX *	_	
3	t5824_000	beswæret	VVPP	be-swæren	_	 * )	_	
4	t5825_000	hiute	AVD	hiute	_	 *	_	
5	t5826_000	-	$_	_	_	 * )	_	
6	t5827_000	mit	APPR	mit	_	(Frag (PPX *	_	
7	t5828_000	mêren	ADJA	mêr(e)	Comp.*.Dat.Pl.*	(NX *	_	
8	t5829_000	werken	NA	wërk	Dat.Pl	 * ) )	_	
9	t5830_000	-	$_	_	_	 *	_	
10	t5831_000	denne	KOUS	danne	_	(Cl (LB * )	_	
11	t5832_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
12	t5833_000	êr	AVD	êr	_	 * )	_	
13	t5834_000	hæten	VAFIN	haben	*.Past.Pl.3	(RB (VX * ) )	_	
14	t5835_000	-	$_	_	_	 * ) )	_	
15	t5836_000	êr	AVD	êr	_	(PreF * )	_	
16	t5837_000	ich	PPER	ich	Nom.Sg.1	(NX *	_	
17	t5838_000	ze	APPR	ze	_	(PPX *	_	
18	t5838_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
19	t5839_000	küninge	NA	küni(n)g	Dat.Sg	 *	_	
20	t5840_000	von	APPR	von	_	(PPX *	_	
21	t5841_000	dir	PPER	dû	Dat.Sg.2	(NX * ) ) ) ) )	_	
22	t5842_000	reden	VVINF	rèden	_	(PreF (VX * ) )	_	
23	t5843_000	begunde	VVFIN	be-ginnen	*.Past.Sg.1	(LB (VX * ) )	_	
24	t5844_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5845_000	nû	AVD	nû	_	(S (Cl (PreF * )	_	
2	t5846_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t5847_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
4	t5848_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
5	t5849_000	klagen	VVINF	klagen	_	(RB (VX * ) )	_	
6	t5850_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5851_000	als	KO*	all-sô	_	(S (Frag *	_	
2	t5852_000	ich	PPER	ich	Nom.Sg.1	(NX * )	_	
3	t5853_000	ime	PPER	ër	Masc.Dat.Sg.3	(PreF (NX * ) )	_	
4	t5854_000	nante	VVFIN	nènnen	*.Past.Sg.1	(LB (VX * ) )	_	
5	t5855_000	dînen	DPOSA	dîn	Masc.Akk.Sg.st	(MF (NX *	_	
6	t5856_000	namen	NA	name	Akk.Sg	 * ) )	_	
7	t5857_000	-	$_	_	_	 * )	_	
8	t5858_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t5859_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(LB (VX * ) )	_	
10	t5860_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
11	t5861_000	vile	AVD	vil(e)	_	 *	_	
12	t5862_000	unwert	ADJD	un-wërd	Pos....0	 * )	_	
13	t5863_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5864_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t5865_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t5866_000	in	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
4	t5867_000	mêren	VVINF	mêren	_	(VX * )	_	
5	t5868_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
6	t5869_000	werc	NA	wërk	Akk.Sg	 * ) )	_	
7	t5870_000	-	$_	_	_	 * )	_	
8	t5871_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
9	t5872_000	tet	VVFIN	tuon	Ind.Past.Sg.3	(LB (VX * ) )	_	
10	t5873_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX *	_	
11	t5874_000	ze	APPR	ze	_	(PPX *	_	
12	t5874_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) ) )	_	
13	t5875_000	-	$_	_	_	 *	_	
14	t5876_000	michel	ADJA	michel	Pos.Fem.Akk.Sg.st	(Frag (NX *	_	
15	t5877_000	ungenâde	NA	un-ge-nâde	Akk.Sg	 * )	_	
16	t5878_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5879_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t5880_000	lîdent	VVFIN	lîden	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t5881_000	ienoch	AVD	iè-noh	_	(MF *	_	
4	t5882_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
5	t5883_000	selben	DDA	sëlb	Fem.Akk.Sg.wk	 *	_	
6	t5884_000	nôt	NA	nôt	Akk.Sg	 * ) )	_	
7	t5885_000	-	$_	_	_	 * )	_	
8	t5886_000	dû	PPER	dû	Nom.Sg.2	(Cl (PreF (NX * ) )	_	
9	t5887_000	ne	PTKNEG	ne	_	(LB (VX *	_	
10	t5887_001	habest	VAFIN	haben	*.Pres.Sg.2	 * ) )	_	
11	t5888_000	si	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * ) ) )	_	
12	t5889_000	geledigete	VVFIN	ge-lèdigen	*.Past.Sg.3	(LB (VX * ) )	_	
13	t5890_000	-	$_	_	_	 *	_	
14	t5891_000	als	KO*	all-sô	_	(Frag *	_	
15	t5892_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
16	t5893_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
17	t5894_000	mir	PPER	ich	Dat.Sg.1	(PreF (NX * ) )	_	
18	t5895_000	gehieze	VVFIN	ge-hèizen	Subj.Past.Sg.3	(LB (VX * ) )	_	
19	t5896_000	-	$_	_	_	 * )	_	
20	t5897_000	noch	KON	noh	_	(Frag *	_	
21	t5898_000	iz	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
22	t5899_000	wâr	ADJD	wâr	Pos....0	(PreF * )	_	
23	t5900_000	ne	PTKNEG	ne	_	(LB (VX *	_	
24	t5900_001	lieze	VVFIN	lâzen	Subj.Past.Sg.3	 * ) )	_	
25	t5901_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5902_000	got	NA	got	Nom.Sg	(S (Cl (PreF (NX *	_	
2	t5903_000	sîn	PPER	ër	Neut.Gen.Sg.3	(NX * ) ) )	_	
3	t5904_000	antwurte	VVFIN	ant-würten	*.Past.Sg.3	(LB (VX * ) )	_	
4	t5905_000	-	$_	_	_	 *	_	
5	t5906_000	sîneme	DPOSA	sîn	Masc.Dat.Sg.st	(Frag (NX *	_	
6	t5907_000	trûte	NA	trût(e)	Dat.Sg	 * )	_	
7	t5908_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5909_000	nû	AVD	nû	_	(S (Cl (PreF * )	_	
2	t5910_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t5911_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
4	t5912_000	schouwen	VVINF	schouwen	_	(RB (VX * ) )	_	
5	t5913_000	-	$_	_	_	 *	_	
6	t5914_000	mîniu	DPOSA	mîn	Neut.Akk.Pl.st	(Frag (NX *	_	
7	t5915_000	werc	NA	wërk	Akk.Pl	 *	_	
8	t5916_000	tougen	ADJA	tougen	Pos.Neut.Akk.Pl.0	 * )	_	
9	t5917_000	-	$_	_	_	 * )	_	
10	t5918_000	zeichen	NA	zèichen	Akk.Pl	(Frag (NX * )	_	
11	t5919_000	vile	AVD	vil(e)	_	 *	_	
12	t5920_000	grôziu	ADJN	grôz	Pos.Neut.Akk.Pl.st	 *	_	
13	t5921_000	-	$_	_	_	 * ) )	_	
14	t5922_000	sô	AVD	sô	_	(Cl (PreF * )	_	
15	t5923_000	muoz	VMFIN	müèzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t5923_001	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
17	t5924_000	si	PPER	ër	*.Akk.Pl.3	(NX * ) )	_	
18	t5924_001	lâzen	VVINF	lâzen	_	(RB (VX * ) )	_	
19	t5925_000	-	$_	_	_	 *	_	
20	t5926_000	ûzer	APPR	ûzer	_	(Frag (PPX *	_	
21	t5927_000	sîneme	DPOSA	sîn	Neut.Dat.Sg.st	(NX *	_	
22	t5928_000	lande	NA	lant	Dat.Sg	 * ) )	_	
23	t5929_000	-	$_	_	_	 * ) )	_	
24	t5930_000	iz	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
25	t5931_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
26	t5932_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
27	t5933_000	enblanden	VVINF	en-blanten	_	(VX * ) )	_	
28	t5934_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5935_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t5936_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t5937_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
4	t5938_000	aber	AVD	aber	_	 *	_	
5	t5939_000	êr	AVD	êr	_	 * )	_	
6	t5940_000	sagen	VVINF	sagen	_	(RB (VX * ) )	_	
7	t5941_000	-	$_	_	_	 *	_	
8	t5942_000	einen	DIART	èin	Masc.Akk.Sg.st	(Frag (NX *	_	
9	t5943_000	gewaltigen	ADJA	ge-waltig	Pos.Masc.Akk.Sg.*	 *	_	
10	t5944_000	namen	NA	name	Akk.Sg	 * )	_	
11	t5945_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5946_000	Adonei	NE	Adonei	Nom.Sg	(S (Frag (NX *	_	
2	t5947_000	man	PI	man	*.Nom.Sg.st	 * )	_	
3	t5948_000	mich	PPER	ich	Akk.Sg.1	(PreF (NX * ) )	_	
4	t5949_000	nenne	VVFIN	nènnen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
5	t5950_000	-	$_	_	_	 * )	_	
6	t5951_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t5952_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t5953_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
9	t5954_000	mich	PPER	ich	Akk.Sg.1	(NX * ) )	_	
10	t5955_000	erkennen	VVINF	er-kènnen	_	(RB (VX * ) )	_	
11	t5956_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5957_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5958_000	quît	VVFIN	quëden	Ind.Pres.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5959_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t5960_000	bin	VAFIN	sîn	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t5961_000	des	DDART	dër	Neut.Gen.Sg	(PreF (MF (NX *	_	
4	t5962_000	hers	NA	hèr(e)	Gen.Sg	 * )	_	
5	t5963_000	got	NA	got	Nom.Sg	(NX * )	_	
6	t5964_000	unde	KON	unte	_	 * ) )	_	
7	t5965_000	habe	VAFIN	haben	*.Pres.Sg.1	(LB (VX * ) )	_	
8	t5966_000	in	PPER	ër	*.Dat.Pl.3	(PreF (MF (NX * ) ) )	_	
9	t5967_000	erwatte	VVFIN	er-wètten	*.Past.Sg.3	(LB (VX * ) )	_	
10	t5968_000	-	$_	_	_	 * )	_	
11	t5969_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
12	t5970_000	ich	PPER	ich	Nom.Sg.1	(PreF (MF (NX * )	_	
13	t5971_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) ) )	_	
14	t5972_000	welle	VMFIN	wèllen	Subj.Pres.Sg.1	(LB (VX * ) )	_	
15	t5973_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
16	t5974_000	-	$_	_	_	 *	_	
17	t5975_000	dâ	AVD	dâr	_	(PostF *	_	
18	t5976_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
19	t5977_000	sæliclîche	AVD	sælig-lîche	_	 *	_	
20	t5978_000	leben	VVINF	lëben	_	(VX * ) )	_	
21	t5979_000	-	$_	_	_	 *	_	
22	t5980_000	lant	NA	lant	Nom.Sg	(PostF (NX *	_	
23	t5981_000	ire	DPOSA	ir(e)	Neut.Gen.Sg.0	(NX *	_	
24	t5982_000	ellendes	NA	èl-lènte	Gen.Sg	 * ) ) )	_	
25	t5983_000	-	$_	_	_	 *	_	
26	t5984_000	niene	AVD	niène	_	(PostF * )	_	
27	t5985_000	vergizze	VVFIN	ver-gëzzen	Ind.Pres.Sg.1	(RB (VX * ) )	_	
28	t5986_000	ich	PPER	ich	Nom.Sg.1	(PostF (NX * )	_	
29	t5987_000	in	PPER	ër	*.Dat.Pl.3	(NX *	_	
30	t5988_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
31	t5989_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5990_000	ez	PPER	ër	Neut.Akk.Sg.3	(S (Frag (NX * )	_	
2	t5991_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(VX *	_	
3	t5992_000	besezzen	VVPP	be-sitzen	_	 * )	_	
4	t5993_000	-	FM	[!]	_	 *	_	
5	t5994_000	-	$_	_	_	 * )	_	
6	t5995_000	ze	APPR	ze	_	(Cl (PreF (PPX *	_	
7	t5995_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) )	_	
8	t5996_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
9	t5997_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
10	t5997_001	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
11	t5998_000	hân	VAINF	haben	_	(VX * ) )	_	
12	t5999_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6000_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t6001_000	heizes	VVFIN	hèizen	*.Pres.Sg.2	(LB (VX * ) )	_	
3	t6002_000	si	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
4	t6003_000	nieht	PTKNEG	niht	_	(VX *	_	
5	t6004_000	zwîvelen	VVINF	zwîvel(e)n	_	 * ) )	_	
6	t6005_000	-	$_	_	_	 *	_	
7	t6006_000	wande	KO*	wante	_	(Frag *	_	
8	t6007_000	ich	PPER	ich	Nom.Sg.1	(PreF (NX * ) )	_	
9	t6008_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
10	t6009_000	si	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * ) ) )	_	
11	t6010_000	ledigen	VVFIN	lèdigen	*.Pres.Sg.1	(LB (VX * ) )	_	
12	t6011_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6012_000	alsô	AVD	all-sô	_	(S (Frag *	_	
2	t6013_000	vater	NA	vater	Dat.Sg	(NX * )	_	
3	t6014_000	sîniu	DPOSA	sîn	Neut.Nom.Pl.st	(NX *	_	
4	t6015_000	kint	NA	kind	Nom.Pl	 * )	_	
5	t6016_000	-	$_	_	_	 * )	_	
6	t6017_000	vile	AVD	vil(e)	_	(Frag *	_	
7	t6018_000	liep	ADJD	lièb	Pos....0	 *	_	
8	t6019_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
9	t6020_000	mir	PPER	ich	Dat.Sg.1	(PreF (NX * ) )	_	
10	t6021_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
11	t6022_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6023_000	swaz	PG	swër	Neut.Nom.Sg.st	(S (Frag (NX *	_	
2	t6024_000	ich	PPER	ich	Nom.Sg.1	 * )	_	
3	t6025_000	in	PPER	ër	*.Dat.Pl.3	(NX * )	_	
4	t6026_000	hân	VAFIN	haben	Ind.Pres.Sg.1	(VX *	_	
5	t6027_000	geheizen	VVPP	hèizen	_	 * )	_	
6	t6028_000	-	$_	_	_	 * )	_	
7	t6029_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t6030_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
9	t6031_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
10	t6032_000	wâr	ADJD	wâr	Pos....0	 * )	_	
11	t6033_000	lâzen	VVINF	lâzen	_	(RB (VX * ) )	_	
12	t6034_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6035_000	abe	AVD	aber	_	(S (Cl (PreF *	_	
2	t6036_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
3	t6037_000	bote	NA	bote	Nom.Sg	 * ) )	_	
4	t6038_000	redete	VVFIN	rèden	*.Past.Sg.3	(LB (VX * ) )	_	
5	t6039_000	-	$_	_	_	 * )	_	
6	t6040_000	swaz	PG	swër	Neut.Akk.Sg.st	(Frag (NX * )	_	
7	t6041_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
8	t6042_000	vernomen	VVPP	ver-nëmen	_	(VX *	_	
9	t6043_000	habete	VAFIN	haben	*.Past.Sg.3	 * )	_	
10	t6044_000	-	$_	_	_	 * )	_	
11	t6045_000	ze	APPR	ze	_	(Frag (PPX *	_	
12	t6045_001	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
13	t6046_000	künnelingen	NA	künneling	Dat.Pl	 * ) )	_	
14	t6047_000	-	$_	_	_	 * )	_	
15	t6048_000	alten	ADJA	alt	Pos.*.Dat.Pl..%.*	(Frag *	_	
16	t6049_000	unde	KON	unte	_	 *	_	
17	t6050_000	jungen	ADJA	jung	Pos.*.Dat.Pl..%.*	 *	_	
18	t6051_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6052_000	durch	APPR	durh	_	(S (PPX *	_	
2	t6053_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
3	t6054_000	grôzen	ADJA	grôz	Pos.Fem.Akk.Sg.wk	 *	_	
4	t6055_000	arbeit	NA	arbèit	Akk.Sg	 * ) )	_	
5	t6056_000	sô	AVD	sô	_	(Cl (PreF * )	_	
6	t6057_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
7	t6058_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
8	t6059_000	diu	DDART	dër	Fem.Nom.Sg	(NX *	_	
9	t6060_000	rede	NA	rède	Nom.Sg	 * )	_	
10	t6061_000	leit	ADJD	lèid	Pos....0	 * )	_	
11	t6062_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6063_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t6064_000	sprâchen	VVFIN	sprëchen	Ind.Past.Pl.3	(LB (VX * ) ) )	_	
3	t6065_000	sich	PRF	sich	Akk	(Cl (PreF (NX * ) )	_	
4	t6066_000	ne	PTKNEG	ne	_	(LB (VX *	_	
5	t6066_001	kêrten	VVFIN	kêren	*.Past.Pl.3	 * ) )	_	
6	t6067_000	-	$_	_	_	 *	_	
7	t6068_000	zuo	APPR	ze	_	(Frag *	_	
8	t6069_000	sus	AVD	sus	_	 *	_	
9	t6070_000	getânen	ADJA	ge-tân	Pos.*.Dat.Pl.*	(NX *	_	
10	t6071_000	worten	NA	wort	Dat.Pl	 * )	_	
11	t6072_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6073_000	leit	NA	lèid	Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6074_000	hân	VAFIN	haben	*.Pres.Pl.1	(LB (VX * ) )	_	
3	t6075_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * )	_	
4	t6076_000	genuoge	ADJD	ge-nuog(e)	Pos....0	 * )	_	
5	t6077_000	-	$_	_	_	 * )	_	
6	t6078_000	wir	PPER	wir	Nom.Pl.1	(Cl (PreF (NX * ) )	_	
7	t6079_000	ne	PTKNEG	ne	_	(LB (VX *	_	
8	t6079_001	bedurfen	VVFIN	be-durfen	*.Pres.Pl.1	 * ) )	_	
9	t6079_002	es	PPER	ër	Neut.Gen.Sg.3	(MF (NX * )	_	
10	t6080_000	mêre	AVD	mêr(e)	Comp	 * )	_	
11	t6081_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6082_000	got	NA	got	Nom.Sg	(S (Frag (NX * )	_	
2	t6083_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
3	t6084_000	abe	AVD	aber	_	(PreF * )	_	
4	t6085_000	lêrte	VVFIN	lêren	*.Past.Sg.3	(LB (VX * ) )	_	
5	t6086_000	-	$_	_	_	 * )	_	
6	t6087_000	wie	AVW	wiè	_	(Frag *	_	
7	t6088_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
8	t6089_000	gebârete	VVFIN	ge-bâren	*.Past.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6090_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t6091_000	quat	VVFIN	quëden	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t6092_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6093_000	zwelive	CARDS	zwèl(i)v	*.Nom.Pl.st	(S (Cl (PreF (NX *	_	
2	t6094_000	ir	PPER	ër	*.Gen.Pl.3	(NX * ) ) )	_	
3	t6095_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	(LB (VX * ) )	_	
4	t6096_000	-	$_	_	_	 * )	_	
5	t6097_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX * ) )	_	
6	t6098_000	hier	AVD	hièr	_	(MF *	_	
7	t6099_000	vore	AVD	vor(e)	_	 * )	_	
8	t6100_000	vuoren	VVFIN	var(e)n	*.Past.Pl.3	(RB (VX * ) )	_	
9	t6101_000	-	$_	_	_	 *	_	
10	t6102_000	in	APPR	in	_	(Frag (PPX *	_	
11	t6102_001	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
12	t6103_000	ellende	NA	èl-lènte	Akk.Sg	 * ) )	_	
13	t6104_000	-	$_	_	_	 * )	_	
14	t6105_000	von	APPR	von	_	(Frag (PPX *	_	
15	t6106_000	eigenem	ADJA	èigen	Pos.Neut.Dat.Sg.st	(NX *	_	
16	t6107_000	lande	NA	lant	Dat.Sg	 * ) )	_	
17	t6108_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6109_000	Jakop	NE	Jakob	Nom.Sg	(S (Frag (NX *	_	
2	t6110_000	ir	PPER	ër	*.Gen.Pl.3	(NX * ) )	_	
3	t6111_000	vater	NA	vater	Nom.Sg	(PreF (NX * ) )	_	
4	t6112_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t6113_000	-	$_	_	_	 *	_	
6	t6114_000	den	DRELS	dër	Masc.Akk.Sg	(Cl (LB (NX * ) )	_	
7	t6115_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
8	t6116_000	nie	AVD	niè	_	 * )	_	
9	t6117_000	verliez	VVFIN	ver-lâzen	Ind.Past.Sg.1	(RB (VX * ) )	_	
10	t6118_000	-	$_	_	_	 * ) )	_	
11	t6119_000	in	APPR	in	_	(Frag (PPX *	_	
12	t6120_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
13	t6121_000	sînen	DPOSA	sîn	*.Dat.Pl.st	 *	_	
14	t6122_000	dingen	NA	ding	Dat.Pl	 * ) )	_	
15	t6123_000	-	$_	_	_	 * )	_	
16	t6124_000	mit	AVD	mit(e)	_	(Frag *	_	
17	t6125_000	aller	DIA	all	Fem.Gen.Sg.st	(NX *	_	
18	t6125_001	slahte	NA	slahte	Gen.Sg	 * )	_	
19	t6126_000	minnen	NA	minne	Dat.Pl	(NX * )	_	
20	t6127_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6128_000	ir	PPER	ër	*.Gen.Pl.3	(S (Frag (NX *	_	
2	t6129_000	iegelîches	DIS	iè-ge-lich	Neut.Gen.Sg.st	(NX * ) )	_	
3	t6130_000	künne	NA	künne	Nom.Sg	(NX * )	_	
4	t6131_000	-	$_	_	_	 * )	_	
5	t6132_000	zele	VVIMP	zèl(e)n	Sg.2	(Cl (LB (VX * ) )	_	
6	t6133_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
7	t6134_000	zesamene	AVD	ze-samen(e)	_	 * )	_	
8	t6135_000	-	$_	_	_	 *	_	
9	t6136_000	die	DDART	dër	*.Nom.Pl	(Frag *	_	
10	t6137_000	tiuresten	ADJA	tiur(e)	Pos.*.Nom.Pl..%.wk	 *	_	
11	t6138_000	-	$_	_	_	 * )	_	
12	t6139_000	under	APPR	unter	_	(Frag (PPX *	_	
13	t6140_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
14	t6141_000	-	$_	_	_	 * ) )	_	
15	t6142_000	ire	DPOSA	ir(e)	*.Nom.Pl.0	(Cl (PreF (NX *	_	
16	t6143_000	namen	NA	name	Nom.Pl	 * ) )	_	
17	t6144_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
18	t6145_000	kunt	ADJD	kund	Pos....0	(MF *	_	
19	t6146_000	sîn	VAINF	sîn	_	(VX * ) )	_	
20	t6147_000	-	$_	_	_	 * )	_	
21	t6148_000	die	DDS	dër	*.Nom.Pl	(Cl (PreF (NX * ) )	_	
22	t6149_000	sîn	VAFIN	sîn	*.Pres.Pl.3	(LB (VX * ) )	_	
23	t6150_000	in	APPR	in	_	(MF (PPX *	_	
24	t6151_000	ire	DPOSA	ir(e)	*.Dat.Pl.st	(NX *	_	
25	t6152_000	geslehte	NA	ge-slèhte	Dat.Pl	 * ) ) )	_	
26	t6153_000	-	$_	_	_	 * )	_	
27	t6154_000	an	APPR	ane	_	(PPX *	_	
28	t6154_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
29	t6155_000	vorderesten	ADJA	vorder	Pos.Fem.Dat.Sg.wk	 *	_	
30	t6156_000	pfaht	NA	pfaht(e)	Dat.Sg	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6157_000	daz	DDART	dër	Neut.Akk.Sg	(S (Frag (NX *	_	
2	t6158_000	reht	NA	rëht	Akk.Sg	 * )	_	
3	t6159_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
4	t6160_000	habes	VAFIN	haben	*.Pres.Sg.2	(LB (VX * ) )	_	
5	t6161_000	unde	KON	unte	_	(MF *	_	
6	t6162_000	Aaron	NE	Aaron	Nom.Sg	(NX * ) )	_	
7	t6163_000	-	$_	_	_	 * )	_	
8	t6164_000	von	APPR	von	_	(Cl (PreF (PPX *	_	
9	t6165_000	Levi	NE	Levi	Dat.Sg	(NX * ) ) )	_	
10	t6166_000	sît	VAFIN	sîn	*.Pres.Pl.2	(LB (VX * ) )	_	
11	t6167_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * ) )	_	
12	t6168_000	geboren	VVPP	ge-bër(e)n	_	(RB (VX * ) )	_	
13	t6169_000	-	$_	_	_	 *	_	
14	t6170_000	wande	KO*	wante	_	(Frag *	_	
15	t6171_000	ir	PPER	ir	Nom.Pl.2	(PreF (NX * ) )	_	
16	t6172_000	sulet	VMFIN	sol(e)n	*.Pres.Pl.2	(LB (VX * ) )	_	
17	t6173_000	under	APPR	unter	_	(MF (PPX *	_	
18	t6174_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) ) )	_	
19	t6175_000	-	$_	_	_	 * ) )	_	
20	t6176_000	die	DDART	dër	*.Nom.Pl	(Frag (NX *	_	
21	t6177_000	rehten	ADJA	rëht	Pos.*.Nom.Pl.wk	 *	_	
22	t6178_000	leitere	NA	lèiter(e)	Nom.Pl	 * )	_	
23	t6179_000	sîn	VAINF	sîn	_	(VX * )	_	
24	t6180_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6181_000	ir	PPER	ir	Nom.Pl.2	(S (Cl (PreF (NX * ) )	_	
2	t6182_000	sulet	VMFIN	sol(e)n	*.Pres.Pl.2	(LB (VX * ) )	_	
3	t6183_000	ze	APPR	ze	_	(MF (PPX *	_	
4	t6183_001	Pharaoe	NE	Pharao	Dat.Sg	(NX * ) ) )	_	
5	t6184_000	-	$_	_	_	 * )	_	
6	t6185_000	disiu	DDA	dise	Neut.Akk.Pl	(Frag (NX *	_	
7	t6186_000	wort	NA	wort	Akk.Pl	 * )	_	
8	t6187_000	kôsen	VVINF	kôsen	_	(VX * )	_	
9	t6188_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6189_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t6190_000	lâze	VVFIN	lâzen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t6191_000	mir	PPER	ich	Dat.Sg.1	(MF (NX * )	_	
4	t6192_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
5	t6193_000	mîne	DPOSS	mîn	*.Akk.Pl.st	 * ) )	_	
6	t6194_000	-	$_	_	_	 * )	_	
7	t6195_000	und	KON	unte	_	(Cl (PrePreF * )	_	
8	t6196_000	habe	VAFIN	haben	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t6197_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
10	t6198_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
11	t6199_000	sîne	DPOSS	sîn	*.Akk.Pl.st	 * ) )	_	
12	t6200_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6201_000	Mosî	NE	Moses	Nom.Sg	(S (Frag (NX *	_	
2	t6202_000	der	DDART	dër	Masc.Nom.Sg	 * )	_	
3	t6203_000	tiure	ADJA	tiur(e)	Pos.Masc.Nom.Sg.wk	(NX *	_	
4	t6204_000	man	NA	mann	Nom.Sg	 * )	_	
5	t6205_000	-	$_	_	_	 * )	_	
6	t6206_000	abe	AVD	aber	_	(Frag *	_	
7	t6207_000	reden	VVINF	rèden	_	(VX * )	_	
8	t6208_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
9	t6209_000	began	VVFIN	be-ginnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
10	t6210_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6211_000	wie	AVW	wiè	_	(S (Cl (PreF * )	_	
2	t6212_000	solte	VMFIN	sol(e)n	*.Past.Sg.3	(LB (VX * ) )	_	
3	t6213_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
4	t6214_000	mich	PPER	ich	Akk.Sg.1	(NX * ) )	_	
5	t6215_000	vernemen	VVINF	ver-nëmen	_	(RB (VX * ) )	_	
6	t6216_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6217_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t6218_000	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t6218_001	kan	VMFIN	kunnen	Ind.Pres.Sg.1	 * ) )	_	
4	t6219_000	nieht	PTKNEG	niht	_	(RB (VX *	_	
5	t6220_000	reden	VVINF	rèden	_	 * ) )	_	
6	t6221_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6222_000	got	NA	got	Nom.Sg	(S (Frag (NX * )	_	
2	t6223_000	ime	PPER	ër	Masc.Dat.Sg.3	(PreF (NX *	_	
3	t6224_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
4	t6225_000	antwurte	VVFIN	ant-würten	*.Past.Sg.3	(LB (VX * ) )	_	
5	t6226_000	-	$_	_	_	 * )	_	
6	t6227_000	mit	AVD	mit(e)	_	(Frag *	_	
7	t6228_000	wærlîchen	AVD	wær-lîche	_	 *	_	
8	t6229_000	worten	NA	wort	Dat.Pl	(NX * )	_	
9	t6230_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6231_000	nû	AVD	nû	_	(S (Cl (PreF * )	_	
2	t6232_000	wizzest	VVFIN	wizzen	*.Pres.Sg.2	(LB (VX * ) ) )	_	
3	t6233_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
4	t6234_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
5	t6235_000	bist	VAFIN	sîn	Ind.Pres.Sg.2	(RB (VX * ) )	_	
6	t6236_000	-	$_	_	_	 *	_	
7	t6237_000	got	NA	got	Nom.Sg	(Frag (NX *	_	
8	t6238_000	Pharaoes	NE	Pharao	Gen.Sg	(NX * ) )	_	
9	t6239_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6240_000	mit	APPR	mit	_	(S (Cl (PreF (PPX *	_	
2	t6241_000	mir	PPER	ich	Dat.Sg.1	(NX * ) ) )	_	
3	t6242_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
4	t6243_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
5	t6244_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * ) )	_	
6	t6245_000	ordenen	VVINF	ordenen	_	(RB (VX * ) )	_	
7	t6246_000	-	$_	_	_	 * )	_	
8	t6247_000	dîn	DPOSA	dîn	Masc.Nom.Sg.0	(Cl (PreF (NX *	_	
9	t6248_000	bruoder	NA	bruoder	Nom.Sg	 * ) )	_	
10	t6249_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t6250_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
12	t6251_000	rede	NA	rède	Akk.Sg	 * ) )	_	
13	t6252_000	tuon	VVINF	tuon	_	(RB (VX * ) )	_	
14	t6253_000	-	$_	_	_	 * )	_	
15	t6254_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
16	t6255_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t6256_000	vürespreche	NA	vür(e)-sprëche	Nom.Sg	(MF (NX * )	_	
18	t6257_000	sîn	VAINF	sîn	_	(VX * ) )	_	
19	t6258_000	-	$_	_	_	 *	_	
20	t6259_000	beidiu	KON	bèide	_	(Frag *	_	
21	t6260_000	mîn	PPER	ich	Gen.Sg.1	(NX * )	_	
22	t6261_000	und	KON	unte	_	 *	_	
23	t6262_000	dîn	PPER	dû	Gen.Sg.2	(NX * )	_	
24	t6263_000	-	$_	_	_	 * )	_	
25	t6264_000	durch	AVD	durh	_	(Frag *	_	
26	t6265_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
27	t6266_000	liutes	NA	liut	Gen.Sg	 * )	_	
28	t6267_000	noete	NA	nôt	Akk.Pl	(NX * )	_	
29	t6268_000	-	$_	_	_	 *	_	
30	t6269_000	die	DRELS	dër	Fem.Akk.Sg	(Cl (LB (NX * ) )	_	
31	t6270_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
32	t6271_000	klagest	VVFIN	klagen	*.Pres.Sg.2	(RB (VX * ) )	_	
33	t6272_000	hiute	AVD	hiute	_	(PostF * )	_	
34	t6273_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6274_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t6275_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
3	t6276_000	gerte	NA	gèrte	Akk.Sg	 *	_	
4	t6277_000	in	APPR	in	_	(PPX *	_	
5	t6277_001	dîne	DPOSA	dîn	Fem.Akk.Sg.st	(NX *	_	
6	t6278_000	hant	NA	hant	Akk.Sg	 * ) ) ) )	_	
7	t6279_000	-	$_	_	_	 * )	_	
8	t6280_000	würke	VVFIN	wirken	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
9	t6281_000	zeichen	NA	zèichen	Akk.Sg	(MF (NX * )	_	
10	t6282_000	manicvalt	ADJD	manig-valt	Pos....0	 * )	_	
11	t6283_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6284_000	ze	APPR	ze	_	(S (Cl (PreF (PPX *	_	
2	t6284_001	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
3	t6285_000	dingen	NA	ding	Dat.Pl	 * ) ) )	_	
4	t6286_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t6287_000	si	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
6	t6288_000	guot	ADJD	guot	Pos....0	 * )	_	
7	t6289_000	-	$_	_	_	 *	_	
8	t6290_000	swes	PG	swër	Masc.Gen.Sg.st	(Frag (NX * )	_	
9	t6291_000	sô	AVD	sô	_	(PreF * )	_	
10	t6292_000	wünschet	VVFIN	wünschen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t6293_000	dîn	DPOSA	dîn	Masc.Nom.Sg.0	(MF (NX *	_	
12	t6294_000	muot	NA	muot	Nom.Sg	 * ) )	_	
13	t6295_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6296_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t6297_000	tuost	VVFIN	tuon	*.Pres.Sg.2	(LB (VX * ) )	_	
3	t6298_000	zeichene	NA	zèichen	Gen.Pl	(MF (NX * )	_	
4	t6299_000	vile	AVD	vil(e)	_	 * )	_	
5	t6300_000	-	$_	_	_	 *	_	
6	t6301_000	wunderes	NA	wunter	Gen.Sg	(Frag (NX * )	_	
7	t6302_000	allez	DIA	all	Neut.Akk.Sg.st	 *	_	
8	t6303_000	daz	DRELS	dër	Neut.Akk.Sg	(Cl (LB (NX * ) )	_	
9	t6304_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
10	t6305_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(RB (VX * ) )	_	
11	t6306_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6307_000	dâ	AVD	dâr	_	(S (Cl (PreF * )	_	
2	t6308_000	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t6308_001	was	VAFIN	wësen	Ind.Past.Sg.3	 * ) )	_	
4	t6309_000	nechein	DIA	neh-èin	Fem.Nom.Sg.0	(MF (NX *	_	
5	t6310_000	twâle	NA	twâle	Nom.Sg	 * ) )	_	
6	t6311_000	-	$_	_	_	 *	_	
7	t6312_000	vüre	APPR	vür(e)	_	(Frag (PPX *	_	
8	t6313_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
9	t6314_000	küninc	NA	küni(n)g	Akk.Sg	 * ) )	_	
10	t6315_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
11	t6316_000	komen	VVFIN	komen	*.Pres.Pl.3	(LB (VX * ) )	_	
12	t6317_000	-	$_	_	_	 * ) )	_	
13	t6318_000	ire	DPOSA	ir(e)	Fem.Akk.Sg.0	(Cl (PreF (NX *	_	
14	t6319_000	boteschaft	NA	bot(e)-schaft	Akk.Sg	 * ) )	_	
15	t6320_000	ergâben	VVFIN	er-gëben	Ind.Past.Pl.3	(LB (VX * ) )	_	
16	t6321_000	-	$_	_	_	 *	_	
17	t6322_000	als	KO*	all-sô	_	(Frag *	_	
18	t6323_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
19	t6324_000	vernâmen	VVFIN	ver-nëmen	Ind.Past.Pl.3	(LB (VX * ) )	_	
20	t6325_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6326_000	daz	KOUS	dazz	_	(S (Cl (LB * )	_	
2	t6327_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t6328_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
4	t6329_000	liut	NA	liut	Akk.Sg	 * ) )	_	
5	t6330_000	lieze	VVFIN	lâzen	Subj.Past.Sg.3	(RB (VX * ) )	_	
6	t6331_000	-	$_	_	_	 *	_	
7	t6332_000	noch	KON	noh	_	(Frag *	_	
8	t6333_000	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
9	t6334_000	niene	AVD	niène	_	(PreF * )	_	
10	t6335_000	verstieze	VVFIN	ver-stôzen	Subj.Past.Sg.3	(LB (VX * ) )	_	
11	t6336_000	-	$_	_	_	 *	_	
12	t6337_000	des	DRELS	dër	Neut.Gen.Sg	(Frag (NX * )	_	
13	t6338_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
14	t6339_000	got	NA	got	Nom.Sg	(NX *	_	
15	t6340_000	mit	APPR	mit	_	(PPX *	_	
16	t6341_000	gewelte	NA	ge-walt	Dat.Sg	(NX * ) ) )	_	
17	t6342_000	-	$_	_	_	 * ) ) )	_	
18	t6343_000	hæte	VAFIN	haben	*.Past.Sg.3	(Frag (VX *	_	
19	t6344_000	behalten	VVPP	be-halten	_	 * )	_	
20	t6345_000	-	$_	_	_	 * )	_	
21	t6346_000	edele	NA	èdel(e)	Nom.Sg	(Frag (NX * )	_	
22	t6347_000	und	KON	unte	_	 *	_	
23	t6348_000	vrîtuom	NA	vrî-tuom	Nom.Sg	(NX * )	_	
24	t6349_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6350_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6351_000	solte	VMFIN	sol(e)n	*.Past.Sg.3	(LB (VX * ) )	_	
3	t6352_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
4	t6353_000	durch	APPR	durh	_	(PPX *	_	
5	t6354_000	reht	NA	rëht	Akk.Sg	(NX * ) ) ) )	_	
6	t6355_000	tuon	VVINF	tuon	_	(RB (VX * ) )	_	
7	t6356_000	-	$_	_	_	 * )	_	
8	t6357_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t6358_000	ne	PTKNEG	ne	_	(LB (VX *	_	
10	t6358_001	tæte	VVFIN	tuon	Subj.Past.Sg.3	 * ) )	_	
11	t6359_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
12	t6360_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX *	_	
13	t6361_000	mit	APPR	mit	_	(PPX *	_	
14	t6362_000	minnen	NA	minne	Dat.Pl	(NX * ) ) ) )	_	
15	t6363_000	-	$_	_	_	 * )	_	
16	t6364_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
17	t6365_000	würde	VAFIN	wërden	Subj.Past.Sg.3	(LB (VX * ) )	_	
18	t6366_000	sîn	VAINF	sîn	_	(MF (VX * ) )	_	
19	t6367_000	bedwungen	VVPP	be-dwingen	_	(RB (VX * ) )	_	
20	t6368_000	-	$_	_	_	 *	_	
21	t6369_000	von	APPR	von	_	(Frag (PPX *	_	
22	t6370_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
23	t6371_000	oberesten	ADJA	ober	Pos.Masc.Dat.Sg.wk	 *	_	
24	t6372_000	gote	NA	got	Dat.Sg	 * ) )	_	
25	t6373_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6374_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6375_000	sîn	VAFIN	sîn	Ind.Pres.Pl.1	(LB (VX * ) )	_	
3	t6376_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * )	_	
4	t6377_000	sîne	DPOSA	sîn	*.Nom.Pl.st	(NX *	_	
5	t6378_000	boten	NA	bote	Nom.Pl	 * ) )	_	
6	t6379_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6380_000	der	DDART	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t6381_000	küninc	NA	küni(n)g	Nom.Sg	 * )	_	
3	t6382_000	vrâgen	VVINF	vrâgen	_	(PreF (VX * ) )	_	
4	t6383_000	began	VVFIN	be-ginnen	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t6384_000	-	$_	_	_	 * )	_	
6	t6385_000	wie	AVW	wiè	_	(Frag *	_	
7	t6386_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
8	t6387_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
9	t6388_000	mohte	VMFIN	mügen	*.Past.Sg.3	(LB (VX * ) )	_	
10	t6389_000	wizzen	VVINF	wizzen	_	(RB (VX * ) )	_	
11	t6390_000	-	$_	_	_	 *	_	
12	t6391_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
13	t6392_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
14	t6393_000	vuoren	VVFIN	var(e)n	*.Past.Pl.3	(RB (VX * ) )	_	
15	t6394_000	vone	APPR	von	_	(PostF (PPX *	_	
16	t6395_000	gote	NA	got	Dat.Sg	(NX * ) ) )	_	
17	t6396_000	-	$_	_	_	 * ) )	_	
18	t6397_000	unde	KON	unte	_	(Frag *	_	
19	t6398_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
20	t6399_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	(LB (VX * ) )	_	
21	t6400_000	sîne	DPOSA	sîn	*.Nom.Pl.st	(MF (NX *	_	
22	t6401_000	boten	NA	bote	Nom.Pl	 * ) )	_	
23	t6402_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6403_000	des	DDART	dër	Neut.Gen.Sg	(S (Cl (PreF (NX *	_	
2	t6404_000	liutes	NA	liut	Gen.Sg	 * ) )	_	
3	t6405_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
4	t6406_000	ein	DIART	èin	Neut.Nom.Sg.0	(MF (NX *	_	
5	t6407_000	michel	ADJA	michel	Pos.Neut.Nom.Sg.wk	 *	_	
6	t6408_000	here	NA	hèr(e)	Nom.Sg	 * ) )	_	
7	t6409_000	-	$_	_	_	 * )	_	
8	t6410_000	des	DDS	dër	Neut.Gen.Sg	(Cl (PreF (NX * ) )	_	
9	t6411_000	ne	PTKNEG	ne	_	(LB (VX *	_	
10	t6411_001	mohte	VMFIN	mügen	*.Past.Sg.3	 * ) )	_	
11	t6412_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
12	t6413_000	entbern	VVINF	ent-bër(e)n	_	(RB (VX * ) )	_	
13	t6414_000	-	$_	_	_	 *	_	
14	t6415_000	in	APPR	in	_	(Frag (PPX *	_	
15	t6415_001	sîneme	DPOSA	sîn	Neut.Dat.Sg.st	(NX *	_	
16	t6416_000	rîche	NA	rîche	Dat.Sg	 * ) )	_	
17	t6417_000	-	$_	_	_	 * ) )	_	
18	t6418_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
19	t6419_000	redeten	VVFIN	rèden	*.Past.Pl.3	(LB (VX * ) )	_	
20	t6420_000	wunderlîche	AVD	wunter-lîche	_	(MF * )	_	
21	t6421_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6422_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t6423_000	quat	VVFIN	quëden	Ind.Past.Sg.3	(LB (VX * ) ) )	_	
3	t6424_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
4	t6425_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
5	t6426_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) )	_	
6	t6427_000	verbâren	VVFIN	ver-bër(e)n	Ind.Past.Pl.3	(RB (VX * ) )	_	
7	t6428_000	-	$_	_	_	 * )	_	
8	t6429_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
9	t6430_000	ne	PTKNEG	ne	_	(LB (VX *	_	
10	t6430_001	wesse	VVFIN	wizzen	*.Past.Sg.3	 * ) ) )	_	
11	t6431_000	waz	PW	wër	Neut.Nom.Sg.st	(Cl (PreF (NX *	_	
12	t6432_000	diu	DDART	dër	Fem.Nom.Sg	 *	_	
13	t6433_000	rede	NA	rède	Nom.Sg	 * ) )	_	
14	t6434_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
15	t6435_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6436_000	Aaron	NE	Aaron	Nom.Sg	(S (Frag (NX * )	_	
2	t6437_000	dô	AVD	dô	_	(PreF *	_	
3	t6438_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
4	t6439_000	gerten	NA	gèrte	Akk.Sg	 * ) )	_	
5	t6440_000	nam	VVFIN	nëmen	Ind.Past.Sg.3	(LB (VX * ) )	_	
6	t6441_000	-	$_	_	_	 * )	_	
7	t6442_000	von	APPR	von	_	(Frag (PPX *	_	
8	t6443_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
9	t6444_000	heiligen	ADJA	hèilig	Pos.Masc.Dat.Sg.wk	 *	_	
10	t6445_000	manne	NA	mann	Dat.Sg	 * ) )	_	
11	t6446_000	-	$_	_	_	 * )	_	
12	t6447_000	warf	VVFIN	wërfen	Ind.Past.Sg.3	(Cl (LB (VX * ) )	_	
13	t6448_000	si	PPER	ër	Fem.Akk.Sg.3	(MF (NX *	_	
14	t6449_000	selbe	DDD	sëlb	Fem.Akk.Sg.st	 *	_	
15	t6450_000	werde	ADJD	wërd	Pos.Fem.Akk.Sg.st	 * ) )	_	
16	t6451_000	-	$_	_	_	 *	_	
17	t6452_000	vüre	APPR	vür(e)	_	(Frag (PPX *	_	
18	t6453_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
19	t6454_000	küninc	NA	küni(n)g	Akk.Sg	 *	_	
20	t6455_000	ze	APPR	ze	_	(PPX *	_	
21	t6455_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
22	t6456_000	erde	NA	ërde	Dat.Sg	 * ) ) ) )	_	
23	t6457_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6458_000	dô	AVD	dô	_	(S (Cl (PreF * )	_	
2	t6459_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t6460_000	si	PPER	ër	Fem.Nom.Sg.3	(MF (NX *	_	
4	t6461_000	ze	APPR	ze	_	(PPX *	_	
5	t6461_001	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
6	t6462_000	slangen	NA	slange	Dat.Sg	 * ) ) ) )	_	
7	t6463_000	-	$_	_	_	 *	_	
8	t6464_000	grôzem	ADJN	grôz	Pos.Masc.Dat.Sg.st	(Frag *	_	
9	t6465_000	unde	KON	unte	_	 *	_	
10	t6466_000	langem	ADJN	lang	Pos.Masc.Dat.Sg.st	 *	_	
11	t6467_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6468_000	vüre	APPR	vür(e)	_	(S (Frag (PPX *	_	
2	t6469_000	nieht	NA	niht	Akk.Sg	(NX * ) )	_	
3	t6470_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
4	t6471_000	iz	PPER	ër	Neut.Akk.Sg.3	(PreF (NX * ) )	_	
5	t6472_000	ne	PTKNEG	ne	_	(LB (VX *	_	
6	t6472_001	habete	VAFIN	haben	*.Past.Sg.3	 * ) )	_	
7	t6473_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6474_000	zwêne	CARDA	zwêne	*.Akk.Pl.st	(S (Frag (NX *	_	
2	t6475_000	goukelære	NA	goukelære	Akk.Pl	 * )	_	
3	t6476_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
4	t6477_000	dô	AVD	dô	_	(PreF * )	_	
5	t6478_000	ladete	VVFIN	laden	*.Past.Sg.3	(LB (VX * ) )	_	
6	t6479_000	-	$_	_	_	 * )	_	
7	t6480_000	die	DDS	dër	*.Nom.Pl	(Cl (PreF (NX * ) )	_	
8	t6481_000	macheten	VVFIN	machen	*.Past.Pl.3	(LB (VX * ) )	_	
9	t6482_000	gelîche	AVD	ge-lîche	_	(MF * )	_	
10	t6483_000	-	$_	_	_	 *	_	
11	t6484_000	trachen	NA	trache	Akk.Pl	(Frag (NX *	_	
12	t6485_000	samelîche	ADJN	same-lich	Pos.*.Akk.Pl.st	 * )	_	
13	t6486_000	-	$_	_	_	 * )	_	
14	t6487_000	mit	APPR	mit	_	(Frag (PPX *	_	
15	t6488_000	goukeles	NA	goukel	Gen.Sg	(NX * ) )	_	
16	t6489_000	liste	NA	list	Dat.Sg	(NX * )	_	
17	t6490_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6491_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t6491_001	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t6492_000	mahten	VMFIN	mügen	*.Past.Pl.3	 * ) )	_	
4	t6493_000	iz	PPER	ër	Neut.Akk.Sg.3	(MF (NX * ) )	_	
5	t6494_000	gevristen	VVINF	ge-vristen	_	(RB (VX * ) )	_	
6	t6495_000	-	$_	_	_	 *	_	
7	t6496_000	disiu	DDS	dise	Fem.Nom.Sg	(Frag (NX * )	_	
8	t6497_000	alterseine	ADJD	alter(e)s-èine	Pos....0	 *	_	
9	t6498_000	-	$_	_	_	 * ) )	_	
10	t6499_000	ne	PTKNEG	ne	_	(Cl (LB (VX *	_	
11	t6499_001	veræze	VVFIN	ver-ëzzen	Subj.Past.Sg.3	 * ) )	_	
12	t6500_000	ene	DDS	ëner	*.Akk.Pl.st	(MF (NX *	_	
13	t6501_000	beide	DID	bèide	*.Akk.Pl..=.st	 * ) )	_	
14	t6502_000	-	$_	_	_	 * )	_	
15	t6503_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
16	t6504_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(LB (VX * ) )	_	
17	t6505_000	abe	AVD	aber	_	(MF *	_	
18	t6506_000	widere	AVD	wider(e)	_	 * )	_	
19	t6507_000	-	$_	_	_	 * )	_	
20	t6508_000	ze	APPR	ze	_	(PPX *	_	
21	t6508_001	holze	NA	holz	Dat.Sg	(NX * ) )	_	
22	t6509_000	ze	APPR	ze	_	(Frag (PPX *	_	
23	t6509_001	ire	DPOSA	ir(e)	Neut.Dat.Sg.0	(NX *	_	
24	t6510_000	bilede	NA	bil(e)de	Dat.Sg	 * ) )	_	
25	t6511_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6512_000	doch	AVD	doh	_	(S (Cl (PreF (PreF * )	_	
2	t6513_000	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t6513_001	wart	VAFIN	wërden	Ind.Past.Sg.3	 * ) ) )	_	
4	t6514_000	weiz	VVFIN	wizzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t6515_000	got	NA	got	Nom.Sg	(MF (NX * ) )	_	
6	t6516_000	-	$_	_	_	 * )	_	
7	t6517_000	sîn	DPOSA	sîn	Neut.Nom.Sg.0	(Cl (PreF (NX *	_	
8	t6518_000	herze	NA	hërze	Nom.Sg	 * ) )	_	
9	t6519_000	nieht	PTKNEG	niht	_	(LB (VX *	_	
10	t6520_000	verwandelt	VVFIN	ver-wantel(e)n	Ind.Pres.Sg.3	 * ) )	_	
11	t6521_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6522_000	swie	AVG	swiè	_	(S (Cl (LB * )	_	
2	t6523_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t6524_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
4	t6525_000	zeichen	NA	zèichen	Akk.Sg	 * ) )	_	
5	t6526_000	sæhe	VVFIN	sëhen	Subj.Past.Sg.3	(RB (VX * ) )	_	
6	t6527_000	-	$_	_	_	 * )	_	
7	t6528_000	diu	DDART	dër	Fem.Nom.Sg	(Cl (PreF (NX *	_	
8	t6529_000	rede	NA	rède	Nom.Sg	 * ) )	_	
9	t6530_000	dûhte	VVFIN	dunken	*.Past.Sg.3	(LB (VX * ) )	_	
10	t6531_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
11	t6532_000	smæhe	ADJD	smæhe	Pos....0	 * )	_	
12	t6533_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6534_000	swaz	PG	swër	Neut.Akk.Sg.st	(S (Frag (NX * )	_	
2	t6535_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
3	t6536_000	sæhe	VVFIN	sëhen	Subj.Past.Sg.3	(LB (VX * ) )	_	
4	t6537_000	mit	APPR	mit	_	(MF (PPX *	_	
5	t6538_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
6	t6539_000	ougen	NA	ouge	Dat.Pl	 * ) ) )	_	
7	t6540_000	-	$_	_	_	 * )	_	
8	t6541_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
9	t6542_000	ne	PTKNEG	ne	_	(LB (VX *	_	
10	t6542_001	wolte	VMFIN	wèllen	*.Past.Sg.3	 * ) )	_	
11	t6543_000	iedoch	AVD	iè-doh	_	(MF * )	_	
12	t6544_000	gelouben	VVINF	ge-louben	_	(RB (VX * ) )	_	
13	t6545_000	-	$_	_	_	 *	_	
14	t6546_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
15	t6547_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
16	t6548_000	wârhaft	ADJD	wâr-haft	Pos....0	 * )	_	
17	t6549_000	wâren	VAFIN	wësen	Ind.Past.Pl.3	(RB (VX * ) )	_	
18	t6550_000	-	$_	_	_	 * ) )	_	
19	t6551_000	oder	KON	oder	_	(Frag *	_	
20	t6552_000	vone	APPR	von	_	(PreF (PPX *	_	
21	t6553_000	gote	NA	got	Dat.Sg	(NX * ) ) )	_	
22	t6554_000	vuoren	VVFIN	var(e)n	*.Past.Pl.3	(LB (VX * ) )	_	
23	t6555_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6556_000	des	DDART	dër	Masc.Gen.Sg	(S (Frag (NX *	_	
2	t6557_000	anderen	DIA	ander	Masc.Gen.Sg.wk	 *	_	
3	t6558_000	morgenes	NA	morgen	Gen.Sg	 * )	_	
4	t6559_000	vruo	AVD	vruo	_	 *	_	
5	t6560_000	-	$_	_	_	 * )	_	
6	t6561_000	die	DDART	dër	*.Nom.Pl	(Frag (NX *	_	
7	t6562_000	boten	NA	bote	Nom.Pl	 * )	_	
8	t6563_000	komen	VVINF	komen/zuo<.+	_	(VX * )	_	
9	t6564_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
10	t6565_000	abe	AVD	aber	_	 *	_	
11	t6566_000	zuo	PTKVZ	zuo/<.+komen	_	 *	_	
12	t6567_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6568_000	die	DDART	dër	Fem.Akk.Sg	(S (Frag (NX *	_	
2	t6569_000	rede	NA	rède	Akk.Sg	 * )	_	
3	t6570_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
4	t6571_000	ime	PPER	ër	Masc.Dat.Sg.3	(PreF (NX * ) )	_	
5	t6572_000	sageten	VVFIN	sagen	*.Past.Pl.3	(LB (VX * ) )	_	
6	t6573_000	-	$_	_	_	 *	_	
7	t6574_000	die	DRELS	dër	Fem.Akk.Sg	(Cl (LB (NX * ) )	_	
8	t6575_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
9	t6576_000	vernomen	VVPP	ver-nëmen	_	(RB (VX *	_	
10	t6577_000	habeten	VAFIN	haben	*.Past.Pl.3	 * ) )	_	
11	t6578_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6579_000	nieht	PTKNEG	niht	_	(S (Frag *	_	
2	t6580_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
3	t6581_000	si	PPER	ër	*.Akk.Pl.3	(PreF (NX * ) )	_	
4	t6582_000	gewerete	VVFIN	ge-wër(e)n	*.Past.Sg.3	(LB (VX * ) )	_	
5	t6583_000	-	$_	_	_	 *	_	
6	t6584_000	des	DRELS	dër	Neut.Gen.Sg	(Cl (LB (NX * ) )	_	
7	t6585_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX *	_	
8	t6586_000	ze	APPR	ze	_	(PPX *	_	
9	t6586_001	ime	PPER	ër	Masc.Dat.Sg.3	(NX * ) ) ) )	_	
10	t6587_000	gerten	VVFIN	gër(e)n	*.Past.Pl.3	(RB (VX * ) )	_	
11	t6588_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6589_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t6590_000	weiz	VVFIN	wizzen	Ind.Pres.Sg.1	(LB (VX * ) ) )	_	
3	t6591_000	iz	PPER	ër	Neut.Akk.Sg.3	(Cl (PreF (NX * ) )	_	
4	t6592_000	dâ	PAVD	dâr/+zuo	_	(LB (VX *	_	
5	t6592_001	zuo	PAVAP	zuo/dâr+	_	 *	_	
6	t6593_000	geschæhe	VVFIN	ge-schëhen	Subj.Past.Sg.3	 * ) )	_	
7	t6594_000	-	$_	_	_	 * )	_	
8	t6595_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
9	t6596_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
10	t6597_000	komen	VVFIN	komen	*.Pres.Pl.3	(RB (VX * ) )	_	
11	t6598_000	ze	APPR	ze	_	(PostF (PPX *	_	
12	t6598_001	einem	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
13	t6599_000	bache	NA	bach	Dat.Sg	 * ) ) )	_	
14	t6600_000	-	$_	_	_	 *	_	
15	t6601_000	der	DDART	dër	Masc.Nom.Sg	(Frag (NX *	_	
16	t6602_000	küninc	NA	küni(n)g	Nom.Sg	 *	_	
17	t6603_000	mit	APPR	mit	_	(PPX *	_	
18	t6604_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
19	t6605_000	boten	NA	bote	Dat.Pl	 *	_	
20	t6606_000	zwein	CARDN	zwêne	*.Dat.Pl.st	 * ) ) )	_	
21	t6607_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6608_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6609_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t6610_000	sunderigez	ADJA	sunterig	Pos.Neut.Nom.Sg.st	(MF (NX *	_	
4	t6611_000	heil	NA	hèil	Nom.Sg	 * ) )	_	
5	t6612_000	-	$_	_	_	 *	_	
6	t6613_000	als	KO*	all-sô	_	(Frag *	_	
7	t6614_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
8	t6615_000	got	NA	got	Nom.Sg	(PreF (NX * ) )	_	
9	t6616_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
10	t6617_000	-	$_	_	_	 *	_	
11	t6618_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
12	t6618_001	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
13	t6619_000	wesen	VAINF	wësen	_	(VX * ) )	_	
14	t6620_000	solte	VMFIN	sol(e)n	*.Past.Sg.3	(RB (VX * ) )	_	
15	t6621_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6622_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t6622_001	sprâchen	VVFIN	sprëchen	Ind.Past.Pl.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6623_000	küninc	NA	küni(n)g	Nom.Sg	(S (NX *	_	
2	t6624_000	here	NA	hèr(e)	Nom.Sg	 * )	_	
3	t6625_000	hoere	VVIMP	hoèren	Sg.2	(Cl (LB (VX * ) )	_	
4	t6626_000	-	$_	_	_	 * )	_	
5	t6627_000	daz	DDART	dër	Neut.Akk.Sg	(Cl (PreF (NX *	_	
6	t6628_000	zeichen	NA	zèichen	Akk.Sg	 * ) )	_	
7	t6629_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
8	t6630_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
9	t6631_000	êren	VVINF	êren	_	(RB (VX * ) )	_	
10	t6632_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6633_000	sihes	VVFIN	sëhen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t6634_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
3	t6635_000	dise	DDA	dise	Fem.Akk.Sg	(NX *	_	
4	t6636_000	gerte	NA	gèrte	Akk.Sg	 *	_	
5	t6637_000	lanc	ADJA	lang	Pos.Fem.Akk.Sg.st	 * ) )	_	
6	t6638_000	-	$_	_	_	 *	_	
7	t6639_000	die	DRELS	dër	Fem.Akk.Sg	(MF (NX (Cl (LB (NX * ) )	_	
8	t6640_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
9	t6641_000	hân	VAFIN	haben	Ind.Pres.Sg.1	(RB (VX * ) )	_	
10	t6642_000	in	APPR	in	_	(PostF (PPX *	_	
11	t6643_000	mîner	DPOSA	mîn	Fem.Dat.Sg.st	(NX *	_	
12	t6644_000	hant	NA	hant	Dat.Sg	 * ) ) )	_	
13	t6645_000	-	$_	_	_	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6646_000	daz	DDART	dër	Neut.Akk.Sg	(S (Frag (NX *	_	
2	t6647_000	wazzer	NA	wazzer	Akk.Sg	 * )	_	
3	t6648_000	ich	PPER	ich	Nom.Sg.1	(PreF (NX * ) )	_	
4	t6649_000	dâ	PAVD	dâr/+mit	_	(LB (VX *	_	
5	t6650_000	mite	PAVAP	mit/dâr+	_	 *	_	
6	t6651_000	rüere	VVFIN	rüèren	*.Pres.Sg.1	 * ) ) )	_	
7	t6652_000	ze	APPR	ze	_	(Frag (PPX *	_	
8	t6653_000	bluote	NA	bluot	Dat.Sg	(NX * ) )	_	
9	t6654_000	iz	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
10	t6655_000	sich	PRF	sich	Akk	(PreF (NX * ) )	_	
11	t6656_000	bekêre	VVFIN	be-kêren	Subj.Pres.Sg.3	(LB (VX * ) )	_	
12	t6657_000	-	$_	_	_	 * )	_	
13	t6658_000	ze	APPR	ze	_	(Cl (PreF (PPX *	_	
14	t6658_001	bluote	NA	bluot	Dat.Sg	(NX * ) ) )	_	
15	t6659_000	muoz	VMFIN	müèzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t6660_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
17	t6661_000	werden	VAINF	wërden	_	(VX * ) )	_	
18	t6662_000	-	$_	_	_	 * )	_	
19	t6663_000	die	DDART	dër	*.Nom.Pl	(Cl (PreF (NX *	_	
20	t6664_000	vische	NA	visch	Nom.Pl	 * ) )	_	
21	t6665_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
22	t6666_000	ersterben	VVINF	er-stërben	_	(RB (VX * ) )	_	
23	t6667_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6668_000	daz	DDART	dër	Neut.Nom.Sg	(S (Frag (NX *	_	
2	t6669_000	wazzer	NA	wazzer	Nom.Sg	 * )	_	
3	t6670_000	iuch	PPER	ir	Akk.Pl.2	(NX * )	_	
4	t6671_000	ane	PTKVZ	ane/>+stinken	_	(VX *	_	
5	t6672_000	stinke	VVFIN	stinken/ane>+	Subj.Pres.Sg.3	 * )	_	
6	t6673_000	-	$_	_	_	 * )	_	
7	t6674_000	swaz	PG	swër	Neut.Nom.Sg.st	(Frag (NX * )	_	
8	t6675_000	ir	PPER	ir	Nom.Pl.2	(PreF (NX * ) )	_	
9	t6676_000	wellt	VMFIN	wèllen	*.Pres.Pl.2	(LB (VX * ) )	_	
10	t6677_000	trinken	VVINF	trinken	_	(RB (VX * ) )	_	
11	t6678_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6679_000	ze	APPR	ze	_	(S (Frag (PPX *	_	
2	t6680_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t6681_000	mose	NA	mos	Dat.Sg	 * ) )	_	
4	t6682_000	joch	AVD	joh	_	 *	_	
5	t6683_000	ze	APPR	ze	_	(PPX *	_	
6	t6683_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
7	t6684_000	brunnen	NA	brunne	Dat.Sg	 * ) )	_	
8	t6685_000	-	$_	_	_	 * )	_	
9	t6686_000	dâ	AVD	dâr	_	(Cl (PreF * )	_	
10	t6687_000	ne	PTKNEG	ne	_	(LB (VX *	_	
11	t6687_001	müget	VMFIN	mügen	*.Pres.Pl.2	 * ) )	_	
12	t6688_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * ) )	_	
13	t6689_000	gewinnen	VVINF	ge-winnen	_	(RB (VX * ) )	_	
14	t6690_000	-	$_	_	_	 *	_	
15	t6691_000	nieht	PTKNEG	niht	_	(PostF * )	_	
16	t6692_000	daz	DRELS	dër	Neut.Akk.Sg	(PostF (Cl (LB (NX * ) )	_	
17	t6693_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * ) )	_	
18	t6694_000	getrinket	VVFIN	ge-trinken	Ind.Pres.Sg.3	(RB (VX * ) )	_	
19	t6695_000	-	$_	_	_	 * ) ) )	_	
20	t6696_000	sô	AVD	sô	_	(Frag *	_	
21	t6697_000	harte	AVD	harte	_	 *	_	
22	t6698_000	iz	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
23	t6699_000	iuch	PPER	ir	Akk.Pl.2	(NX * )	_	
24	t6700_000	ane	PTKVZ	ane/>+stinken	_	(VX *	_	
25	t6701_000	stinket	VVFIN	stinken/ane>+	Ind.Pres.Sg.3	 * )	_	
26	t6702_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6703_000	waz	PW	wër	Neut.Akk.Sg.st	(S (Cl (PreF * )	_	
2	t6704_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t6705_000	dû	PPER	dû	Nom.Sg.2	(MF (NX *	_	
4	t6706_000	küninc	NA	küni(n)g	Nom.Sg	 *	_	
5	t6707_000	hêre	ADJN	hêr(e)	Pos.Masc.Nom.Sg.wk	 * ) )	_	
6	t6708_000	-	$_	_	_	 *	_	
7	t6709_000	zeichen	NA	zèichen	Akk.Pl	(Frag (NX *	_	
8	t6710_000	grôzere	ADJN	grôz	Pos.*.Akk.Pl.st	 * )	_	
9	t6711_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6712_000	uns	PPER	wir	Dat.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t6713_000	saget	VVFIN	sagen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6714_000	diu	DDART	dër	Fem.Nom.Sg	(MF (NX *	_	
4	t6715_000	schrift	NA	schrift	Nom.Sg	 *	_	
5	t6716_000	ze	APPR	ze	_	(PPX *	_	
6	t6716_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) ) )	_	
7	t6717_000	-	$_	_	_	 *	_	
8	t6718_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
9	t6719_000	die	DDART	dër	*.Nom.Pl	(MF (NX *	_	
10	t6720_000	goukelære	NA	goukelære	Nom.Pl	 * )	_	
11	t6721_000	-	$_	_	_	 *	_	
12	t6722_000	mit	APPR	mit	_	(PPX *	_	
13	t6723_000	galsters	NA	galster	Gen.Sg	(NX * ) )	_	
14	t6724_000	liste	NA	list	Dat.Sg	(NX * )	_	
15	t6725_000	-	$_	_	_	 *	_	
16	t6726_000	ze	APPR	ze	_	(PPX *	_	
17	t6727_000	der	DDART	dër	Fem.Gen.Sg	(NX *	_	
18	t6727_001	stunte	NA	stunt(e)	Gen.Sg	 * ) )	_	
19	t6728_000	vriste	NA	vrist	Dat.Sg	(NX * )	_	
20	t6729_000	-	$_	_	_	 *	_	
21	t6730_000	diu	DDART	dër	Neut.Akk.Pl	(NX *	_	
22	t6731_000	selben	DDA	sëlb	*.Akk.Pl.wk	 *	_	
23	t6732_000	werc	NA	wërk	Akk.Pl	 * ) )	_	
24	t6733_000	worhten	VVFIN	wirken	*.Past.Pl.3	(RB (VX * ) )	_	
25	t6734_000	-	$_	_	_	 * ) )	_	
26	t6735_000	nieht	PTKNEG	niht	_	(Frag *	_	
27	t6736_000	in	PRF	ër	*.Dat.Pl.st	(PreF (NX * ) )	_	
28	t6737_000	ne	PTKNEG	ne	_	(LB (VX *	_	
29	t6737_001	vürhten	VVFIN	vürhten	*.Pres.Pl.3	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6738_000	durch	APPR	durh	_	(S (Cl (PreF (PPX *	_	
2	t6739_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) ) )	_	
3	t6740_000	ne	PTKNEG	ne	_	(PreF (LB (VX *	_	
4	t6740_001	wart	VAFIN	wërden	Ind.Past.Sg.3	 * ) ) )	_	
5	t6741_000	weiz	VVFIN	wizzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t6742_000	got	NA	got	Nom.Sg	(MF (NX * ) )	_	
7	t6743_000	-	$_	_	_	 * )	_	
8	t6744_000	sîn	DPOSA	sîn	Neut.Nom.Sg.0	(Frag (NX *	_	
9	t6745_000	herze	NA	hërze	Nom.Sg	 * )	_	
10	t6746_000	nieht	PTKNEG	niht	_	(VX *	_	
11	t6747_000	verwandelt	VVPP	ver-wantel(e)n	_	 * )	_	
12	t6748_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6749_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t6749_001	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t6749_002	ruochte	VVFIN	ruochen	*.Past.Sg.3	 * ) )	_	
4	t6750_000	si	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
5	t6751_000	gehoeren	VVINF	ge-hoèren	_	(VX * ) )	_	
6	t6752_000	-	$_	_	_	 *	_	
7	t6753_000	swie	AVG	swiè	_	(PostF (Cl (LB * )	_	
8	t6754_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
9	t6755_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
10	t6756_000	zeichen	NA	zèichen	Akk.Sg	 * ) )	_	
11	t6757_000	sæhe	VVFIN	sëhen	Subj.Past.Sg.3	(RB (VX * ) )	_	
12	t6758_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6759_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t6760_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t6761_000	ein	DIART	èin	Neut.Nom.Sg.0	(MF (NX *	_	
4	t6762_000	michel	ADJA	michel	Pos.Neut.Nom.Sg.0	 *	_	
5	t6763_000	unheil	NA	un-hèil	Nom.Sg	 * ) )	_	
6	t6764_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6765_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t6766_000	kêrte	VVFIN	kêren	*.Past.Sg.3	(LB (VX * ) )	_	
3	t6767_000	abe	AVD	aber	_	(MF * )	_	
4	t6768_000	-	$_	_	_	 *	_	
5	t6769_000	hine	AVD	hin(e)	_	(Frag *	_	
6	t6769_001	heim	AVD	hèim	_	 *	_	
7	t6770_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6771_000	alle	DIA	all	*.Nom.Pl.st	(S (Frag (NX *	_	
2	t6772_000	die	DDART	dër	*.Nom.Pl	 *	_	
3	t6773_000	lantliute	NA	lant-liut	Nom.Pl	 * )	_	
4	t6774_000	-	$_	_	_	 * )	_	
5	t6775_000	wurden	VAFIN	wërden	*.Past.Pl.3	(Cl (LB (VX * ) )	_	
6	t6776_000	ze	APPR	ze	_	(MF (PPX *	_	
7	t6776_001	noete	NA	nôt	Dat.Sg	(NX * ) ) )	_	
8	t6777_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6778_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t6779_000	gruoben	VVFIN	graben	*.Past.Pl.3	(LB (VX * ) )	_	
3	t6780_000	ze	APPR	ze	_	(MF (PPX *	_	
4	t6780_001	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
5	t6781_000	stunten	NA	stunt(e)	Dat.Pl	 * ) ) )	_	
6	t6782_000	-	$_	_	_	 *	_	
7	t6783_000	vile	AVD	vil(e)	_	(Frag *	_	
8	t6784_000	harte	AVD	harte	_	 *	_	
9	t6785_000	tiefe	ADJA	tièf	Pos.*.Akk.Pl.st	(NX *	_	
10	t6786_000	brunnen	NA	brunne	Akk.Pl	 * )	_	
11	t6787_000	-	$_	_	_	 * ) )	_	
12	t6788_000	der	DDART	dër	Masc.Nom.Sg	(Cl (PreF (NX *	_	
13	t6789_000	durst	NA	durst	Nom.Sg	 * ) )	_	
14	t6790_000	tet	VVFIN	tuon	Ind.Past.Sg.3	(LB (VX * ) )	_	
15	t6791_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
16	t6792_000	vile	AVD	vil(e)	_	 *	_	
17	t6793_000	nôt	NA	nôt	Akk.Sg	(NX * ) )	_	
18	t6794_000	-	$_	_	_	 * )	_	
19	t6795_000	in	PPER	ër	*.Dat.Pl.3	(Cl (PreF (NX * ) )	_	
20	t6796_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
21	t6796_001	bezzer	ADJD	bèzzer	Comp....0	(MF *	_	
22	t6797_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
23	t6798_000	tôt	NA	tôd	Nom.Sg	 * ) )	_	
24	t6799_000	-	$_	_	_	 *	_	
25	t6800_000	wande	KO*	wante	_	(Frag *	_	
26	t6801_000	si	PPER	ër	*.Nom.Pl.3	(NX *	_	
27	t6802_000	ze	APPR	ze	_	(PPX *	_	
28	t6802_001	necheiner	DIA	neh-èin	Fem.Dat.Sg.st	(NX *	_	
29	t6803_000	stunte	NA	stunt(e)	Dat.Sg	 * ) ) )	_	
30	t6804_000	-	$_	_	_	 * ) )	_	
31	t6805_000	wazzer	NA	wazzer	Akk.Sg	(Cl (PreF (NX * ) )	_	
32	t6806_000	ne	PTKNEG	ne	_	(LB (VX *	_	
33	t6806_001	vunden	VVFIN	vinden	*.Past.Pl.3	 * ) )	_	
34	t6807_000	-	$_	_	_	 * )	_	
35	t6808_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
36	t6809_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
37	t6810_000	sich	PRF	sich	Akk	(NX * ) )	_	
38	t6811_000	gelabeten	VVFIN	ge-laben	*.Past.Pl.3	(RB (VX * ) )	_	
39	t6812_000	-	$_	_	_	 * )	_	
40	t6813_000	decheine	DIA	deh-èin	Fem.Akk.Sg.st	(Cl (PreF (NX *	_	
41	t6814_000	wîs	NA	wîs	Akk.Sg	 * ) )	_	
42	t6815_000	erkuolten	VVFIN	er-küèlen	*.Past.Pl.3	(LB (VX * ) )	_	
43	t6816_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6817_000	disiu	DDA	dise	Fem.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t6818_000	nôt	NA	nôt	Nom.Sg	 * ) )	_	
3	t6819_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t6820_000	siben	CARDA	siben	*.Nom.Pl.0	(MF (NX *	_	
5	t6821_000	tage	NA	tag	Nom.Pl	 * ) )	_	
6	t6822_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6823_000	von	AVD	von(e)	_	(S (Cl (PreF *	_	
2	t6824_000	dannen	AVD	dannen	_	 * )	_	
3	t6825_000	hæten	VAFIN	haben	*.Past.Pl.3	(LB (VX * ) )	_	
4	t6826_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
5	t6827_000	klage	NA	klage	Akk.Sg	(NX * ) )	_	
6	t6828_000	-	$_	_	_	 *	_	
7	t6829_000	daz	DDART	dër	Neut.Nom.Sg	(Frag (NX *	_	
8	t6830_000	lantliut	NA	lant-liut	Nom.Sg	 *	_	
9	t6831_000	gemeine	ADJN	ge-mèine	Pos.Neut.Nom.Sg.0	 * )	_	
10	t6832_000	-	$_	_	_	 * )	_	
11	t6833_000	über	APPR	über	_	(Frag *	_	
12	t6834_000	grôze	ADJA	grôz	Pos.*.Akk.Pl..%.st	 *	_	
13	t6835_000	und	KON	unte	_	 *	_	
14	t6836_000	über	APPR	über	_	 *	_	
15	t6837_000	kleine	ADJA	klèine	Pos.*.Akk.Pl..%.st	 *	_	
16	t6838_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6839_000	die	DDART	dër	*.Nom.Pl	(S (Frag (NX *	_	
2	t6840_000	boten	NA	bote	Nom.Pl	 * )	_	
3	t6841_000	abe	AVD	aber	_	(PreF * )	_	
4	t6842_000	kômen	VVFIN	komen	*.Past.Pl.3	(LB (VX * ) )	_	
5	t6843_000	-	$_	_	_	 * )	_	
6	t6844_000	ze	APPR	ze	_	(Frag (PPX *	_	
7	t6844_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
8	t6845_000	küninge	NA	küni(n)g	Dat.Sg	 *	_	
9	t6846_000	Pharaoe	NE	Pharao	Dat.Sg	 * ) )	_	
10	t6847_000	-	$_	_	_	 * )	_	
11	t6848_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
12	t6849_000	bâten	VVFIN	biten	Ind.Past.Pl.3	(LB (VX * ) )	_	
13	t6850_000	dannen	AVD	dannen	_	(MF *	_	
14	t6851_000	lâzen	VVINF	lâzen	_	(VX * ) )	_	
15	t6852_000	-	$_	_	_	 *	_	
16	t6853_000	ire	DPOSA	ir(e)	Masc.Akk.Sg.0	(Frag (NX *	_	
17	t6854_000	lieben	ADJA	lièb	Pos.Masc.Akk.Sg.*	 *	_	
18	t6855_000	hûsgenôze	NA	hûs-ge-nôz(e)	Akk.Sg	 * )	_	
19	t6856_000	-	$_	_	_	 * )	_	
20	t6857_000	wande	KO*	wante	_	(Frag *	_	
21	t6858_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
22	t6859_000	got	NA	got	Nom.Sg	(PreF (NX * ) )	_	
23	t6860_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
24	t6861_000	-	$_	_	_	 * )	_	
25	t6862_000	und	KON	unte	_	(Frag *	_	
26	t6863_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
27	t6864_000	wesen	VAINF	wësen	_	(PreF (VX * ) )	_	
28	t6865_000	solte	VMFIN	sol(e)n	*.Past.Sg.3	(LB (VX * ) )	_	
29	t6866_000	-	$_	_	_	 *	_	
30	t6867_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
31	t6868_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
32	t6868_001	heim	AVD	hèim	_	 * )	_	
33	t6869_000	sunnen	VVFIN	sinnen	*.Past.Pl.3	(RB (VX * ) )	_	
34	t6870_000	-	$_	_	_	 * ) ) )	_	
35	t6871_000	dâ	AVD	dâr	_	(PreF * )	_	
36	t6872_000	si	PPER	ër	*.Nom.Pl.3	(NX * )	_	
37	t6873_000	ire	DPOSA	ir(e)	Neut.Akk.Sg.0	(PreF (NX *	_	
38	t6874_000	erbe	NA	èrbe	Akk.Sg	 * ) )	_	
39	t6875_000	vunden	VVFIN	vinden	*.Past.Pl.3	(LB (VX * ) )	_	
40	t6876_000	-	$_	_	_	 *	_	
41	t6877_000	dô	AVD	dô	_	(Frag *	_	
42	t6878_000	si	PPER	ër	*.Nom.Pl.3	(NX *	_	
43	t6879_000	durch	APPR	durh	_	(PPX *	_	
44	t6880_000	nechein	DIA	neh-èin	Masc,Neut.Akk.Sg.0	(NX *	_	
45	t6881_000	gedwanc	NA	ge-dwang	Akk.Sg	 * ) ) )	_	
46	t6882_000	-	$_	_	_	 * )	_	
47	t6883_000	ne	PTKNEG	ne	_	(Cl (LB (VX *	_	
48	t6883_001	wâren	VAFIN	wësen	Ind.Past.Pl.3	 * ) )	_	
49	t6884_000	-	$_	_	_	 *	_	
50	t6885_000	in	APPR	in	_	(Frag *	_	
51	t6886_000	niemannes	DIA	niè-mann	*.Gen.Sg.st	 *	_	
52	t6887_000	hant	NA	hant	Akk.Sg	(NX * )	_	
53	t6888_000	-	$_	_	_	 *	_	
54	t6889_000	deme	DRELS	dër	Masc.Dat.Sg	(Cl (LB (NX * ) )	_	
55	t6890_000	si	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
56	t6891_000	diente	VVFIN	diènen	Ind.Past.Sg.3	(RB (VX * ) )	_	
57	t6892_000	-	$_	_	_	 * ) )	_	
58	t6893_000	mit	APPR	mit	_	(Frag (PPX *	_	
59	t6894_000	decheiner	DIA	deh-èin	Fem.Gen.Sg.st	(NX *	_	
60	t6895_000	slahte	NA	slahte	Gen.Sg	 * ) )	_	
61	t6896_000	noeten	NA	nôt	Dat.Pl	(NX * )	_	
62	t6897_000	-	$_	_	_	 *	_	
63	t6898_000	unde	KON	unte	_	(Frag *	_	
64	t6899_000	dô	KOUS	dô	_	 *	_	
65	t6900_000	si	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
66	t6901_000	muosten	VMFIN	müèzen	*.Past.Pl.3	(LB (VX * ) )	_	
67	t6902_000	ervüllen	VVINF	er-vüllen	_	(RB (VX * ) )	_	
68	t6903_000	-	$_	_	_	 * ) )	_	
69	t6904_000	ire	PPER	ër	*.Gen.Pl.3	(Frag (NX *	_	
70	t6905_000	selber	DDD	sëlb	*.Gen.Pl..=.st	 * )	_	
71	t6906_000	muotwillen	NA	muot-wille	Akk.Sg	(NX * )	_	
72	t6907_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6908_000	der	DDART	dër	Masc.Nom.Sg	(S (Frag (NX *	_	
2	t6909_000	küninc	NA	küni(n)g	Nom.Sg	 * )	_	
3	t6910_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
4	t6911_000	wider	AVD	wider(e)	_	(PreF * )	_	
5	t6912_000	redete	VVFIN	rèden	*.Past.Sg.3	(LB (VX * ) )	_	
6	t6913_000	-	$_	_	_	 * )	_	
7	t6914_000	als	KO*	all-sô	_	(Frag *	_	
8	t6914_001	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
9	t6915_000	gewalt	NA	ge-walt	Akk.Sg	(PreF (NX * ) )	_	
10	t6916_000	habete	VAFIN	haben	*.Past.Sg.3	(LB (VX * ) )	_	
11	t6917_000	-	$_	_	_	 * )	_	
12	t6918_000	mit	APPR	mit	_	(Frag (PPX *	_	
13	t6919_000	micheler	ADJA	michel	Pos.Fem.Dat.Sg.st	(NX *	_	
14	t6920_000	ungüete	NA	un-güète	Dat.Sg	 * ) )	_	
15	t6921_000	-	$_	_	_	 * )	_	
16	t6922_000	und	KON	unte	_	(Frag *	_	
17	t6923_000	nâch	APPR	nâh	_	(PPX *	_	
18	t6924_000	grôzer	ADJA	grôz	Pos.Fem.Dat.Sg.st	(NX *	_	
19	t6925_000	übermüete	NA	über-müète	Dat.Sg	 * ) )	_	
20	t6926_000	-	$_	_	_	 * )	_	
21	t6927_000	wande	KO*	wante	_	(Frag *	_	
22	t6928_000	sîn	DPOSA	sîn	Neut.Nom.Sg.0	(NX *	_	
23	t6928_001	herze	NA	hërze	Nom.Sg	 * )	_	
24	t6929_000	was	VAFIN	wësen	Ind.Past.Sg.3	(VX *	_	
25	t6930_000	bevangen	VVPP	be-vâhen	_	 * )	_	
26	t6931_000	-	$_	_	_	 * )	_	
27	t6932_000	mit	APPR	mit	_	(Frag (PPX *	_	
28	t6933_000	sünticlîchen	ADJA	süntig-lich	Pos.*.Dat.Pl.*	(NX *	_	
29	t6934_000	schanden	NA	schante	Dat.Pl	 * ) )	_	
30	t6935_000	-	$_	_	_	 * )	_	
31	t6936_000	mit	APPR	mit	_	(Frag (PPX *	_	
32	t6937_000	micheler	ADJA	michel	Pos.Fem.Dat.Sg.st	(NX *	_	
33	t6938_000	herte	NA	hèrte	Dat.Sg	 * ) )	_	
34	t6939_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6940_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6941_000	entgalte	VVFIN	ent-galten	*.Past.Sg.3	(LB (VX * ) )	_	
3	t6942_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
4	t6943_000	lant	NA	lant	Nom.Sg	 * )	_	
5	t6944_000	harte	AVD	harte	_	 * )	_	
6	t6945_000	-	$_	_	_	 * )	_	
7	t6946_000	wande	KO*	wante	_	(Frag *	_	
8	t6947_000	iz	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
9	t6948_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(VX *	_	
10	t6949_000	gezühtiget	VVPP	zühtigen	_	 * )	_	
11	t6950_000	-	$_	_	_	 * )	_	
12	t6951_000	mit	APPR	mit	_	(Frag (PPX *	_	
13	t6952_000	manicvalter	ADJA	manig-valt	Pos.Fem.Dat.Sg.st	(NX *	_	
14	t6953_000	nôt	NA	nôt	Dat.Sg	 * ) )	_	
15	t6954_000	-	$_	_	_	 *	_	
16	t6955_000	die	DRELS	dër	Fem.Nom.Sg	(Cl (LB (NX * ) )	_	
17	t6956_000	nie	AVD	niè	_	(MF *	_	
18	t6957_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 * )	_	
19	t6958_000	vernam	VVFIN	ver-nëmen	Ind.Past.Sg.3	(RB (VX * ) )	_	
20	t6959_000	-	$_	_	_	 * ) )	_	
21	t6960_000	neweder	KO*	ne-wëder	_	(Frag *	_	
22	t6961_000	wîp	NA	wîb	Nom.Sg	(NX * )	_	
23	t6962_000	-	$_	_	_	 * )	_	
24	t6963_000	noch	KON	noh	_	(Frag *	_	
25	t6964_000	man	NA	mann	Nom.Sg	(NX * )	_	
26	t6965_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6966_000	got	NA	got	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6967_000	suochte	VVFIN	suochen	*.Past.Sg.3	(LB (VX * ) )	_	
3	t6968_000	si	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
4	t6969_000	heime	AVD	hèime	_	 * )	_	
5	t6970_000	-	$_	_	_	 *	_	
6	t6971_000	mit	APPR	mit	_	(Frag (PPX *	_	
7	t6972_000	here	NA	hèr(e)	Dat.Sg	(NX * ) )	_	
8	t6973_000	vile	AVD	vil(e)	_	 *	_	
9	t6974_000	kleineme	ADJN	klèine	Pos.Masc.Dat.Sg.st	 *	_	
10	t6975_000	-	$_	_	_	 * )	_	
11	t6976_000	al	AVD	al	_	(Frag *	_	
12	t6977_000	nâch	APPR	nâh	_	(PPX *	_	
13	t6978_000	sînem	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
14	t6979_000	gewalte	NA	ge-walt	Dat.Sg	 * ) )	_	
15	t6980_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6981_000	iz	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t6982_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t6983_000	vile	AVD	vil(e)	_	(MF *	_	
4	t6984_000	harte	AVD	harte	_	 *	_	
5	t6985_000	manicvalt	ADJD	manig-valt	Pos....0	 * )	_	
6	t6986_000	-	$_	_	_	 * )	_	
7	t6987_000	iz	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
8	t6988_000	ne	PTKNEG	ne	_	(LB (VX *	_	
9	t6989_000	vuorte	VVFIN	vüèren	*.Past.Sg.3	 * ) )	_	
10	t6990_000	schilt	NA	schilt	Akk.Sg	(MF (NX * ) )	_	
11	t6991_000	noch	KON	noh	_	(Frag *	_	
12	t6992_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
13	t6993_000	swert	NA	swërt	Akk.Sg	 * )	_	
14	t6994_000	-	$_	_	_	 * )	_	
15	t6995_000	noch	KON	noh	_	(Frag *	_	
16	t6996_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
17	t6997_000	hütten	NA	hütte	Akk.Pl	 * )	_	
18	t6998_000	-	$_	_	_	 * )	_	
19	t6999_000	noch	KON	noh	_	(Frag *	_	
20	t7000_000	gezelt	NA	ge-zëlt	Akk.Sg	(NX * )	_	
21	t7001_000	-	$_	_	_	 * ) )	_	
22	t7002_000	helm	NA	hëlm(e)	Akk.Sg	(NX * )	_	
23	t7003_000	noch	KON	noh	_	(Frag *	_	
24	t7004_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
25	t7005_000	brünne	NA	brünne	Akk.Sg	 * ) )	_	
26	t7006_000	necheiner	DIA	neh-èin	Fem.Gen.Sg.st	(Frag (NX *	_	
27	t7007_000	rîtærschefte	NA	rîtære-schaft	Gen.Sg	 * )	_	
28	t7008_000	wünne	NA	wünne	Nom.Sg	(NX * )	_	
29	t7009_000	-	$_	_	_	 * )	_	
30	t7010_000	in	APPR	in	_	(Frag (PPX *	_	
31	t7011_000	rosse	NA	ross	Dat.Sg	(NX * ) )	_	
32	t7012_000	noch	AVD	noh	_	 *	_	
33	t7013_000	in	APPR	in	_	(PPX *	_	
34	t7013_001	mûlen	NA	mûle	Dat.Sg	(NX * ) )	_	
35	t7014_000	-	$_	_	_	 * )	_	
36	t7015_000	in	APPR	in	_	(Frag (PPX *	_	
37	t7015_001	gereiten	NA	ge-rèite	Dat.Sg	(NX * ) )	_	
38	t7016_000	vile	AVD	vil(e)	_	 *	_	
39	t7016_001	tiuren	ADJN	tiur(e)	Pos.*.Dat.Pl.*	 *	_	
40	t7017_000	-	$_	_	_	 * )	_	
41	t7018_000	noch	KON	noh	_	(Frag *	_	
42	t7019_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
43	t7019_001	schaft	NA	schaft	Akk.Sg	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7020_000	noch	KON	noh	_	(S (Frag *	_	
2	t7021_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
3	t7022_000	bogen	NA	boge	Akk.Sg	 * )	_	
4	t7023_000	-	$_	_	_	 * )	_	
5	t7024_000	zuo	APPR	ze	_	(Frag (PPX *	_	
6	t7025_000	decheines	DIA	deh-èin	Neut.Gen.Sg.st	(NX *	_	
7	t7026_000	volcwîges	NA	volk-wîg	Gen.Sg	 * ) )	_	
8	t7027_000	lobe	NA	lob	Dat.Sg	(NX * )	_	
9	t7028_000	-	$_	_	_	 * )	_	
10	t7029_000	noch	KON	noh	_	(Frag *	_	
11	t7030_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
12	t7031_000	soumære	NA	soumære	Akk.Pl	 * )	_	
13	t7032_000	-	$_	_	_	 * )	_	
14	t7033_000	snelle	AVD	snëlle	_	(Frag *	_	
15	t7034_000	oder	KON	oder	_	 *	_	
16	t7035_000	trâge	AVD	trâge	_	 *	_	
17	t7036_000	-	$_	_	_	 * )	_	
18	t7037_000	noch	KON	noh	_	(Frag *	_	
19	t7038_000	horn	NA	horn	Akk.Sg	(NX *	_	
20	t7039_000	necheinez	DIN	neh-èin	Neut.Akk.Sg.st	 * )	_	
21	t7040_000	-	$_	_	_	 * )	_	
22	t7041_000	grôzez	ADJA	grôz	Pos.Neut.Akk.Sg.st	(Frag *	_	
23	t7042_000	noch	AVD	noh	_	 *	_	
24	t7043_000	kleinerez	ADJA	klèine	Pos.Neut.Akk.Sg.st	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7044_000	-	$_	_	_	(S *	_	
2	t7045_000	noch	AVD	noh	_	(Frag *	_	
3	t7046_000	ze	APPR	ze	_	(PPX *	_	
4	t7046_001	necheiner	DIA	neh-èin	Fem.Gen.Sg.st	(NX *	_	
5	t7047_000	slahte	NA	slahte	Gen.Sg	 * ) )	_	
6	t7048_000	vlîzen	NA	vlîz	Dat.Pl	(NX * )	_	
7	t7049_000	-	$_	_	_	 *	_	
8	t7050_000	zeichen	NA	zèichen	Akk.Pl	(NX * ) )	_	
9	t7051_000	diu	DDART	dër	Neut.Akk.Pl	(Frag *	_	
10	t7052_000	wîzen	ADJA	wîz	Pos.*.Akk.Pl..%.wk	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7053_000	-	$_	_	_	(S *	_	
2	t7054_000	rôten	ADJA	rôt	Pos.Masc.Akk.Sg.*	(Frag (NX *	_	
3	t7055_000	vanen	NA	vane	Akk.Sg	 *	_	
4	t7056_000	breiten	ADJN	brèit	Pos.Masc.Akk.Sg.*	 * )	_	
5	t7057_000	-	$_	_	_	 * )	_	
6	t7058_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
7	t7059_000	ne	PTKNEG	ne	_	(LB (VX *	_	
8	t7059_001	mohte	VMFIN	mügen	*.Past.Sg.3	 * ) )	_	
9	t7060_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
10	t7061_000	geleiten	VVINF	ge-lèiten	_	(RB (VX * ) )	_	
11	t7062_000	-	$_	_	_	 *	_	
12	t7063_000	noch	KON	noh	_	(Frag *	_	
13	t7064_000	die	DDART	dër	*.Nom.Pl	(NX *	_	
14	t7065_000	schiltknehte	NA	schilt-knëht	Nom.Pl	 * )	_	
15	t7066_000	-	$_	_	_	 *	_	
16	t7067_000	swie	AVG	swiè	_	(Frag *	_	
17	t7068_000	iz	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
18	t7069_000	wolte	VMFIN	wèllen	*.Past.Sg.3	(LB (VX * ) )	_	
19	t7070_000	vehten	VVINF	vëhten	_	(RB (VX * ) )	_	
20	t7071_000	-	$_	_	_	 * ) )	_	
21	t7072_000	wider	AVD	wider(e)	_	(Frag *	_	
22	t7073_000	den	DDART	dër	Masc.Akk.Sg	 *	_	
23	t7074_000	rîchen	ADJA	rîche	Pos.Masc.Akk.Sg.*	 *	_	
24	t7075_000	-	FM	[!]	_	 *	_	
25	t7076_000	-	$_	_	_	 * )	_	
26	t7077_000	vüre	APPR	vür(e)	_	(Frag (PPX *	_	
27	t7078_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
28	t7079_000	himelküninc	NA	himel-küni(n)g	Akk.Sg	 *	_	
29	t7080_000	vrônen	ADJN	vrôn(e)	Pos.Masc.Akk.Sg.*	 * ) )	_	
30	t7081_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7082_000	Aaron	NE	Aaron	Nom.Sg	(S (Frag (NX * )	_	
2	t7083_000	dô	AVD	dô	_	(PreF * )	_	
3	t7084_000	vernam	VVFIN	ver-nëmen	Ind.Past.Sg.3	(LB (VX * ) )	_	
4	t7085_000	-	$_	_	_	 *	_	
5	t7086_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
6	t7087_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
7	t7088_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
8	t7089_000	verzîhen	VVINF	ver-zîhen	_	(VX * ) )	_	
9	t7090_000	began	VVFIN	be-ginnen	Ind.Past.Sg.3	(RB (VX * ) )	_	
10	t7091_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7092_000	sîne	DPOSA	sîn	*.Akk.Pl.st	(S (Frag (NX *	_	
2	t7093_000	hende	NA	hant	Akk.Pl	 * )	_	
3	t7094_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
4	t7095_000	dô	AVD	dô	_	(PreF * )	_	
5	t7096_000	denete	VVFIN	dènen	*.Past.Sg.3	(LB (VX * ) )	_	
6	t7097_000	-	$_	_	_	 * )	_	
7	t7098_000	alsô	AVD	all-sô	_	(PreF * )	_	
8	t7099_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
9	t7100_000	sîn	DPOSA	sîn	Masc.Nom.Sg.0	(PreF (NX *	_	
10	t7101_000	bruoder	NA	bruoder	Nom.Sg	 * ) )	_	
11	t7102_000	manete	VVFIN	manen	*.Past.Sg.3	(LB (VX * ) )	_	
12	t7103_000	-	$_	_	_	 *	_	
13	t7104_000	ze	APPR	ze	_	(Frag (PPX *	_	
14	t7104_001	der	DDART	dër	*.Gen.Pl	(NX *	_	
15	t7105_000	heidene	NA	hèiden	Gen.Pl	 * ) )	_	
16	t7106_000	ungemache	NA	un-ge-mach	Dat.Sg	(NX * )	_	
17	t7107_000	-	$_	_	_	 * )	_	
18	t7108_000	über	APPR	über	_	(Frag (PPX *	_	
19	t7109_000	diu	DDART	dër	Neut.Akk.Pl	(NX *	_	
20	t7110_000	wazzer	NA	wazzer	Akk.Pl	 * ) )	_	
21	t7111_000	joch	KON	joh	_	 *	_	
22	t7112_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
23	t7112_001	beche	NA	bach	Akk.Pl	 * )	_	
24	t7113_000	-	$_	_	_	 * )	_	
25	t7114_000	über	APPR	über	_	(Frag (PPX *	_	
26	t7115_000	diu	DDART	dër	Neut.Akk.Pl	(NX *	_	
27	t7116_000	möser	NA	mos	Akk.Pl	 *	_	
28	t7117_000	alliu	DIN	all	Neut.Akk.Pl.st	 * ) )	_	
29	t7118_000	-	$_	_	_	 * )	_	
30	t7119_000	breit	ADJN	brèit	Pos.*.Akk.Pl.st	(Frag *	_	
31	t7120_000	und	KON	unte	_	 *	_	
32	t7121_000	lenge	ADJN	lènge	Pos.*.Akk.Pl.st	 *	_	
33	t7122_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7123_000	dannen	AVD	dannen	_	(S (Cl (PreF * )	_	
2	t7124_000	kômen	VVFIN	komen	*.Past.Pl.3	(LB (VX * ) )	_	
3	t7125_000	zuo	APPR	ze	_	(MF (PPX *	_	
4	t7125_001	wâre	NA	wâr	Dat.Sg	(NX * ) ) )	_	
5	t7126_000	-	$_	_	_	 *	_	
6	t7127_000	kroten	NA	krote	Nom.Pl	(Frag (NX * )	_	
7	t7128_000	vile	AVD	vil(e)	_	 *	_	
8	t7129_000	mære	ADJN	mêre	Comp.Fem.Nom.Pl.st	 *	_	
9	t7130_000	-	$_	_	_	 * )	_	
10	t7131_000	ein	DIART	èin	Neut.Nom.Sg.0	(Frag (NX *	_	
11	t7132_000	here	NA	hèr(e)	Nom.Sg	 *	_	
12	t7133_000	grôz	ADJN	grôz	Pos.Neut.Nom.Sg.st	 * )	_	
13	t7134_000	unde	KON	unte	_	 *	_	
14	t7135_000	breit	ADJN	brèit	Pos.Neut.Nom.Sg.st	 *	_	
15	t7136_000	-	$_	_	_	 * ) )	_	
16	t7137_000	deme	DDART	dër	Neut.Dat.Sg	(Cl (PreF (NX *	_	
17	t7138_000	lande	NA	lant	Dat.Sg	 * ) )	_	
18	t7139_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
19	t7140_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX *	_	
20	t7141_000	arbeit	NA	arbèit	Nom.Sg	 * ) )	_	
21	t7142_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7143_000	daz	DDART	dër	Neut.Akk.Sg	(S (Frag (NX *	_	
2	t7144_000	lant	NA	lant	Akk.Sg	 * )	_	
3	t7145_000	iz	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
4	t7146_000	besaz	VVFIN	be-sitzen	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t7147_000	-	$_	_	_	 * )	_	
6	t7148_000	alsô	AVD	all-sô	_	(Frag *	_	
7	t7149_000	wît	ADJD	wît	Pos....0	 * )	_	
8	t7150_000	sô	KO*	sô	_	(Frag *	_	
9	t7151_000	iz	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
10	t7152_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
11	t7153_000	-	$_	_	_	 * )	_	
12	t7154_000	ûze	AVD	ûze	_	(Frag *	_	
13	t7155_000	und	KON	unte	_	 *	_	
14	t7156_000	inne	AVD	inne	_	 *	_	
15	t7157_000	-	$_	_	_	 * )	_	
16	t7158_000	sô	AVD	sô	_	(Cl (PreF * )	_	
17	t7159_000	ne	PTKNEG	ne	_	(LB (VX *	_	
18	t7159_001	mohtet	VMFIN	mügen	*.Past.Pl.2	 * ) )	_	
19	t7160_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * ) )	_	
20	t7161_000	vinden	VVINF	vinden	_	(RB (VX * ) )	_	
21	t7162_000	-	$_	_	_	 *	_	
22	t7163_000	niener	AVD	nièner	_	(Frag *	_	
23	t7164_000	necheine	DIA	neh-èin	Fem.Akk.Sg.st	(NX *	_	
24	t7165_000	stat	NA	stat	Akk.Sg	 * )	_	
25	t7166_000	-	$_	_	_	 * ) )	_	
26	t7167_000	kroten	NA	krot	Dat.Pl	(Cl (PreF (NX * ) )	_	
27	t7168_000	ne	PTKNEG	ne	_	(LB (VX *	_	
28	t7168_001	wære	VAFIN	wësen	Subj.Past.Sg.3	 * ) )	_	
29	t7169_000	dâr	AVD	dâr	_	(MF *	_	
30	t7170_000	michel	ADJA	michel	Pos.Fem.Nom.Sg.wk	(NX *	_	
31	t7171_000	kraft	NA	kraft	Nom.Sg	 * ) )	_	
32	t7172_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7173_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t7174_000	hæten	VAFIN	haben	*.Past.Pl.3	(LB (VX * ) )	_	
3	t7175_000	unruowe	NA	un-ruowe	Akk.Sg	(MF (NX * ) )	_	
4	t7176_000	-	$_	_	_	 *	_	
5	t7177_000	an	APPR	ane	_	(Frag (PPX *	_	
6	t7178_000	alle	DIA	all	Fem.Akk.Sg.st	(NX *	_	
7	t7179_000	genâde	NA	ge-nâde	Akk.Sg	 * ) )	_	
8	t7180_000	-	$_	_	_	 * )	_	
9	t7181_000	in	APPR	in	_	(Frag (PPX *	_	
10	t7182_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
11	t7183_000	ire	DPOSA	ir(e)	*.Dat.Pl.0	 *	_	
12	t7184_000	selden	NA	sèl(e)de	Dat.Pl	 * ) )	_	
13	t7185_000	-	$_	_	_	 * )	_	
14	t7186_000	von	AVD	von(e)	_	(Frag *	_	
15	t7187_000	sus	AVD	sus	_	 *	_	
16	t7188_000	getânen	ADJA	ge-tân	Pos.*.Dat.Pl.*	(NX *	_	
17	t7189_000	heleden	NA	hèl(e)d	Dat.Pl	 * )	_	
18	t7190_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7191_000	si	PPER	ër	*.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t7191_001	ne	PTKNEG	ne	_	(LB (VX *	_	
3	t7192_000	mohten	VMFIN	mügen	*.Past.Pl.3	 * ) )	_	
4	t7193_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
5	t7194_000	enttrinnen	VVINF	ent-trinnen	_	(RB (VX * ) )	_	
6	t7195_000	-	$_	_	_	 * )	_	
7	t7196_000	mit	APPR	mit	_	(Frag (PPX *	_	
8	t7197_000	niehte	NA	niht	Dat.Sg	(NX * ) )	_	
9	t7198_000	überwinden	VVINF	über-winten	_	(VX * )	_	
10	t7199_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7200_000	Pharao	NE	Pharao	Nom.Sg	(S (Frag (NX * )	_	
2	t7201_000	daz	DDART	dër	Neut.Akk.Sg	(PreF (NX *	_	
3	t7202_000	zeichen	NA	zèichen	Akk.Sg	 * ) )	_	
4	t7203_000	gesach	VVFIN	ge-sëhen	Ind.Past.Sg.3	(LB (VX * ) )	_	
5	t7204_000	-	$_	_	_	 * )	_	
6	t7205_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
7	t7206_000	duhte	VVFIN	dunken	Ind.Past.Sg.3	(LB (VX * ) )	_	
8	t7207_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
9	t7208_000	ungemach	ADJD	un-ge-mach	Pos....0	 * )	_	
10	t7209_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7210_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t7211_000	hiez	VVFIN	hèizen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t7212_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
4	t7213_000	gewinnen	VVINF	ge-winnen	_	(VX * ) )	_	
5	t7214_000	-	$_	_	_	 *	_	
6	t7215_000	die	DDART	dër	*.Akk.Pl	(Frag *	_	
7	t7216_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
8	t7217_000	gotes	NA	got	Gen.Sg	 * )	_	
9	t7218_000	gesinden	NA	ge-sinde	Akk.Pl	(NX * )	_	
10	t7219_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7220_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t7221_000	quat	VVFIN	quëden	Ind.Past.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7222_000	ir	PPER	ir	Nom.Pl.2	(S (NX *	_	
2	t7223_000	hêrren	NA	hêrre	Nom.Pl	 * )	_	
3	t7224_000	wizzet	VVFIN	wizzen	*.Pres.Pl.2	(Cl (LB (VX * ) )	_	
4	t7225_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * ) )	_	
5	t7226_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
6	t7227_000	ir	PPER	ir	Nom.Pl.2	(PreF (NX * ) )	_	
7	t7228_000	tuot	VVFIN	tuon	*.Pres.Pl.2	(LB (VX * ) )	_	
8	t7229_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7230_000	iz	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t7230_001	en	PTKNEG	ne	_	(LB (VX *	_	
3	t7230_002	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
4	t7231_000	sus	AVD	sus	_	(MF *	_	
5	t7232_000	ze	APPR	ze	_	(PPX *	_	
6	t7232_001	niuwewihte	NA	ni-wiht	Dat.Sg	(NX * ) )	_	
7	t7233_000	guot	ADJD	guot	Pos....0	 * )	_	
8	t7234_000	-	$_	_	_	 * )	_	
9	t7235_000	wir	PPER	wir	Nom.Pl.1	(Cl (PreF (NX * ) )	_	
10	t7236_000	sîn	VAFIN	sîn	Ind.Pres.Pl.1	(LB (VX * ) )	_	
11	t7237_000	alle	DID	all	*.Nom.Pl..=.st	(MF *	_	
12	t7238_000	nâch	AVD	nâh	_	 * )	_	
13	t7239_000	verloren	VVPP	ver-lièsen	_	(RB (VX * ) )	_	
14	t7240_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7241_000	ir	PPER	ir	Nom.Pl.2	(S (Cl (PreF (NX * ) )	_	
2	t7242_000	bitet	VVFIN	biten	*.Pres.Pl.2	(LB (VX * ) )	_	
3	t7243_000	got	NA	got	Akk.Sg	(MF (NX * ) )	_	
4	t7244_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
5	t7245_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
6	t7246_000	sînen	DPOSA	sîn	Masc.Akk.Sg.st	(NX *	_	
7	t7247_000	zorn	NA	zorn	Akk.Sg	 * )	_	
8	t7248_000	-	$_	_	_	 *	_	
9	t7249_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
10	t7250_000	lützel	NA	lützel	Akk.Sg	 * ) )	_	
11	t7251_000	gestille	VVFIN	ge-stillen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
12	t7252_000	-	$_	_	_	 * ) )	_	
13	t7253_000	mich	PPER	ich	Akk.Sg.1	(Frag (NX * )	_	
14	t7254_000	sô	AVD	sô	_	(PreF *	_	
15	t7255_000	harte	AVD	harte	_	 * )	_	
16	t7256_000	ne	PTKNEG	ne	_	(LB (VX *	_	
17	t7256_001	ville	VVFIN	villen	Subj.Pres.Sg.3	 * ) )	_	
18	t7257_000	-	$_	_	_	 * )	_	
19	t7258_000	unde	KON	unte	_	(Frag *	_	
20	t7259_000	mich	PPER	ich	Akk.Sg.1	(PreF (NX * ) )	_	
21	t7260_000	ledige	VVFIN	lèdigen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
22	t7261_000	von	APPR	von	_	(MF (PPX *	_	
23	t7262_000	dirre	DDA	dise	Fem.Dat.Sg	(NX *	_	
24	t7263_000	nôt	NA	nôt	Dat.Sg	 * ) ) )	_	
25	t7264_000	-	$_	_	_	 * ) )	_	
26	t7265_000	iz	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
27	t7266_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
28	t7267_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
29	t7268_000	schantlîcher	ADJA	schant-lich	Pos.Masc.Nom.Sg.st	 *	_	
30	t7269_000	tôt	NA	tôd	Nom.Sg	 * ) )	_	
31	t7270_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7271_000	daz	DDART	dër	Neut.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t7272_000	liut	NA	liut	Akk.Sg	 * ) )	_	
3	t7273_000	lâze	VVFIN	lâzen	*.Pres.Sg.1	(LB (VX * ) )	_	
4	t7274_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
5	t7275_000	danne	AVD	danne	_	 *	_	
6	t7276_000	varen	VVINF	var(e)n	_	(VX * ) )	_	
7	t7277_000	-	$_	_	_	 *	_	
8	t7278_000	âne	APPR	âne	_	(Frag (PPX *	_	
9	t7279_000	aller	DIA	all	Fem.Gen.Sg.st	(NX *	_	
10	t7280_000	slahte	NA	slahte	Gen.Sg	 * ) )	_	
11	t7281_000	schaden	NA	schade	Akk.Pl	(NX * )	_	
12	t7282_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7283_000	Mosî	NE	Moses	Nom.Sg	(S (Frag (NX * )	_	
2	t7284_000	ze	APPR	ze	_	 *	_	
3	t7284_001	dem	DDART	dër	Masc.Dat.Sg	 *	_	
4	t7285_000	-	_	[!]	_	 *	_	
5	t7286_000	-	_	[!]	_	(PreF * )	_	
6	t7287_000	liez	VVFIN	lâzen	Ind.Past.Sg.3	(LB (VX * ) )	_	
7	t7288_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7289_000	an	AVD	ane	_	(S (Frag *	_	
2	t7290_000	aller	DIA	all	Fem.Gen.Sg.st	(NX *	_	
3	t7291_000	slahte	NA	slahte	Gen.Sg	 * )	_	
4	t7292_000	vorhte	NA	vorht(e)	Akk.Sg	(NX * )	_	
5	t7293_000	-	$_	_	_	 * )	_	
6	t7294_000	gotes	NA	got	Gen.Sg	(Frag (NX * )	_	
7	t7295_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
8	t7296_000	abe	AVD	aber	_	(PreF * )	_	
9	t7297_000	korete	VVFIN	kor(e)n	*.Past.Sg.3	(LB (VX * ) )	_	
10	t7298_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7299_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t7300_000	quat	VVFIN	quëden	Ind.Past.Sg.3	(LB (VX * ) ) )	_	
3	t7301_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
4	t7301_001	ne	PTKNEG	ne	_	(LB (VX *	_	
5	t7302_000	wolten	VMFIN	wèllen	*.Past.Pl.3	 * ) )	_	
6	t7303_000	vliehen	VVINF	vlièhen	_	(RB (VX * ) )	_	
7	t7304_000	-	$_	_	_	 * )	_	
8	t7305_000	si	PPER	ër	*.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
9	t7305_001	muosen	VMFIN	müèzen	*.Past.Pl.3	(LB (VX * ) )	_	
10	t7306_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * ) )	_	
11	t7307_000	dienen	VVINF	diènen	_	(RB (VX * ) )	_	
12	t7308_000	-	$_	_	_	 *	_	
13	t7309_000	iemer	AVD	ièmer	_	(Frag *	_	
14	t7310_000	unze	AVD	unz(e)	_	 *	_	
15	t7311_000	an	APPR	ane	_	(PPX *	_	
16	t7312_000	sînen	DPOSA	sîn	Masc.Akk.Sg.st	(NX *	_	
17	t7313_000	tôt	NA	tôd	Akk.Sg	 * ) )	_	
18	t7314_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7315_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7316_000	was	VAFIN	wësen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t7317_000	den	DDART	dër	*.Dat.Pl	(MF (NX *	_	
4	t7318_000	juden	NA	jude	Dat.Pl	 * )	_	
5	t7319_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
6	t7320_000	michel	ADJA	michel	Pos.Masc.Nom.Sg.0	 *	_	
7	t7321_000	nôt	NA	nôt	Nom.Sg	 * ) )	_	
8	t7322_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7323_000	Mosî	NE	Moses	Dat.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7324_000	wart	VAFIN	wërden	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t7325_000	diu	DDART	dër	Fem.Nom.Sg	(MF (NX *	_	
4	t7326_000	rede	NA	rède	Nom.Sg	 * )	_	
5	t7327_000	zorn	ADJD	zorn(e)	Pos....0	 * )	_	
6	t7328_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7329_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t7330_000	sprach	VVFIN	sprëchen	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t7331_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7332_000	nû	AVD	nû	_	(S (Frag *	_	
2	t7333_000	lieber	ADJA	lièb	Pos.Masc.Nom.Sg.st	(NX *	_	
3	t7334_000	bruoder	NA	bruoder	Nom.Sg	 *	_	
4	t7335_000	Aaron	NE	Aaron	Nom.Sg	 * )	_	
5	t7336_000	-	$_	_	_	 * )	_	
6	t7337_000	ditze	DDS	dise	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t7338_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t7339_000	abe	AVD	aber	_	(MF *	_	
9	t7340_000	gotes	NA	got	Gen.Sg	(NX * )	_	
10	t7341_000	gebot	NA	ge-bot	Nom.Sg	(NX * ) )	_	
11	t7342_000	-	$_	_	_	 * )	_	
12	t7343_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
13	t7344_000	sage	VVFIN	sagen	*.Pres.Sg.1	(LB (VX * ) )	_	
14	t7345_000	dir	PPER	dû	Dat.Sg.2	(MF (NX * ) )	_	
15	t7346_000	wie	AVW	wiè	_	(Frag *	_	
16	t7347_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
17	t7348_000	tuon	VVINF	tuon	_	(PreF (VX * ) )	_	
18	t7349_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
19	t7350_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7351_000	liebe	ADJA	lièb	Pos.Masc.Nom.Sg.wk	(S *	_	
2	t7352_000	hoere	VVIMP	hoèren	Sg.2	(Cl (LB (VX * ) )	_	
3	t7353_000	her	AVD	hër(e)	_	(MF *	_	
4	t7354_000	ze	APPR	ze	_	(PPX *	_	
5	t7354_001	mir	PPER	ich	Dat.Sg.1	(NX * ) ) )	_	
6	t7355_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7356_000	dise	DDA	dise	Fem.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t7357_000	gerte	NA	gèrte	Akk.Sg	 * ) )	_	
3	t7358_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
4	t7359_000	ze	APPR	ze	_	(MF (PPX *	_	
5	t7359_001	dir	PRF	dû	*.Dat.Sg.st	(NX * ) ) )	_	
6	t7360_000	-	$_	_	_	 * )	_	
7	t7361_000	habe	VAIMP	haben	Sg.2	(Cl (LB (VX * ) )	_	
8	t7362_000	dir	PRF	dû	*.Dat.Sg.st	(MF (NX * )	_	
9	t7363_000	iz	PPER	ër	Neut.Akk.Sg.3	(NX *	_	
10	t7364_000	ze	APPR	ze	_	(PPX *	_	
11	t7364_001	gamene	NA	gamen	Dat.Sg	(NX * ) ) ) )	_	
12	t7365_000	-	$_	_	_	 * )	_	
13	t7366_000	slach	VVIMP	slahen	Sg.2	(Cl (LB (VX * ) )	_	
14	t7367_000	slege	NA	slag	Akk.Pl	(MF (NX *	_	
15	t7368_000	manige	DIN	manig	*.Akk.Pl.st	 * ) )	_	
16	t7369_000	-	$_	_	_	 *	_	
17	t7370_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
18	t7371_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
19	t7372_000	stoup	NA	stoub	Akk.Sg	 *	_	
20	t7373_000	der	DDART	dër	Fem.Gen.Sg	(NX *	_	
21	t7374_000	erde	NA	ërde	Gen.Sg	 * ) ) )	_	
22	t7375_000	-	$_	_	_	 * ) )	_	
23	t7376_000	hundesvliegen	NA	hundes-vliège	Nom.Pl	(Cl (PreF (NX * ) )	_	
24	t7377_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
25	t7378_000	iz	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
26	t7379_000	werden	VAINF	wërden	_	(VX * ) )	_	
27	t7380_000	-	$_	_	_	 *	_	
28	t7381_000	von	APPR	von	_	(Frag (PPX *	_	
29	t7382_000	deme	DDART	dër	Masc.Dat.Sg	(NX *	_	
30	t7383_000	selben	DDA	sëlb	Masc.Dat.Sg.wk	 *	_	
31	t7384_000	sande	NA	sant	Dat.Sg	 * ) )	_	
32	t7385_000	-	$_	_	_	 * )	_	
33	t7386_000	after	APPR	after	_	(Frag (PPX *	_	
34	t7387_000	alleme	DIA	all	Neut.Dat.Sg.st	(NX *	_	
35	t7388_000	diseme	DDA	dise	Neut.Dat.Sg	 *	_	
36	t7389_000	lande	NA	lant	Dat.Sg	 * ) )	_	
37	t7390_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7391_000	Aaron	NE	Aaron	Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7392_000	tet	VVFIN	tuon	Ind.Past.Sg.3	(LB (VX * ) )	_	
3	t7393_000	-	$_	_	_	 *	_	
4	t7394_000	durch	APPR	durh	_	(Frag (PPX *	_	
5	t7395_000	nôt	NA	nôt	Akk.Sg	(NX * ) )	_	
6	t7396_000	-	$_	_	_	 *	_	
7	t7397_000	daz	DRELS	dër	Neut.Akk.Sg	(PPX (NX (Cl (LB (NX * ) )	_	
8	t7398_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
9	t7399_000	got	NA	got	Nom.Sg	(NX * )	_	
10	t7400_000	unde	KON	unte	_	 *	_	
11	t7401_000	Moses	NE	Moses	Nom.Sg	(NX * ) )	_	
12	t7402_000	gebôt	VVFIN	ge-bièten	Ind.Past.Sg.3	(RB (VX * ) )	_	
13	t7403_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7404_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t7405_000	machete	VVFIN	machen	*.Past.Sg.3	(LB (VX * ) )	_	
3	t7406_000	stoup	NA	stoub	Akk.Sg	(MF (NX *	_	
4	t7407_000	manicvalt	ADJN	manig-valt	Pos.Masc.Akk.Sg.0	 * ) )	_	
5	t7408_000	-	$_	_	_	 *	_	
6	t7409_000	mit	APPR	mit	_	(Frag (PPX *	_	
7	t7410_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
8	t7411_000	gerte	NA	gèrte	Dat.Sg	 *	_	
9	t7412_000	in	APPR	in	_	(PPX *	_	
10	t7412_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
11	t7413_000	hant	NA	hant	Dat.Sg	 * ) ) ) )	_	
12	t7414_000	-	$_	_	_	 * ) ) ) )	_
	

