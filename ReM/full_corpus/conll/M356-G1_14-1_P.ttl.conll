# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
#ID TID WORD LEMMA POS INFL SB file:///M356-G1_14-1_P.ttl/
1	t1_000	in	APPR	in	_	(S (Frag (PPX *	_	
2	t2_000	gotes	NA	got	Gen.Sg	(NX * ) )	_	
3	t3_000	namen	NA	name	Dat.Sg	(NX * )	_	
4	t4_000	âmên	ITJ	âmên	_	 *	_	
5	t5_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6_000	ditz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t8_000	bischoves	NA	bischov	Gen.Sg	(MF (NX *	_	
4	t9_000	Otten	NE	Otte	Gen.Sg	 *	_	
5	t10_000	sæligen	ADJN	sælig	Pos.Masc.Gen.Sg.wk	 *	_	
6	t11_000	zuo	APPR	ze	_	(PPX *	_	
7	t12_000	Wirzeburc	NE	Wirze-burg	Dat.Sg	(NX * ) ) ) )	_	
8	t13_000	-	$_	_	_	 *	_	
9	t14_000	setze	NA	satz	Nom.Pl	(Frag (NX * )	_	
10	t15_000	und	KON	unte	_	 *	_	
11	t16_000	gebot	NA	ge-bot	Nom.Pl	(NX * )	_	
12	t17_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t18_000	wir	PPER	wir	Nom.Pl.1	(S (Frag (NX * )	_	
2	t19_000	Otte	NE	Otte	Nom.Sg	(NX * )	_	
3	t20_000	-	$_	_	_	 * )	_	
4	t21_000	von	APPR	von	_	(Frag (PPX *	_	
5	t22_000	gotes	NA	got	Gen.Sg	(NX * ) )	_	
6	t23_000	genâden	NA	ge-nâde	Dat.Pl	(NX * )	_	
7	t24_000	-	$_	_	_	 * )	_	
8	t25_000	bischof	NA	bischov	Nom.Sg	(NX *	_	
9	t26_000	zuo	APPR	ze	_	(PPX *	_	
10	t27_000	Wirzeburg	NE	Wirze-burg	Dat.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t28_000	tuon	VVFIN	tuon	*.Pres.Pl.1	(S (Cl (LB (VX * ) )	_	
2	t29_000	kunt	ADJD	kund	Pos....0	(MF *	_	
3	t30_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
4	t31_000	den	DDS	dër	*.Dat.Pl	 * ) )	_	
5	t32_000	-	$_	_	_	 *	_	
6	t33_000	die	DRELS	dër	*.Nom.Pl	(PostF (Cl (LB (NX * ) )	_	
7	t34_000	dise	DDA	dise	Neut.Akk.Pl	(MF (NX *	_	
8	t35_000	gesetze	NA	ge-sètze	Akk.Pl	 * ) )	_	
9	t36_000	sehen	VVFIN	sëhen	*.Pres.Pl.3	(RB (VX (VX * )	_	
10	t37_000	oder	KON	oder	_	 *	_	
11	t38_000	hoeren	VVFIN	hoèren	*.Pres.Pl.3	(VX * ) ) )	_	
12	t39_000	lesen	VVINF	lësen	_	(PostF (VX * ) )	_	
13	t40_000	-	$_	_	_	 *	_	
14	t41_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
15	t42_000	wir	PPER	wir	Nom.Pl.1	(MF (NX *	_	
16	t43_000	mit	APPR	mit	_	(PPX *	_	
17	t44_000	unserm	DPOSA	unser	Masc.Dat.Sg.st	(NX *	_	
18	t45_000	gesworen	ADJA	swèr(e)n	Pos.Masc.Dat.Sg.0	 *	_	
19	t46_000	râte	NA	rât	Dat.Sg	 *	_	
20	t47_000	durch	APPR	durh	_	(PPX *	_	
21	t48_000	gemeine	ADJA	ge-mèine	Pos.Fem.Akk.Sg.st	(NX *	_	
22	t49_000	nôtdurft	NA	nôt-durft	Akk.Sg	 * ) ) ) ) )	_	
23	t50_000	-	$_	_	_	 *	_	
24	t51_000	guot	NA	guot	Akk.Sg	(NX * )	_	
25	t52_000	-	$_	_	_	 *	_	
26	t53_000	nutz	NA	nutz	Akk.Sg	(NX * )	_	
27	t54_000	-	$_	_	_	 *	_	
28	t55_000	vride	NA	vride	Akk.Sg	(NX * )	_	
29	t56_000	und	KON	unte	_	 *	_	
30	t57_000	gemach	NA	ge-mach	Akk.Sg	(NX * )	_	
31	t58_000	armer	ADJA	arm	Pos.*.Gen.Pl..%.st	 *	_	
32	t59_000	und	KON	unte	_	 *	_	
33	t60_000	rîcher	ADJA	rîche	Pos.*.Gen.Pl..%.st	 *	_	
34	t61_000	in	APPR	in	_	(PPX *	_	
35	t62_000	unser	DPOSA	unser	Fem.Dat.Sg.0	(NX *	_	
36	t63_000	stat	NA	stat	Dat.Sg	 *	_	
37	t64_000	zuo	APPR	ze	_	(PPX *	_	
38	t65_000	Wirzeburc	NE	Wirze-burg	Dat.Sg	(NX * ) ) ) )	_	
39	t66_000	-	$_	_	_	 * )	_	
40	t67_000	haben	VAFIN	haben	*.Pres.Pl.1	(RB (VX *	_	
41	t68_000	gesatzt	VVPP	sètzen	_	 * ) )	_	
42	t69_000	die	DDART	dër	Neut.Akk.Pl	(PostF (NX *	_	
43	t70_000	gesetze	NA	ge-sètze	Akk.Pl	 * ) )	_	
44	t71_000	-	$_	_	_	 *	_	
45	t72_000	die	DRELS	dër	Neut.Nom.Pl	(PostF (Cl (LB (NX * ) )	_	
46	t73_000	her	PAVD	hër(e)/+nâh	_	(MF (VX *	_	
47	t74_000	nâch	PAVAP	nâh/hër(e)+	_	 * ) )	_	
48	t75_000	geschriben	VVPP	schrîben	_	(RB (VX *	_	
49	t76_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	 * ) ) ) ) ) ) ) ) )	_	
50	t77_000	und	KON	unte	_	(Cl (PrePreF * )	_	
51	t78_000	wollen	VMFIN	wèllen	*.Pres.Pl.1	(LB (VX (VX * )	_	
52	t79_000	und	KON	unte	_	 *	_	
53	t80_000	gebieten	VVFIN	ge-bièten	*.Pres.Pl.1	(VX * ) ) )	_	
54	t81_000	-	$_	_	_	 * )	_	
55	t82_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
56	t83_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
57	t84_000	die	DDART	dër	Neut.Akk.Pl	(NX *	_	
58	t85_000	selben	DDA	sëlb	*.Akk.Pl.wk	 *	_	
59	t86_000	gesetze	NA	ge-sètze	Akk.Pl	 * )	_	
60	t87_000	stæte	AVD	stæte	_	 *	_	
61	t88_000	veste	ADJD	vèste	Pos....0	 *	_	
62	t89_000	und	KON	unte	_	 *	_	
63	t90_000	unverbrochen	ADJD	un-ver-brochen	Pos....0	 * )	_	
64	t91_000	halte	VVFIN	halten	Subj.Pres.Sg.3	(RB (VX * ) ) )	_	
65	t92_000	doch	AVD	doh	_	(Cl (PreF * )	_	
66	t93_000	nemen	VVFIN	nëmen/ûz+	*.Pres.Pl.1	(LB (VX * ) )	_	
67	t94_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * )	_	
68	t95_000	vore	AVD	vor(e)	_	 * )	_	
69	t96_000	ûz	PTKVZ	ûz/+nëmen	_	(RB * )	_	
70	t97_000	-	$_	_	_	 *	_	
71	t98_000	alle	DIA	all	Neut.Akk.Pl.st	(Frag (NX *	_	
72	t99_000	unser	DPOSA	unser	Neut.0.Akk.Pl.wk	 *	_	
73	t100_000	reht	NA	rëht	Akk.Pl	 * )	_	
74	t101_000	und	KON	unte	_	 *	_	
75	t102_000	gerihte	NA	ge-riht(e)	Akk.Pl	(NX * )	_	
76	t103_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
77	t104_000	sie	PPER	ër	Neut.Nom.Pl.3	(MF (NX * )	_	
78	t105_000	uns	PPER	wir	Dat.Pl.1	(NX *	_	
79	t106_000	an	APPR	ane	_	(PPX *	_	
80	t107_000	den	DDS	dër	*.Dat.Pl	(NX * ) ) )	_	
81	t108_000	niht	PTKNEG	niht	_	(VX *	_	
82	t109_000	schaden	VVINF	schaden	_	 * ) )	_	
83	t110_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(RB (VX * ) )	_	
84	t111_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t112_000	von	APPR	von	_	(S (Frag *	_	
2	t113_000	ûf	PTKVZ	ûf/+halten	_	 *	_	
3	t114_000	haltenne	NA	halten/ûf+	Dat.Sg	(NX * )	_	
4	t115_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t116_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t117_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t118_000	nieman	DIA	niè-mann	*.Akk.Sg.st	(MF * )	_	
4	t119_000	ûf	PTKVZ	ûf/+halten	_	(RB (VX *	_	
5	t120_000	halten	VVINF	halten/ûf+	_	 * ) )	_	
6	t121_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
7	t122_000	veilen	ADJA	vèil(e)	Pos.Masc.Akk.Sg.*	(MF (NX *	_	
8	t123_000	market	NA	market	Akk.Sg	 * )	_	
9	t124_000	oder	KON	oder	_	 *	_	
10	t125_000	gülte	NA	gülte	Akk.Sg	(NX *	_	
11	t126_000	in	APPR	in	_	(PPX *	_	
12	t127_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
13	t128_000	stat	NA	stat	Akk.Sg	 * ) ) ) )	_	
14	t129_000	vüert	VVFIN	vüèren	Ind.Pres.Sg.3	(RB (VX * ) )	_	
15	t130_000	âne	APPR	âne	_	(PostF (PPX *	_	
16	t131_000	geværde	NA	ge-vær(e)de	Akk.Sg	(NX * ) )	_	
17	t132_000	weder	KO*	wëder	_	 *	_	
18	t133_000	umbe	APPR	umbe	_	(PPX *	_	
19	t134_000	gülte	NA	gülte	Akk.Sg	(NX * ) )	_	
20	t135_000	noch	KON	noh	_	 *	_	
21	t136_000	umbe	APPR	umbe	_	(PPX *	_	
22	t137_000	bürgeschaft	NA	bürge-schaft	Akk.Sg	(NX * ) )	_	
23	t138_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
24	t139_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
25	t140_000	denne	KOKOM	danne	_	(MF *	_	
26	t141_000	selpschulde	NA	sëlb-schulde	Nom.Sg	(NX * ) ) )	_	
27	t142_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t143_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t144_000	vürekoufe	NA	vür(e)-kouf	Dat.Sg	(NX *	_	
3	t145_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
4	t146_000	wînes	NA	wîn	Gen.Sg	 * ) ) )	_	
5	t147_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t148_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t149_000	wîn	NA	wîn	Akk.Sg	(PreF (NX * ) )	_	
3	t150_000	vürekoufet	VVFIN	vür(e)-koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t151_000	-	$_	_	_	 * )	_	
5	t152_000	und	KON	unte	_	(Frag *	_	
6	t153_000	den	DDS	dër	Masc.Akk.Sg	(PreF (NX *	_	
7	t154_000	zuo	APPR	ze	_	(PPX *	_	
8	t155_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
9	t156_000	zapfen	NA	zapfe	Dat.Sg	 * ) ) ) )	_	
10	t157_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t158_000	-	$_	_	_	 * )	_	
12	t159_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t160_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t161_000	zuo	APPR	ze	_	(MF (PPX *	_	
15	t162_000	bezzerunge	NA	bèzzerunge	Dat.Sg	(NX * ) ) )	_	
16	t163_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
17	t164_000	von	APPR	von	_	(PostF (PPX *	_	
18	t165_000	iewederem	DIA	iè-wëder	Masc.Dat.Sg.st	(NX *	_	
19	t166_000	bodeme	NA	bodem	Dat.Sg	 * ) )	_	
20	t167_000	ein	CARDA	èin	Neut.Akk.Sg.0	(NX *	_	
21	t168_000	pfunt	NA	pfunt	Akk.Sg	 *	_	
22	t169_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
23	t170_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t171_000	vüert	VVFIN	vüèren	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t172_000	aber	AVD	aber	_	(MF *	_	
3	t173_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
4	t174_000	in	PPER	ër	Masc.Akk.Sg.3	(NX *	_	
5	t175_000	ûz	APPR	ûz	_	(PPX *	_	
6	t176_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
7	t177_000	hove	NA	hov	Dat.Sg	 * ) ) ) ) )	_	
8	t178_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t179_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t180_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
11	t181_000	niht	NA	niht	Akk.Sg	(NX * ) )	_	
12	t182_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t183_000	swâ	AVG	swâr	_	(S (Cl (LB * )	_	
2	t184_000	ouch	AVD	ouch	_	(MF *	_	
3	t185_000	stupfelær	NA	stupfelære	Nom.Pl	(NX * )	_	
4	t186_000	wîn	NA	wîn	Akk.Sg	(NX * ) )	_	
5	t187_000	koufen	VVFIN	koufen	*.Pres.Pl.3	(RB (VX * ) )	_	
6	t188_000	und	KON	unte	_	(PostF *	_	
7	t189_000	wâ	PAVW	wâr/.+hin(e)	_	 *	_	
8	t190_000	sie	PPER	ër	Masc.Nom.Pl.3	(NX * )	_	
9	t191_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (NX * ) )	_	
10	t192_000	hin	PAVAP	hin(e)/wâr.+	_	(LB (VX *	_	
11	t193_000	ziehen	VVFIN	zièhen	*.Pres.Pl.3	 * ) ) ) )	_	
12	t194_000	die	DDS	dër	Masc.Nom.Pl	(Cl (PreF (NX * ) )	_	
13	t195_000	gebent	VVFIN	gëben	Ind.Pres.Pl.3	(LB (VX * ) )	_	
14	t196_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
15	t197_000	selben	DDA	sëlb	Fem.Akk.Sg.wk	 *	_	
16	t198_000	buoze	NA	buoze	Akk.Sg	 * ) )	_	
17	t199_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t200_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t201_000	walhischem	ADJA	walhisch	Pos.Masc.Dat.Sg.st	(NX *	_	
3	t202_000	wîne	NA	wîn	Dat.Sg	 * ) )	_	
4	t203_000	-	$_	_	_	 * )	_	
5	t204_000	Elsezzær	NA	Èlsèzzer(e)	Gen.Pl	(Frag (NX * )	_	
6	t205_000	-	$_	_	_	 * )	_	
7	t206_000	neckarwîne	NA	neckar-wîn	Dat.Sg	(Frag (NX * )	_	
8	t207_000	oder	KON	oder	_	 *	_	
9	t208_000	bier	NA	bièr	Dat.Sg	(NX * )	_	
10	t209_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t210_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t211_000	walhischen	ADJA	walhisch	Pos.Masc.Akk.Sg.*	(PreF (NX *	_	
3	t212_000	wîn	NA	wîn	Akk.Sg	 *	_	
4	t213_000	in	APPR	in	_	(PPX *	_	
5	t214_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
6	t215_000	stat	NA	stat	Dat.Sg	 * ) ) ) )	_	
7	t216_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t217_000	-	$_	_	_	 * )	_	
9	t218_000	oder	KON	oder	_	(Frag *	_	
10	t219_000	veil	ADJD	vèil(e)	Pos....0	(PreF * )	_	
11	t220_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) ) )	_	
12	t221_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t222_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t223_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
15	t224_000	von	APPR	von	_	(PostF (PPX *	_	
16	t225_000	iegelîchem	DIA	iè-ge-lich	Masc.Dat.Sg.st	(NX *	_	
17	t226_000	einber	NA	èin-ber	Dat.Sg	 * ) )	_	
18	t227_000	zehen	CARDA	zëhen	Masc.Akk.Pl.0	(NX *	_	
19	t228_000	schillinge	NA	schilling	Akk.Pl	 *	_	
20	t229_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t230_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t231_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t232_000	aber	AVD	aber	_	 *	_	
4	t233_000	minner	ADJA	minner	Comp.Neut.Akk.Sg.0	 * ) )	_	
5	t234_000	sô	AVD	sô	_	(Cl (PreF (PreF * ) )	_	
6	t235_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t236_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (MF (NX * )	_	
8	t237_000	als	KO*	all-sô	_	 *	_	
9	t238_000	sich	PRF	sich	Akk	(NX * ) ) )	_	
10	t239_000	dâ	PAVD	dâr/+vür(e)	_	(LB (VX *	_	
11	t240_000	vüre	PAVAP	vür(e)/dâr+	_	 *	_	
12	t241_000	gebüret	VVFIN	ge-bür(e)n	Ind.Pres.Sg.3	 * ) )	_	
13	t242_000	-	$_	_	_	 *	_	
14	t243_000	von	APPR	von	_	(Frag (PPX *	_	
15	t244_000	iewederem	DIA	iè-wëder	Masc.Dat.Sg.st	(NX *	_	
16	t245_000	bodeme	NA	bodem	Dat.Sg	 *	_	
17	t246_000	Elsezzærs	NA	Èlsèzzer(e)	Gen.Sg	(NX * ) ) )	_	
18	t247_000	-	$_	_	_	 * )	_	
19	t248_000	neckarwînes	NA	neckar-wîn	Gen.Sg	(Frag (NX * )	_	
20	t249_000	-	$_	_	_	 * )	_	
21	t250_000	oder	KON	oder	_	(Frag *	_	
22	t251_000	biers	NA	bièr	Gen.Sg	(NX * )	_	
23	t252_000	-	$_	_	_	 * )	_	
24	t253_000	ein	CARDA	èin	Neut.Akk.Sg.0	(Frag (NX *	_	
25	t254_000	pfunt	NA	pfunt	Akk.Sg	 *	_	
26	t255_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
27	t256_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t257_000	doch	AVD	doh	_	(S (Cl (PreF * )	_	
2	t258_000	hân	VAFIN	haben	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t259_000	unser	DPOSA	unser	Masc.Nom.Pl.0	(MF (NX *	_	
4	t260_000	hêrrn	NA	hêrre	Nom.Pl	 * )	_	
5	t261_000	sunderlîchen	AVD	sunter-lîche	_	 *	_	
6	t262_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
7	t263_000	reht	NA	rëht	Akk.Sg	 *	_	
8	t264_000	von	APPR	von	_	(PPX *	_	
9	t265_000	stiftenne	NA	stiften	Dat.Sg	(NX * ) ) ) )	_	
10	t266_000	-	$_	_	_	 *	_	
11	t267_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
12	t268_000	si	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
13	t269_000	wole	AVD	wol(e)	_	 *	_	
14	t270_000	verkoufen	VVINF	ver-koufen	_	(VX * ) )	_	
15	t271_000	mügen	VMFIN	mügen	*.Pres.Pl.3	(RB (VX * ) )	_	
16	t272_000	-	$_	_	_	 * ) )	_	
17	t273_000	die	DDART	dër	Masc.Akk.Pl	(Frag (NX *	_	
18	t274_000	wîne	NA	wîn	Akk.Pl	 * )	_	
19	t275_000	-	$_	_	_	 *	_	
20	t276_000	die	DRELS	dër	Masc.Nom.Pl	(Cl (LB (NX * ) )	_	
21	t277_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
22	t278_000	gewahsen	VVPP	wahsen	_	(RB (VX *	_	
23	t279_000	sîn	VAFIN	sîn	*.Pres.Pl.3	 * ) )	_	
24	t280_000	-	$_	_	_	 * ) )	_	
25	t281_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
26	t282_000	irem	DPOSA	ir(e)	Neut.Dat.Sg.st	(NX *	_	
27	t283_000	eigene	NA	èigen	Dat.Sg	 * ) )	_	
28	t284_000	-	$_	_	_	 * ) )	_	
29	t285_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
30	t286_000	irem	DPOSA	ir(e)	Neut.Dat.Sg.st	(NX *	_	
31	t287_000	lêhene	NA	lêhen	Dat.Sg	 * ) )	_	
32	t288_000	wâ	AVW	wâr	_	 *	_	
33	t289_000	sie	PPER	ër	Masc.Nom.Pl.3	(NX * )	_	
34	t290_000	gewahsen	VVPP	wahsen	_	(VX *	_	
35	t291_000	sîn	VAFIN	sîn	*.Pres.Pl.3	 * )	_	
36	t292_000	-	$_	_	_	 * )	_	
37	t293_000	und	KON	unte	_	(Frag *	_	
38	t294_000	ouch	AVD	ouch	_	(PreF *	_	
39	t295_000	ire	DPOSA	ir(e)	Masc.Nom.Pl.0	(NX *	_	
40	t296_000	pfister	NA	pfister	Nom.Pl	 * ) )	_	
41	t297_000	mügen	VMFIN	mügen	*.Pres.Pl.3	(LB (VX * ) )	_	
42	t298_000	bier	NA	bièr	Akk.Sg	(MF (NX * ) )	_	
43	t299_000	briuwen	VVINF	briuwen	_	(RB (VX * ) )	_	
44	t300_000	-	$_	_	_	 *	_	
45	t301_000	swenne	AVG	swanne	_	(Cl (LB * )	_	
46	t302_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX *	_	
47	t303_000	heven	NA	hève	Gen.Sg	(NX * ) )	_	
48	t304_000	niht	NA	niht	Akk.Sg	(NX * )	_	
49	t305_000	gehaben	VVINF	ge-haben	_	(VX * ) )	_	
50	t306_000	mügen	VMFIN	mügen	*.Pres.Pl.3	(RB (VX * ) )	_	
51	t307_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t308_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t309_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t310_000	wînmezzærn	NA	wîn-mëzzære	Dat.Pl	 * ) )	_	
4	t311_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t312_000	swelich	DGA	swèl(i)ch	Masc.Nom.Sg.0	(S (Frag (NX *	_	
2	t313_000	wînmezzær	NA	wîn-mëzzære	Nom.Sg	 * )	_	
3	t314_000	mêre	ADJA	mêr(e)	Comp.Neut.Akk.Sg.wk	(NX *	_	
4	t315_000	wîne	NA	wîn	Gen.Pl../.Akk..P	 * )	_	
5	t316_000	veil	ADJD	vèil(e)	Pos....0	(PreF * )	_	
6	t317_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t318_000	-	$_	_	_	 * )	_	
8	t319_000	denne	KOKOM	danne	_	(Frag *	_	
9	t320_000	einen	CARDS	èin	Masc.Akk.Sg.st	(NX * )	_	
10	t321_000	-	$_	_	_	 * )	_	
11	t322_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
12	t323_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t324_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
14	t325_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(PostF (NX *	_	
15	t326_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
16	t327_000	-	$_	_	_	 * )	_	
17	t328_000	und	KON	unte	_	(Cl (PrePreF * )	_	
18	t329_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t330_000	ein	DIART	èin	Neut.Akk.Sg.0	(MF (NX *	_	
20	t331_000	vierteil	NA	vièr-tèil	Akk.Sg	 *	_	
21	t332_000	jârs	NA	jâr	Gen.Sg	(NX * ) )	_	
22	t333_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
23	t334_000	stat	NA	stat	Akk.Sg	 * ) )	_	
24	t335_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
25	t336_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t337_000	er	PPER	ër	Masc.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t338_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t339_000	ouch	AVD	ouch	_	(MF *	_	
4	t340_000	selber	DDS	sëlb	Masc.Nom.Sg.st	(NX * ) )	_	
5	t341_000	warten	VVINF	warten	_	(RB (VX * ) )	_	
6	t342_000	sînes	DPOSA	sîn	Masc.Gen.Sg.st	(PostF (NX *	_	
7	t343_000	zapfen	NA	zapfe	Gen.Sg	 * )	_	
8	t344_000	und	KON	unte	_	 *	_	
9	t345_000	nieman	DIA	niè-mann	*.Akk.Sg.st	 *	_	
10	t346_000	anders	DIS	ander	Masc.Gen.Sg.st	(NX * )	_	
11	t347_000	dâ	PAVD	dâr/+vür(e)	_	(VX *	_	
12	t348_000	vüre	PAVAP	vür(e)/dâr+	_	 *	_	
13	t349_000	setzen	VVINF	sètzen	_	 * ) )	_	
14	t350_000	-	$_	_	_	 *	_	
15	t351_000	denne	KOKOM	danne	_	(PostF (Cl (PreF * )	_	
16	t352_000	ob	KOUS	obe	_	(LB * )	_	
17	t353_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
18	t354_000	reht	AVD	rëhte	_	 *	_	
19	t355_000	nôt	ADJD	nôt	Pos....0	 * )	_	
20	t356_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX * ) )	_	
21	t357_000	-	$_	_	_	 * ) )	_	
22	t358_000	sîn	DPOSA	sîn	Masc.Akk.Sg.0	(Frag (NX *	_	
23	t359_000	wînruofær	NA	wîn-ruofære	Akk.Sg	 * )	_	
24	t360_000	ein	DIART	èin	Fem.Akk.Sg.0	(NX *	_	
25	t361_000	wîle	NA	wîl(e)	Akk.Sg	 *	_	
26	t362_000	âne	APPR	âne	_	(PPX *	_	
27	t363_000	geværde	NA	ge-vær(e)de	Akk.Sg	(NX * ) ) )	_	
28	t364_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t365_000	swie	AVG	swiè	_	(S (Cl (LB * )	_	
2	t366_000	dicke	AVD	dicke	_	(MF *	_	
3	t367_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
4	t368_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) )	_	
5	t369_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
6	t370_000	-	$_	_	_	 * )	_	
7	t371_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t372_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t373_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
10	t374_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
11	t375_000	drîzic	CARDA	drî-zig	Masc.Akk.Pl.0	(PostF (NX *	_	
12	t376_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
13	t377_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t378_000	ouch	AVD	ouch	_	(S (Frag *	_	
2	t379_000	von	APPR	von	_	(PPX *	_	
3	t380_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
4	t381_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t382_000	swelich	DGA	swèl(i)ch	Masc.Nom.Sg.0	(S (Frag (NX *	_	
2	t383_000	wînmezzær	NA	wîn-mëzzære	Nom.Sg	 * )	_	
3	t384_000	oder	KON	oder	_	 *	_	
4	t385_000	wînruofær	NA	wîn-ruofære	Nom.Sg	(NX * )	_	
5	t386_000	wîn	NA	wîn	Akk.Sg	(PreF (NX * ) )	_	
6	t387_000	koufet	VVFIN	koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t388_000	und	KON	unte	_	(PreF (MF *	_	
8	t389_000	den	DDS	dër	Masc.Akk.Sg	(NX * )	_	
9	t390_000	vürebaz	AVD	vür(e)-bazz	_	 *	_	
10	t391_000	zuo	APPR	ze	_	(PPX *	_	
11	t392_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
12	t393_000	zapfen	NA	zapfe	Dat.Sg	 * ) ) ) )	_	
13	t394_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t395_000	-	$_	_	_	 * )	_	
15	t396_000	oder	KON	oder	_	(Frag *	_	
16	t397_000	iemant	DIA	iè-mand	*.Nom.Sg.st	 *	_	
17	t398_000	von	APPR	von	_	(PPX *	_	
18	t399_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
19	t400_000	wegen	NA	wëg	Dat.Pl	 * ) )	_	
20	t401_000	-	$_	_	_	 * )	_	
21	t402_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
22	t403_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
23	t404_000	von	APPR	von	_	(MF (PPX *	_	
24	t405_000	iewederem	DIA	iè-wëder	Masc.Dat.Sg.st	(NX *	_	
25	t406_000	bodem	NA	bodem	Dat.Sg	 * ) ) )	_	
26	t407_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
27	t408_000	ein	CARDA	èin	Neut.Akk.Sg.0	(PostF (NX *	_	
28	t409_000	pfunt	NA	pfunt	Akk.Sg	 *	_	
29	t410_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
30	t411_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t412_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t413_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t414_000	selben	DDS	sëlb	*.Dat.Pl.st	 * ) )	_	
4	t415_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t416_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t417_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t418_000	ouch	AVD	ouch	_	(MF *	_	
4	t419_000	kein	DIA	kèin	Masc.Nom.Sg.0	(NX *	_	
5	t420_000	wînmezzær	NA	wîn-mëzzære	Nom.Sg	 * ) )	_	
6	t421_000	-	$_	_	_	 *	_	
7	t422_000	über	APPR	über	_	(Frag (PPX *	_	
8	t423_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
9	t424_000	wînruofær	NA	wîn-ruofære	Akk.Sg	 * ) )	_	
10	t425_000	und	KON	unte	_	 *	_	
11	t426_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
12	t427_000	bechersamenær	NA	bëchære-samenære	Akk.Sg	 * )	_	
13	t428_000	-	$_	_	_	 * ) )	_	
14	t429_000	mêr	ADJA	mêr(e)	Comp.Neut.Akk.Sg.0	(Frag *	_	
15	t430_000	denne	KOKOM	danne	_	 *	_	
16	t431_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
17	t432_000	knehte	NA	knëht	Akk.Pl	 * )	_	
18	t433_000	haben	VAINF	haben	_	(VX * )	_	
19	t434_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t435_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t436_000	aber	AVD	aber	_	(PreF *	_	
3	t437_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) )	_	
4	t438_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t439_000	-	$_	_	_	 * )	_	
6	t440_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t441_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t442_000	als	AVD	all-sô	_	(MF *	_	
9	t443_000	dicke	AVD	dicke	_	 *	_	
10	t444_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
11	t445_000	schillinc	NA	schilling	Akk.Sg	 *	_	
12	t446_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
13	t447_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t448_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t449_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t450_000	ungelte	NA	un-gëlt	Dat.Sg	 * ) )	_	
4	t451_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t452_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t453_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t454_000	ouch	AVD	ouch	_	(MF *	_	
4	t455_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
5	t456_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
6	t457_000	ungelt	NA	un-gëlt	Akk.Sg	 * ) )	_	
7	t458_000	verrihten	VVINF	ver-rihten	_	(RB (VX * ) )	_	
8	t459_000	denne	KOKOM	danne	_	(PostF *	_	
9	t460_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
10	t461_000	wînmezzær	NA	wîn-mëzzære	Nom.Sg	 * ) )	_	
11	t462_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t463_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t464_000	rihtet	VVFIN	rihten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t465_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
4	t466_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
5	t467_000	niht	NA	niht	Akk.Sg	(NX *	_	
6	t468_000	in	APPR	in	_	(PPX *	_	
7	t469_000	zwein	CARDA	zwêne	*.Dat.Pl.st	(NX *	_	
8	t470_000	tagen	NA	tag	Dat.Pl	 * ) ) )	_	
9	t471_000	dâr	PAVD	dâr/+nâh	_	 *	_	
10	t472_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
11	t473_000	und	KON	unte	_	 *	_	
12	t474_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
13	t475_000	wîn	NA	wîn	Nom.Sg	 * )	_	
14	t476_000	ûz	PTKVZ	ûz/+gân	_	(VX *	_	
15	t477_000	gêt	VVFIN	gân/ûz+	Ind.Pres.Sg.3	 * ) )	_	
16	t478_000	-	$_	_	_	 * )	_	
17	t479_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
18	t480_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t481_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
20	t482_000	minner	ADJA	minner	Comp.Neut.Akk.Sg.0	 * )	_	
21	t483_000	denne	KOUS	danne	_	(PostF (Cl (LB * )	_	
22	t484_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
23	t485_000	zuo	APPR	ze	_	(PPX *	_	
24	t486_000	rehte	NA	rëht	Dat.Sg	(NX * ) ) ) )	_	
25	t487_000	solte	VMFIN	sol(e)n	*.Past.Sg.3	(RB (VX * ) )	_	
26	t488_000	-	$_	_	_	 * ) ) )	_	
27	t489_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
28	t490_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
29	t491_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
30	t492_000	vierzic	CARDA	vièr-zig	Masc.Akk.Pl.0	(PostF (NX *	_	
31	t493_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
32	t494_000	-	$_	_	_	 * )	_	
33	t495_000	und	KON	unte	_	(Frag *	_	
34	t496_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
35	t497_000	stat	NA	stat	Akk.Sg	 * )	_	
36	t498_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
37	t499_000	vierteil	NA	vièr-tèil	Akk.Sg	 *	_	
38	t500_000	jârs	NA	jâr	Gen.Sg	(NX * ) )	_	
39	t501_000	rûmen	VVINF	rûmen	_	(VX * )	_	
40	t502_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t503_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t504_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t505_000	breche	VVFIN	brëchen	Subj.Pres.Sg.3	(LB (VX * ) ) )	_	
4	t506_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
5	t507_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
6	t508_000	die	DDART	dër	Masc.Nom.Pl	(MF (NX *	_	
7	t509_000	ungeltær	NA	un-gëltære	Nom.Pl	 * ) )	_	
8	t510_000	rüegen	VVINF	rüègen	_	(RB (VX * ) )	_	
9	t511_000	dem	DDART	dër	Masc.Dat.Sg	(PostF (NX *	_	
10	t512_000	râte	NA	rât	Dat.Sg	 * ) )	_	
11	t513_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t514_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t515_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t516_000	ouch	AVD	ouch	_	(MF *	_	
4	t517_000	kein	DIA	kèin	Masc.Nom.Sg.0	(NX *	_	
5	t518_000	wînmezzær	NA	wîn-mëzzære	Nom.Sg	 * ) )	_	
6	t519_000	-	$_	_	_	 * )	_	
7	t520_000	decheinen	DIA	deh-èin	Masc.Akk.Sg.st	(Frag (NX *	_	
8	t521_000	wîn	NA	wîn	Akk.Sg	 * )	_	
9	t522_000	mit	APPR	mit	_	 *	_	
10	t523_000	einander	DIA	èin-ander	*.*.*.0	 *	_	
11	t524_000	geben	VVINF	gëben	_	(VX * )	_	
12	t525_000	mit	APPR	mit	_	(PPX *	_	
13	t526_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
14	t527_000	ôme	NA	ôme	Dat.Sg	 * ) )	_	
15	t528_000	-	$_	_	_	 * )	_	
16	t529_000	âne	APPR	âne	_	(Frag (PPX *	_	
17	t530_000	pfant	NA	pfant	Akk.Sg	(NX * ) )	_	
18	t531_000	-	$_	_	_	 * )	_	
19	t532_000	oder	KON	oder	_	(Frag *	_	
20	t533_000	man	PI	man	*.Nom.Sg.st	(PreF (NX * ) )	_	
21	t534_000	warte	VVFIN	warten	Subj.Pres.Sg.3	(LB (VX * ) )	_	
22	t535_000	ûf	APPR	ûf	_	(MF (PPX *	_	
23	t536_000	in	PPER	ër	Masc.Akk.Sg.3	(NX *	_	
24	t537_000	des	DDART	dër	Masc,Neut.Gen.Sg	(NX *	_	
25	t538_000	ungeltes	NA	un-gëlt	Gen.Sg	 * ) ) ) )	_	
26	t539_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t540_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t541_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
3	t542_000	anegiezær	NA	ane-gièzære	Dat.Sg	 * ) )	_	
4	t543_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t544_000	wir	PPER	wir	Nom.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t545_000	haben	VAFIN	haben	*.Pres.Pl.1	(LB (VX * ) )	_	
3	t546_000	ouch	AVD	ouch	_	(MF *	_	
4	t547_000	ein	DIART	èin	Masc.Akk.Sg.0	(NX *	_	
5	t548_000	anegiezær	NA	ane-gièzære	Akk.Sg	 * ) )	_	
6	t549_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t550_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t551_000	unrehte	AVD	un-rëhte	_	(PreF * )	_	
3	t552_000	mizzet	VVFIN	mëzzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t553_000	-	$_	_	_	 * )	_	
5	t554_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t555_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t556_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
8	t557_000	drîzic	CARDA	drî-zig	Masc.Akk.Pl.0	(PostF (NX *	_	
9	t558_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
10	t559_000	als	KO*	all-sô	_	(Frag *	_	
11	t560_000	dicke	AVD	dicke	_	(PreF * )	_	
12	t561_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
13	t562_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
14	t563_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t564_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t565_000	der	DDS	dër	*.Gen.Pl	(S (Cl (PreF (NX * ) )	_	
2	t566_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t567_000	sehs	CARDS	sëhs	Masc.Akk.Pl.0	(MF (NX * )	_	
4	t568_000	werden	VAINF	wërden	_	(VX * )	_	
5	t569_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
6	t570_000	anegiezær	NA	ane-gièzære	Dat.Sg	 * ) )	_	
7	t571_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t572_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t573_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
3	t574_000	der	DDS	dër	*.Gen.Pl	(NX * ) )	_	
4	t575_000	niht	NA	niht	Akk.Sg	(NX *	_	
5	t576_000	in	APPR	in	_	(PPX *	_	
6	t577_000	drîen	CARDA	drî	*.Dat.Pl.st	(NX *	_	
7	t578_000	tagen	NA	tag	Dat.Pl	 * ) ) )	_	
8	t579_000	dâr	PAVD	dâr/+nâh	_	 *	_	
9	t580_000	nâch	PAVAP	nâh/dâr+	_	 * )	_	
10	t581_000	-	$_	_	_	 * )	_	
11	t582_000	als	KO*	all-sô	_	(Frag *	_	
12	t583_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
13	t584_000	wîn	NA	wîn	Nom.Sg	 * )	_	
14	t585_000	ûz	PTKVZ	ûz/+sîn	_	(VX *	_	
15	t586_000	ist	VAFIN	sîn/ûz+	Ind.Pres.Sg.3	 * )	_	
16	t587_000	-	$_	_	_	 * )	_	
17	t588_000	sô	AVD	sô	_	(Cl (PreF * )	_	
18	t589_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t590_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
20	t591_000	vierzehen	CARDA	vièr-zëhen	Masc.Akk.Pl.0	(NX *	_	
21	t592_000	tage	NA	tag	Akk.Pl	 * )	_	
22	t593_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
23	t594_000	stat	NA	stat	Akk.Sg	 * ) )	_	
24	t595_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
25	t596_000	-	$_	_	_	 *	_	
26	t597_000	drî	CARDA	drî	Fem.Akk.Pl.0	(Frag (NX *	_	
27	t598_000	mîl	NA	mîle	Akk.Pl	 *	_	
28	t599_000	von	APPR	von	_	(PPX *	_	
29	t600_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
30	t601_000	stat	NA	stat	Dat.Sg	 * ) ) )	_	
31	t602_000	-	$_	_	_	 * ) )	_	
32	t603_000	und	KON	unte	_	(Frag *	_	
33	t604_000	doch	AVD	doh	_	 *	_	
34	t605_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
35	t606_000	buoze	NA	buoze	Akk.Sg	 * )	_	
36	t607_000	geben	VVINF	gëben	_	(VX * )	_	
37	t608_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t609_000	swenne	AVG	swanne	_	(S (Cl (LB * )	_	
2	t610_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t611_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
4	t611_001	stunte	NA	stunt(e)	Akk.Pl	 * ) )	_	
5	t612_000	verliuset	VVFIN	ver-lièsen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
6	t613_000	vore	APPR	vor(e)	_	(PostF (PPX *	_	
7	t614_000	einem	DIART	èin	Neut.Dat.Sg.st	(NX *	_	
8	t615_000	vazze	NA	vazz	Dat.Sg	 * ) ) )	_	
9	t616_000	-	$_	_	_	 * )	_	
10	t617_000	sô	AVD	sô	_	(Cl (PreF * )	_	
11	t618_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t619_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
13	t620_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
14	t621_000	mîle	NA	mîle	Akk.Pl	 *	_	
15	t622_000	von	APPR	von	_	(PPX *	_	
16	t623_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
17	t624_000	stat	NA	stat	Dat.Sg	 * ) ) ) )	_	
18	t625_000	varn	VVINF	var(e)n	_	(RB (VX * ) )	_	
19	t626_000	einen	CARDA	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
20	t627_000	mânden	NA	mând(e)	Akk.Sg	 * ) )	_	
21	t628_000	-	$_	_	_	 *	_	
22	t629_000	ûz	PTKVZ	ûz/+sîn	_	(Frag *	_	
23	t630_000	ze	APPR	ze	_	(PPX *	_	
24	t631_000	sînde	NA	sîn/ûz+	Dat.Sg	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t632_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t633_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t634_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
4	t635_000	anegiezær	NA	ane-gièzære	Nom.Sg	 * ) )	_	
5	t636_000	warten	VVINF	warten	_	(RB (VX * ) )	_	
6	t637_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t638_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t639_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t640_000	rüggîn	ADJA	rüggîn	Pos.Neut.Dat.Sg.0	 *	_	
4	t641_000	brôte	NA	brôt	Dat.Sg	 * ) )	_	
5	t642_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t643_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t644_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t645_000	ouch	AVD	ouch	_	(MF *	_	
4	t646_000	allez	DIA	all	Neut.Akk.Sg.st	(NX *	_	
5	t647_000	rüggîn	ADJA	rüggîn	Pos.Neut.Akk.Sg.0	 *	_	
6	t648_000	brôt	NA	brôt	Akk.Sg	 * )	_	
7	t649_000	veil	ADJD	vèil(e)	Pos....0	 *	_	
8	t650_000	haben	VAINF	haben	_	(VX * ) )	_	
9	t651_000	-	$_	_	_	 *	_	
10	t652_000	in	APPR	in	_	(Frag (PPX *	_	
11	t653_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
12	t654_000	brôthûse	NA	brôt-hûs	Dat.Sg	 * ) )	_	
13	t655_000	und	KON	unte	_	 *	_	
14	t656_000	anders	AVD	ander(e)s	_	 *	_	
15	t657_000	niergen	AVD	nièrgen	_	 *	_	
16	t658_000	-	$_	_	_	 * )	_	
17	t659_000	denne	KOKOM	danne	_	(Frag *	_	
18	t660_000	ûf	APPR	ûf	_	(PPX *	_	
19	t661_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
20	t662_000	tuombrobstîe	NA	tuom-brobstîe	Dat.Sg	 * ) )	_	
21	t663_000	-	$_	_	_	 * )	_	
22	t664_000	und	KON	unte	_	(Frag *	_	
23	t665_000	under	APPR	unter	_	(PPX *	_	
24	t666_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
25	t667_000	toren	NA	tor	Dat.Pl	 * ) )	_	
26	t668_000	-	$_	_	_	 * )	_	
27	t669_000	und	KON	unte	_	(Frag *	_	
28	t670_000	swaz	PG	swër	Neut.Akk.Sg.st	(PreF (NX *	_	
29	t671_000	vremeder	ADJA	vrèm(e)de	Pos.*.Gen.Pl.st	(NX *	_	
30	t672_000	liute	NA	liut	Gen.Pl	 * ) ) )	_	
31	t673_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) ) )	_	
32	t674_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
33	t675_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
34	t676_000	brüggen	NA	brügge	Dat.Sg	 * ) )	_	
35	t677_000	-	$_	_	_	 * ) )	_	
36	t678_000	als	KO*	all-sô	_	(Frag *	_	
37	t679_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX *	_	
38	t680_000	von	APPR	von	_	(PPX *	_	
39	t681_000	alter	NA	alter	Dat.Sg	(NX * ) ) )	_	
40	t682_000	her	AVD	hër(e)	_	 *	_	
41	t683_000	kumen	VVPP	komen	_	(VX *	_	
42	t684_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
43	t685_000	-	$_	_	_	 * )	_	
44	t686_000	aber	AVD	aber	_	(Frag *	_	
45	t687_000	mit	APPR	mit	_	(PPX *	_	
46	t688_000	karren	NA	karre	Dat.Pl	(NX * ) )	_	
47	t689_000	und	KON	unte	_	 *	_	
48	t690_000	mit	APPR	mit	_	(PPX *	_	
49	t691_000	wegen	NA	wagen	Dat.Pl	(NX *	_	
50	t692_000	ûf	APPR	ûf	_	(PPX *	_	
51	t693_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
52	t694_000	markete	NA	market	Dat.Sg	 * ) ) ) )	_	
53	t695_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t696_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t697_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t698_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t699_000	-	$_	_	_	 * )	_	
5	t700_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t701_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t702_000	als	AVD	all-sô	_	(MF *	_	
8	t703_000	dicke	AVD	dicke	_	 * )	_	
9	t704_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
10	t705_000	einen	CARDA	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
11	t706_000	schillinc	NA	schilling	Akk.Sg	 *	_	
12	t707_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
13	t708_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t709_000	die	DRELS	dër	Masc.Nom.Pl	(S (Cl (LB (NX * ) )	_	
2	t710_000	ouch	AVD	ouch	_	(MF *	_	
3	t711_000	under	APPR	unter	_	(PPX *	_	
4	t712_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
5	t713_000	toren	NA	tor	Dat.Pl	 * ) )	_	
6	t714_000	brôt	NA	brôt	Akk.Sg	(NX * )	_	
7	t715_000	veil	ADJD	vèil(e)	Pos....0	 * )	_	
8	t716_000	haben	VAFIN	haben	*.Pres.Pl.3	(RB (VX * ) )	_	
9	t717_000	-	$_	_	_	 * )	_	
10	t718_000	die	DDS	dër	Masc.Nom.Pl	(Cl (PreF (NX * ) )	_	
11	t719_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
12	t720_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * ) )	_	
13	t721_000	koufen	VVINF	koufen	_	(RB (VX * ) )	_	
14	t722_000	in	APPR	in	_	(PostF (PPX *	_	
15	t723_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
16	t724_000	brôthûse	NA	brôt-hûs	Dat.Sg	 * ) ) )	_	
17	t725_000	-	$_	_	_	 *	_	
18	t726_000	und	KON	unte	_	(Frag *	_	
19	t727_000	niergen	AVD	nièrgen	_	 *	_	
20	t728_000	anders	AVD	ander(e)s	_	 *	_	
21	t729_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t730_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t731_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t732_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t733_000	-	$_	_	_	 * )	_	
5	t734_000	und	KON	unte	_	(Frag *	_	
6	t735_000	ouch	AVD	ouch	_	(PreF *	_	
7	t736_000	anderswâ	AVD	ander(e)s-wâr	_	 * )	_	
8	t737_000	brôt	NA	brôt	Akk.Sg	(NX * )	_	
9	t738_000	veil	ADJD	vèil(e)	Pos....0	(PreF * )	_	
10	t739_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t740_000	-	$_	_	_	 *	_	
12	t741_000	danne	AVD	danne	_	(MF * ) )	_	
13	t742_000	als	KO*	all-sô	_	(Frag *	_	
14	t743_000	vore	AVD	vor(e)	_	 *	_	
15	t744_000	gesprochen	VVPP	sprëchen	_	(VX *	_	
16	t745_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
17	t746_000	-	$_	_	_	 * )	_	
18	t747_000	als	KO*	all-sô	_	(Frag *	_	
19	t748_000	dicke	AVD	dicke	_	(PreF * )	_	
20	t749_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
21	t750_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
22	t751_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
23	t752_000	-	$_	_	_	 * )	_	
24	t753_000	als	AVD	all-sô	_	(Cl (PreF *	_	
25	t754_000	dicke	AVD	dicke	_	 * )	_	
26	t755_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
27	t756_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
28	t757_000	ein	CARDA	èin	Masc.Akk.Sg.0	(NX *	_	
29	t758_000	schillinc	NA	schilling	Akk.Sg	 *	_	
30	t759_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
31	t760_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t761_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t762_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t763_000	ouch	AVD	ouch	_	(MF *	_	
4	t764_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
5	t765_000	kein	DIA	kèin	Neut.Akk.Sg.0	(NX *	_	
6	t766_000	ganz	ADJA	ganz	Pos.Neut.Akk.Sg.0	 *	_	
7	t767_000	brôt	NA	brôt	Akk.Sg	 * )	_	
8	t768_000	veil	ADJD	vèil(e)	Pos....0	 *	_	
9	t769_000	haben	VAINF	haben	_	(VX * )	_	
10	t770_000	in	APPR	in	_	(PPX *	_	
11	t771_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
12	t772_000	Arweizgazzen	NE	Ar(e)wèiz-gazze	Dat.Sg	 *	_	
13	t773_000	under	APPR	unter	_	(PPX *	_	
14	t774_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
15	t775_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
16	t776_000	buoze	NA	buoze	Dat.Sg	 * ) ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t777_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t778_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t779_000	warten	VVINF	warten	_	(RB (VX * ) )	_	
4	t780_000	die	DDART	dër	Masc.Nom.Pl	(PostF (NX *	_	
5	t781_000	schultheizen	NA	schuld-hèize	Nom.Pl	 * ) )	_	
6	t782_000	ein	DIART	èin	Masc.Nom.Sg.0	(Frag (NX *	_	
7	t783_000	burgermeister	NA	burger-mèister	Nom.Sg	 * )	_	
8	t784_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t785_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t786_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t787_000	semelîn	ADJA	sëmelîn	Pos.*.Dat.Pl.0	 *	_	
4	t788_000	weggelîn	NA	wèggelîn	Dat.Pl	 * ) )	_	
5	t789_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t790_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t791_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t792_000	ouch	AVD	ouch	_	(MF *	_	
4	t793_000	die	DDART	dër	Neut.Akk.Pl	(NX *	_	
5	t794_000	semelîn	NA	sëmelîn	Akk.Pl	 * ) )	_	
6	t795_000	zwicken	VVINF	zwicken	_	(RB (VX * ) )	_	
7	t796_000	-	$_	_	_	 * )	_	
8	t797_000	und	KON	unte	_	(Frag *	_	
9	t798_000	wîz	ADJD	wîz	Pos....0	 *	_	
10	t799_000	machen	VVINF	machen	_	(VX * )	_	
11	t800_000	-	$_	_	_	 * )	_	
12	t801_000	als	KO*	all-sô	_	(Frag *	_	
13	t802_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX *	_	
14	t803_000	von	APPR	von	_	(PPX *	_	
15	t804_000	alter	NA	alter	Dat.Sg	(NX * ) ) )	_	
16	t805_000	her	AVD	hër(e)	_	 *	_	
17	t806_000	kumen	VVPP	komen	_	(VX *	_	
18	t807_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
19	t808_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t809_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t810_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t811_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) ) )	_	
4	t812_000	dem	DDS	dër	Masc.Dat.Sg	(Cl (PreF (NX * ) )	_	
5	t813_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t814_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
7	t815_000	die	DDS	dër	Neut.Akk.Pl	(NX * ) )	_	
8	t816_000	zersnîden	VVINF	zer-snîden	_	(RB (VX * ) )	_	
9	t817_000	und	KON	unte	_	(PostF *	_	
10	t818_000	nâher	AVD	nâhe	_	 *	_	
11	t819_000	geben	VVINF	gëben	_	(VX * ) )	_	
12	t820_000	-	$_	_	_	 * )	_	
13	t821_000	des	DDS	dër	Neut.Gen.Sg	(Cl (PreF (NX * ) )	_	
14	t822_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
15	t823_000	warten	VVINF	warten	_	(RB (VX * ) )	_	
16	t824_000	-	$_	_	_	 *	_	
17	t825_000	-	_	[!]	_	(PostF * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t826_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t827_000	rehtem	ADJA	rëht	Pos.Masc.Dat.Sg.st	(NX *	_	
3	t828_000	koufe	NA	kouf	Dat.Sg	 *	_	
4	t829_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
5	t830_000	brôtes	NA	brôt	Gen.Sg	 * ) ) )	_	
6	t831_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t832_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t833_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t834_000	ouch	AVD	ouch	_	(MF *	_	
4	t835_000	rehten	ADJA	rëht	Pos.Masc.Akk.Sg.*	(NX *	_	
5	t836_000	kouf	NA	kouf	Akk.Sg	 * ) )	_	
6	t837_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
7	t838_000	-	$_	_	_	 *	_	
8	t839_000	an	APPR	ane	_	(Frag (PPX *	_	
9	t840_000	aller	DIA	all	*.Gen.Pl.st	(NX *	_	
10	t840_001	leie	NA	lèie	Gen.Pl	 * ) )	_	
11	t841_000	brôte	NA	brôt	Dat.Sg	(NX * )	_	
12	t842_000	dâr	PAVD	dâr/+nâh	_	 *	_	
13	t843_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
14	t844_000	ie	AVD	iè	_	 * )	_	
15	t845_000	als	KO*	all-sô	_	(Frag *	_	
16	t846_000	daz	DDART	dër	Neut.Nom.Sg	(NX *	_	
17	t847_000	getreide	NA	ge-trègede	Nom.Sg	 * )	_	
18	t848_000	veil	ADJD	vèil(e)	Pos....0	(PreF * )	_	
19	t849_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t850_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t851_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX *	_	
2	t852_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
3	t853_000	niht	NA	niht	Akk.Sg	(PreF (NX * ) )	_	
4	t854_000	en	PTKNEG	ne	_	(LB (VX *	_	
5	t855_000	tæte	VVFIN	tuon	Subj.Past.Sg.3	 * ) )	_	
6	t856_000	-	$_	_	_	 * )	_	
7	t857_000	dem	DDS	dër	Masc.Dat.Sg	(Cl (PreF (NX * ) )	_	
8	t858_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t859_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
10	t860_000	daz	DDART	dër	Neut.Akk.Sg	 *	_	
11	t861_000	ze	APPR	ze	_	(PPX *	_	
12	t861_001	kleine	ADJA	klèine	Pos.Neut.Akk.Sg.wk	(NX *	_	
13	t862_000	brôt	NA	brôt	Akk.Sg	 * ) ) )	_	
14	t863_000	verkoufen	VVINF	ver-koufen	_	(RB (VX * ) )	_	
15	t864_000	und	KON	unte	_	(PostF *	_	
16	t865_000	nâher	AVD	nâhe	_	 *	_	
17	t866_000	geben	VVINF	gëben	_	(VX * )	_	
18	t867_000	und	KON	unte	_	 *	_	
19	t868_000	die	DDART	dër	Neut.Akk.Pl	(NX *	_	
20	t869_000	semelîn	ADJA	sëmelîn	Pos.Neut.Akk.Pl.0	 *	_	
21	t870_000	weggelîn	NA	wèggelîn	Akk.Pl	 * )	_	
22	t871_000	zersnîden	VVINF	zer-snîden	_	(VX * )	_	
23	t872_000	unde	KON	unte	_	 *	_	
24	t873_000	ouch	AVD	ouch	_	 *	_	
25	t874_000	nâher	AVD	nâhe	_	 *	_	
26	t875_000	geben	VVINF	gëben	_	(VX * ) ) )	_	
27	t876_000	als	KO*	all-sô	_	(Frag *	_	
28	t877_000	vore	PTKVZ	vor(e)/+schrîben	_	(VX * )	_	
29	t878_000	geschriben	VVPP	schrîben/vor(e)+	_	(VX *	_	
30	t879_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
31	t880_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t881_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t882_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t883_000	warten	VVINF	warten	_	(RB (VX * ) )	_	
4	t884_000	die	DRELS	dër	*.Nom.Pl	(PostF (Cl (LB (NX * ) )	_	
5	t885_000	iezunt	AVD	iè-zunt	_	(MF * )	_	
6	t886_000	genant	VVPP	nènnen	_	(RB (VX *	_	
7	t887_000	sîn	VAFIN	sîn	*.Pres.Pl.3	 * ) )	_	
8	t888_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t889_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t890_000	brôte	NA	brôt	Dat.Sg	(NX *	_	
3	t891_000	vore	APPR	vor(e)	_	(PPX *	_	
4	t892_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
5	t893_000	grêden	NA	grêde	Dat.Pl	 * ) ) ) )	_	
6	t894_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t895_000	wir	PPER	wir	Nom.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t896_000	wollen	VMFIN	wèllen	*.Pres.Pl.1	(LB (VX * ) )	_	
3	t897_000	ouch	AVD	ouch	_	(MF * )	_	
4	t898_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
5	t899_000	nieman	DIA	niè-mann	*.Nom.Sg.st	(MF *	_	
6	t900_000	kein	DIA	kèin	Neut.Akk.Sg.0	(NX *	_	
7	t901_000	ander	DIA	ander	Neut.Akk.Sg.0	 *	_	
8	t902_000	brôt	NA	brôt	Akk.Sg	 * )	_	
9	t903_000	veil	ADJD	vèil(e)	Pos....0	 * )	_	
10	t904_000	habe	VAFIN	haben	Subj.Pres.Sg.3	(RB (VX * ) )	_	
11	t905_000	vore	APPR	vor(e)	_	(PostF (PPX *	_	
12	t906_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
13	t907_000	grêden	NA	grêde	Dat.Pl	 * ) ) )	_	
14	t908_000	-	$_	_	_	 * ) )	_	
15	t909_000	wenne	KOKOM	wan	_	(Frag *	_	
16	t910_000	die	DDART	dër	Fem.Akk.Pl	(NX *	_	
17	t911_000	pfrüende	NA	pfrüènte	Akk.Pl	 *	_	
18	t912_000	von	APPR	von	_	(PPX *	_	
19	t913_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
20	t914_000	stiften	NA	stift	Dat.Pl	 * ) ) ) )	_	
21	t915_000	und	KON	unte	_	(Frag *	_	
22	t916_000	ouch	AVD	ouch	_	 *	_	
23	t917_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
24	t918_000	ûf	APPR	ûf	_	(PreF (PPX *	_	
25	t919_000	die	DDART	dër	Fem.Akk.Pl	(NX *	_	
26	t920_000	pfrüende	NA	pfrüènte	Akk.Pl	 *	_	
27	t921_000	semeln	NA	sëmel(e)	Akk.Pl	 * ) ) )	_	
28	t922_000	backe	VVFIN	backen	Subj.Pres.Sg.3	(LB (VX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t923_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t924_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t925_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t926_000	-	$_	_	_	 * )	_	
5	t927_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t928_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t929_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
8	t930_000	zuo	APPR	ze	_	(PostF (PPX *	_	
9	t931_000	bezzerunge	NA	bèzzerunge	Dat.Sg	(NX * ) )	_	
10	t932_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
11	t933_000	schillinge	NA	schilling	Akk.Pl	 *	_	
12	t934_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
13	t935_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t936_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t937_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t938_000	warten	VVINF	warten	_	(RB (VX * ) )	_	
4	t939_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t940_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t941_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
3	t942_000	vleischkoufe	NA	vlèisch-kouf	Dat.Sg	 * ) )	_	
4	t943_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t944_000	umbe	APPR	umbe	_	(S (Frag (PPX *	_	
2	t945_000	allen	DIA	all	Masc.Akk.Sg.st	(NX *	_	
3	t946_000	vleischkouf	NA	vlèisch-kouf	Akk.Sg	 * ) )	_	
4	t947_000	beide	KON	bèide	_	 *	_	
5	t948_000	grüene	ADJD	grüène	Pos....0	 *	_	
6	t949_000	und	KON	unte	_	 *	_	
7	t950_000	dürre	ADJD	dürre	Pos....0	 *	_	
8	t951_000	und	KON	unte	_	 *	_	
9	t952_000	ouch	AVD	ouch	_	 *	_	
10	t953_000	vürekoufes	NA	vür(e)-kouf	Gen.Sg	(NX * )	_	
11	t954_000	-	$_	_	_	 * )	_	
12	t955_000	des	DDS	dër	Neut.Gen.Sg	(Cl (PreF (NX * ) )	_	
13	t956_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
14	t957_000	warten	VVINF	warten	_	(RB (VX * ) )	_	
15	t958_000	die	DDART	dër	Masc.Nom.Pl	(PostF (NX *	_	
16	t959_000	zwêne	CARDA	zwêne	Masc.Nom.Pl.st	 *	_	
17	t960_000	schultheizen	NA	schuld-hèize	Nom.Pl	 * ) )	_	
18	t961_000	-	$_	_	_	 *	_	
19	t962_000	und	KON	unte	_	(Frag *	_	
20	t963_000	doch	AVD	doh	_	(PreF * )	_	
21	t964_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
22	t965_000	des	DDS	dër	Neut.Gen.Sg	(MF (NX * )	_	
23	t966_000	vore	AVD	vor(e)	_	 *	_	
24	t967_000	und	KON	unte	_	 *	_	
25	t968_000	nâch	AVD	nâh	_	 *	_	
26	t969_000	sunderlîche	AVD	sunter-lîche	_	 * )	_	
27	t970_000	warten	VVINF	warten	_	(RB (VX * ) )	_	
28	t971_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t972_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t973_000	ouch	AVD	ouch	_	(PreF * )	_	
3	t974_000	vinneht	ADJA	vinneht	Pos.Neut.Akk.Sg.0	(NX *	_	
4	t975_000	vleisch	NA	vlèisch	Akk.Sg	 * )	_	
5	t976_000	veil	ADJD	vèil(e)	Pos....0	(PreF * )	_	
6	t977_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t978_000	-	$_	_	_	 * )	_	
8	t979_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t980_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t981_000	vierzehen	CARDA	vièr-zëhen	Masc.Akk.Pl.0	(MF (NX *	_	
11	t982_000	schillinge	NA	schilling	Akk.Pl	 *	_	
12	t983_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
13	t984_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t985_000	der	DDS	dër	*.Gen.Pl	(S (Cl (PreF (NX * ) )	_	
2	t986_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t987_000	dem	DDART	dër	Masc.Dat.Sg	(MF (NX *	_	
4	t988_000	râte	NA	rât	Dat.Sg	 * )	_	
5	t989_000	zehen	CARDS	zëhen	Masc.Akk.Pl.0	(NX * ) )	_	
6	t990_000	-	$_	_	_	 *	_	
7	t991_000	den	DDART	dër	*.Dat.Pl	(Frag (NX *	_	
8	t992_000	schultheizen	NA	schuld-hèize	Dat.Pl	 * )	_	
9	t993_000	zwêne	CARDS	zwêne	Masc.Akk.Pl.st	(NX * )	_	
10	t994_000	-	$_	_	_	 *	_	
11	t995_000	und	KON	unte	_	 *	_	
12	t996_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX *	_	
13	t997_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
14	t998_000	wartet	VVFIN	warten	Ind.Pres.Sg.3	(RB (VX * ) ) ) )	_	
15	t999_000	zwêne	CARDS	zwêne	Masc.Akk.Pl.st	(Frag (NX * )	_	
16	t1000_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1001_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1002_000	holze	NA	holz	Dat.Sg	(NX * ) )	_	
3	t1003_000	und	KON	unte	_	 *	_	
4	t1004_000	von	APPR	von	_	(PPX *	_	
5	t1005_000	kolen	NA	kol(e)	Dat.Pl	(NX * ) )	_	
6	t1006_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1007_000	an	APPR	ane	_	(S (PPX *	_	
2	t1008_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
3	t1009_000	holzpforten	NA	holz-pforte	Dat.Sg	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1010_000	über	APPR	über	_	(S (Frag (PPX *	_	
2	t1011_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
3	t1012_000	vürekouf	NA	vür(e)-kouf	Akk.Sg	 *	_	
4	t1013_000	an	APPR	ane	_	(PPX *	_	
5	t1014_000	holze	NA	holz	Dat.Sg	(NX * ) ) ) )	_	
6	t1015_000	-	$_	_	_	 * )	_	
7	t1016_000	an	APPR	ane	_	(Frag (PPX *	_	
8	t1017_000	kolen	NA	kol(e)	Dat.Pl	(NX * ) )	_	
9	t1018_000	-	$_	_	_	 * )	_	
10	t1019_000	und	KON	unte	_	(Frag *	_	
11	t1020_000	an	APPR	ane	_	(PPX *	_	
12	t1021_000	aller	DIA	all	*.Gen.Pl.st	(NX *	_	
13	t1021_001	leie	NA	lèie	Gen.Pl	 * ) )	_	
14	t1022_000	dingen	NA	ding	Dat.Pl	(NX * )	_	
15	t1023_000	-	$_	_	_	 * )	_	
16	t1024_000	als	KO*	all-sô	_	(Frag *	_	
17	t1025_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX *	_	
18	t1026_000	von	APPR	von	_	(PPX *	_	
19	t1027_000	alter	NA	alter	Dat.Sg	(NX * ) ) )	_	
20	t1028_000	her	AVD	hër(e)	_	 *	_	
21	t1029_000	kumen	VVPP	komen	_	(VX *	_	
22	t1030_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
23	t1031_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1032_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1033_000	aber	AVD	aber	_	(PreF *	_	
3	t1034_000	bruch	ADJD	bruch	Pos....0	 * )	_	
4	t1035_000	dâr	PAVD	dâr/+ane	_	(LB (VX *	_	
5	t1036_000	an	PAVAP	ane/dâr+	_	 *	_	
6	t1037_000	würde	VAFIN	wërden	Subj.Past.Sg.3	 * ) )	_	
7	t1038_000	-	$_	_	_	 * )	_	
8	t1039_000	und	KON	unte	_	(Cl (PrePreF * )	_	
9	t1040_000	vürkoufete	VVFIN	vür-koufen	(Subj).Past.Sg.3	(LB (VX * ) )	_	
10	t1041_000	-	$_	_	_	 * )	_	
11	t1042_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
12	t1043_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t1044_000	ie	AVD	iè	_	(MF *	_	
14	t1045_000	von	APPR	von	_	(PPX *	_	
15	t1046_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
16	t1047_000	pfunde	NA	pfunt	Dat.Sg	 * ) ) )	_	
17	t1048_000	-	$_	_	_	 *	_	
18	t1049_000	als	KO*	all-sô	_	(Frag *	_	
19	t1050_000	vile	AVD	vil(e)	_	(PreF *	_	
20	t1051_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * ) )	_	
21	t1052_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
22	t1053_000	-	$_	_	_	 * ) )	_	
23	t1054_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(NX *	_	
24	t1055_000	schillinge	NA	schilling	Akk.Pl	 * )	_	
25	t1056_000	als	KO*	all-sô	_	(Frag *	_	
26	t1057_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
27	t1058_000	sich	PRF	sich	Akk	(PreF (NX * ) )	_	
28	t1059_000	gebüret	VVFIN	ge-bür(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
29	t1060_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1061_000	daz	DDART	dër	Neut.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t1062_000	holz	NA	holz	Nom.Sg	 * ) )	_	
3	t1063_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t1064_000	drî	CARDA	drî	Masc.Akk.Pl.0	(MF (NX *	_	
5	t1065_000	tage	NA	tag	Akk.Pl	 * ) )	_	
6	t1066_000	stên	VVINF	stân	_	(RB (VX * ) )	_	
7	t1067_000	âne	APPR	âne	_	(PostF (PPX *	_	
8	t1068_000	vürekouf	NA	vür(e)-kouf	Akk.Sg	(NX * ) ) )	_	
9	t1069_000	-	$_	_	_	 * )	_	
10	t1070_000	under	APPR	unter	_	(PPX *	_	
11	t1071_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
12	t1072_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
13	t1073_000	buoze	NA	buoze	Dat.Sg	 * ) )	_	
14	t1074_000	aber	AVD	aber	_	(Cl (PreF *	_	
15	t1075_000	ein	DIART	èin	Neut.Nom.Sg.0	(NX *	_	
16	t1076_000	lastschif	NA	last-schiff	Nom.Sg	 *	_	
17	t1077_000	mit	APPR	mit	_	(PPX *	_	
18	t1078_000	kolen	NA	kol(e)	Dat.Pl	(NX * ) ) ) )	_	
19	t1079_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t1080_000	ahte	CARDA	ahte	Masc.Akk.Pl.0	(MF (NX *	_	
21	t1081_000	tage	NA	tag	Akk.Pl	 * ) )	_	
22	t1082_000	stên	VVINF	stân	_	(RB (VX * ) )	_	
23	t1083_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1084_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1085_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t1086_000	ouch	AVD	ouch	_	(MF *	_	
4	t1087_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
5	t1088_000	kein	DIA	kèin	Fem.Akk.Sg.0	(NX *	_	
6	t1089_000	geselleschaft	NA	ge-sèlle-schaft	Akk.Sg	 * )	_	
7	t1090_000	ûzwart	AVD	ûz-wërt	_	 *	_	
8	t1091_000	hân	VAINF	haben	_	(VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1092_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1093_000	aber	AVD	aber	_	(PreF *	_	
3	t1094_000	die	DDS	dër	Fem.Akk.Sg	(NX * ) )	_	
4	t1095_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t1096_000	und	KON	unte	_	(MF *	_	
6	t1097_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
7	t1098_000	überkumen	VVPP	über-komen	_	(PostF (VX *	_	
8	t1099_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	 * ) ) )	_	
9	t1100_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t1101_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t1102_000	ie	AVD	iè	_	(MF *	_	
12	t1103_000	von	APPR	von	_	(PPX *	_	
13	t1104_000	vierzehen	CARDA	vièr-zëhen	*.Dat.Pl.0	(NX *	_	
14	t1105_000	tagen	NA	tag	Dat.Pl	 * ) )	_	
15	t1106_000	ein	CARDA	èin	Neut.Akk.Sg.0	(NX *	_	
16	t1107_000	pfunt	NA	pfunt	Akk.Sg	 *	_	
17	t1108_000	pfenninge	NA	pfènning	Gen.Pl	(NX *	_	
18	t1109_000	ze	APPR	ze	_	(PPX *	_	
19	t1110_000	bezzerunge	NA	bèzzerunge	Dat.Sg	(NX * ) ) ) ) )	_	
20	t1111_000	die wîle	KOUS	diè~wîle	_	(PostF (Cl (LB * )	_	
21	t1112_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
22	t1113_000	die	DDS	dër	Fem.Akk.Sg	(NX * ) )	_	
23	t1114_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(RB (VX * ) )	_	
24	t1115_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1116_000	von	APPR	von	_	(S (PPX *	_	
2	t1117_000	kæsen	NA	kæse	Dat.Pl	(NX * ) )	_	
3	t1118_000	eiern	NA	èi	Dat.Pl	(Frag (NX * )	_	
4	t1119_000	-	$_	_	_	 * )	_	
5	t1119_001	wilde	$_	wild	Dat.Sg	 *	_	
6	t1120_000	und	KON	unte	_	(Frag *	_	
7	t1121_000	zame	NA	zam	Dat.Sg	(NX * )	_	
8	t1122_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1123_000	umbe	APPR	umbe	_	(S (Frag (PPX *	_	
2	t1124_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
3	t1125_000	vürekouf	NA	vür(e)-kouf	Akk.Sg	 *	_	
4	t1126_000	über	APPR	über	_	(PPX *	_	
5	t1127_000	kæse	NA	kæse	Akk.Sg	(NX * ) ) ) )	_	
6	t1128_000	und	KON	unte	_	 *	_	
7	t1129_000	eier	NA	èi	Akk.Pl	(NX * )	_	
8	t1130_000	-	$_	_	_	 * )	_	
9	t1131_000	wilt	NA	wild	Akk.Sg	(Frag (NX * )	_	
10	t1132_000	und	KON	unte	_	 *	_	
11	t1133_000	zam	NA	zam	Akk.Sg	(NX * )	_	
12	t1134_000	-	$_	_	_	 * )	_	
13	t1135_000	und	KON	unte	_	(Frag *	_	
14	t1136_000	swaz	PG	swër	Neut.Nom.Sg.st	(PreF (NX *	_	
15	t1137_000	an	APPR	ane	_	(PPX *	_	
16	t1138_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
17	t1139_000	market	NA	market	Akk.Sg	 * ) ) ) )	_	
18	t1140_000	gehoert	VVFIN	ge-hoèren	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t1141_000	under	APPR	unter	_	(MF (PPX *	_	
20	t1142_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
21	t1143_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
22	t1144_000	buoze	NA	buoze	Dat.Sg	 * ) ) )	_	
23	t1145_000	-	$_	_	_	 * )	_	
24	t1146_000	von	APPR	von	_	(Frag (PPX *	_	
25	t1147_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
26	t1148_000	pfunde	NA	pfunt	Dat.Sg	 * ) )	_	
27	t1149_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(NX *	_	
28	t1150_000	schillinge	NA	schilling	Akk.Pl	 * )	_	
29	t1151_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1152_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1153_000	ouch	AVD	ouch	_	(PreF *	_	
3	t1154_000	vore	APPR	vor(e)	_	(PPX *	_	
4	t1155_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
5	t1156_000	glocken	NA	glocke	Dat.Sg	 * ) ) )	_	
6	t1157_000	koufet	VVFIN	koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t1158_000	-	$_	_	_	 * )	_	
8	t1159_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
9	t1160_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
10	t1161_000	umbe	APPR	umbe	_	(MF (PPX *	_	
11	t1162_000	ein	CARDA	èin	Masc.Akk.Sg.0	(NX *	_	
12	t1163_000	schillinc	NA	schilling	Akk.Sg	 * ) ) )	_	
13	t1164_000	-	$_	_	_	 *	_	
14	t1165_000	ader	KON	oder	_	(Frag *	_	
15	t1166_000	umbe	APPR	umbe	_	(PPX *	_	
16	t1167_000	sehs	CARDA	sëhs	Masc.Akk.Pl.0	(NX *	_	
17	t1168_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
18	t1169_000	-	$_	_	_	 * ) )	_	
19	t1170_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
20	t1171_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t1172_000	zuo	APPR	ze	_	(MF (PPX *	_	
22	t1173_000	buoze	NA	buoze	Dat.Sg	(NX * ) ) )	_	
23	t1174_000	-	$_	_	_	 *	_	
24	t1175_000	ein	CARDA	èin	Masc.Akk.Sg.0	(Frag (NX *	_	
25	t1176_000	schillinc	NA	schilling	Akk.Sg	 *	_	
26	t1177_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
27	t1178_000	-	$_	_	_	 * )	_	
28	t1179_000	als	KO*	all-sô	_	(Frag *	_	
29	t1180_000	dicke	AVD	dicke	_	(PreF * )	_	
30	t1181_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
31	t1182_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
32	t1183_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
33	t1184_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1185_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1186_000	trucken	ADJA	trucken	Pos.*.Dat.Pl.0	(NX *	_	
3	t1187_000	vischen	NA	visch	Dat.Pl	 * ) )	_	
4	t1188_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1189_000	trucken	ADJA	trucken	Pos.Masc.Nom.Pl.0	(S (Frag (NX *	_	
2	t1190_000	vische	NA	visch	Nom.Pl	 * )	_	
3	t1191_000	-	$_	_	_	 * )	_	
4	t1192_000	als	KO*	all-sô	_	(Frag *	_	
5	t1193_000	von	APPR	von	_	(PPX *	_	
6	t1194_000	alter	NA	alter	Dat.Sg	(NX * ) )	_	
7	t1195_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX *	_	
8	t1196_000	gewesen	VAPP	wësen	_	 * )	_	
9	t1197_000	-	$_	_	_	 * )	_	
10	t1198_000	die	DDS	dër	Masc.Nom.Pl	(Cl (PreF (NX * ) )	_	
11	t1199_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
12	t1200_000	drî	CARDA	drî	Masc.Akk.Pl.0	(MF (NX *	_	
13	t1201_000	tage	NA	tag	Akk.Pl	 * ) )	_	
14	t1202_000	stên	VVINF	stân	_	(RB (VX * ) )	_	
15	t1203_000	âne	APPR	âne	_	(PostF (PPX *	_	
16	t1204_000	vürekouf	NA	vür(e)-kouf	Akk.Sg	(NX * ) ) )	_	
17	t1205_000	-	$_	_	_	 *	_	
18	t1206_000	under	APPR	unter	_	(Frag *	_	
19	t1207_000	der	DDART	dër	Fem.Dat.Sg	 *	_	
20	t1208_000	vore	PTKVZ	vor(e)/+nènnen	_	 *	_	
21	t1208_001	genanten	ADJA	nènnen/vor(e)+	Pos.Fem.Dat.Sg.wk	(NX *	_	
22	t1209_000	buoze	NA	buoze	Dat.Sg	 * )	_	
23	t1210_000	-	$_	_	_	 * )	_	
24	t1211_000	von	APPR	von	_	(Frag (PPX *	_	
25	t1212_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
26	t1213_000	pfunde	NA	pfunt	Dat.Sg	 * ) )	_	
27	t1214_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(NX *	_	
28	t1215_000	schillinge	NA	schilling	Akk.Pl	 * )	_	
29	t1216_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1217_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1218_000	aller	DIA	all	*.Gen.Pl.st	(NX *	_	
3	t1219_000	slahte	NA	slaht	Gen.Pl	 * ) )	_	
4	t1220_000	vischen	NA	visch	Dat.Pl	(NX * )	_	
5	t1221_000	-	$_	_	_	 * )	_	
6	t1222_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1223_000	aller	DIA	all	*.Gen.Pl.st	(S (Frag (NX *	_	
2	t1223_001	slahte	NA	slaht	Gen.Pl	 * )	_	
3	t1224_000	vische	NA	visch	Nom.Pl	(NX * )	_	
4	t1225_000	an	APPR	ane	_	 *	_	
5	t1226_000	dem	DDART	dër	Masc.Dat.Sg	 *	_	
6	t1227_000	Mein	_	Mèin	Dat.Sg	(PreF * )	_	
7	t1228_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
8	t1229_000	âne	APPR	âne	_	(MF (PPX *	_	
9	t1230_000	vürekouf	NA	vür(e)-kouf	Akk.Sg	(NX * ) )	_	
10	t1231_000	sîn	VAINF	sîn	_	(VX * )	_	
11	t1232_000	ûf	APPR	ûf	_	(PPX *	_	
12	t1233_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
13	t1234_000	glocken	NA	glocke	Akk.Sg	 * ) ) )	_	
14	t1235_000	-	$_	_	_	 * )	_	
15	t1236_000	under	APPR	unter	_	(Frag (PPX *	_	
16	t1237_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
17	t1238_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
18	t1239_000	buoze	NA	buoze	Dat.Sg	 * ) )	_	
19	t1240_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1241_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1242_000	krebezen	NA	krëbezz	Dat.Pl	(NX * ) )	_	
3	t1243_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1244_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1245_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t1246_000	ouch	AVD	ouch	_	(MF *	_	
4	t1247_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
5	t1248_000	kein	DIA	kèin	Masc.Akk.Pl.0	(NX *	_	
6	t1249_000	krebeze	NA	krëbezz	Akk.Pl	 * ) )	_	
7	t1250_000	vürkoufen	VVINF	vür-koufen	_	(RB (VX * ) )	_	
8	t1251_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1252_000	swelich	DGA	swèl(i)ch	Masc.Nom.Sg.0	(S (Frag (NX *	_	
2	t1253_000	vischær	NA	vischære	Nom.Sg	 * )	_	
3	t1254_000	krebeze	NA	krëbezz	Akk.Pl	(PreF (NX * ) )	_	
4	t1255_000	væhet	VVFIN	vâhen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t1256_000	-	$_	_	_	 * )	_	
6	t1257_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t1258_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t1259_000	sie	PPER	ër	Masc.Akk.Pl.3	(MF (NX * )	_	
9	t1260_000	an	APPR	ane	_	 *	_	
10	t1261_000	dem	DDART	dër	Masc.Dat.Sg	 *	_	
11	t1262_000	Mein	_	Mèin	Dat.Sg	 * )	_	
12	t1263_000	verkoufen	VVINF	ver-koufen	_	(RB (VX * ) )	_	
13	t1264_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1265_000	væhet	VVFIN	vâhen	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t1266_000	si	PPER	ër	Masc.Akk.Pl.3	(MF (NX * )	_	
3	t1267_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
4	t1268_000	ûzwart	ADJA	ûz-wërt	Pos.Masc.Nom.Sg.0	 *	_	
5	t1269_000	man	NA	mann	Nom.Sg	 * ) ) )	_	
6	t1270_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t1271_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t1272_000	sie	PPER	ër	Masc.Akk.Pl.3	(MF (NX * ) )	_	
9	t1273_000	verkoufen	VVINF	ver-koufen	_	(RB (VX * ) )	_	
10	t1274_000	vore	APPR	vor(e)	_	(PostF (PPX *	_	
11	t1275_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
12	t1276_000	gademen	NA	gadem	Dat.Pl	 * ) )	_	
13	t1277_000	selber	DDS	sëlb	Masc.Nom.Sg.st	(NX * ) )	_	
14	t1278_000	-	$_	_	_	 *	_	
15	t1279_000	und	KON	unte	_	(Frag *	_	
16	t1280_000	anders	DIS	ander	Masc,Neut.Gen.Sg.st	(NX * )	_	
17	t1281_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
18	t1282_000	-	$_	_	_	 * ) )	_	
19	t1283_000	und	KON	unte	_	(Frag *	_	
20	t1284_000	weder	KO*	wëder	_	 *	_	
21	t1285_000	wîp	NA	wîb	Akk.Sg	(NX * )	_	
22	t1286_000	noch	KON	noh	_	 *	_	
23	t1287_000	meit	NA	maged	Akk.Sg	(NX * )	_	
24	t1288_000	noch	KON	noh	_	 *	_	
25	t1289_000	kneht	NA	knëht	Akk.Sg	(NX * )	_	
26	t1290_000	dâr	PAVD	dâr/+über(e)	_	(VX *	_	
27	t1291_000	über	PAVAP	über(e)/dâr+	_	 *	_	
28	t1292_000	setzen	VVINF	sètzen	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1293_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1294_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t1295_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t1296_000	-	$_	_	_	 * )	_	
5	t1297_000	und	KON	unte	_	(Frag *	_	
6	t1298_000	boese	ADJA	boèse	Pos.Masc.Akk.Pl.st	 *	_	
7	t1299_000	-	$_	_	_	 * )	_	
8	t1300_000	oder	KON	oder	_	(Frag *	_	
9	t1301_000	vûle	ADJA	vûl	Pos.Masc.Akk.Pl.st	(NX *	_	
10	t1302_000	krebeze	NA	krëbezz	Akk.Pl	 * )	_	
11	t1303_000	veil	ADJD	vèil(e)	Pos....0	(PreF * )	_	
12	t1304_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t1305_000	-	$_	_	_	 * )	_	
14	t1306_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
15	t1307_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t1308_000	einen	CARDA	èin	Masc.Akk.Sg.st	(MF (NX *	_	
17	t1309_000	schillinc	NA	schilling	Akk.Sg	 *	_	
18	t1310_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
19	t1311_000	-	$_	_	_	 *	_	
20	t1312_000	als	KO*	all-sô	_	(Frag *	_	
21	t1313_000	dicke	AVD	dicke	_	(PreF * )	_	
22	t1314_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
23	t1315_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
24	t1316_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
25	t1317_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1318_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1319_000	habern	NA	haber(e)	Dat.Sg	(NX * ) )	_	
3	t1320_000	-	$_	_	_	 * )	_	
4	t1321_000	höuwe	NA	höuwe	Dat.Sg	(Frag (NX * )	_	
5	t1322_000	-	$_	_	_	 * )	_	
6	t1323_000	und	KON	unte	_	(Frag *	_	
7	t1324_000	grase	NA	gras	Dat.Sg	(NX * )	_	
8	t1325_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1326_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1327_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t1328_000	ouch	AVD	ouch	_	(MF *	_	
4	t1329_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
5	t1330_000	habern	NA	haber(e)	Akk.Sg	(NX * ) )	_	
6	t1331_000	-	$_	_	_	 *	_	
7	t1332_000	höuwe	NA	höuwe	Akk.Sg	(Frag (NX * )	_	
8	t1333_000	-	$_	_	_	 * )	_	
9	t1334_000	und	KON	unte	_	(Frag *	_	
10	t1335_000	gras	NA	gras	Akk.Sg	(NX * )	_	
11	t1336_000	-	$_	_	_	 * ) )	_	
12	t1337_000	vürkoufen	VVINF	vür-koufen	_	(Frag (VX * )	_	
13	t1338_000	-	$_	_	_	 * )	_	
14	t1339_000	under	APPR	unter	_	(Frag (PPX *	_	
15	t1340_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
16	t1341_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
17	t1342_000	buoze	NA	buoze	Dat.Sg	 *	_	
18	t1343_000	von	APPR	von	_	(PPX *	_	
19	t1343_001	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
20	t1344_000	pfunde	NA	pfunt	Dat.Sg	 * ) ) ) )	_	
21	t1345_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(NX *	_	
22	t1346_000	schillinge	NA	schilling	Akk.Pl	 * )	_	
23	t1347_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1348_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1349_000	aller	DIA	all	*.Gen.Pl.st	(NX *	_	
3	t1349_001	leie	NA	lèie	Gen.Pl	 * ) )	_	
4	t1350_000	obeze	NA	obezz	Dat.Sg	(NX * )	_	
5	t1351_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1352_000	umbe	APPR	umbe	_	(S (Frag (PPX *	_	
2	t1353_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
3	t1354_000	vürekouf	NA	vür(e)-kouf	Akk.Sg	 * ) )	_	
4	t1355_000	-	$_	_	_	 * )	_	
5	t1356_000	von	APPR	von	_	(Frag (PPX *	_	
6	t1357_000	aller	DIA	all	*.Gen.Pl.st	(NX *	_	
7	t1357_001	leie	NA	lèie	Gen.Pl	 * ) )	_	
8	t1358_000	obeze	NA	obezz	Dat.Sg	(NX * )	_	
9	t1359_000	-	$_	_	_	 * )	_	
10	t1360_000	under	APPR	unter	_	(Frag (PPX *	_	
11	t1361_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
12	t1362_000	buoze	NA	buoze	Dat.Sg	 *	_	
13	t1363_000	von	APPR	von	_	(PPX *	_	
14	t1363_001	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
15	t1364_000	pfunde	NA	pfunt	Dat.Sg	 * ) ) ) )	_	
16	t1365_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(NX *	_	
17	t1366_000	schillinge	NA	schilling	Akk.Pl	 * )	_	
18	t1367_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1368_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1369_000	ouch	AVD	ouch	_	(PreF *	_	
3	t1370_000	vore	APPR	vor(e)	_	(PPX *	_	
4	t1371_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
5	t1372_000	glocken	NA	glocke	Dat.Sg	 * ) ) )	_	
6	t1373_000	koufet	VVFIN	koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t1374_000	-	$_	_	_	 * )	_	
8	t1375_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
9	t1376_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
10	t1377_000	umbe	APPR	umbe	_	(MF (PPX *	_	
11	t1378_000	ein	CARDA	èin	Masc.Akk.Sg.0	(NX *	_	
12	t1379_000	schillinc	NA	schilling	Akk.Sg	 * ) ) )	_	
13	t1380_000	-	$_	_	_	 *	_	
14	t1381_000	oder	KON	oder	_	(Frag *	_	
15	t1382_000	umbe	APPR	umbe	_	(PPX *	_	
16	t1383_000	sehs	CARDA	sëhs	Masc.Akk.Pl.0	(NX *	_	
17	t1384_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
18	t1385_000	-	$_	_	_	 * ) )	_	
19	t1386_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
20	t1387_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t1388_000	ein	CARDA	èin	Masc.Akk.Sg.0	(MF (NX *	_	
22	t1389_000	schillinc	NA	schilling	Akk.Sg	 * ) )	_	
23	t1390_000	-	$_	_	_	 *	_	
24	t1391_000	zuo	APPR	ze	_	(Frag (PPX *	_	
25	t1392_000	bezzerunge	NA	bèzzerunge	Dat.Sg	(NX * ) )	_	
26	t1393_000	-	$_	_	_	 * )	_	
27	t1394_000	als	KO*	all-sô	_	(Frag *	_	
28	t1395_000	dicke	AVD	dicke	_	(PreF * )	_	
29	t1396_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
30	t1397_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
31	t1398_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
32	t1399_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1400_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1401_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t1402_000	wirten	NA	wirt	Dat.Pl	 * ) )	_	
4	t1403_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1404_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1405_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t1406_000	ouch	AVD	ouch	_	(MF *	_	
4	t1407_000	kein	DIA	kèin	Masc.Nom.Sg.0	(NX *	_	
5	t1408_000	wirt	NA	wirt	Nom.Sg	 * ) )	_	
6	t1409_000	-	$_	_	_	 *	_	
7	t1410_000	der	DRELS	dër	Masc.Nom.Sg	(MF (NX (Cl (LB (NX *	_	
8	t1411_000	gastgebe	NA	gast-gëbe	Nom.Sg	 * ) )	_	
9	t1412_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(RB (VX (VX * )	_	
10	t1413_000	oder	KON	oder	_	 *	_	
11	t1414_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX * ) ) )	_	
12	t1415_000	nihtez	NA	niht	Akk.Sg	(PostF (NX * )	_	
13	t1416_000	koufen	VVINF	koufen	_	(VX * ) )	_	
14	t1417_000	-	$_	_	_	 *	_	
15	t1418_000	daz	DRELS	dër	Neut.Nom.Sg	(PostF (Frag (NX *	_	
16	t1419_000	in	APPR	in	_	(PPX *	_	
17	t1420_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	(NX *	_	
18	t1421_000	hûs	NA	hûs	Akk.Sg	 * ) ) )	_	
19	t1422_000	-	$_	_	_	 * ) ) ) ) )	_	
20	t1423_000	oder	KON	oder	_	(Frag *	_	
21	t1424_000	in	APPR	in	_	(PPX *	_	
22	t1425_000	keines	DIA	kèin	Masc.Gen.Sg.st	(NX *	_	
23	t1426_000	andern	DIA	ander	Masc.Gen.Sg.wk	 *	_	
24	t1427_000	gastgeben	NA	gast-gëbe	Gen.Sg	 * ) )	_	
25	t1428_000	hûs	NA	hûs	Akk.Sg	(PreF (NX * ) )	_	
26	t1429_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
27	t1430_000	-	$_	_	_	 * ) )	_	
28	t1431_000	noch	KON	noh	_	(Frag *	_	
29	t1432_000	dâr	PAVD	dâr/+ane	_	 *	_	
30	t1433_000	an	PAVAP	ane/dâr+	_	 *	_	
31	t1434_000	keiner	DIA	kèin	*.Gen.Pl.st	(NX *	_	
32	t1435_000	leie	NA	lèie	Gen.Pl	 * )	_	
33	t1436_000	geselleschaft	NA	ge-sèlle-schaft	Akk.Sg	(NX * )	_	
34	t1437_000	haben	VAINF	haben	_	(VX * )	_	
35	t1438_000	noch	KON	noh	_	 *	_	
36	t1439_000	kein	DIA	kèin	Neut.Nom.Sg.0	(NX *	_	
37	t1440_000	sîn	DPOSA	sîn	Neut.Nom.Sg.0	 *	_	
38	t1441_000	gesinde	NA	ge-sinde	Nom.Sg	 * )	_	
39	t1442_000	-	$_	_	_	 * )	_	
40	t1443_000	noch	KON	noh	_	(Frag *	_	
41	t1444_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
42	t1445_000	von	APPR	von	_	(PPX *	_	
43	t1446_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
44	t1447_000	wegen	NA	wëg	Dat.Pl	 * ) )	_	
45	t1448_000	-	$_	_	_	 * )	_	
46	t1449_000	âne	APPR	âne	_	(PPX *	_	
47	t1450_000	allez	DIA	all	Neut.Akk.Sg.st	(NX *	_	
48	t1451_000	geværde	NA	ge-vær(e)de	Akk.Sg	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1452_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1453_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t1454_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t1455_000	-	$_	_	_	 * )	_	
5	t1456_000	als	KO*	all-sô	_	(Frag *	_	
6	t1457_000	dicke	AVD	dicke	_	(PreF * )	_	
7	t1458_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
8	t1459_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
9	t1460_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t1461_000	-	$_	_	_	 * )	_	
11	t1462_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
12	t1463_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t1464_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
14	t1465_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(PostF (NX *	_	
15	t1466_000	schillinge	NA	schilling	Akk.Pl	 *	_	
16	t1467_000	von	APPR	von	_	(PPX *	_	
17	t1468_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
18	t1469_000	pfunde	NA	pfunt	Dat.Sg	 * ) ) ) )	_	
19	t1470_000	-	$_	_	_	 *	_	
20	t1471_000	als	KO*	all-sô	_	(Frag *	_	
21	t1472_000	sich	PRF	sich	Akk	(PreF (NX * ) )	_	
22	t1473_000	gebüret	VVFIN	ge-bür(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
23	t1474_000	-	$_	_	_	 * ) )	_	
24	t1475_000	und	KON	unte	_	(Frag *	_	
25	t1476_000	ein	CARDA	èin	Masc.Akk.Sg.0	(NX *	_	
26	t1477_000	mânden	NA	mând(e)	Akk.Sg	 * )	_	
27	t1478_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
28	t1479_000	stat	NA	stat	Akk.Sg	 * )	_	
29	t1480_000	rûmen	VVINF	rûmen	_	(VX * )	_	
30	t1481_000	über	APPR	über	_	(PPX *	_	
31	t1482_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
32	t1483_000	mîle	NA	mîle	Akk.Pl	 * ) )	_	
33	t1484_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1485_000	ouch	AVD	ouch	_	(S (Frag *	_	
2	t1486_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX *	_	
3	t1487_000	verboten	VVPP	ver-bièten	_	 * )	_	
4	t1488_000	-	$_	_	_	 *	_	
5	t1489_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
6	t1490_000	dechein	DIA	deh-èin	Masc.Nom.Sg.0	(MF (NX *	_	
7	t1491_000	gastgebe	NA	gast-gëbe	Nom.Sg	 * )	_	
8	t1492_000	-	$_	_	_	 *	_	
9	t1493_000	keinen	DIA	kèin	Masc.Akk.Sg.st	(NX *	_	
10	t1494_000	wîn	NA	wîn	Akk.Sg	 * ) )	_	
11	t1495_000	koufe	VVFIN	koufen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
12	t1496_000	-	$_	_	_	 * ) )	_	
13	t1497_000	noch	KON	noh	_	(Frag *	_	
14	t1498_000	wider	AVD	wider(e)	_	(PreF * )	_	
15	t1499_000	verkoufe	VVFIN	ver-koufen	Subj.Pres.Sg.3	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1500_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1501_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t1502_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t1503_000	-	$_	_	_	 * )	_	
5	t1504_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t1505_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t1506_000	ie	AVD	iè	_	(MF *	_	
8	t1507_000	von	APPR	von	_	(PPX *	_	
9	t1508_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
10	t1509_000	vuoder	NA	vuoder	Dat.Sg	 * ) )	_	
11	t1510_000	ein	CARDA	èin	Neut.Akk.Sg.0	(NX *	_	
12	t1511_000	pfunt	NA	pfunt	Akk.Sg	 *	_	
13	t1512_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
14	t1513_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1514_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1515_000	hindernisse	NA	hinternisse	Dat.Sg	(NX *	_	
3	t1516_000	veiles	ADJA	vèil(e)	Pos.Masc.Gen.Sg.st	(NX *	_	
4	t1517_000	koufes	NA	kouf	Gen.Sg	 * ) ) )	_	
5	t1518_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1519_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1520_000	den	DDART	dër	Masc.Akk.Sg	(PreF (NX *	_	
3	t1521_000	andern	DIS	ander	Masc.Akk.Sg.st	 * ) )	_	
4	t1522_000	irret	VVFIN	irren	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t1523_000	an	APPR	ane	_	(MF (PPX *	_	
6	t1524_000	sîneme	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
7	t1525_000	koufe	NA	kouf	Dat.Sg	 * ) ) )	_	
8	t1526_000	-	$_	_	_	 *	_	
9	t1527_000	den	DRELS	dër	Masc.Akk.Sg	(Cl (LB (NX * ) )	_	
10	t1528_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
11	t1529_000	in	APPR	in	_	(PPX *	_	
12	t1530_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
13	t1531_000	stat	NA	stat	Akk.Sg	 * ) ) ) )	_	
14	t1532_000	vüert	VVFIN	vüèren	Ind.Pres.Sg.3	(RB (VX * ) )	_	
15	t1533_000	-	$_	_	_	 * ) )	_	
16	t1534_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
17	t1535_000	trîbet	VVFIN	trîben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
18	t1536_000	-	$_	_	_	 * )	_	
19	t1537_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
20	t1538_000	bringet	VVFIN	bringen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t1539_000	-	$_	_	_	 * )	_	
22	t1540_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
23	t1541_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
24	t1542_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
25	t1543_000	zuo	APPR	ze	_	(PostF (PPX *	_	
26	t1544_000	buoze	NA	buoze	Dat.Sg	(NX * ) )	_	
27	t1545_000	zehen	CARDA	zëhen	Masc.Akk.Pl.0	(NX *	_	
28	t1546_000	schillinge	NA	schilling	Akk.Pl	 *	_	
29	t1547_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
30	t1548_000	-	$_	_	_	 *	_	
31	t1549_000	als	KO*	all-sô	_	(Frag *	_	
32	t1550_000	dicke	AVD	dicke	_	(PreF * )	_	
33	t1551_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
34	t1552_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
35	t1553_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
36	t1554_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1555_000	wenne	AVW	wanne	_	(S (Frag *	_	
2	t1556_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
3	t1557_000	koufen	VVINF	koufen	_	(PreF (VX * ) )	_	
4	t1558_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t1559_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1560_000	nâch	APPR	nâh	_	(S (Frag (PPX *	_	
2	t1561_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
3	t1562_000	glocken	NA	glocke	Dat.Sg	 * ) )	_	
4	t1563_000	-	$_	_	_	 * )	_	
5	t1564_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
6	t1565_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
7	t1566_000	brüggen	NA	brügge	Dat.Sg	 * ) )	_	
8	t1567_000	-	$_	_	_	 * )	_	
9	t1568_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
10	t1569_000	ieweder	DIA	iè-wëder	Masc.Nom.Sg.0	(MF (NX *	_	
11	t1569_001	man	NA	mann	Nom.Sg	 * ) )	_	
12	t1570_000	koufen	VVINF	koufen	_	(RB (VX * ) )	_	
13	t1571_000	-	$_	_	_	 * )	_	
14	t1572_000	als	KO*	all-sô	_	(Frag *	_	
15	t1573_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX *	_	
16	t1574_000	von	APPR	von	_	(PPX *	_	
17	t1575_000	alter	NA	alter	Dat.Sg	(NX * ) ) )	_	
18	t1576_000	her	AVD	hër(e)	_	 *	_	
19	t1577_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX *	_	
20	t1578_000	kumen	VVPP	komen	_	 * )	_	
21	t1579_000	ze	APPR	ze	_	(PPX *	_	
22	t1580_000	rehte	NA	rëht	Dat.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1581_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t1582_000	dâ	PAVD	dâr/+vor(e)	_	(LB (VX *	_	
3	t1583_000	vore	PAVAP	vor(e)/dâr+	_	 *	_	
4	t1584_000	koufet	VVFIN	koufen	Ind.Pres.Sg.3	 * ) )	_	
5	t1585_000	-	$_	_	_	 * )	_	
6	t1586_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t1587_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t1588_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
9	t1589_000	buoze	NA	buoze	Akk.Sg	 * ) )	_	
10	t1590_000	gelten	VVINF	gëlten	_	(RB (VX * ) )	_	
11	t1591_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1592_000	swaz	PG	swër	Neut.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1593_000	aber	AVD	aber	_	(PreF *	_	
3	t1594_000	her	AVD	hër(e)	_	 * )	_	
4	t1595_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t1596_000	nâch	APPR	nâh	_	(MF (PPX *	_	
6	t1597_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
7	t1598_000	glocken	NA	glocke	Dat.Sg	 * ) ) )	_	
8	t1599_000	-	$_	_	_	 * )	_	
9	t1600_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t1601_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t1602_000	stên	VVINF	stân	_	(RB (VX * ) )	_	
12	t1603_000	biz	AVD	biz	_	(PostF *	_	
13	t1604_000	ûf	APPR	ûf	_	(PPX *	_	
14	t1605_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
15	t1606_000	andern	DIA	ander	Masc.Akk.Sg.st	 *	_	
16	t1607_000	tac	NA	tag	Akk.Sg	 *	_	
17	t1608_000	ze	APPR	ze	_	(PPX *	_	
18	t1608_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
19	t1608_002	glocken	NA	glocke	Dat.Sg	 * ) ) ) ) )	_	
20	t1609_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1610_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1611_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
3	t1612_000	wînglocken	NA	wîn-glocke	Dat.Sg	 * ) )	_	
4	t1613_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1614_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t1615_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t1616_000	ouch	AVD	ouch	_	(MF *	_	
4	t1617_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
5	t1618_000	wînglocken	NA	wîn-glocke	Akk.Sg	 * )	_	
6	t1619_000	zwirent	AVD	zwir(e)n(t)	_	 * )	_	
7	t1620_000	liuten	VVINF	liuten	_	(RB (VX * ) )	_	
8	t1621_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1622_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1623_000	dâr	PAVD	dâr/+nâh	_	(VX *	_	
3	t1624_000	nâch	PAVAP	nâh/dâr+	_	 * )	_	
4	t1625_000	begriffen	VVPP	be-grîfen	_	(VX *	_	
5	t1626_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	 * )	_	
6	t1627_000	âne	APPR	âne	_	(PPX *	_	
7	t1628_000	lieht	NA	lièht	Akk.Sg	(NX * ) ) )	_	
8	t1629_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
9	t1630_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
10	t1631_000	ein	DIART	èin	Masc.Nom.Sg.0	 * )	_	
11	t1632_000	unversprochen	ADJA	un-ver-sprochen	Pos.Masc.Nom.Sg.0	(NX *	_	
12	t1633_000	man	NA	mann	Nom.Sg	 * ) )	_	
13	t1634_000	-	$_	_	_	 * )	_	
14	t1635_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
15	t1636_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t1637_000	man	PI	man	*.Nom.Sg.st	(MF (NX *	_	
17	t1638_000	ûf	APPR	ûf	_	(PPX *	_	
18	t1639_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
19	t1640_000	sal	NA	sal	Akk.Sg	 * ) ) ) )	_	
20	t1641_000	vüeren	VVINF	vüèren	_	(RB (VX * ) )	_	
21	t1642_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1643_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t1644_000	aber	AVD	aber	_	(MF *	_	
3	t1645_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
4	t1646_000	versprochen	ADJA	ver-sprëchen	Pos.Masc.Nom.Sg.0	 *	_	
5	t1647_000	man	NA	mann	Nom.Sg	 * ) )	_	
6	t1648_000	begriffen	VVPP	be-grîfen	_	(RB (VX * ) )	_	
7	t1649_000	-	$_	_	_	 * )	_	
8	t1650_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
9	t1651_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t1652_000	man	PI	man	*.Nom.Sg.st	(MF (NX *	_	
11	t1653_000	ûf	APPR	ûf	_	(PPX *	_	
12	t1654_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
13	t1655_000	stokhûs	NA	stock-hûs	Akk.Sg	 * ) ) ) )	_	
14	t1656_000	legen	VVINF	lègen	_	(RB (VX * ) )	_	
15	t1657_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1658_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1659_000	ouch	AVD	ouch	_	(PreF * )	_	
3	t1660_000	ein	DIART	èin	Masc.Akk.Sg.0	(NX *	_	
4	t1661_000	wîn	NA	wîn	Akk.Sg	 * )	_	
5	t1662_000	veil	ADJD	vèil(e)	Pos....0	(PreF * )	_	
6	t1663_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t1664_000	nâch	APPR	nâh	_	(MF (PPX *	_	
8	t1665_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
9	t1666_000	jungesten	ADJA	jung	Pos.Fem.Dat.Sg.wk	 *	_	
10	t1667_000	wînglocken	NA	wîn-glocke	Dat.Sg	 * ) ) )	_	
11	t1668_000	-	$_	_	_	 * )	_	
12	t1669_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t1670_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t1671_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(MF (NX *	_	
15	t1672_000	pfenninge	NA	pfènning	Akk.Pl	 *	_	
16	t1673_000	zuo	APPR	ze	_	(PPX *	_	
17	t1674_000	bezzerunge	NA	bèzzerunge	Dat.Sg	(NX * ) ) ) )	_	
18	t1675_000	-	$_	_	_	 *	_	
19	t1676_000	als	KO*	all-sô	_	(Frag *	_	
20	t1677_000	dicke	AVD	dicke	_	(PreF * )	_	
21	t1678_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
22	t1679_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
23	t1680_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
24	t1681_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1682_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1683_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t1684_000	vietrîbærn	NA	vihe-trîbære	Dat.Pl	 * ) )	_	
4	t1685_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1686_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t1687_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t1688_000	ouch	AVD	ouch	_	(MF *	_	
4	t1689_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
5	t1690_000	keiner	DIA	kèin	Fem.Gen.Sg.st	(NX *	_	
6	t1690_001	slahte	NA	slaht	Gen.Sg	 * )	_	
7	t1691_000	vihe	NA	vihe	Akk.Sg	(NX * ) )	_	
8	t1692_000	trîben	VVINF	trîben	_	(RB (VX (VX * )	_	
9	t1693_000	oder	KON	oder	_	 *	_	
10	t1694_000	bachen	VVINF	bachen	_	(VX * ) ) )	_	
11	t1695_000	-	$_	_	_	 *	_	
12	t1696_000	dürre	ADJA	dürre	Pos.Neut.Akk.Sg.wk	(Frag (NX *	_	
13	t1697_000	vleisch	NA	vlèisch	Akk.Sg	 * )	_	
14	t1698_000	-	$_	_	_	 * ) )	_	
15	t1699_000	oder	KON	oder	_	(Frag *	_	
16	t1700_000	vische	NA	visch	Akk.Pl	(NX * )	_	
17	t1701_000	vüeren	VVINF	vüèren	_	(VX * )	_	
18	t1702_000	von	APPR	von	_	(PPX *	_	
19	t1703_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
20	t1704_000	stat	NA	stat	Dat.Sg	 * ) )	_	
21	t1705_000	oder	KON	oder	_	 *	_	
22	t1706_000	von	APPR	von	_	(PPX *	_	
23	t1707_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
24	t1708_000	lande	NA	lant	Dat.Sg	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1709_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t1710_000	aber	AVD	aber	_	(MF *	_	
3	t1711_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
4	t1712_000	selben	DDS	sëlb	Masc.Gen.Sg.wk	 * )	_	
5	t1713_000	dâr	PAVD	dâr/+über(e)	_	 *	_	
6	t1714_000	über	PAVAP	über(e)/dâr+	_	 *	_	
7	t1715_000	iemanne	DIA	iè-mann	*.Dat.Sg.st	 *	_	
8	t1716_000	iht	NA	iht	Nom.Sg	(NX * ) )	_	
9	t1717_000	genomen	VVPP	nëmen	_	(RB (VX * ) )	_	
10	t1718_000	-	$_	_	_	 * )	_	
11	t1719_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
12	t1720_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t1721_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
14	t1722_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
15	t1723_000	schaden	NA	schade	Akk.Sg	 * )	_	
16	t1724_000	haben	VAINF	haben	_	(VX * ) )	_	
17	t1725_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1726_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1727_000	geroubetem	ADJA	rouben	Pos.Neut.Dat.Sg.st	(NX *	_	
3	t1728_000	vihe	NA	vihe	Dat.Sg	 * ) )	_	
4	t1729_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1730_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1731_000	geroubet	ADJA	rouben	Pos.Neut.Akk.Sg.0	(NX *	_	
3	t1732_000	vihe	NA	vihe	Akk.Sg	 * )	_	
4	t1733_000	wizzentlîchen	AVD	wizzen(t)-lîche	_	(PreF * )	_	
5	t1734_000	koufet	VVFIN	koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t1735_000	-	$_	_	_	 * )	_	
7	t1736_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t1737_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t1738_000	ie	AVD	iè	_	(MF *	_	
10	t1739_000	von	APPR	von	_	(PPX *	_	
11	t1740_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
12	t1741_000	kuowe	NA	kuow	Dat.Sg	 * ) ) )	_	
13	t1742_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
14	t1743_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(PostF (NX *	_	
15	t1744_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
16	t1745_000	-	$_	_	_	 *	_	
17	t1746_000	von	APPR	von	_	(Frag (PPX *	_	
18	t1747_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
19	t1748_000	swîne	NA	swîn	Dat.Sg	 * ) )	_	
20	t1749_000	drî	CARDA	drî	Masc.Akk.Pl.0	(NX *	_	
21	t1750_000	schillinge	NA	schilling	Akk.Pl	 *	_	
22	t1751_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
23	t1752_000	-	$_	_	_	 * )	_	
24	t1753_000	von	APPR	von	_	(Frag (PPX *	_	
25	t1754_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
26	t1755_000	schâfe	NA	schâf	Dat.Sg	 * ) )	_	
27	t1756_000	ein	CARDA	èin	Masc.Akk.Sg.0	(NX *	_	
28	t1757_000	schillinc	NA	schilling	Akk.Sg	 * )	_	
29	t1758_000	-	$_	_	_	 * ) )	_	
30	t1759_000	und	KON	unte	_	(Frag *	_	
31	t1760_000	doch	AVD	doh	_	 *	_	
32	t1761_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
33	t1762_000	halp	ADJA	halb	Pos.Neut.Akk.Sg.0	 *	_	
34	t1763_000	jâr	NA	jâr	Akk.Sg	 * )	_	
35	t1764_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
36	t1765_000	stat	NA	stat	Akk.Sg	 * )	_	
37	t1766_000	rûmen	VVINF	rûmen	_	(VX * )	_	
38	t1767_000	âne	APPR	âne	_	(PPX *	_	
39	t1768_000	genâde	NA	ge-nâde	Akk.Sg	(NX * ) )	_	
40	t1769_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1770_000	von	APPR	von	_	(S (PPX *	_	
2	t1771_000	den	DDS	dër	*.Dat.Pl	(NX * ) )	_	
3	t1772_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX * ) )	_	
4	t1773_000	schadelich	ADJA	schade-lich	Pos.Masc,Neut.Akk.Pl.0	(MF (NX *	_	
5	t1774_000	liute	NA	liut	Akk.Pl	 * ) )	_	
6	t1775_000	halten	VVFIN	halten	*.Pres.Pl.3	(RB (VX * ) )	_	
7	t1776_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1777_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1778_000	ouch	AVD	ouch	_	(PreF *	_	
3	t1779_000	schadelîche	ADJA	schade-lich	Pos.Masc,Neut.Akk.Pl.st	(NX *	_	
4	t1780_000	liute	NA	liut	Akk.Pl	 * ) )	_	
5	t1781_000	heltet	VVFIN	halten	Ind.Pres.Sg.3	(LB (VX (VX * )	_	
6	t1782_000	oder	KON	oder	_	 *	_	
7	t1783_000	heget	VVFIN	hègen	Ind.Pres.Sg.3	(VX * ) ) )	_	
8	t1784_000	-	$_	_	_	 * )	_	
9	t1785_000	oder	KON	oder	_	(Frag *	_	
10	t1786_000	der	DDS	dër	Masc.Nom.Sg	(NX * )	_	
11	t1787_000	sie	PPER	ër	Masc,Neut.Akk.Pl.3	(NX * )	_	
12	t1788_000	samenunge	NA	samenunge	Akk.Sg	(NX * )	_	
13	t1789_000	wizzentlîche	AVD	wizzen(t)-lîche	_	(PreF *	_	
14	t1790_000	in	APPR	in	_	(PPX *	_	
15	t1791_000	sînem	DPOSA	sîn	Neut.Dat.Sg.st	(NX *	_	
16	t1792_000	hûse	NA	hûs	Dat.Sg	 * ) ) )	_	
17	t1793_000	læzet	VVFIN	lâzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
18	t1794_000	haben	VAINF	haben	_	(MF (VX * ) ) )	_	
19	t1795_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
20	t1796_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t1797_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
22	t1798_000	selbe	DDA	sëlb	Neut.Akk.Sg.wk	 *	_	
23	t1799_000	reht	NA	rëht	Akk.Sg	 * )	_	
24	t1800_000	haben	VAINF	haben	_	(VX * ) )	_	
25	t1801_000	daz	DRELS	dër	Neut.Akk.Sg	(PostF (Cl (LB (NX * ) )	_	
26	t1802_000	sie	PPER	ër	Masc,Neut.Nom.Pl.3	(MF (NX * ) )	_	
27	t1803_000	haben	VAFIN	haben	*.Pres.Pl.3	(RB (VX * ) )	_	
28	t1804_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1805_000	von	APPR	von	_	(S (PPX *	_	
2	t1806_000	den	DDS	dër	*.Dat.Pl	(NX *	_	
3	t1807_000	den	DRELS	dër	*.Dat.Pl	(Cl (LB (NX * ) )	_	
4	t1808_000	ire	DPOSA	ir(e)	Fem.Nom.Sg.0	(MF (NX *	_	
5	t1809_000	türe	NA	tür(e)	Nom.Sg	 * ) )	_	
6	t1810_000	gestôzen	VVPP	stôzen	_	(RB (VX *	_	
7	t1811_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	 * ) )	_	
8	t1812_000	-	$_	_	_	 * ) ) )	_	
9	t1813_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1814_000	swem	PG	swër	Masc.Dat.Sg.st	(S (Frag (NX * )	_	
2	t1815_000	sîn	DPOSA	sîn	Fem.Nom.Sg.0	(NX *	_	
3	t1816_000	türe	NA	tür(e)	Nom.Sg	 * )	_	
4	t1817_000	gestôzen	VVPP	stôzen	_	(VX *	_	
5	t1818_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	 * )	_	
6	t1819_000	-	$_	_	_	 * )	_	
7	t1820_000	klaget	VVFIN	klagen	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
8	t1821_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
9	t1822_000	daz	DDS	dër	Neut.Akk.Sg	(NX * )	_	
10	t1823_000	niht	PTKNEG	niht	_	 *	_	
11	t1824_000	in	APPR	in	_	(PPX *	_	
12	t1825_000	drîen	CARDA	drî	*.Dat.Pl.st	(NX *	_	
13	t1826_000	tagen	NA	tag	Dat.Pl	 * ) )	_	
14	t1827_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
15	t1828_000	râte	NA	rât	Dat.Sg	 * ) )	_	
16	t1829_000	-	$_	_	_	 * )	_	
17	t1830_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
18	t1831_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t1832_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
20	t1833_000	stat	NA	stat	Akk.Sg	 * )	_	
21	t1834_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
22	t1835_000	mânden	NA	mând(e)	Akk.Sg	 * ) )	_	
23	t1836_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
24	t1837_000	drî	CARDA	drî	Fem.Akk.Pl.0	(PostF (NX *	_	
25	t1838_000	mîle	NA	mîle	Akk.Pl	 *	_	
26	t1839_000	von	APPR	von	_	(PPX *	_	
27	t1840_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
28	t1841_000	stat	NA	stat	Dat.Sg	 * ) ) ) )	_	
29	t1842_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1843_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1844_000	türe	NA	tür(e)	Gen.Pl	(NX * ) )	_	
3	t1845_000	stôzenne	NA	stôzen	Dat.Sg	(NX * )	_	
4	t1846_000	und	KON	unte	_	 *	_	
5	t1847_000	von	APPR	von	_	(PPX *	_	
6	t1848_000	andern	DIA	ander	*.Dat.Pl.st	(NX *	_	
7	t1849_000	dingen	NA	ding	Dat.Pl	 * ) )	_	
8	t1850_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1851_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1852_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
3	t1853_000	ander	DIS	ander	Masc.0.Dat.Sg.wk	 * )	_	
4	t1854_000	sîn	DPOSA	sîn	Fem.Akk.Sg.0	(NX *	_	
5	t1855_000	türe	NA	tür(e)	Akk.Sg	 * )	_	
6	t1856_000	ûf	PTKVZ	ûf/+stôzen	_	(VX *	_	
7	t1857_000	stoezet	VVFIN	stôzen/ûf+	Ind.Pres.Sg.3	 * )	_	
8	t1858_000	-	$_	_	_	 * )	_	
9	t1859_000	und	KON	unte	_	(Frag *	_	
10	t1860_000	sîn	DPOSA	sîn	Fem.Akk.Sg.0	(NX *	_	
11	t1861_000	kannen	NA	kanne	Akk.Sg	 * )	_	
12	t1862_000	abe	PTKVZ	abe/+brëchen	_	(VX *	_	
13	t1863_000	brichet	VVFIN	brëchen/abe+	Ind.Pres.Sg.3	 * )	_	
14	t1864_000	-	$_	_	_	 * )	_	
15	t1865_000	oder	KON	oder	_	(Frag *	_	
16	t1866_000	ander	DIA	ander	Neut.Akk.Sg.0	(PreF (NX *	_	
17	t1867_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	 *	_	
18	t1868_000	guot	NA	guot	Akk.Sg	 * ) )	_	
19	t1869_000	nimet	VVFIN	nëmen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t1870_000	rouplîche	AVD	roub-lîche	_	(MF * )	_	
21	t1871_000	-	$_	_	_	 * )	_	
22	t1872_000	oder	KON	oder	_	(Frag *	_	
23	t1873_000	dieplîche	AVD	dièb-lîche	_	 *	_	
24	t1874_000	-	$_	_	_	 * )	_	
25	t1875_000	vrevellîche	AVD	vrèvel-lîche	_	(Frag *	_	
26	t1876_000	-	$_	_	_	 * )	_	
27	t1877_000	oder	KON	oder	_	(Frag *	_	
28	t1878_000	mit	APPR	mit	_	(PPX *	_	
29	t1879_000	gewalt	NA	ge-walt	Dat.Sg	(NX * ) )	_	
30	t1880_000	-	$_	_	_	 * )	_	
31	t1881_000	bî	APPR	bî	_	(Frag (PPX *	_	
32	t1882_000	naht	NA	naht	Dat.Sg	(NX * ) )	_	
33	t1883_000	oder	KON	oder	_	 *	_	
34	t1884_000	bî	APPR	bî	_	(PPX *	_	
35	t1885_000	tage	NA	tag	Dat.Sg	(NX *	_	
36	t1886_000	âne	APPR	âne	_	(PPX *	_	
37	t1887_000	ander	DIA	ander	Neut.Akk.Sg.0	(NX *	_	
38	t1888_000	gerihte	NA	ge-riht(e)	Akk.Sg	 * ) ) ) )	_	
39	t1889_000	daz	DRELS	dër	Neut.Nom.Sg	(Cl (LB (NX *	_	
40	t1890_000	über	APPR	über	_	(PPX *	_	
41	t1891_000	in	PPER	ër	Masc.Akk.Sg.3	(NX *	_	
42	t1892_000	zuo	APPR	ze	_	(PPX *	_	
43	t1893_000	rehte	NA	rëht	Dat.Sg	(NX * ) ) ) ) ) )	_	
44	t1894_000	gehoert	VVFIN	ge-hoèren	Ind.Pres.Sg.3	(RB (VX * ) )	_	
45	t1895_000	-	$_	_	_	 * ) )	_	
46	t1896_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
47	t1897_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
48	t1898_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
49	t1899_000	stat	NA	stat	Akk.Sg	 * ) )	_	
50	t1900_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
51	t1901_000	ein	CARDA	èin	Neut.Akk.Sg.0	(PostF (NX *	_	
52	t1902_000	jâr	NA	jâr	Akk.Sg	 *	_	
53	t1903_000	in	APPR	in	_	(PPX *	_	
54	t1904_000	ahte	CARDA	ahte	*.Dat.Pl.0	(NX *	_	
55	t1905_000	tagen	NA	tag	Dat.Pl	 * ) ) ) )	_	
56	t1906_000	-	$_	_	_	 *	_	
57	t1907_000	dâr	PAVD	dâr/+nâh	_	(Frag *	_	
58	t1908_000	nâch	PAVAP	nâh/dâr+	_	 * )	_	
59	t1909_000	sô	KO*	sô	_	(Frag *	_	
60	t1910_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
61	t1911_000	die	DDART	dër	Fem.Akk.Sg	(PreF (NX *	_	
62	t1912_000	geschihte	NA	ge-schiht	Akk.Sg	 * ) )	_	
63	t1913_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
64	t1914_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1915_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1916_000	unvuoge	NA	un-vuoge	Dat.Sg	(NX *	_	
3	t1917_000	mit	APPR	mit	_	(PPX *	_	
4	t1918_000	stechenne	NA	stëchen	Dat.Sg	(NX * ) ) ) )	_	
5	t1919_000	und	KON	unte	_	 *	_	
6	t1920_000	mit	APPR	mit	_	(PPX *	_	
7	t1921_000	slahenne	NA	slahen	Dat.Sg	(NX * ) )	_	
8	t1922_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1923_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t1924_000	ouch	AVD	ouch	_	 *	_	
3	t1925_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
4	t1926_000	swert	NA	swërt	Akk.Sg	 * )	_	
5	t1927_000	oder	KON	oder	_	 *	_	
6	t1928_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
7	t1929_000	mezzer	NA	mèzzer	Akk.Sg	 * )	_	
8	t1930_000	-	$_	_	_	 * )	_	
9	t1931_000	über	APPR	über	_	(Frag (PPX *	_	
10	t1932_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
11	t1933_000	andern	DIS	ander	Masc.Akk.Sg.st	 * ) )	_	
12	t1934_000	vîantlîchen	AVD	vîent-lîche	_	(PreF * )	_	
13	t1935_000	zücket	VVFIN	zücken	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t1936_000	-	$_	_	_	 * )	_	
15	t1937_000	und	KON	unte	_	(Frag *	_	
16	t1938_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
17	t1939_000	dâ	PAVD	dâr/+mit(e)	_	(VX *	_	
18	t1940_000	mit	PAVAP	mit(e)/dâr+	_	 *	_	
19	t1941_000	slahen	VVINF	slahen	_	 * )	_	
20	t1942_000	-	$_	_	_	 * )	_	
21	t1943_000	oder	KON	oder	_	(Frag *	_	
22	t1944_000	stechen	VVINF	stëchen	_	(PreF (VX * ) )	_	
23	t1945_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) ) )	_	
24	t1946_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
25	t1947_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
26	t1948_000	im	PPER	ër	Masc.Dat.Sg.3	(NX * ) )	_	
27	t1949_000	erwert	VVPP	er-wër(e)n	_	(RB (VX * ) )	_	
28	t1950_000	von	APPR	von	_	(PostF *	_	
29	t1951_000	iemanne	DIA	iè-mann	*.Dat.Sg.st	 * )	_	
30	t1952_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
31	t1953_000	dâ	PAVD	dâr/+zuo	_	(RB (VX *	_	
32	t1954_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
33	t1955_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	 * ) )	_	
34	t1956_000	-	$_	_	_	 * ) ) )	_	
35	t1957_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
36	t1958_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
37	t1959_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
38	t1960_000	stat	NA	stat	Akk.Sg	 * ) )	_	
39	t1961_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
40	t1962_000	drîzehen	CARDA	drî-zëhen	Fem.Akk.Pl.0	(PostF (NX *	_	
41	t1963_000	wochen	NA	woche	Akk.Pl	 * ) )	_	
42	t1964_000	-	$_	_	_	 * )	_	
43	t1965_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1966_000	kæme	VVFIN	komen	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t1967_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
3	t1968_000	aber	AVD	aber	_	 *	_	
4	t1969_000	alsô	AVD	all-sô	_	 * )	_	
5	t1970_000	-	$_	_	_	 *	_	
6	t1971_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
7	t1972_000	einer	DIS	èin	Masc.Nom.Sg.st	(MF (NX * )	_	
8	t1973_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
9	t1974_000	swert	NA	swërt	Akk.Sg	 * ) )	_	
10	t1975_000	zückete	VVFIN	zücken	(Subj).Past.Sg.3	(RB (VX * ) )	_	
11	t1976_000	-	$_	_	_	 * ) )	_	
12	t1977_000	oder	KON	oder	_	(Frag *	_	
13	t1978_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
14	t1979_000	mezzer	NA	mèzzer	Akk.Sg	 * )	_	
15	t1980_000	-	$_	_	_	 * )	_	
16	t1981_000	und	KON	unte	_	(Frag *	_	
17	t1982_000	von	APPR	von	_	(PreF (PPX *	_	
18	t1983_000	im	PPER	ër	Masc.Dat.Sg.3	(NX *	_	
19	t1984_000	selber	DDS	sëlb	Masc.Dat.Sg.st	 * ) ) )	_	
20	t1985_000	verzückete	VVFIN	ver-zücken	(Subj).Past.Sg.3	(LB (VX * ) )	_	
21	t1986_000	-	$_	_	_	 * ) )	_	
22	t1987_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
23	t1988_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
24	t1989_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
25	t1990_000	stat	NA	stat	Akk.Sg	 * ) )	_	
26	t1991_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
27	t1992_000	vier	CARDA	vièr	Fem.Akk.Pl.0	(PostF (NX *	_	
28	t1993_000	wochen	NA	woche	Akk.Pl	 * ) )	_	
29	t1994_000	-	$_	_	_	 * )	_	
30	t1995_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1996_000	geschæhe	VVFIN	ge-schëhen	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t1997_000	aber	AVD	aber	_	(MF * )	_	
3	t1998_000	-	$_	_	_	 *	_	
4	t1999_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
5	t2000_000	von	APPR	von	_	(MF *	_	
6	t2001_000	iemanne	DIA	iè-mann	*.Dat.Sg.st	 *	_	
7	t2002_000	kolben	NA	kolbe	Nom.Pl	(NX * )	_	
8	t2003_000	-	$_	_	_	 *	_	
9	t2004_000	oder	KON	oder	_	 *	_	
10	t2005_000	stangen	NA	stange	Nom.Pl	(NX * )	_	
11	t2006_000	-	$_	_	_	 *	_	
12	t2007_000	oder	KON	oder	_	 *	_	
13	t2008_000	ungevüege	ADJA	un-ge-vüège	Pos.Neut.Nom.Pl.st	(NX *	_	
14	t2009_000	schît	NA	schît	Nom.Pl	 * )	_	
15	t2010_000	-	$_	_	_	 *	_	
16	t2011_000	oder	KON	oder	_	 *	_	
17	t2012_000	ander	DIA	ander	Neut.Nom.Pl.0	(NX *	_	
18	t2013_000	wâfen	NA	wâfen	Nom.Pl	 * )	_	
19	t2014_000	-	$_	_	_	 *	_	
20	t2015_000	in	APPR	in	_	(PPX *	_	
21	t2016_000	vîantlîcher	ADJA	vîent-lich	Pos.Fem.Dat.Sg.st	(NX *	_	
22	t2017_000	wîse	NA	wîs(e)	Dat.Sg	 * ) )	_	
23	t2018_000	-	$_	_	_	 *	_	
24	t2019_000	erhaben	VVPP	er-hèben	_	(VX * )	_	
25	t2020_000	-	$_	_	_	 *	_	
26	t2021_000	oder	KON	oder	_	 * )	_	
27	t2022_000	erzogen	VVPP	er-zièhen	_	(RB (VX *	_	
28	t2023_000	würden	VAFIN	wërden	(Subj).Past.Pl.3	 * ) )	_	
29	t2024_000	-	$_	_	_	 *	_	
30	t2025_000	dem	DRELS	dër	Masc.Dat.Sg	(PostF (Cl (LB (NX * ) )	_	
31	t2026_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
32	t2027_000	erwert	VVPP	er-wèr(e)n	_	(RB (VX *	_	
33	t2028_000	würde	VAFIN	wërden	Subj.Past.Sg.3	 * ) )	_	
34	t2029_000	-	$_	_	_	 * ) ) ) ) )	_	
35	t2030_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
36	t2031_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
37	t2032_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
38	t2033_000	stat	NA	stat	Akk.Sg	 * ) )	_	
39	t2034_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
40	t2035_000	vier	CARDA	vièr	Fem.Akk.Pl.0	(PostF (NX *	_	
41	t2036_000	wochen	NA	woche	Akk.Pl	 * ) )	_	
42	t2037_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2038_000	der	DRELS	dër	Masc.Nom.Sg	(S (Cl (LB (NX * ) )	_	
2	t2039_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
3	t2040_000	aber	AVD	aber	_	 *	_	
4	t2041_000	von	APPR	von	_	(PPX *	_	
5	t2042_000	im	PPER	ër	Masc.Dat.Sg.3	(NX *	_	
6	t2043_000	selber	DDS	sëlb	Masc.Dat.Sg.st	 * ) ) )	_	
7	t2044_000	læzet	VVFIN	lâzen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
8	t2045_000	-	$_	_	_	 * )	_	
9	t2046_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t2047_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t2048_000	des	DDS	dër	Neut.Gen.Sg	(MF (NX * ) )	_	
12	t2049_000	geniezen	VVINF	ge-nièzen	_	(RB (VX * ) )	_	
13	t2050_000	-	$_	_	_	 * )	_	
14	t2051_000	und	KON	unte	_	(Cl (PrePreF * )	_	
15	t2052_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t2053_000	ledic	ADJD	lèdig	Pos....0	(MF *	_	
17	t2054_000	sîn	VAINF	sîn	_	(VX * ) )	_	
18	t2055_000	-	$_	_	_	 *	_	
19	t2056_000	ob	KOUS	obe	_	(PostF (Cl (LB * )	_	
20	t2057_000	anders	AVD	ander(e)s	_	(MF *	_	
21	t2058_000	schaden	NA	schade	Nom.Sg	(NX * )	_	
22	t2059_000	niht	PTKNEG	niht	_	 *	_	
23	t2060_000	dâ	PAVD	dâr/+von(e)	_	(VX *	_	
24	t2061_000	von	PAVAP	von(e)/dâr+	_	 * ) )	_	
25	t2062_000	kumen	VVPP	komen	_	(RB (VX *	_	
26	t2063_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
27	t2064_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2065_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t2066_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t2067_000	selben	DDS	sëlb	Neut.Dat.Sg.wk	 * ) )	_	
4	t2068_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2069_000	wir	PPER	wir	Nom.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t2070_000	wellen	VMFIN	wèllen	*.Pres.Pl.1	(LB (VX * ) )	_	
3	t2071_000	ouch	AVD	ouch	_	(MF * )	_	
4	t2072_000	-	$_	_	_	 *	_	
5	t2073_000	durch	APPR	durh	_	(Frag (PPX *	_	
6	t2074_000	gemein	ADJA	ge-mèine	Pos.Masc.Akk.Sg.0	(NX *	_	
7	t2075_000	vride	NA	vride	Akk.Sg	 * ) )	_	
8	t2076_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2077_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t2078_000	den	DDART	dër	Masc.Akk.Sg	(PreF (NX *	_	
3	t2079_000	andern	DIS	ander	Masc.Akk.Sg.st	 *	_	
4	t2080_000	mit	APPR	mit	_	(PPX *	_	
5	t2081_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
6	t2082_000	viuste	NA	vûst	Dat.Sg	 *	_	
7	t2083_000	an	APPR	ane	_	(PPX *	_	
8	t2084_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
9	t2085_000	hals	NA	hals	Akk.Sg	 * ) ) ) ) ) )	_	
10	t2086_000	slehet	VVFIN	slahen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t2087_000	-	$_	_	_	 * )	_	
12	t2088_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t2089_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t2090_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
15	t2091_000	stat	NA	stat	Akk.Sg	 * ) )	_	
16	t2092_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
17	t2093_000	vier	CARDA	vièr	Fem.Akk.Pl.0	(PostF (NX *	_	
18	t2094_000	wochen	NA	woche	Akk.Pl	 * ) )	_	
19	t2095_000	-	$_	_	_	 *	_	
20	t2096_000	in	APPR	in	_	(Frag (PPX *	_	
21	t2097_000	ahte	CARDA	ahte	*.Dat.Pl.0	(NX *	_	
22	t2098_000	tagen	NA	tag	Dat.Pl	 * ) )	_	
23	t2099_000	ûz	PTKVZ	ûz/+var(e)n	_	 *	_	
24	t2100_000	ze	APPR	ze	_	(PPX *	_	
25	t2100_001	varn	NA	var(e)n/ûz+	Dat.Sg	(NX * ) )	_	
26	t2101_000	-	$_	_	_	 * ) )	_	
27	t2102_000	über	APPR	über	_	(PPX *	_	
28	t2103_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
29	t2104_000	mîle	NA	mîle	Akk.Pl	 * ) )	_	
30	t2105_000	ob	KOUS	obe	_	(Cl (LB * )	_	
31	t2106_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
32	t2107_000	rât	NA	rât	Nom.Sg	 * ) )	_	
33	t2108_000	kiuset	VVFIN	kièsen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
34	t2109_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
35	t2110_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
36	t2111_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
37	t2112_000	sôgetânen	ADJA	sô-ge-tân	Pos.Masc.Dat.Sg.wk	 *	_	
38	t2113_000	manne	NA	mann	Dat.Sg	 * ) )	_	
39	t2114_000	geschehen	VVPP	ge-schëhen	_	(RB (VX *	_	
40	t2115_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
41	t2116_000	-	$_	_	_	 *	_	
42	t2117_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
43	t2118_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
44	t2119_000	im	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
45	t2120_000	bezzern	VVINF	bèzzer(e)n	_	(VX * ) )	_	
46	t2121_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(RB (VX * ) )	_	
47	t2122_000	-	$_	_	_	 * ) ) ) ) )	_	
48	t2123_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2124_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t2125_000	ouch	AVD	ouch	_	(PreF *	_	
3	t2126_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
4	t2127_000	andern	DIS	ander	Masc.Akk.Sg.st	 * ) )	_	
5	t2128_000	slehet	VVFIN	slahen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t2129_000	-	$_	_	_	 * )	_	
7	t2130_000	mit	APPR	mit	_	(Frag (PPX *	_	
8	t2131_000	zâlboumen	NA	zagel-boum	Dat.Pl	(NX * ) )	_	
9	t2132_000	-	$_	_	_	 * )	_	
10	t2133_000	oder	KON	oder	_	(Frag *	_	
11	t2134_000	mit	APPR	mit	_	(PPX *	_	
12	t2135_000	knüteln	NA	knütel	Dat.Pl	(NX * ) )	_	
13	t2136_000	oder	KON	oder	_	(PrePreF * )	_	
14	t2137_000	stoezet	VVFIN	stôzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t2138_000	mit	APPR	mit	_	(MF (PPX *	_	
16	t2139_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
17	t2140_000	vuoze	NA	vuoz	Dat.Sg	 * ) ) )	_	
18	t2141_000	-	$_	_	_	 * )	_	
19	t2142_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
20	t2143_000	wirfet	VVFIN	wërfen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t2144_000	mit	APPR	mit	_	(MF (PPX *	_	
22	t2145_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
23	t2146_000	steine	NA	stèin	Dat.Sg	 * ) ) )	_	
24	t2147_000	-	$_	_	_	 * )	_	
25	t2148_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
26	t2149_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
27	t2150_000	ahte	CARDA	ahte	Fem.Akk.Pl.0	(MF (NX *	_	
28	t2151_000	wochen	NA	woche	Akk.Pl	 * ) )	_	
29	t2152_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
30	t2153_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
31	t2154_000	stat	NA	stat	Akk.Sg	 * ) )	_	
32	t2155_000	-	$_	_	_	 *	_	
33	t2156_000	über	APPR	über	_	(Frag (PPX *	_	
34	t2157_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
35	t2158_000	mîle	NA	mîle	Akk.Pl	 * ) )	_	
36	t2159_000	-	$_	_	_	 * )	_	
37	t2160_000	in	APPR	in	_	(Frag (PPX *	_	
38	t2161_000	ahte	CARDA	ahte	*.Dat.Pl.0	(NX *	_	
39	t2162_000	tagen	NA	tag	Dat.Pl	 * ) )	_	
40	t2163_000	ûz	PTKVZ	ûz/+var(e)n	_	 *	_	
41	t2163_001	ze	APPR	ze	_	(PPX *	_	
42	t2163_002	varn	NA	var(e)n/ûz+	Dat.Sg	(NX * ) )	_	
43	t2164_000	-	$_	_	_	 * ) )	_	
44	t2165_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2166_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t2167_000	aber	AVD	aber	_	(PreF *	_	
3	t2168_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
4	t2169_000	andern	DIS	ander	Masc.Akk.Sg.st	 *	_	
5	t2170_000	ze	APPR	ze	_	(PPX *	_	
6	t2171_000	tôde	NA	tôd	Dat.Sg	(NX * ) ) ) )	_	
7	t2172_000	slehet	VVFIN	slahen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t2173_000	-	$_	_	_	 * )	_	
9	t2174_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t2175_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t2176_000	in	APPR	in	_	(MF (PPX *	_	
12	t2177_000	vierzehen	CARDA	vièr-zëhen	*.Dat.Pl.0	(NX *	_	
13	t2178_000	tagen	NA	tag	Dat.Pl	 * ) )	_	
14	t2179_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
15	t2180_000	stat	NA	stat	Akk.Sg	 * ) )	_	
16	t2181_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
17	t2182_000	über	APPR	über	_	(PostF (PPX *	_	
18	t2183_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
19	t2184_000	mîle	NA	mîle	Akk.Pl	 * ) ) )	_	
20	t2185_000	-	$_	_	_	 * )	_	
21	t2186_000	und	KON	unte	_	(Cl (PrePreF * )	_	
22	t2187_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
23	t2188_000	jâr	NA	jâr	Akk.Sg	(MF (NX * )	_	
24	t2189_000	und	KON	unte	_	 *	_	
25	t2190_000	tac	NA	tag	Akk.Sg	(NX * )	_	
26	t2191_000	ûz	PTKVZ	ûz/+sîn	_	(VX *	_	
27	t2192_000	sîn	VAINF	sîn/ûz+	_	 * ) )	_	
28	t2193_000	-	$_	_	_	 * )	_	
29	t2194_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
30	t2195_000	verbezzer	VVFIN	ver-bèzzer(e)n	Subj.Pres.Sg.3	(LB (VX * ) )	_	
31	t2196_000	oder	KON	oder	_	(MF *	_	
32	t2197_000	niht	PTKNEG	niht	_	 * )	_	
33	t2198_000	-	$_	_	_	 * )	_	
34	t2199_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2200_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t2201_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
3	t2202_000	andern	DIS	ander	Masc.Dat.Sg.wk	 * )	_	
4	t2203_000	ein	DIART	èin	Fem.Akk.Sg.0	(PreF (NX *	_	
5	t2204_000	vliezente	ADJA	vlièzen	Pos.Fem.Akk.Sg.st	 *	_	
6	t2205_000	wunden	NA	wunte	Akk.Sg	 * ) )	_	
7	t2206_000	slehet	VVFIN	slahen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t2207_000	-	$_	_	_	 * )	_	
9	t2208_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t2209_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t2210_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
12	t2211_000	in	APPR	in	_	(PostF (PPX *	_	
13	t2212_000	ahte	CARDA	ahte	*.Dat.Pl.0	(NX *	_	
14	t2213_000	tagen	NA	tag	Dat.Pl	 * ) )	_	
15	t2214_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
16	t2215_000	mîle	NA	mîle	Akk.Pl	 *	_	
17	t2216_000	von	APPR	von	_	(PPX *	_	
18	t2217_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
19	t2218_000	stat	NA	stat	Dat.Sg	 * ) ) ) )	_	
20	t2219_000	-	$_	_	_	 * )	_	
21	t2220_000	und	KON	unte	_	(Cl (PrePreF * )	_	
22	t2221_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
23	t2222_000	ûze	AVD	ûze	_	(MF *	_	
24	t2223_000	sîn	VAINF	sîn	_	(VX * )	_	
25	t2224_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
26	t2225_000	vierteil	NA	vièr-tèil	Akk.Sg	 *	_	
27	t2226_000	jârs	NA	jâr	Gen.Sg	(NX * ) ) )	_	
28	t2227_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2228_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t2229_000	unsern	DPOSA	unser	*.Dat.Pl.st	(NX *	_	
3	t2230_000	hêrrn	NA	hêrre	Dat.Pl	 * ) )	_	
4	t2231_000	-	$_	_	_	 * )	_	
5	t2232_000	und	KON	unte	_	(Frag *	_	
6	t2233_000	vicârien	NA	vicârie	Dat.Pl	(NX *	_	
7	t2234_000	in	APPR	in	_	(PPX *	_	
8	t2235_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
9	t2236_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
10	t2237_000	geschihte	NA	ge-schiht	Dat.Sg	 * ) ) )	_	
11	t2238_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2239_000	wær	VAFIN	wësen	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t2240_000	daz	DDS	dër	Neut.Nom.Sg	(MF (NX * ) )	_	
3	t2241_000	ob	KOUS	obe	_	(PostF (Frag *	_	
4	t2242_000	keiner	DIS	kèin	Masc.Nom.Sg.st	(PreF (NX *	_	
5	t2243_000	unser	DPOSA	unser	*.Gen.Pl.0	(NX *	_	
6	t2244_000	hêrren	NA	hêrre	Gen.Pl	 * ) ) )	_	
7	t2245_000	die	DRELS	dër	Masc.Nom.Pl	(LB (NX * ) )	_	
8	t2246_000	pfrüende	NA	pfrüènte	Akk.Pl	(MF (NX * ) )	_	
9	t2247_000	haben	VAFIN	haben	*.Pres.Pl.3	(RB (VX * ) )	_	
10	t2248_000	-	$_	_	_	 *	_	
11	t2249_000	oder	KON	oder	_	(Frag *	_	
12	t2250_000	vicârien	NA	vicârie	Gen.Pl	(NX * )	_	
13	t2251_000	die	DRELS	dër	Masc.Nom.Pl	(NX *	_	
14	t2252_000	zuo	APPR	ze	_	(PPX *	_	
15	t2253_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
16	t2254_000	tuome	NA	tuom	Dat.Sg	 * ) ) )	_	
17	t2255_000	-	$_	_	_	 * ) ) )	_	
18	t2256_000	ze	APPR	ze	_	(Frag (PPX *	_	
19	t2257_000	houge	NA	houg	Dat.Sg	(NX * ) )	_	
20	t2258_000	-	$_	_	_	 * )	_	
21	t2259_000	oder	KON	oder	_	(Frag *	_	
22	t2260_000	zuo	APPR	ze	_	(PPX *	_	
23	t2260_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
24	t2261_000	Niuwenmünster	NE	Niuwen-münster	Dat.Sg	 * ) )	_	
25	t2262_000	-	$_	_	_	 * )	_	
26	t2263_000	der	DDART	dër	Fem.Gen.Sg	(Frag (NX *	_	
27	t2264_000	buoze	NA	buoze	Gen.Sg	 * )	_	
28	t2265_000	keine	DIS	kèin	Fem.Akk.Sg.st	(NX * )	_	
29	t2266_000	-	$_	_	_	 *	_	
30	t2267_000	die	DRELS	dër	Fem.Nom.Pl	(Cl (LB (NX * ) )	_	
31	t2268_000	hier	AVD	hièr	_	(MF * )	_	
32	t2269_000	geschriben	VVPP	schrîben	_	(PreF (RB (VX *	_	
33	t2270_000	stên	VVFIN	stân	*.Pres.Pl.3	 * ) ) )	_	
34	t2271_000	verworhte	VVFIN	ver-wirken	Subj.Past.Sg.3	(LB (VX * ) )	_	
35	t2272_000	-	$_	_	_	 * ) ) )	_	
36	t2273_000	dem	DDS	dër	Masc.Dat.Sg	(Cl (PreF (NX * ) )	_	
37	t2274_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
38	t2275_000	sîn	DPOSA	sîn	Masc.Nom.Sg.0	(MF (NX *	_	
39	t2276_000	tÉchant	NA	tÉchan(t)	Nom.Sg	 * ) )	_	
40	t2277_000	gebieten	VVINF	ge-bièten	_	(RB (VX * ) )	_	
41	t2278_000	-	$_	_	_	 *	_	
42	t2279_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
43	t2280_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
44	t2281_000	alsô	AVD	all-sô	_	 *	_	
45	t2282_000	lange	AVD	lange	_	 *	_	
46	t2283_000	in	APPR	in	_	(PPX *	_	
47	t2284_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
48	t2285_000	klôster	NA	klôster	Dat.Sg	 * ) ) )	_	
49	t2286_000	lige	VVFIN	ligen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
50	t2287_000	-	$_	_	_	 * ) ) )	_	
51	t2288_000	bî	APPR	bî	_	(PPX *	_	
52	t2289_000	sîner	DPOSA	sîn	Fem.Dat.Sg.st	(NX *	_	
53	t2290_000	gehôrsam	NA	ge-hôr-sam	Dat.Sg	 *	_	
54	t2291_000	âne	APPR	âne	_	(PPX *	_	
55	t2292_000	geværde	NA	ge-vær(e)de	Akk.Sg	(NX * ) ) ) )	_	
56	t2293_000	als	KO*	all-sô	_	(Frag *	_	
57	t2294_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
58	t2295_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
59	t2296_000	stat	NA	stat	Akk.Sg	 * )	_	
60	t2297_000	gerûmet	VVPP	rûmen	_	(VX *	_	
61	t2298_000	solte	VMFIN	sol(e)n	*.Past.Sg.3	 * )	_	
62	t2299_000	haben	VAINF	haben	_	(VX * )	_	
63	t2300_000	-	$_	_	_	 * )	_	
64	t2301_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
65	t2302_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
66	t2303_000	ûz	PTKVZ	ûz/+var(e)n	_	(RB (VX *	_	
67	t2304_000	varn	VVINF	var(e)n/ûz+	_	 * ) )	_	
68	t2305_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2306_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t2307_000	vrouwen	NA	vrouwe	Dat.Pl	(NX *	_	
3	t2308_000	in	APPR	in	_	(PPX *	_	
4	t2309_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
5	t2310_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
6	t2311_000	geschiht	NA	ge-schiht	Dat.Sg	 * ) ) ) )	_	
7	t2312_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2313_000	swelich	DGA	swèl(i)ch	Fem.Nom.Sg.0	(S (Frag (NX *	_	
2	t2314_000	vrouwe	NA	vrouwe	Nom.Sg	 *	_	
3	t2315_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
4	t2316_000	dinge	NA	ding	Gen.Pl	 * ) )	_	
5	t2317_000	decheinez	DIS	deh-èin	Neut.Akk.Sg.st	(PreF (NX * ) )	_	
6	t2318_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t2319_000	-	$_	_	_	 *	_	
8	t2320_000	daz	DRELS	dër	Neut.Akk.Sg	(Cl (LB (NX * ) )	_	
9	t2321_000	die	DDART	dër	Masc.Nom.Pl	(MF (NX *	_	
10	t2322_000	manne	NA	mann	Nom.Pl	 * ) )	_	
11	t2323_000	verbezzern	VVFIN	ver-bèzzer(e)n	Ind.Pres.Pl.3	(RB (VX * ) )	_	
12	t2324_000	-	$_	_	_	 * ) )	_	
13	t2325_000	die	DDS	dër	Fem.Nom.Sg	(Cl (PreF (NX * ) )	_	
14	t2326_000	habe	VAFIN	haben	Subj.Pres.Sg.3	(LB (VX * ) )	_	
15	t2327_000	ein	DIART	èin	Neut.Akk.Sg.0	(MF *	_	
16	t2328_000	geteiletez	ADJA	ge-tèilet	Pos.Neut.Akk.Sg.st	 * )	_	
17	t2329_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2330_000	einweder	DIS	èin-wëder	Masc.Nom.Sg.0	(S (Cl (PreF (NX * ) )	_	
2	t2331_000	rûme	VVFIN	rûmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t2332_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
4	t2333_000	stat	NA	stat	Akk.Sg	 * ) )	_	
5	t2334_000	-	$_	_	_	 *	_	
6	t2335_000	als	KO*	all-sô	_	(Frag *	_	
7	t2336_000	die	DDART	dër	Masc.Nom.Pl	(PreF (NX *	_	
8	t2337_000	manne	NA	mann	Nom.Pl	 * ) )	_	
9	t2338_000	tuont	VVFIN	tuon	Ind.Pres.Pl.3	(LB (VX * ) )	_	
10	t2339_000	-	$_	_	_	 * ) )	_	
11	t2340_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
12	t2341_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
13	t2342_000	innerhalp	APPR	inner(t)-halb(en)	_	(MF (PPX *	_	
14	t2343_000	ires	DPOSA	ir(e)	Neut.Gen.Sg.st	(NX *	_	
15	t2344_000	hûses	NA	hûs	Gen.Sg	 * ) ) )	_	
16	t2345_000	-	$_	_	_	 *	_	
17	t2346_000	oder	KON	oder	_	(Frag *	_	
18	t2347_000	irer	DPOSA	ir(e)	Fem.Gen.Sg.st	(NX *	_	
19	t2348_000	hovereite	NA	hove-rèite	Gen.Sg	 * )	_	
20	t2349_000	-	$_	_	_	 * )	_	
21	t2350_000	als	AVD	all-sô	_	(Frag *	_	
22	t2351_000	lange	AVD	lange	_	 *	_	
23	t2352_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
24	t2353_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * ) )	_	
25	t2354_000	dâr	PAVD	dâr/+ûz	_	(RB (VX *	_	
26	t2355_000	ûz	PAVAP	ûz/dâr+	_	 *	_	
27	t2356_000	niht	PTKNEG	niht	_	 *	_	
28	t2357_000	kume	VVFIN	komen	Subj.Pres.Sg.3	 * ) )	_	
29	t2358_000	-	$_	_	_	 * ) )	_	
30	t2359_000	durch	APPR	durh	_	(Frag (PPX *	_	
31	t2360_000	keiner	DIA	kèin	Fem.Gen.Sg.st	(NX *	_	
32	t2361_000	hande	NA	hant	Gen.Sg	 * ) )	_	
33	t2362_000	sache	NA	sache	Akk.Sg	(NX * )	_	
34	t2363_000	denne	KOKOM	danne	_	 *	_	
35	t2364_000	alein	AVD	all-èin(e)	_	 *	_	
36	t2365_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
37	t2366_000	lîbes	NA	lîb	Gen.Sg	 * )	_	
38	t2367_000	nôtdurft	NA	nôt-durft	Akk.Sg	(NX *	_	
39	t2368_000	âne	APPR	âne	_	(PPX *	_	
40	t2369_000	geværde	NA	ge-vær(e)de	Akk.Sg	(NX * ) ) )	_	
41	t2370_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2371_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t2372_000	scheltworten	NA	schëlt-wort	Dat.Pl	(NX * ) )	_	
3	t2373_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2374_000	pertinent	FM	pertinere	_	(S (Frag *	_	
2	t2375_000	at	FM	ad	_	 *	_	
3	t2376_000	dominum	FM	dominus	_	 *	_	
4	t2377_000	praepositum	FM	praepositus	_	 *	_	
5	t2378_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2379_000	swaz	PG	swër	Neut.Nom.Sg.st	(S (Frag (NX * )	_	
2	t2380_000	ouch	AVD	ouch	_	(PreF *	_	
3	t2381_000	der	DDART	dër	Fem.Gen.Sg	(NX *	_	
4	t2382_000	geschiht	NA	ge-schiht	Gen.Sg	 * ) )	_	
5	t2383_000	verkumet	VVFIN	ver-komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t2384_000	-	$_	_	_	 *	_	
7	t2385_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
8	t2386_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
9	t2387_000	alsô	AVD	all-sô	_	 * )	_	
10	t2388_000	sprichet	VVFIN	sprëchen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
11	t2389_000	-	$_	_	_	 * ) )	_	
12	t2390_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
13	t2391_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t2392_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
15	t2393_000	buobe	NA	buobe	Nom.Sg	 * ) )	_	
16	t2394_000	-	$_	_	_	 *	_	
17	t2395_000	oder	KON	oder	_	(Frag *	_	
18	t2396_000	sie	PPER	ër	Fem.Nom.Sg.3	(PreF (NX * ) )	_	
19	t2397_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t2398_000	ein	DIART	èin	Fem.Nom.Sg.0	(MF (NX *	_	
21	t2399_000	huore	NA	huore	Nom.Sg	 * ) )	_	
22	t2400_000	-	$_	_	_	 * ) )	_	
23	t2401_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
24	t2402_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
25	t2403_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
26	t2404_000	dem	DDS	dër	Masc.Dat.Sg	(NX * ) )	_	
27	t2405_000	bezzern	VVINF	bèzzer(e)n	_	(RB (VX * ) )	_	
28	t2406_000	-	$_	_	_	 *	_	
29	t2407_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
30	t2408_000	niht	NA	niht	Akk.Sg	(MF (NX *	_	
31	t2409_000	geschozzes	NA	ge-schozz	Gen.Sg	(NX * ) ) )	_	
32	t2410_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(RB (VX * ) )	_	
33	t2411_000	-	$_	_	_	 * ) ) )	_	
34	t2412_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
35	t2413_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
36	t2414_000	ganzlîche	AVD	ganz-lîche	_	(MF *	_	
37	t2415_000	unde	KON	unte	_	 *	_	
38	t2416_000	gar	AVD	gar(e)	_	 *	_	
39	t2417_000	ane	APPR	ane	_	(PPX *	_	
40	t2417_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
41	t2418_000	râte	NA	rât	Dat.Sg	 * ) ) )	_	
42	t2419_000	stên	VVINF	stân	_	(RB (VX * ) )	_	
43	t2420_000	-	$_	_	_	 *	_	
44	t2421_000	alsô	AVD	all-sô	_	(PostF * )	_	
45	t2422_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2423_000	swaz	PG	swër	Neut.Akk.Sg.st	(S (Frag (NX * )	_	
2	t2424_000	der	DDS	dër	Masc.Nom.Sg	(NX * )	_	
3	t2425_000	ze	APPR	ze	_	 *	_	
4	t2426_000	beider	DIA	bèide	Fem.Dat.Sg.st	 *	_	
5	t2426_001	sîte	NA	sîte	Dat.Pl	(PreF (NX * ) )	_	
6	t2427_000	dâr	PAVD	dâr/+umbe	_	(LB (VX *	_	
7	t2428_000	umbe	PAVAP	umbe/dâr+	_	 *	_	
8	t2429_000	sprichet	VVFIN	sprëchen	Ind.Pres.Sg.3	 * ) )	_	
9	t2430_000	-	$_	_	_	 * )	_	
10	t2431_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
11	t2432_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t2433_000	alsô	AVD	all-sô	_	(MF * )	_	
13	t2434_000	belîben	VVINF	be-lîben	_	(RB (VX * ) )	_	
14	t2435_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2436_000	von	APPR	von	_	(S (Frag *	_	
2	t2437_000	guotem	ADJA	guot	Pos.Masc.Dat.Sg.st	 *	_	
3	t2438_000	unde	KON	unte	_	 *	_	
4	t2439_000	boesen	ADJA	boèse	Pos.Masc.Dat.Sg.wk	(NX *	_	
5	t2440_000	liumunde	NA	liumunt	Dat.Sg	 * )	_	
6	t2441_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2442_000	umbe	APPR	umbe	_	(S (Frag (PPX *	_	
2	t2443_000	aller	DIA	all	*.Gen.Pl.st	(NX *	_	
3	t2443_001	leie	NA	lèie	Gen.Pl	 * ) )	_	
4	t2444_000	liute	NA	liut	Akk.Pl	(NX * )	_	
5	t2445_000	-	$_	_	_	 * )	_	
6	t2446_000	si	PPER	ër	Masc,Neut.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
7	t2447_000	sîn	VAFIN	sîn	Subj.Pres.Pl.3	(LB (VX * ) )	_	
8	t2448_000	arm	ADJD	arm	Pos....0	(MF *	_	
9	t2449_000	oder	KON	oder	_	 *	_	
10	t2450_000	rîche	ADJD	rîche	Pos....0	 * )	_	
11	t2451_000	-	$_	_	_	 * )	_	
12	t2452_000	sô	AVD	sô	_	(Cl (PreF * )	_	
13	t2453_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t2454_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
15	t2455_000	iegelich	DIA	iè-ge-lich	Masc.Nom.Sg.0	 *	_	
16	t2456_000	man	NA	mann	Nom.Sg	 * )	_	
17	t2457_000	oder	KON	oder	_	 *	_	
18	t2458_000	vrouwe	NA	vrouwe	Nom.Sg	(NX * ) )	_	
19	t2459_000	-	$_	_	_	 * )	_	
20	t2460_000	eines	DIART	èin	Masc.Gen.Sg.st	(Frag (NX *	_	
21	t2461_000	guoten	ADJA	guot	Pos.Masc.Gen.Sg.wk	 *	_	
22	t2462_000	liumundes	NA	liumunt	Gen.Sg	 * )	_	
23	t2463_000	geniezen	VVINF	ge-nièzen	_	(VX * )	_	
24	t2464_000	-	$_	_	_	 * )	_	
25	t2465_000	und	KON	unte	_	(Frag *	_	
26	t2466_000	eines	DIART	èin	Masc.Gen.Sg.st	 *	_	
27	t2467_000	boesen	ADJA	boèse	Pos.Masc.Gen.Sg.wk	 *	_	
28	t2468_000	entgelten	VVINF	ent-gëlten	_	(VX * )	_	
29	t2469_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2470_000	und	KON	unte	_	(S (Frag *	_	
2	t2471_000	daz	DDS	dër	Neut.Nom.Sg	(PreF (NX * ) )	_	
3	t2472_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t2473_000	ane	APPR	ane	_	(MF (PPX *	_	
5	t2473_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
6	t2474_000	râte	NA	rât	Dat.Sg	 * ) ) )	_	
7	t2475_000	stên	VVINF	stân	_	(RB (VX * ) )	_	
8	t2476_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
9	t2477_000	sie	PPER	ër	*..Nom.Pl.3	(MF (NX * ) )	_	
10	t2478_000	dâr	PAVD	dâr/+nâh	_	(RB (VX *	_	
11	t2479_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
12	t2480_000	tuon	VVFIN	tuon	*.Pres.Pl.3	 * ) )	_	
13	t2481_000	-	$_	_	_	 * ) )	_	
14	t2482_000	als	KO*	all-sô	_	(Frag *	_	
15	t2483_000	sie	PPER	ër	*..Nom.Pl.3	(NX *	_	
16	t2484_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
17	t2485_000	liumundes	NA	liumunt	Gen.Sg	 * ) )	_	
18	t2486_000	geinnert	VVPP	inner(e)n	_	(VX *	_	
19	t2487_000	werdent	VAFIN	wërden	Ind.Pres.Pl.3	 * )	_	
20	t2488_000	mit	APPR	mit	_	(PPX *	_	
21	t2489_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
22	t2490_000	wârheit	NA	wâr-hèit	Dat.Sg	 * ) )	_	
23	t2491_000	-	$_	_	_	 * )	_	
24	t2492_000	an	APPR	ane	_	(Frag (PPX *	_	
25	t2493_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
26	t2494_000	übermenige	NA	über-mènige	Dat.Sg	 * ) )	_	
27	t2495_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2496_000	von	APPR	von	_	(S (PPX *	_	
2	t2497_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t2498_000	gesten	NA	gast	Dat.Pl	 * ) )	_	
4	t2499_000	die	DDS	dër	Masc.Nom.Pl	(Cl (PreF (NX * ) )	_	
5	t2500_000	vrevelnt	VVFIN	vrèvel(e)n	Ind.Pres.Pl.3	(LB (VX * ) )	_	
6	t2501_000	in	APPR	in	_	(MF (PPX *	_	
7	t2502_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
8	t2503_000	stat	NA	stat	Dat.Sg	 * ) ) )	_	
9	t2504_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2505_000	in	APPR	in	_	(S (Frag (PPX *	_	
2	t2506_000	swelicher	DGA	swèl(i)ch	Fem.Dat.Sg.st	(NX *	_	
3	t2507_000	ahte	NA	aht(e)	Dat.Sg	 * ) )	_	
4	t2508_000	die	DDART	dër	Fem.Nom.Pl	(NX *	_	
5	t2509_000	geschihte	NA	ge-schiht	Nom.Pl	 * )	_	
6	t2510_000	sîn	VAINF	sîn	_	(VX * )	_	
7	t2511_000	-	$_	_	_	 * )	_	
8	t2512_000	oder	KON	oder	_	(Frag *	_	
9	t2513_000	werden	VAINF	wërden	_	(PreF (VX * ) )	_	
10	t2514_000	mügen	VMFIN	mügen	*.Pres.Pl.3	(LB (VX * ) )	_	
11	t2515_000	-	$_	_	_	 * )	_	
12	t2516_000	dâr	PAVD	dâr/+umbe	_	(Frag *	_	
13	t2517_000	umbe	PAVAP	umbe/dâr+	_	 *	_	
14	t2518_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
15	t2519_000	burgær	NA	burger(e)	Nom.Sg	 * )	_	
16	t2520_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
17	t2521_000	stat	NA	stat	Akk.Sg	 * )	_	
18	t2522_000	rûmen	VVINF	rûmen	_	(PreF (VX * ) )	_	
19	t2523_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t2524_000	-	$_	_	_	 * )	_	
21	t2525_000	und	KON	unte	_	(Cl (PrePreF * )	_	
22	t2526_000	muoz	VMFIN	müèzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
23	t2527_000	-	$_	_	_	 *	_	
24	t2528_000	umbe	APPR	umbe	_	(Frag (PPX *	_	
25	t2529_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
26	t2530_000	geschiht	NA	ge-schiht	Akk.Sg	 * ) )	_	
27	t2531_000	-	$_	_	_	 * )	_	
28	t2532_000	ie	AVD	iè	_	(Frag *	_	
29	t2532_001	dâr	PAVD	dâr/+nâh	_	 *	_	
30	t2533_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
31	t2534_000	-	$_	_	_	 * )	_	
32	t2535_000	und	KON	unte	_	(Frag *	_	
33	t2536_000	sie	PPER	ër	Masc.Nom.Pl.3	(NX * )	_	
34	t2537_000	sîn	VAINF	sîn	_	(PreF (VX * ) )	_	
35	t2538_000	mügen	VMFIN	mügen	*.Pres.Pl.3	(LB (VX * ) )	_	
36	t2539_000	-	$_	_	_	 * )	_	
37	t2540_000	reht	ADJD	rëht	Pos....0	(Frag *	_	
38	t2541_000	in	APPR	in	_	(PPX *	_	
39	t2541_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
40	t2542_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
41	t2543_000	wîse	NA	wîs(e)	Dat.Sg	 * ) )	_	
42	t2544_000	-	$_	_	_	 * ) )	_	
43	t2545_000	sô	AVD	sô	_	(Cl (PreF * )	_	
44	t2546_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
45	t2547_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
46	t2548_000	gast	NA	gast	Nom.Sg	 * ) )	_	
47	t2549_000	-	$_	_	_	 *	_	
48	t2550_000	ob	KOUS	obe	_	(PostF (Cl (LB * )	_	
49	t2551_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
50	t2552_000	eineme	CARDS	èin	Masc.Dat.Sg.st	(NX *	_	
51	t2553_000	von	APPR	von	_	(PPX *	_	
52	t2554_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
53	t2555_000	stat	NA	stat	Dat.Sg	 * ) ) )	_	
54	t2556_000	iht	NA	iht	Akk.Sg	(NX * ) )	_	
55	t2557_000	tæte	VVFIN	tuon	Subj.Past.Sg.3	(RB (VX * ) )	_	
56	t2558_000	-	$_	_	_	 * ) ) )	_	
57	t2559_000	innerhalp	APPR	inner(t)-halb(en)	_	(Frag (PPX *	_	
58	t2560_000	der	DDART	dër	Fem.Gen.Sg	(NX *	_	
59	t2561_000	mûre	NA	mûre	Gen.Sg	 * ) )	_	
60	t2562_000	als	AVD	all-sô	_	 *	_	
61	t2563_000	lange	AVD	lange	_	 *	_	
62	t2564_000	belîben	VVINF	be-lîben	_	(VX * )	_	
63	t2565_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2566_000	von	APPR	von	_	(S (PPX *	_	
2	t2567_000	swachen	ADJA	swach	Pos.*.Dat.Pl.*	(NX *	_	
3	t2568_000	liuten	NA	liut	Dat.Pl	 * ) )	_	
4	t2569_000	die	DRELS	dër	Masc,Neut.Nom.Pl	(Cl (LB (NX * ) )	_	
5	t2570_000	êrsamen	ADJA	êr-sam	Pos.*..Akk.Pl.wk	(MF * )	_	
6	t2571_000	missehandeln	VVFIN	misse-hantel(e)n	Ind.Pres.Pl.3	(RB (VX * ) )	_	
7	t2572_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2573_000	swenne	AVG	swanne	_	(S (Cl (LB * )	_	
2	t2574_000	ouch	AVD	ouch	_	(MF *	_	
3	t2575_000	die	DDART	dër	Masc,Neut.Nom.Pl	(NX *	_	
4	t2576_000	liute	NA	liut	Nom.Pl	 * )	_	
5	t2577_000	ungelîch	ADJD	un-ge-lîch	Pos....0	 * )	_	
6	t2578_000	sîn	VAFIN	sîn	*.Pres.Pl.3	(RB (VX * ) )	_	
7	t2579_000	-	$_	_	_	 *	_	
8	t2580_000	ob	KOUS	obe	_	(PostF (Cl (LB * )	_	
9	t2581_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
10	t2582_000	swacher	ADJA	swach	Pos.Masc.Nom.Sg.st	 *	_	
11	t2583_000	man	NA	mann	Nom.Sg	 * )	_	
12	t2584_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
13	t2585_000	êrsamen	ADJA	êr-sam	Pos.Masc.Dat.Sg.wk	 *	_	
14	t2586_000	manne	NA	mann	Dat.Sg	 *	_	
15	t2587_000	mit	APPR	mit	_	(PPX *	_	
16	t2588_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
17	t2589_000	worten	NA	wort	Dat.Pl	 * ) ) )	_	
18	t2590_000	-	$_	_	_	 *	_	
19	t2591_000	oder	KON	oder	_	 *	_	
20	t2592_000	mit	APPR	mit	_	(PPX *	_	
21	t2593_000	andern	DIA	ander	*.Dat.Pl.st	(NX *	_	
22	t2594_000	sachen	NA	sache	Dat.Pl	 * ) )	_	
23	t2595_000	als	AVD	all-sô	_	 *	_	
24	t2596_000	verre	AVD	vërre	_	 * )	_	
25	t2597_000	missebüte	VVFIN	misse-bièten	Subj.Past.Sg.3	(RB (VX * ) )	_	
26	t2598_000	-	$_	_	_	 *	_	
27	t2599_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
28	t2600_000	ein	DIART	èin	Fem.Nom.Sg.0	(MF (NX *	_	
29	t2601_000	geschihte	NA	ge-schiht	Nom.Sg	 * )	_	
30	t2602_000	dâ	AVD	dâr	_	 * )	_	
31	t2603_000	geschæhe	VVFIN	ge-schëhen	Subj.Past.Sg.3	(RB (VX * ) )	_	
32	t2604_000	und	KON	unte	_	(PostF *	_	
33	t2605_000	daz	DDS	dër	Neut.Nom.Sg	(PreF (NX *	_	
34	t2606_000	ze	APPR	ze	_	(PPX *	_	
35	t2607_000	klage	NA	klage	Dat.Sg	(NX * ) ) ) )	_	
36	t2608_000	kæme	VVFIN	komen	Subj.Past.Sg.3	(LB (VX * ) )	_	
37	t2609_000	vüre	APPR	vür(e)	_	(MF (PPX *	_	
38	t2610_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
39	t2611_000	rât	NA	rât	Akk.Sg	 * ) ) ) )	_	
40	t2612_000	-	$_	_	_	 * ) ) ) ) )	_	
41	t2613_000	der	DDART	dër	Masc.Nom.Sg	(Cl (PreF (NX *	_	
42	t2614_000	rât	NA	rât	Nom.Sg	 * ) )	_	
43	t2615_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
44	t2616_000	verhoeren	VVINF	ver-hoèren	_	(RB (VX * ) )	_	
45	t2617_000	-	$_	_	_	 *	_	
46	t2618_000	von	APPR	von	_	(Frag (PPX *	_	
47	t2619_000	den	DDS	dër	*.Dat.Pl	(NX * ) )	_	
48	t2620_000	ouch	AVD	ouch	_	 *	_	
49	t2621_000	-	$_	_	_	 *	_	
50	t2622_000	die	DRELS	dër	*.Akk.Pl	(Cl (LB (NX * ) )	_	
51	t2623_000	sie	PPER	ër	*..Nom.Pl.3	(MF (NX * )	_	
52	t2624_000	beidenthalben	AVD	bèident-halb(en)	_	 * )	_	
53	t2625_000	jehen	VVFIN	jëhen	*.Pres.Pl.3	(RB (VX * ) )	_	
54	t2626_000	-	$_	_	_	 *	_	
55	t2627_000	die	DRELS	dër	*.Nom.Pl	(PostF (Cl (LB (NX * ) )	_	
56	t2628_000	dâ	PAVD	dâr/+bî	_	(RB (VX *	_	
57	t2629_000	bî	PAVAP	bî/dâr+	_	 *	_	
58	t2630_000	sîn	VAFIN	sîn	*.Pres.Pl.3	 *	_	
59	t2631_000	gewesen	VAPP	wësen	_	 * ) ) ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2632_000	swaz	PG	swër	Neut.Akk.Sg.st	(S (Frag (NX * )	_	
2	t2633_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
3	t2634_000	rât	NA	rât	Nom.Sg	 * )	_	
4	t2635_000	dâ	AVD	dâr	_	(PreF * )	_	
5	t2636_000	verhoert	VVFIN	ver-hoèren	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t2637_000	umbe	APPR	umbe	_	(MF (PPX *	_	
7	t2638_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
8	t2639_000	sache	NA	sache	Akk.Sg	 * ) ) ) )	_	
9	t2640_000	als	KO*	all-sô	_	(Frag *	_	
10	t2641_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
11	t2642_000	kumen	VVPP	komen	_	(VX *	_	
12	t2643_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
13	t2644_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
14	t2645_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
15	t2646_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX * ) )	_	
16	t2647_000	rihten	VVINF	rihten	_	(RB (VX * ) )	_	
17	t2648_000	-	$_	_	_	 *	_	
18	t2649_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
19	t2650_000	iren	DPOSA	ir(e)	Masc.Akk.Sg.st	(NX *	_	
20	t2651_000	eit	NA	èid	Akk.Sg	 * ) )	_	
21	t2652_000	-	$_	_	_	 * )	_	
22	t2653_000	und	KON	unte	_	(Frag *	_	
23	t2654_000	niht	PTKNEG	niht	_	 *	_	
24	t2655_000	nâch	APPR	nâh	_	(PPX *	_	
25	t2656_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
26	t2657_000	setzen	NA	satz	Dat.Pl	 * ) )	_	
27	t2658_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2659_000	von	APPR	von	_	(S (PPX *	_	
2	t2660_000	sachen	NA	sache	Dat.Pl	(NX * ) )	_	
3	t2661_000	die	DRELS	dër	Fem.Nom.Pl	(Cl (LB (NX *	_	
4	t2662_000	in	APPR	in	_	(PPX *	_	
5	t2662_001	deme	DDART	dër	Masc.Dat.Sg	(NX *	_	
6	t2663_000	râte	NA	rât	Dat.Sg	 * ) ) ) )	_	
7	t2664_000	werden	VAFIN	wërden	*.Pres.Pl.3	(RB (VX *	_	
8	t2665_000	geriht	VVPP	rihten	_	 * ) )	_	
9	t2666_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2667_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t2668_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2669_000	ouch	AVD	ouch	_	(PreF (MF *	_	
4	t2670_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
5	t2671_000	liuten	NA	liut	Dat.Pl	 *	_	
6	t2672_000	umbe	APPR	umbe	_	(PPX *	_	
7	t2673_000	alle	DIA	all	Fem.Akk.Pl.st	(NX *	_	
8	t2674_000	sache	NA	sache	Akk.Pl	 * ) ) ) ) )	_	
9	t2675_000	die	DRELS	dër	Fem.Nom.Pl	(LB (NX *	_	
10	t2676_000	vore	APPR	vor(e)	_	(PPX *	_	
11	t2677_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
12	t2678_000	râte	NA	rât	Dat.Sg	 * ) ) ) )	_	
13	t2679_000	geriht	VVPP	rihten	_	(RB (VX *	_	
14	t2680_000	werden	VAFIN	wërden	*.Pres.Pl.3	 * ) )	_	
15	t2681_000	-	$_	_	_	 * )	_	
16	t2682_000	mit	APPR	mit	_	(Frag (PPX *	_	
17	t2683_000	bezzerunge	NA	bèzzerunge	Dat.Sg	(NX * ) )	_	
18	t2684_000	oder	KON	oder	_	 *	_	
19	t2685_000	mit	APPR	mit	_	(PPX *	_	
20	t2686_000	eiden	NA	èid	Dat.Pl	(NX * ) )	_	
21	t2687_000	geben	VVINF	gëben	_	(VX * )	_	
22	t2688_000	in	APPR	in	_	(PPX *	_	
23	t2689_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
24	t2690_000	eit	NA	èid	Akk.Sg	 * ) )	_	
25	t2691_000	daz	KOUS	dazz	_	(Frag *	_	
26	t2692_000	kein	DIA	kèin	Fem.Nom.Sg.0	(PreF (NX *	_	
27	t2693_000	übeltât	NA	übel-tât	Nom.Sg	 * ) )	_	
28	t2694_000	dâr	PAVD	dâr/+nâh	_	(LB (VX *	_	
29	t2695_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
30	t2696_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	 * ) )	_	
31	t2697_000	gên	VVINF	gân/ane+	_	(MF (VX * ) )	_	
32	t2698_000	an	PTKVZ	ane/+gân	_	(RB * ) ) )	_	
33	t2699_000	als	AVD	all-sô	_	(Frag *	_	
34	t2700_000	vile	AVD	vil(e)	_	 *	_	
35	t2701_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
36	t2702_000	mit	APPR	mit	_	(MF (PPX *	_	
37	t2703_000	rehtem	ADJA	rëht	Pos.Neut.Dat.Sg.st	(NX *	_	
38	t2704_000	gerihte	NA	ge-riht(e)	Dat.Sg	 * ) )	_	
39	t2705_000	und	KON	unte	_	 *	_	
40	t2706_000	klagelîche	AVD	klage-lîche	_	 *	_	
41	t2707_000	dâr	AVD	dâr	_	 * )	_	
42	t2707_001	gevordert	VVPP	vorder(e)n	_	(RB (VX *	_	
43	t2708_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	 * ) )	_	
44	t2709_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2710_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t2711_000	vihe	NA	vihe	Akk.Sg	(NX * ) )	_	
3	t2712_000	trîben	VVINF	trîben	_	(VX * )	_	
4	t2713_000	vüre	APPR	vür(e)	_	(PPX *	_	
5	t2714_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
6	t2715_000	hirten	NA	hirte	Akk.Sg	 * ) )	_	
7	t2716_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2717_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t2718_000	vihe	NA	vihe	Akk.Sg	(PreF (NX * ) )	_	
3	t2719_000	trîbet	VVFIN	trîben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t2720_000	anders	AVD	ander(e)s	_	(MF * )	_	
5	t2721_000	-	$_	_	_	 * )	_	
6	t2722_000	denne	KOKOM	danne	_	(Frag *	_	
7	t2723_000	vüre	APPR	vür(e)	_	(PPX *	_	
8	t2724_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
9	t2725_000	rehten	ADJA	rëht	Pos.Masc.Akk.Sg.*	 *	_	
10	t2726_000	hirten	NA	hirte	Akk.Sg	 * ) )	_	
11	t2727_000	-	$_	_	_	 * )	_	
12	t2728_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t2729_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t2730_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
15	t2731_000	von	APPR	von	_	(PostF (PPX *	_	
16	t2732_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
17	t2733_000	kuowe	NA	kuow	Dat.Sg	 * ) )	_	
18	t2734_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(NX *	_	
19	t2735_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
20	t2736_000	von	APPR	von	_	(Frag (PPX *	_	
21	t2737_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
22	t2738_000	varhe	NA	varh	Dat.Sg	 * ) )	_	
23	t2739_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
24	t2740_000	schillinc	NA	schilling	Akk.Sg	 * ) )	_	
25	t2741_000	von	APPR	von	_	(Frag (PPX *	_	
26	t2742_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
27	t2743_000	schâfe	NA	schâf	Dat.Sg	 * ) )	_	
28	t2744_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
29	t2745_000	schillinc	NA	schilling	Akk.Sg	 * )	_	
30	t2746_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2747_000	und	KON	unte	_	(S (Frag *	_	
2	t2748_000	swaz	PG	swër	Neut.Akk.Sg.st	(NX *	_	
3	t2749_000	vihes	NA	vihe	Gen.Sg	(NX * ) )	_	
4	t2750_000	man	PI	man	*.Nom.Sg.st	(PreF (NX *	_	
5	t2751_000	zuo	APPR	ze	_	(PPX *	_	
6	t2752_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
7	t2753_000	dritten	ADJA	dritt	Pos.Neut.Dat.Sg.wk	 *	_	
8	t2754_000	mâl	NA	mâl	Dat.Sg	 * ) ) ) )	_	
9	t2755_000	begrîfet	VVFIN	be-grîfen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t2756_000	-	$_	_	_	 * )	_	
11	t2757_000	beide	KON	bèide	_	(Frag *	_	
12	t2758_000	an	APPR	ane	_	(PPX *	_	
13	t2759_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
14	t2760_000	velde	NA	vëld	Dat.Sg	 * ) )	_	
15	t2761_000	oder	KON	oder	_	 *	_	
16	t2762_000	in	APPR	in	_	(PPX *	_	
17	t2763_000	den	DDART	dër	Masc.Dat.Sg	(NX *	_	
18	t2764_000	wîngarten	NA	wîn-gart(e)	Dat.Sg	 * ) ) )	_	
19	t2765_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
20	t2766_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t2767_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
22	t2768_000	trîben	VVINF	trîben	_	(RB (VX * ) )	_	
23	t2769_000	in	APPR	in	_	(PostF (PPX *	_	
24	t2770_000	unser	DPOSA	unser	Fem.Akk.Sg.0	(NX *	_	
25	t2771_000	küchene	NA	küchen(e)	Akk.Sg	 * ) ) )	_	
26	t2772_000	-	$_	_	_	 *	_	
27	t2773_000	als	KO*	all-sô	_	(Frag *	_	
28	t2774_000	von	APPR	von	_	(PPX *	_	
29	t2775_000	alter	NA	alter	Dat.Sg	(NX * ) )	_	
30	t2776_000	reht	ADJD	rëht	Pos....0	(PreF * )	_	
31	t2777_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
32	t2778_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2779_000	von	APPR	von	_	(S (PPX *	_	
2	t2780_000	den	DDS	dër	*.Dat.Pl	(NX * ) )	_	
3	t2781_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX * ) )	_	
4	t2782_000	pfæl	NA	pfâl	Akk.Pl	(MF (NX * )	_	
5	t2783_000	heim	AVD	hèim	_	 * )	_	
6	t2784_000	tragen	VVFIN	tragen	*.Pres.Pl.3	(RB (VX * ) )	_	
7	t2785_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2786_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t2787_000	ouch	AVD	ouch	_	(PreF * )	_	
3	t2788_000	kein	DIA	kèin	Masc.Akk.Sg.0	(NX *	_	
4	t2789_000	pfâl	NA	pfâl	Akk.Sg	 * )	_	
5	t2790_000	hin	AVD	hin(e)	_	(PreF *	_	
6	t2791_000	heim	AVD	hèim	_	 * )	_	
7	t2792_000	treit	VVFIN	tragen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t2793_000	-	$_	_	_	 * )	_	
9	t2794_000	als	KO*	all-sô	_	(Frag *	_	
10	t2795_000	dicke	AVD	dicke	_	(PreF * )	_	
11	t2796_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
12	t2797_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
13	t2798_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) ) )	_	
14	t2799_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
15	t2800_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t2801_000	einen	CARDA	èin	Masc.Akk.Sg.st	(MF (NX *	_	
17	t2802_000	schillinc	NA	schilling	Akk.Sg	 *	_	
18	t2803_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
19	t2804_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2805_000	in	APPR	in	_	(S (Frag (PPX *	_	
2	t2806_000	sweliches	DGS	swèl(i)ch	Masc.Gen.Sg.st	(NX * ) )	_	
3	t2807_000	hûse	NA	hûs	Dat.Sg	(NX * )	_	
4	t2808_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
5	t2809_000	ouch	AVD	ouch	_	(PreF *	_	
6	t2810_000	pfæle	NA	pfâl	Akk.Pl	(NX * ) )	_	
7	t2811_000	vindet	VVFIN	vinden	Ind.Pres.Sg.3	(LB (VX * ) ) )	_	
8	t2812_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t2813_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t2814_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(MF (NX *	_	
11	t2815_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
12	t2816_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2817_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t2818_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2819_000	ouch	AVD	ouch	_	(MF *	_	
4	t2820_000	boese	ADJA	boèse	Pos.Masc.Akk.Pl.st	(NX *	_	
5	t2821_000	pfæl	NA	pfâl	Akk.Pl	 *	_	
6	t2822_000	mit	APPR	mit	_	(PPX *	_	
7	t2823_000	karren	NA	karre	Dat.Pl	(NX * ) ) )	_	
8	t2824_000	heim	AVD	hèim	_	 * )	_	
9	t2825_000	vüeren	VVINF	vüèren	_	(RB (VX * ) )	_	
10	t2826_000	-	$_	_	_	 *	_	
11	t2827_000	swer	PG	swër	Masc.Nom.Sg.st	(Frag (NX * )	_	
12	t2828_000	die	DDS	dër	Masc.Akk.Pl	(PreF (NX * ) )	_	
13	t2829_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t2830_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2831_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t2832_000	pfæl	NA	pfâl	Gen.Pl	(NX * ) )	_	
3	t2833_000	burnenne	NA	burnen	Dat.Sg	(NX *	_	
4	t2834_000	ûf	APPR	ûf	_	(PPX *	_	
5	t2835_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
6	t2836_000	velde	NA	vëld	Dat.Sg	 * ) ) )	_	
7	t2837_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2838_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t2839_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2840_000	ouch	AVD	ouch	_	(MF *	_	
4	t2841_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
5	t2842_000	ûf	APPR	ûf	_	(PPX *	_	
6	t2843_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
7	t2844_000	velde	NA	vëld	Dat.Sg	 * ) )	_	
8	t2845_000	kein	DIA	kèin	Masc.Akk.Pl.0	(NX *	_	
9	t2846_000	pfæl	NA	pfâl	Akk.Pl	 * ) )	_	
10	t2847_000	burnen	VVINF	burnen	_	(RB (VX * ) )	_	
11	t2848_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2849_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t2850_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t2851_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t2852_000	-	$_	_	_	 * )	_	
5	t2853_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t2854_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t2855_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(MF (NX *	_	
8	t2856_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
9	t2857_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2858_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t2859_000	aber	AVD	aber	_	 *	_	
3	t2860_000	begriffen	VVPP	be-grîfen	_	(VX *	_	
4	t2861_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	 * )	_	
5	t2862_000	bî	APPR	bî	_	(PPX *	_	
6	t2863_000	naht	NA	naht	Dat.Sg	(NX *	_	
7	t2864_000	mit	APPR	mit	_	(PPX *	_	
8	t2865_000	pfæln	NA	pfâl	Dat.Pl	(NX * ) ) ) ) )	_	
9	t2866_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t2867_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t2868_000	zehen	CARDA	zëhen	Masc.Akk.Pl.0	(MF (NX *	_	
12	t2869_000	schillinge	NA	schilling	Akk.Pl	 *	_	
13	t2870_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
14	t2871_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2872_000	von	APPR	von	_	(S (PPX *	_	
2	t2873_000	den	DDS	dër	*.Dat.Pl	(NX * ) )	_	
3	t2874_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX * ) )	_	
4	t2875_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
5	t2876_000	wîn	NA	wîn	Akk.Sg	 * )	_	
6	t2877_000	und	KON	unte	_	 *	_	
7	t2878_000	gelt	NA	gëlt	Akk.Sg	(NX * ) )	_	
8	t2879_000	entragen	VVFIN	ent-tragen	*.Pres.Pl.3	(RB (VX * ) )	_	
9	t2880_000	ûz	APPR	ûz	_	(PostF (PPX *	_	
10	t2881_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
11	t2882_000	höven	NA	hov	Dat.Pl	 * ) ) )	_	
12	t2883_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2884_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t2885_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
3	t2886_000	andern	DIS	ander	Masc.Dat.Sg.wk	 * )	_	
4	t2887_000	sînen	DPOSA	sîn	Masc.Akk.Sg.st	(PreF (NX *	_	
5	t2888_000	wîn	NA	wîn	Akk.Sg	 * ) )	_	
6	t2889_000	entreit	VVFIN	ent-tragen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t2890_000	oder	KON	oder	_	(MF *	_	
8	t2891_000	sîne	DPOSA	sîn	Masc.Akk.Pl.st	(NX *	_	
9	t2892_000	pfenninge	NA	pfènning	Akk.Pl	 *	_	
10	t2893_000	in	APPR	in	_	(PPX *	_	
11	t2894_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
12	t2895_000	iegelîchen	DIA	iè-ge-lich	Masc.Dat.Sg.st	 *	_	
13	t2896_000	wînhove	NA	wîn-hov	Dat.Sg	 * ) ) ) ) )	_	
14	t2897_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
15	t2898_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
16	t2899_000	sehtzic	CARDA	sëh-zig	Masc.Nom.Pl.0	(NX *	_	
17	t2900_000	pfenninge	NA	pfènning	Nom.Pl	 * ) )	_	
18	t2901_000	-	$_	_	_	 * )	_	
19	t2902_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
20	t2903_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
21	t2904_000	geklaget	VVPP	klagen	_	(RB (VX * ) )	_	
22	t2905_000	vore	APPR	vor(e)	_	(PostF (PPX *	_	
23	t2906_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
24	t2907_000	râte	NA	rât	Dat.Sg	 * ) ) )	_	
25	t2908_000	-	$_	_	_	 * )	_	
26	t2909_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
27	t2910_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
28	t2911_000	die	DDART	dër	Masc.Akk.Pl	(MF (NX *	_	
29	t2912_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
30	t2913_000	wider	PTKVZ	wider(e)/+gëben	_	(RB (VX *	_	
31	t2914_000	geben	VVINF	gëben/wider(e)+	_	 * ) )	_	
32	t2915_000	-	$_	_	_	 * )	_	
33	t2916_000	und	KON	unte	_	(Frag *	_	
34	t2917_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
35	t2918_000	stat	NA	stat	Akk.Sg	 * )	_	
36	t2919_000	rûmen	VVINF	rûmen	_	(VX * )	_	
37	t2920_000	vier	CARDA	vièr	Fem.Akk.Pl.0	(NX *	_	
38	t2921_000	wochen	NA	woche	Akk.Pl	 * )	_	
39	t2922_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2923_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t2924_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
3	t2925_000	aber	AVD	aber	_	 *	_	
4	t2926_000	iezit	AVD	iè-zuo	_	 *	_	
5	t2927_000	über	APPR	über	_	(PPX *	_	
6	t2928_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(NX *	_	
7	t2929_000	pfenninge	NA	pfènning	Akk.Pl	 * ) ) )	_	
8	t2930_000	-	$_	_	_	 * )	_	
9	t2931_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
10	t2932_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t2933_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
12	t2934_000	ouch	AVD	ouch	_	 * )	_	
13	t2935_000	wider	PTKVZ	wider(e)/+gëben	_	(RB (VX *	_	
14	t2936_000	geben	VVINF	gëben/wider(e)+	_	 * ) )	_	
15	t2937_000	-	$_	_	_	 * )	_	
16	t2938_000	und	KON	unte	_	(Frag *	_	
17	t2939_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
18	t2940_000	stat	NA	stat	Akk.Sg	 * )	_	
19	t2941_000	rûmen	VVINF	rûmen	_	(VX * )	_	
20	t2942_000	ahte	CARDA	ahte	Fem.Akk.Pl.0	(NX *	_	
21	t2943_000	wochen	NA	woche	Akk.Pl	 * )	_	
22	t2944_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2945_000	von	APPR	von	_	(S (PPX *	_	
2	t2946_000	den	DDS	dër	*.Dat.Pl	(NX * ) )	_	
3	t2947_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX *	_	
4	t2948_000	mit	APPR	mit	_	(PPX *	_	
5	t2949_000	gewalt	NA	ge-walt	Dat.Sg	(NX * ) ) ) )	_	
6	t2950_000	den	DDART	dër	*.Dat.Pl	(MF (NX *	_	
7	t2951_000	liuten	NA	liut	Dat.Pl	 * ) )	_	
8	t2952_000	nemen	VVFIN	nëmen	*.Pres.Pl.3	(RB (VX * ) )	_	
9	t2953_000	daz	DDART	dër	Neut.Akk.Sg	(PostF (NX *	_	
10	t2954_000	ire	DPOSS	ir(e)	Neut.Akk.Sg.wk	 * ) )	_	
11	t2955_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2956_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t2957_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2958_000	ouch	AVD	ouch	_	(MF *	_	
4	t2959_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
5	t2960_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
6	t2961_000	andern	DIS	ander	Masc.Dat.Sg.wk	 *	_	
7	t2962_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
8	t2963_000	sînen	DPOSS	sîn	Neut.Gen.Sg.wk	 * ) )	_	
9	t2964_000	niht	NA	niht	Akk.Sg	(NX * ) )	_	
10	t2965_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
11	t2966_000	in	APPR	in	_	(PostF (PPX *	_	
12	t2967_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
13	t2968_000	wînhove	NA	wîn-hov	Dat.Sg	 * ) ) )	_	
14	t2969_000	-	$_	_	_	 *	_	
15	t2970_000	noch	KON	noh	_	(Frag *	_	
16	t2971_000	an	APPR	ane	_	(PPX *	_	
17	t2972_000	keiner	DIA	kèin	Fem.Dat.Sg.st	(NX *	_	
18	t2973_000	stat	NA	stat	Dat.Sg	 * ) )	_	
19	t2974_000	-	$_	_	_	 * ) )	_	
20	t2975_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
21	t2976_000	kume	VVFIN	komen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
22	t2977_000	von	APPR	von	_	(MF (PPX *	_	
23	t2978_000	spile	NA	spil	Dat.Sg	(NX * ) )	_	
24	t2979_000	oder	KON	oder	_	 *	_	
25	t2980_000	von	APPR	von	_	(PPX *	_	
26	t2981_000	andern	DIA	ander	*.Dat.Pl.st	(NX *	_	
27	t2982_000	sachen	NA	sache	Dat.Pl	 * ) ) )	_	
28	t2983_000	-	$_	_	_	 *	_	
29	t2984_000	âne	APPR	âne	_	(Frag (PPX *	_	
30	t2985_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
31	t2986_000	gerihtes	NA	ge-riht(e)	Gen.Sg	 * ) )	_	
32	t2987_000	boten	NA	bote	Akk.Pl	(NX * ) ) )	_	
33	t2988_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
34	t2989_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
35	t2990_000	danne	KOKOM	danne	_	(MF *	_	
36	t2991_000	als	AVD	all-sô	_	 *	_	
37	t2992_000	vile	AVD	vil(e)	_	 * )	_	
38	t2993_000	ob	KOUS	obe	_	(PostF (Cl (LB * )	_	
39	t2994_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
40	t2995_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
41	t2996_000	gerihtes	NA	ge-riht(e)	Gen.Sg	 * ) )	_	
42	t2997_000	boten	NA	bote	Akk.Pl	(NX *	_	
43	t2998_000	zuo	APPR	ze	_	(PPX *	_	
44	t2999_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
45	t3000_000	selben	DDA	sëlb	Neut.Dat.Sg.wk	 *	_	
46	t3001_000	mâle	NA	mâl	Dat.Sg	 * ) ) )	_	
47	t3002_000	niht	PTKNEG	niht	_	(VX *	_	
48	t3003_000	gehaben	VVINF	ge-haben	_	 * ) )	_	
49	t3004_000	müge	VMFIN	mügen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
50	t3005_000	-	$_	_	_	 *	_	
51	t3006_000	oder	KON	oder	_	(PostF (Cl (PrePreF * )	_	
52	t3007_000	daz	KOUS	dazz	_	(LB * )	_	
53	t3008_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
54	t3009_000	vore	APPR	vor(e)	_	(PPX *	_	
55	t3010_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
56	t3011_000	râte	NA	rât	Dat.Sg	 * ) ) )	_	
57	t3012_000	bewærn	VVINF	be-wæren	_	(VX * ) )	_	
58	t3013_000	müge	VMFIN	mügen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
59	t3014_000	-	$_	_	_	 * ) ) ) ) )	_	
60	t3015_000	sôgetân	ADJA	sô-ge-tân	Pos.Fem.Akk.Sg.0	(NX *	_	
61	t3016_000	bescheidenheit	NA	be-schèiden-hèit	Akk.Sg	 * )	_	
62	t3017_000	der	DRELS	dër	Fem.Gen.Sg	(Cl (LB (NX * ) )	_	
63	t3018_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
64	t3019_000	billîche	AVD	bil-lîche	_	 * )	_	
65	t3020_000	genieze	VVFIN	ge-nièzen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
66	t3021_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3022_000	von	APPR	von	_	(S (PPX *	_	
2	t3023_000	den	DDS	dër	*.Dat.Pl	(NX * ) )	_	
3	t3024_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX * ) )	_	
4	t3025_000	trincvaz	NA	trink-vazz	Akk.Pl	(MF (NX * ) )	_	
5	t3026_000	brechen	VVFIN	brëchen	*.Pres.Pl.3	(RB (VX * ) )	_	
6	t3027_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3028_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t3029_000	ouch	AVD	ouch	_	(PreF *	_	
3	t3030_000	die	DDART	dër	Neut.Akk.Pl	(NX *	_	
4	t3031_000	trincvaz	NA	trink-vazz	Akk.Pl	 * ) )	_	
5	t3032_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t3033_000	in	APPR	in	_	(MF (PPX *	_	
7	t3034_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
8	t3035_000	wînhöven	NA	wîn-hov	Dat.Pl	 * ) ) )	_	
9	t3036_000	-	$_	_	_	 * )	_	
10	t3037_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
11	t3038_000	sîn	VAFIN	sîn	Subj.Past.Pl.3	(LB (VX * ) )	_	
12	t3039_000	glas	NA	glas	Nom.Pl	(MF (NX * ) )	_	
13	t3040_000	-	$_	_	_	 *	_	
14	t3041_000	bechær	NA	bèchære	Nom.Pl	(Frag (NX * )	_	
15	t3042_000	-	$_	_	_	 * )	_	
16	t3043_000	oder	KON	oder	_	(Frag *	_	
17	t3044_000	krûsen	NA	krûse	Nom.Pl	(NX * )	_	
18	t3045_000	-	$_	_	_	 * )	_	
19	t3046_000	klein	ADJD	klèine	Pos....0	(Frag *	_	
20	t3047_000	oder	KON	oder	_	 *	_	
21	t3048_000	grôz	ADJD	grôz	Pos....0	 *	_	
22	t3049_000	-	$_	_	_	 * ) )	_	
23	t3050_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
24	t3051_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
25	t3052_000	vüre	APPR	vür(e)	_	(MF (PPX *	_	
26	t3053_000	iegelîchez	DIS	iè-ge-lich	Neut.Akk.Sg.st	(NX * ) ) )	_	
27	t3054_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
28	t3055_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(PostF (NX *	_	
29	t3056_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
30	t3057_000	-	$_	_	_	 *	_	
31	t3058_000	als	KO*	all-sô	_	(Frag *	_	
32	t3059_000	dicke	AVD	dicke	_	 *	_	
33	t3060_000	und	KON	unte	_	 *	_	
34	t3061_000	daz	DDS	dër	Neut.Nom.Sg	(PreF (NX * ) )	_	
35	t3062_000	geschihet	VVFIN	ge-schëhen	Ind.Pres.Sg.3	(LB (VX * ) ) ) )	_	
36	t3063_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
37	t3064_000	en	PTKNEG	ne	_	(LB (VX *	_	
38	t3064_001	sî	VAFIN	sîn	Subj.Pres.Sg.3	 * ) )	_	
39	t3065_000	denne	KOKOM	danne	_	(MF * )	_	
40	t3066_000	ob	KOUS	obe	_	(PostF (Cl (LB * )	_	
41	t3067_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
42	t3068_000	zuo	APPR	ze	_	 *	_	
43	t3068_001	den	DDART	dër	*.Dat.Pl	 *	_	
44	t3069_000	heiligen	ADJA	hèilig	Pos.*.Dat.Pl..%.*	 *	_	
45	t3070_000	geswern	VVINF	ge-swèr(e)n	_	(VX * ) )	_	
46	t3071_000	müge	VMFIN	mügen	Subj.Past.Sg.3	(RB (VX * ) )	_	
47	t3072_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
48	t3073_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
49	t3074_000	geschehen	VVPP	ge-schëhen	_	(RB (VX *	_	
50	t3075_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	 * ) )	_	
51	t3076_000	âne	APPR	âne	_	(PostF (PPX *	_	
52	t3077_000	geværde	NA	ge-vær(e)de	Akk.Sg	(NX * ) ) )	_	
53	t3078_000	-	$_	_	_	 * ) ) ) )	_	
54	t3079_000	und	KON	unte	_	(Frag *	_	
55	t3080_000	âne	APPR	âne	_	(PPX *	_	
56	t3081_000	sînen	DPOSA	sîn	Masc.Akk.Sg.st	(NX *	_	
57	t3082_000	danc	NA	dank	Akk.Sg	 * ) )	_	
58	t3083_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3084_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t3085_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t3086_000	schrôtærn	NA	schrôtære	Dat.Pl	 * ) )	_	
4	t3087_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3088_000	den	DDART	dër	*.Dat.Pl	(S (Cl (PreF (NX *	_	
2	t3089_000	schrôtærn	NA	schrôtære	Dat.Pl	 * ) )	_	
3	t3090_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t3091_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
5	t3092_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
6	t3093_000	von	APPR	von	_	(PostF (PPX *	_	
7	t3094_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
8	t3095_000	vuoder	NA	vuoder	Dat.Sg	 * ) )	_	
9	t3096_000	ahte	CARDA	ahte	Masc.Akk.Pl.0	(NX *	_	
10	t3097_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
11	t3098_000	-	$_	_	_	 * )	_	
12	t3099_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
13	t3100_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
14	t3101_000	tief	ADJD	tièf	Pos....0	(MF *	_	
15	t3102_000	oder	KON	oder	_	 *	_	
16	t3103_000	sîhte	ADJD	sîhte	Pos....0	 * )	_	
17	t3104_000	-	$_	_	_	 *	_	
18	t3105_000	an	APPR	ane	_	(Frag (PPX *	_	
19	t3106_000	groeze	NA	groèze	Akk.Pl	(NX *	_	
20	t3107_000	vazze	NA	vazz	Akk.Pl	 * ) )	_	
21	t3108_000	-	$_	_	_	 * ) )	_	
22	t3109_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
23	t3110_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
24	t3111_000	burgær	NA	burger(e)	Nom.Sg	(MF (NX * )	_	
25	t3112_000	oder	KON	oder	_	 *	_	
26	t3113_000	gast	NA	gast	Nom.Sg	(NX * ) )	_	
27	t3114_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3115_000	ouch	AVD	ouch	_	(S (Cl (PreF *	_	
2	t3116_000	vore	APPR	vor(e)	_	(PPX *	_	
3	t3117_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
4	t3118_000	stat	NA	stat	Dat.Sg	 * ) ) )	_	
5	t3119_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t3120_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
7	t3121_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
8	t3122_000	ahte	CARDA	ahte	Masc.Akk.Pl.0	(PostF (NX *	_	
9	t3123_000	pfenninge	NA	pfènning	Akk.Pl	 *	_	
10	t3124_000	von	APPR	von	_	(PPX *	_	
11	t3125_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
12	t3126_000	vuoder	NA	vuoder	Dat.Sg	 * ) ) ) )	_	
13	t3127_000	âne	KOUS	âne	_	(PostF (Cl (LB * )	_	
14	t3128_000	unser	DPOSA	unser	Masc.Nom.Pl.0	(MF (NX *	_	
15	t3129_000	hêrren	NA	hêrre	Nom.Pl	 *	_	
16	t3130_000	von	APPR	von	_	(PPX *	_	
17	t3131_000	houge	NA	houg	Dat.Sg	(NX * ) ) ) )	_	
18	t3132_000	geben	VVFIN	gëben	*.Pres.Pl.3	(RB (VX * ) )	_	
19	t3133_000	niur	AVD	niur	_	(PostF *	_	
20	t3134_000	sehs	CARDA	sëhs	Masc.Akk.Pl.0	(NX *	_	
21	t3135_000	pfenninge	NA	pfènning	Akk.Pl	 *	_	
22	t3136_000	von	APPR	von	_	(PPX *	_	
23	t3137_000	irem	DPOSA	ir(e)	Masc.Dat.Sg.st	(NX *	_	
24	t3138_000	wîne	NA	wîn	Dat.Sg	 * ) ) ) )	_	
25	t3139_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3140_000	ouch	AVD	ouch	_	(S (Frag *	_	
2	t3141_000	von	APPR	von	_	(PPX *	_	
3	t3142_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
4	t3143_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3144_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t3145_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t3146_000	ouch	AVD	ouch	_	(MF *	_	
4	t3147_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
5	t3148_000	schrôtærn	NA	schrôtære	Dat.Pl	 * ) )	_	
6	t3149_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
7	t3150_000	von	APPR	von	_	(PostF (PPX *	_	
8	t3151_000	ahtzehen	CARDA	aht-zëhen	*.Dat.Pl.0	(NX *	_	
9	t3152_000	einbern	NA	èin-ber	Dat.Pl	 * ) )	_	
10	t3153_000	ahtzehen	CARDA	aht-zëhen	Masc.Akk.Pl.0	(NX *	_	
11	t3154_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
12	t3155_000	-	$_	_	_	 * )	_	
13	t3156_000	legen	VVFIN	lègen/abe+	*.Pres.Pl.3	(Cl (LB (VX * ) )	_	
14	t3157_000	si	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
15	t3157_001	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
16	t3158_000	abe	PTKVZ	abe/+lègen	_	(RB * )	_	
17	t3159_000	-	$_	_	_	 *	_	
18	t3160_000	siben	CARDA	siben	Masc.Akk.Pl.0	(Frag *	_	
19	t3161_000	und	KON	unte	_	 *	_	
20	t3162_000	zweinzic	CARDA	zwèin-zig	Masc.Akk.Pl.0	(NX *	_	
21	t3163_000	pfenninge	NA	pfènning	Akk.Pl	 * )	_	
22	t3164_000	-	$_	_	_	 * )	_	
23	t3165_000	von	APPR	von	_	(Frag (PPX *	_	
24	t3166_000	sibenzehen	CARDA	siben-zëhen	*.Dat.Pl.0	(NX *	_	
25	t3167_000	einbern	NA	èin-ber	Dat.Pl	 * ) )	_	
26	t3168_000	sechzehen	CARDA	sëh-zëhen	Masc.Akk.Pl.0	(NX *	_	
27	t3169_000	pfenninge	NA	pfènning	Akk.Pl	 * )	_	
28	t3170_000	-	$_	_	_	 * ) )	_	
29	t3171_000	legen	VVFIN	lègen/abe+	*.Pres.Pl.3	(Cl (LB (VX * ) )	_	
30	t3172_000	si	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
31	t3173_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
32	t3174_000	abe	PTKVZ	abe/+lègen	_	(RB * ) )	_	
33	t3175_000	man	PI	man	*.Nom.Sg.st	(Cl (PreF (NX * ) )	_	
34	t3176_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
35	t3177_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
36	t3178_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
37	t3179_000	schillinge	NA	schilling	Akk.Pl	 * ) )	_	
38	t3180_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
39	t3181_000	von	APPR	von	_	(Frag (PPX *	_	
40	t3182_000	sechzehen	CARDA	sëh-zëhen	*.Dat.Pl.0	(NX *	_	
41	t3183_000	einbern	NA	èin-ber	Dat.Pl	 * ) )	_	
42	t3184_000	vierzehen	CARDS	vièr-zëhen	Masc.Akk.Pl.0	(NX * )	_	
43	t3185_000	-	$_	_	_	 * ) )	_	
44	t3186_000	legen	VVFIN	lègen/abe+	*.Pres.Pl.3	(Cl (LB (VX * ) )	_	
45	t3187_000	si	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
46	t3188_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
47	t3189_000	abe	PTKVZ	abe/+lègen	_	(RB * )	_	
48	t3190_000	-	$_	_	_	 * )	_	
49	t3191_000	man	PI	man	*.Nom.Sg.st	(Cl (PreF (NX * ) )	_	
50	t3192_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
51	t3193_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
52	t3194_000	ahtzehen	CARDA	aht-zëhen	Masc.Akk.Pl.0	(NX *	_	
53	t3195_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
54	t3196_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
55	t3197_000	-	$_	_	_	 *	_	
56	t3198_000	von	APPR	von	_	(Frag (PPX *	_	
57	t3199_000	vierzehen	CARDA	vièr-zëhen	*.Dat.Pl.0	(NX *	_	
58	t3200_000	einbern	NA	èin-ber	Dat.Pl	 * ) )	_	
59	t3201_000	zehen	CARDA	zëhen	Masc.Akk.Pl.0	(NX *	_	
60	t3202_000	pfenninge	NA	pfènning	Akk.Pl	 * )	_	
61	t3203_000	-	$_	_	_	 * ) )	_	
62	t3204_000	legen	VVFIN	lègen/abe+	*.Pres.Pl.3	(Cl (LB (VX * ) )	_	
63	t3205_000	si	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
64	t3206_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
65	t3207_000	abe	PTKVZ	abe/+lègen	_	(RB * )	_	
66	t3208_000	-	$_	_	_	 * )	_	
67	t3209_000	man	PI	man	*.Nom.Sg.st	(Cl (PreF (NX * ) )	_	
68	t3210_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
69	t3211_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
70	t3212_000	vünvzehen	CARDS	vünv-zëhen	Masc.Akk.Pl.0	(NX * ) )	_	
71	t3213_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
72	t3214_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3215_000	swelich	DGA	swèl(i)ch	Masc.Nom.Sg.0	(S (Frag (NX *	_	
2	t3216_000	schrôtær	NA	schrôtære	Nom.Sg	 * )	_	
3	t3217_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
4	t3218_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t3219_000	-	$_	_	_	 * )	_	
6	t3220_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t3221_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t3222_000	sechzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(MF (NX *	_	
9	t3223_000	pfenninge	NA	pfènning	Akk.Pl	 *	_	
10	t3224_000	zuo	APPR	ze	_	(PPX *	_	
11	t3225_000	bezzerunge	NA	bèzzerunge	Dat.Sg	(NX * ) ) ) )	_	
12	t3226_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3227_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t3228_000	liumunde	NA	liumunt	Dat.Sg	(NX *	_	
3	t3229_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
4	t3230_000	liute	NA	liut	Gen.Pl	 * ) ) )	_	
5	t3231_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3232_000	swelicher	DGS	swèl(i)ch	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t3233_000	ouch	AVD	ouch	_	 *	_	
3	t3234_000	umbe	APPR	umbe	_	(PPX *	_	
4	t3235_000	keine	DIA	kèin	Fem.Akk.Sg.st	(NX *	_	
5	t3236_000	missetât	NA	misse-tât	Akk.Sg	 * ) )	_	
6	t3237_000	verliumuntet	VVPP	ver-liumunten	_	(VX *	_	
7	t3238_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
8	t3239_000	-	$_	_	_	 * )	_	
9	t3240_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
10	t3241_000	her	PAVD	hër(e)/+nâh	_	(LB (VX *	_	
11	t3242_000	nâch	PAVAP	nâh/hër(e)+	_	 *	_	
12	t3243_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	 * ) )	_	
13	t3244_000	-	$_	_	_	 * )	_	
14	t3245_000	dem	DDS	dër	Masc.Dat.Sg	(Cl (PreF (NX * ) )	_	
15	t3246_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t3247_000	man	PI	man	*.Nom.Sg.st	(MF (NX *	_	
17	t3248_000	vüre	APPR	vür(e)	_	(PPX *	_	
18	t3249_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
19	t3250_000	rât	NA	rât	Akk.Sg	 * ) ) ) )	_	
20	t3251_000	gebieten	VVINF	ge-bièten	_	(RB (VX * ) )	_	
21	t3252_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3253_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t3254_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t3255_000	dar	AVD	dar(e)	_	 * )	_	
4	t3256_000	niht	PTKNEG	niht	_	(RB (VX *	_	
5	t3257_000	kumen	VVINF	komen	_	 * ) ) )	_	
6	t3258_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t3259_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t3260_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
9	t3261_000	rât	NA	rât	Nom.Sg	 * )	_	
10	t3262_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
11	t3263_000	næhestwentigen	ADJA	næhest-wèntig	Pos.*.Dat.Pl.*	 *	_	
12	t3264_000	vriunden	NA	vriunt	Dat.Pl	 * ) )	_	
13	t3265_000	gebieten	VVINF	ge-bièten	_	(RB (VX * ) )	_	
14	t3266_000	-	$_	_	_	 *	_	
15	t3267_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
16	t3268_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
17	t3269_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) )	_	
18	t3270_000	underwîsen	VVFIN	unter-wîsen	*.Pres.Pl.3	(RB (VX * ) )	_	
19	t3271_000	-	$_	_	_	 *	_	
20	t3272_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
21	t3273_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
22	t3274_000	mit	APPR	mit	_	(PPX *	_	
23	t3275_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) ) ) )	_	
24	t3276_000	dâ	PAVD	dâr/+vür(e)	_	(RB (VX *	_	
25	t3277_000	vüre	PAVAP	vür(e)/dâr+	_	 *	_	
26	t3278_000	kume	VVFIN	komen	Subj.Pres.Sg.3	 * ) )	_	
27	t3279_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3280_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t3281_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
3	t3282_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
4	t3283_000	niht	NA	niht	Akk.Sg	(NX * ) )	_	
5	t3284_000	en	PTKNEG	ne	_	(RB (VX *	_	
6	t3284_001	tuon	VVINF	tuon	_	 * ) )	_	
7	t3285_000	-	$_	_	_	 * )	_	
8	t3286_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t3287_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t3288_000	der	DDART	dër	*.Gen.Pl	(MF (NX *	_	
11	t3289_000	schultheizen	NA	schuld-hèize	Gen.Pl	 * )	_	
12	t3290_000	einer	CARDS	èin	Masc.Nom.Sg.st	(NX * ) )	_	
13	t3291_000	-	$_	_	_	 *	_	
14	t3292_000	und	KON	unte	_	(Frag *	_	
15	t3293_000	sie	PPER	ër	Masc.Nom.Pl.3	(NX *	_	
16	t3294_000	mit	APPR	mit	_	(PPX *	_	
17	t3295_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * ) ) )	_	
18	t3296_000	-	$_	_	_	 * ) )	_	
19	t3297_000	und	KON	unte	_	(Frag *	_	
20	t3298_000	sweliche	DGS	swèl(i)ch	Masc.Akk.Pl.st	(NX * )	_	
21	t3299_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
22	t3300_000	rât	NA	rât	Nom.Sg	 * )	_	
23	t3301_000	dar	AVD	dar(e)	_	 *	_	
24	t3301_001	zuo	APPR	ze	_	(PPX *	_	
25	t3302_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
26	t3303_000	bescheiden	VVPP	be-schèiden	_	(VX * )	_	
27	t3304_000	-	$_	_	_	 * )	_	
28	t3305_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
29	t3306_000	den	DDS	dër	Masc.Akk.Sg	(MF (NX *	_	
30	t3307_000	vüre	APPR	vür(e)	_	(PPX *	_	
31	t3308_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
32	t3309_000	rât	NA	rât	Akk.Sg	 *	_	
33	t3310_000	mit	APPR	mit	_	(PPX *	_	
34	t3311_000	gerihte	NA	ge-riht(e)	Dat.Sg	(NX * ) ) ) ) )	_	
35	t3312_000	bringen	VVINF	bringen	_	(VX * ) )	_	
36	t3313_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3314_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t3315_000	bekennet	VVFIN	be-kènnen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t3316_000	denne	AVD	danne	_	(MF *	_	
4	t3317_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
5	t3318_000	rât	NA	rât	Nom.Sg	 * ) )	_	
6	t3319_000	-	$_	_	_	 * )	_	
7	t3320_000	und	KON	unte	_	(Cl (PrePreF * )	_	
8	t3321_000	willeküret	VVFIN	wille-kür(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t3322_000	-	$_	_	_	 * )	_	
10	t3323_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
11	t3324_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
12	t3325_000	schuldic	ADJD	schuldig	Pos....0	 *	_	
13	t3326_000	an	APPR	ane	_	(PPX *	_	
14	t3327_000	keinen	DIA	kèin	*.Dat.Pl.st	(NX *	_	
15	t3328_000	dingen	NA	ding	Dat.Pl	 * ) ) )	_	
16	t3329_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX * ) )	_	
17	t3330_000	-	$_	_	_	 *	_	
18	t3331_000	des	DRELS	dër	Neut.Gen.Sg	(PostF (Cl (LB (NX * ) )	_	
19	t3332_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
20	t3333_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) )	_	
21	t3334_000	zîhet	VVFIN	zîhen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
22	t3335_000	-	$_	_	_	 * ) )	_	
23	t3336_000	swaz	PG	swër	Neut.Akk.Sg.st	(Frag (NX * )	_	
24	t3337_000	danne	AVD	danne	_	 *	_	
25	t3338_000	pîn	NA	pîn	Gen.Sg	(NX * )	_	
26	t3339_000	unde	KON	unte	_	 *	_	
27	t3340_000	buoze	NA	buoze	Gen.Sg	(NX * )	_	
28	t3341_000	-	$_	_	_	 * )	_	
29	t3342_000	und	KON	unte	_	(Frag *	_	
30	t3343_000	ouch	AVD	ouch	_	(PreF * )	_	
31	t3344_000	bezzerunge	NA	bèzzerunge	Gen.Sg	(NX * )	_	
32	t3345_000	im	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
33	t3346_000	der	DDS	dër	Masc.Nom.Sg	(PreF (NX * ) )	_	
34	t3347_000	dâ	PAVD	dâr/+ûf	_	(LB (VX *	_	
35	t3348_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
36	t3349_000	setzet	VVFIN	sètzen	Ind.Pres.Sg.3	 * ) )	_	
37	t3350_000	-	$_	_	_	 * )	_	
38	t3351_000	nâch	APPR	nâh	_	(Frag (PPX *	_	
39	t3352_000	sînem	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
40	t3353_000	liumunde	NA	liumunt	Dat.Sg	 * ) )	_	
41	t3354_000	und	KON	unte	_	 *	_	
42	t3355_000	nâch	APPR	nâh	_	(PPX *	_	
43	t3356_000	sîner	DPOSA	sîn	Fem.Dat.Sg.st	(NX *	_	
44	t3357_000	missetât	NA	misse-tât	Dat.Sg	 * ) )	_	
45	t3358_000	-	$_	_	_	 * ) )	_	
46	t3359_000	die	DDS	dër	Fem.Akk.Pl	(Cl (PreF (NX * ) )	_	
47	t3360_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
48	t3361_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
49	t3362_000	alle	DIN	all	Fem.Akk.Pl.st	 * ) )	_	
50	t3363_000	lîden	VVINF	lîden	_	(RB (VX * ) )	_	
51	t3364_000	âne	APPR	âne	_	(PostF (PPX *	_	
52	t3365_000	alle	DIA	all	Fem.Akk.Sg.st	(NX *	_	
53	t3366_000	widerrede	NA	wider-rède	Akk.Sg	 * ) ) )	_	
54	t3367_000	-	$_	_	_	 *	_	
55	t3368_000	und	KON	unte	_	(Frag *	_	
56	t3369_000	ouch	AVD	ouch	_	 *	_	
57	t3370_000	âne	APPR	âne	_	(PPX *	_	
58	t3371_000	alle	DIA	all	Fem.Akk.Sg.st	(NX *	_	
59	t3372_000	genâde	NA	ge-nâde	Akk.Sg	 * ) )	_	
60	t3373_000	-	$_	_	_	 * )	_	
61	t3374_000	wanne	KO*	wante	_	(Frag *	_	
62	t3375_000	die	DDART	dër	Fem.Akk.Sg	(PreF (NX *	_	
63	t3376_000	selben	DDA	sëlb	Fem.Akk.Sg.wk	 *	_	
64	t3377_000	bezzerunge	NA	bèzzerunge	Akk.Sg	 * ) )	_	
65	t3378_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX (VX * )	_	
66	t3379_000	noch	KON	noh	_	 *	_	
67	t3380_000	en	PTKNEG	ne	_	(VX *	_	
68	t3380_001	mac	VMFIN	mügen	Ind.Pres.Sg.3	 * ) ) )	_	
69	t3381_000	nieman	DIA	niè-mann	*.Nom.Sg.st	(MF * )	_	
70	t3382_000	abe	PTKVZ	abe/+ge-lâzen	_	(RB (VX *	_	
71	t3382_001	gelâzen	VVINF	ge-lâzen/abe+	_	 * ) )	_	
72	t3383_000	-	$_	_	_	 * ) )	_	
73	t3384_000	noch	KON	noh	_	(Frag *	_	
74	t3385_000	von	APPR	von	_	(PPX *	_	
75	t3386_000	der	DDS	dër	Fem.Dat.Sg	(NX * ) )	_	
76	t3387_000	geledigen	VVINF	ge-lèdigen	_	(VX * )	_	
77	t3388_000	-	$_	_	_	 *	_	
78	t3389_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
79	t3390_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * ) )	_	
80	t3391_000	verworht	VVPP	ver-wirken	_	(RB (VX *	_	
81	t3392_000	hât	VAFIN	haben	Ind.Pres.Sg.3	 * ) )	_	
82	t3393_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3394_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t3395_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
3	t3396_000	juden	NA	jude	Gen.Pl	 *	_	
4	t3397_000	vische	NA	visch	Gen.Pl	 * ) )	_	
5	t3398_000	koufenne	NA	koufen	Dat.Sg	(NX * )	_	
6	t3399_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3400_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t3401_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t3402_000	ouch	AVD	ouch	_	(MF *	_	
4	t3403_000	kein	DIA	kèin	Masc.Nom.Sg.0	(NX *	_	
5	t3404_000	jude	NA	jude	Nom.Sg	 * )	_	
6	t3405_000	noch	KON	noh	_	 *	_	
7	t3406_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
8	t3407_000	von	APPR	von	_	(PPX *	_	
9	t3408_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
10	t3409_000	wegen	NA	wëg	Dat.Pl	 * ) ) )	_	
11	t3410_000	-	$_	_	_	 * )	_	
12	t3411_000	an	APPR	ane	_	(Frag (PPX *	_	
13	t3412_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
14	t3413_000	vrîtage	NA	vrî-tag	Dat.Sg	 * ) )	_	
15	t3414_000	noch	KON	noh	_	 *	_	
16	t3415_000	an	APPR	ane	_	(PPX *	_	
17	t3416_000	andern	DIA	ander	*.Dat.Pl.st	(NX *	_	
18	t3417_000	gebannen	ADJA	bannen	Pos.*.Dat.Pl.0	 *	_	
19	t3418_000	vastetagen	NA	vaste-tag	Dat.Pl	 * ) )	_	
20	t3419_000	vische	NA	visch	Akk.Pl	(NX * )	_	
21	t3420_000	koufen	VVINF	koufen	_	(VX * )	_	
22	t3421_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3422_000	swelich	DGA	swèl(i)ch	Masc.Nom.Sg.0	(S (Frag (NX *	_	
2	t3423_000	vischær	NA	vischære	Nom.Sg	 * )	_	
3	t3424_000	oder	KON	oder	_	 *	_	
4	t3425_000	jude	NA	jude	Nom.Sg	(NX * )	_	
5	t3426_000	-	$_	_	_	 * )	_	
6	t3427_000	noch	KON	noh	_	(Frag *	_	
7	t3428_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
8	t3429_000	von	APPR	von	_	(PPX *	_	
9	t3430_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
10	t3431_000	wegen	NA	wëg	Dat.Pl	 * ) )	_	
11	t3432_000	-	$_	_	_	 * )	_	
12	t3433_000	an	APPR	ane	_	(Frag (PPX *	_	
13	t3434_000	koufenne	NA	koufen	Dat.Sg	(NX * ) )	_	
14	t3435_000	-	$_	_	_	 * )	_	
15	t3436_000	oder	KON	oder	_	(Frag *	_	
16	t3437_000	an	APPR	ane	_	(PPX *	_	
17	t3438_000	verkoufene	NA	ver-koufen	Dat.Sg	(NX * ) )	_	
18	t3439_000	bruch	ADJD	bruch	Pos....0	(PreF * )	_	
19	t3440_000	würde	VAFIN	wërden	Subj.Past.Sg.3	(LB (VX * ) )	_	
20	t3441_000	-	$_	_	_	 * )	_	
21	t3442_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
22	t3443_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
23	t3444_000	zuo	APPR	ze	_	(MF (PPX *	_	
24	t3445_000	bezzerunge	NA	bèzzerunge	Dat.Sg	(NX * ) ) )	_	
25	t3446_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
26	t3447_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(PostF (NX *	_	
27	t3448_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
28	t3449_000	-	$_	_	_	 *	_	
29	t3450_000	als	KO*	all-sô	_	(Frag *	_	
30	t3451_000	dicke	AVD	dicke	_	(PreF * )	_	
31	t3452_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
32	t3453_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
33	t3454_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
34	t3455_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3456_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t3457_000	koufe	NA	kouf	Dat.Sg	(NX *	_	
3	t3458_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
4	t3459_000	pfæle	NA	pfâl	Gen.Pl	 * ) ) )	_	
5	t3460_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3461_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t3462_000	pfæle	NA	pfâl	Akk.Pl	(PreF (NX * ) )	_	
3	t3463_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t3464_000	-	$_	_	_	 * )	_	
5	t3465_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t3466_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t3467_000	ie	AVD	iè	_	(MF *	_	
8	t3468_000	die	DDART	dër	Fem.Akk.Pl	(NX *	_	
9	t3469_000	bürden	NA	bürde	Akk.Pl	 *	_	
10	t3470_000	mit	APPR	mit	_	(PPX *	_	
11	t3471_000	vünvzic	CARDA	vünv-zig	*.Dat.Pl.0	(NX *	_	
12	t3472_000	pfæln	NA	pfâl	Dat.Pl	 * ) ) )	_	
13	t3473_000	gebunden	VVPP	binten	_	(VX * )	_	
14	t3474_000	haben	VAINF	haben	_	(VX * ) )	_	
15	t3475_000	-	$_	_	_	 *	_	
16	t3476_000	und	KON	unte	_	(Frag *	_	
17	t3477_000	niht	PTKNEG	niht	_	 *	_	
18	t3478_000	mêr	ADJA	mêr(e)	Comp.Neut.Akk.Sg.0	 *	_	
19	t3479_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3480_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t3481_000	aber	AVD	aber	_	(PreF *	_	
3	t3482_000	anders	AVD	ander(e)s	_	 * )	_	
4	t3483_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t3484_000	-	$_	_	_	 * )	_	
6	t3485_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
7	t3486_000	koufet	VVFIN	koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t3487_000	-	$_	_	_	 * )	_	
9	t3488_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t3489_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t3490_000	ie	AVD	iè	_	(MF *	_	
12	t3491_000	von	APPR	von	_	(PPX *	_	
13	t3492_000	hundert	ADJA	hundert	Comp.*.Dat.Pl.0	(NX *	_	
14	t3493_000	bürden	NA	bürde	Dat.Pl	 * ) )	_	
15	t3494_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
16	t3495_000	schillinge	NA	schilling	Akk.Pl	 * ) )	_	
17	t3496_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3497_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(S (Cl (LB (VX (VX * )	_	
2	t3498_000	oder	KON	oder	_	 *	_	
3	t3499_000	koufet	VVFIN	koufen	Ind.Pres.Sg.3	(VX * ) ) )	_	
4	t3500_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
5	t3501_000	minner	ADJA	minner	Comp.Neut.Akk.Sg.0	 * )	_	
6	t3502_000	-	$_	_	_	 * )	_	
7	t3503_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t3504_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t3505_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
10	t3506_000	als	KO*	all-sô	_	(Frag *	_	
11	t3507_000	sich	PRF	sich	Akk	(PreF (NX * ) )	_	
12	t3508_000	dâ	PAVD	dâr/+vür(e)	_	(LB (VX *	_	
13	t3509_000	vüre	PAVAP	vür(e)/dâr+	_	 *	_	
14	t3510_000	gebüret	VVFIN	ge-bür(e)n	Ind.Pres.Sg.3	 * ) )	_	
15	t3511_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3512_000	von	APPR	von	_	(S (PPX *	_	
2	t3513_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t3514_000	geboten	NA	ge-bot	Dat.Pl	 * ) )	_	
4	t3515_000	die	DRELS	dër	Neut.Akk.Pl	(Cl (LB (NX * ) )	_	
5	t3516_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
6	t3517_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(RB (VX * ) )	_	
7	t3518_000	in	APPR	in	_	(PostF (PPX *	_	
8	t3519_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
9	t3520_000	râte	NA	rât	Dat.Sg	 * ) ) )	_	
10	t3521_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3522_000	swem	PG	swër	Masc.Dat.Sg.st	(S (Frag (NX * )	_	
2	t3523_000	ouch	AVD	ouch	_	 *	_	
3	t3524_000	geboten	VVPP	ge-bièten	_	(VX *	_	
4	t3525_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	 * )	_	
5	t3526_000	vüre	APPR	vür(e)	_	(PPX *	_	
6	t3527_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
7	t3528_000	râte	NA	rât	Akk.Sg	 * ) )	_	
8	t3529_000	-	$_	_	_	 * )	_	
9	t3530_000	versitzet	VVFIN	ver-sitzen	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
10	t3531_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
11	t3532_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
12	t3533_000	êrste	ADJA	êr(e)st	Sup.Neut.Akk.Sg.wk	 *	_	
13	t3534_000	gebot	NA	ge-bot	Akk.Sg	 * ) )	_	
14	t3535_000	-	$_	_	_	 * )	_	
15	t3536_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
16	t3537_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t3538_000	einen	CARDA	èin	Masc.Akk.Sg.st	(MF (NX *	_	
18	t3539_000	schillinc	NA	schilling	Akk.Sg	 *	_	
19	t3540_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3541_000	versitzet	VVFIN	ver-sitzen	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t3542_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t3543_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
4	t3544_000	ander	DIS	ander	Neut.0.Akk.Sg.wk	 * ) )	_	
5	t3545_000	-	$_	_	_	 * )	_	
6	t3546_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t3547_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t3548_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
9	t3549_000	sehtzic	CARDS	sëh-zig	Masc.Akk.Pl.0	(NX * ) )	_	
10	t3550_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3551_000	versitzet	VVFIN	ver-sitzen	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t3552_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t3553_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
4	t3554_000	dritte	ADJS	dritt	Sup.Neut.Akk.Sg.wk	 * ) )	_	
5	t3555_000	-	$_	_	_	 * )	_	
6	t3556_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t3557_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t3558_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
9	t3559_000	zwirent	AVD	zwir(e)n(t)	_	 *	_	
10	t3560_000	als	AVD	all-sô	_	 *	_	
11	t3561_000	vile	AVD	vil(e)	_	 * )	_	
12	t3562_000	-	$_	_	_	 *	_	
13	t3563_000	swer	PG	swër	Masc.Nom.Sg.st	(Frag (NX *	_	
14	t3564_000	er	PPER	ër	Masc.Nom.Sg.3	 * )	_	
15	t3565_000	halt	AVD	halt	_	(PreF * )	_	
16	t3566_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t3567_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3568_000	und	KON	unte	_	(S (Frag *	_	
2	t3569_000	der	DDART	dër	Fem.Gen.Sg	(PreF (NX *	_	
3	t3570_000	buoze	NA	buoze	Gen.Sg	 * ) )	_	
4	t3571_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t3572_000	man	PI	man	*.Nom.Sg.st	(MF (NX *	_	
6	t3573_000	durch	APPR	durh	_	(PPX *	_	
7	t3574_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
8	t3575_000	vrevel	NA	vrèvel(e)	Akk.Sg	 * ) ) )	_	
9	t3576_000	niemanne	DIA	niè-mann	*.Dat.Sg.st	 * )	_	
10	t3577_000	niht	PTKNEG	niht	_	(RB (VX *	_	
11	t3578_000	lâzen	VVINF	lâzen	_	 * ) )	_	
12	t3579_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3580_000	von	APPR	von	_	(S (PPX *	_	
2	t3581_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t3582_000	liuten	NA	liut	Dat.Pl	 * ) )	_	
4	t3583_000	die	DRELS	dër	Masc,Neut.Nom.Pl	(Cl (LB (NX *	_	
5	t3584_000	ûf	APPR	ûf	_	(PPX *	_	
6	t3585_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
7	t3586_000	hove	NA	hov	Dat.Sg	 * ) ) ) )	_	
8	t3587_000	gesezzen	VVPP	sitzen	_	(RB (VX *	_	
9	t3588_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	 * ) )	_	
10	t3589_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3590_000	wir	PPER	wir	Nom.Pl.1	(S (Cl (PreF (NX * ) )	_	
2	t3591_000	haben	VAFIN	haben	*.Pres.Pl.1	(LB (VX * ) )	_	
3	t3592_000	ouch	AVD	ouch	_	(MF * )	_	
4	t3593_000	gemachet	VVPP	machen	_	(RB (VX * ) )	_	
5	t3594_000	in	APPR	in	_	(PostF (PPX *	_	
6	t3595_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
7	t3596_000	râte	NA	rât	Dat.Sg	 * ) ) )	_	
8	t3597_000	-	$_	_	_	 *	_	
9	t3598_000	durch	APPR	durh	_	(Frag (PPX *	_	
10	t3599_000	gemeine	ADJA	ge-mèine	Pos.Masc.Akk.Sg.0	(NX *	_	
11	t3600_000	nutz	NA	nutz	Akk.Sg	 * ) )	_	
12	t3601_000	-	$_	_	_	 * )	_	
13	t3602_000	und	KON	unte	_	(Frag *	_	
14	t3603_000	vride	NA	vride	Akk.Sg	(NX *	_	
15	t3604_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
16	t3605_000	êrbærn	ADJA	êr-bære	Pos.*.Gen.Pl.wk	 *	_	
17	t3606_000	liute	NA	liut	Gen.Pl	 * ) )	_	
18	t3607_000	-	$_	_	_	 *	_	
19	t3608_000	die	DRELS	dër	Masc,Neut.Nom.Pl	(Cl (LB (NX * ) )	_	
20	t3609_000	dâ	AVD	dâr	_	(MF * )	_	
21	t3610_000	gesezzen	VVPP	sitzen	_	(RB (VX *	_	
22	t3611_000	sîn	VAFIN	sîn	*.Pres.Pl.3	 * ) )	_	
23	t3612_000	ûf	APPR	ûf	_	(PostF (PPX *	_	
24	t3613_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
25	t3614_000	hove	NA	hov	Dat.Sg	 * ) ) )	_	
26	t3615_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3616_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Cl (PreF (NX *	_	
2	t3617_000	der	DDS	dër	Masc.Nom.Sg	 * ) )	_	
3	t3618_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t3619_000	-	$_	_	_	 * )	_	
5	t3620_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
6	t3621_000	ein	DIART	èin	Fem.Akk.Sg.0	(MF *	_	
7	t3622_000	unendelîche	AVD	un-ènte-lîche	_	 *	_	
8	t3623_000	versprochene	ADJA	ver-sprëchen	Pos.Fem.Akk.Sg.st	(NX *	_	
9	t3624_000	vrouwen	NA	vrouwe	Akk.Sg	 * ) )	_	
10	t3625_000	hûset	VVFIN	hûsen	Ind.Pres.Sg.3	(RB (VX (VX * )	_	
11	t3626_000	oder	KON	oder	_	 *	_	
12	t3627_000	herberget	VVFIN	hèr(e)-bërgen	Ind.Pres.Sg.3	(VX * ) ) )	_	
13	t3628_000	-	$_	_	_	 * )	_	
14	t3629_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
15	t3630_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
16	t3631_000	des	DDART	dër	Masc.Gen.Sg	(MF (NX *	_	
17	t3632_000	nahtes	NA	naht	Gen.Sg	 * )	_	
18	t3633_000	oder	KON	oder	_	 *	_	
19	t3634_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
20	t3635_000	tages	NA	tag	Gen.Sg	 * ) )	_	
21	t3636_000	-	$_	_	_	 *	_	
22	t3637_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
23	t3638_000	keiner	DIA	kèin	*.Gen.Pl.st	(MF (NX *	_	
24	t3638_001	leie	NA	lèie	Gen.Pl	 * )	_	
25	t3639_000	unvuore	NA	un-vuore	Nom.Sg	(NX * ) )	_	
26	t3640_000	dâr	PAVD	dâr/+inne	_	(RB (VX *	_	
27	t3641_000	inne	PAVAP	inne/dâr+	_	 *	_	
28	t3642_000	geschæhe	VVFIN	ge-schëhen	Subj.Past.Sg.3	 * ) )	_	
29	t3643_000	-	$_	_	_	 * ) )	_	
30	t3644_000	oder	KON	oder	_	(Frag *	_	
31	t3645_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
32	t3646_000	liuten	NA	liut	Dat.Pl	 * )	_	
33	t3647_000	dâ	PAVD	dâr/+von(e)	_	 *	_	
34	t3648_000	von	PAVAP	von(e)/dâr+	_	 *	_	
35	t3649_000	schade	NA	schade	Nom.Sg	(NX * )	_	
36	t3650_000	widervarn	VVINF	wider-var(e)n	_	(PreF (VX * ) )	_	
37	t3651_000	mohte	VMFIN	mügen	(Subj).Past.Sg.3	(LB (VX * ) )	_	
38	t3652_000	-	$_	_	_	 * ) )	_	
39	t3653_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
40	t3654_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
41	t3655_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
42	t3656_000	dem	DDART	dër	Masc.Dat.Sg	(PostF (NX *	_	
43	t3657_000	râte	NA	rât	Dat.Sg	 * )	_	
44	t3658_000	vünf	CARDA	vünv	Masc.Akk.Pl.0	(NX *	_	
45	t3659_000	schillinge	NA	schilling	Akk.Pl	 *	_	
46	t3660_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
47	t3661_000	-	$_	_	_	 * )	_	
48	t3662_000	und	KON	unte	_	(Cl (PrePreF * )	_	
49	t3663_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
50	t3664_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
51	t3665_000	den	DDART	dër	*.Dat.Pl	(PostF *	_	
52	t3666_000	gazzen	NA	gazze	Gen.Pl	(NX * )	_	
53	t3667_000	liuten	NA	liut	Dat.Pl	(NX * ) )	_	
54	t3668_000	-	$_	_	_	 *	_	
55	t3669_000	vünf	CARDA	vünv	Masc.Akk.Pl.0	(Frag (NX *	_	
56	t3670_000	schillinge	NA	schilling	Akk.Pl	 * )	_	
57	t3671_000	-	$_	_	_	 * ) )	_	
58	t3672_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
59	t3673_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
60	t3674_000	vier	CARDA	vièr	Fem.Akk.Pl.0	(MF (NX *	_	
61	t3675_000	wochen	NA	woche	Akk.Pl	 * )	_	
62	t3676_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
63	t3677_000	stat	NA	stat	Akk.Sg	 * ) )	_	
64	t3678_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
65	t3679_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3680_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t3681_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t3682_000	kiesærn	NA	kièsære	Dat.Pl	 * ) )	_	
4	t3683_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3684_000	unser	DPOSA	unser	*.Gen.Pl.0	(S (Frag (NX *	_	
2	t3685_000	hêrrn	NA	hêrre	Gen.Pl	 * )	_	
3	t3686_000	dienestmanne	NA	diènest-mann	Nom.Pl	(NX * )	_	
4	t3687_000	-	$_	_	_	 * )	_	
5	t3688_000	und	KON	unte	_	(Frag *	_	
6	t3689_000	burgær	NA	burger(e)	Nom.Pl	(NX *	_	
7	t3690_000	von	APPR	von	_	(PPX *	_	
8	t3690_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
9	t3691_000	râte	NA	rât	Dat.Sg	 * ) ) )	_	
10	t3692_000	-	$_	_	_	 * )	_	
11	t3693_000	ûf	APPR	ûf	_	(Cl (PreF (PPX *	_	
12	t3693_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
13	t3694_000	sal	NA	sal	Dat.Sg	 * ) ) )	_	
14	t3695_000	gebieten	VVFIN	ge-bièten	*.Pres.Pl.3	(LB (VX * ) )	_	
15	t3696_000	-	$_	_	_	 * )	_	
16	t3697_000	setzen	VVFIN	sètzen	*.Pres.Pl.3	(Cl (LB (VX * ) )	_	
17	t3698_000	-	$_	_	_	 * )	_	
18	t3699_000	und	KON	unte	_	(Cl (PrePreF * )	_	
19	t3700_000	machen	VVFIN	machen	*.Pres.Pl.3	(LB (VX * ) )	_	
20	t3701_000	-	$_	_	_	 * )	_	
21	t3702_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
22	t3703_000	kein	DIA	kèin	Masc.Nom.Sg.0	(MF (NX *	_	
23	t3704_000	kiesær	NA	kièsære	Nom.Sg	 * )	_	
24	t3705_000	-	$_	_	_	 *	_	
25	t3706_000	keinen	DIA	kèin	Masc.Akk.Sg.st	(NX *	_	
26	t3707_000	boesen	ADJA	boèse	Pos.Masc.Akk.Sg.*	 *	_	
27	t3708_000	haller	NA	haller(e)	Akk.Sg	 * )	_	
28	t3709_000	wehseln	VVINF	wëhsel(e)n	_	(VX * ) )	_	
29	t3710_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(RB (VX * ) )	_	
30	t3711_000	-	$_	_	_	 * )	_	
31	t3712_000	oder	KON	oder	_	(Frag *	_	
32	t3713_000	koufen	VVINF	koufen	_	(VX * )	_	
33	t3714_000	-	$_	_	_	 * )	_	
34	t3715_000	noch	KON	noh	_	(Frag *	_	
35	t3716_000	dâr	PAVD	dâr/+ane	_	 *	_	
36	t3717_000	an	PAVAP	ane/dâr+	_	 *	_	
37	t3718_000	geselleschaft	NA	ge-sèlle-schaft	Akk.Sg	(NX * )	_	
38	t3719_000	oder	KON	oder	_	 *	_	
39	t3720_000	gemeinschaft	NA	ge-mèin-schaft	Akk.Sg	(NX * )	_	
40	t3721_000	haben	VAINF	haben	_	(PreF (VX * ) )	_	
41	t3722_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
42	t3723_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3724_000	swelicher	DGS	swèl(i)ch	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t3725_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t3726_000	tæte	VVFIN	tuon	Subj.Past.Sg.3	(LB (VX * ) )	_	
4	t3727_000	-	$_	_	_	 * )	_	
5	t3728_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t3729_000	würde	VAFIN	wërden	Subj.Past.Sg.3	(LB (VX * ) )	_	
7	t3730_000	meineide	ADJD	mèin-èide	Pos....0	(MF * )	_	
8	t3731_000	-	$_	_	_	 *	_	
9	t3732_000	-	$_	_	_	 * )	_	
10	t3733_000	und	KON	unte	_	(Cl (PrePreF * )	_	
11	t3734_000	wolten	VMFIN	wèllen	(Subj).Past.Pl.1	(LB (VX * ) )	_	
12	t3735_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
13	t3736_000	dâr	PAVD	dâr/+zuo	_	 *	_	
14	t3737_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
15	t3738_000	alsô	AVD	all-sô	_	 * )	_	
16	t3739_000	strâfen	VVINF	strâfen	_	(RB (VX * ) )	_	
17	t3740_000	-	$_	_	_	 * )	_	
18	t3741_000	und	KON	unte	_	(Frag *	_	
19	t3742_000	büezen	VVINF	büèzen	_	(VX * )	_	
20	t3743_000	-	$_	_	_	 *	_	
21	t3744_000	daz	KOUS	dazz	_	(Frag *	_	
22	t3745_000	sich	PRF	sich	Akk	(NX * )	_	
23	t3746_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
24	t3747_000	iegelîcher	DIS	iè-ge-lich	Masc.Nom.Sg.st	 * )	_	
25	t3748_000	dâr	PAVD	dâr/+ane	_	 *	_	
26	t3749_000	an	PAVAP	ane/dâr+	_	 *	_	
27	t3750_000	wole	AVD	wol(e)	_	(PreF * )	_	
28	t3751_000	mohte	VMFIN	mügen	(Subj).Past.Sg.3	(LB (VX * ) )	_	
29	t3752_000	stôzen	VVINF	stôzen	_	(RB (VX * ) )	_	
30	t3753_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3754_000	ouch	AVD	ouch	_	(S (Frag *	_	
2	t3755_000	von	APPR	von	_	(PPX *	_	
3	t3756_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
4	t3757_000	selben	DDS	sëlb	*.Dat.Pl.st	 * ) )	_	
5	t3758_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3759_000	die	DDART	dër	Masc.Nom.Pl	(S (Cl (PreF (NX *	_	
2	t3760_000	selben	DDA	sëlb	*.Nom.Pl.wk	 *	_	
3	t3761_000	kiesær	NA	kièsære	Nom.Pl	 * ) )	_	
4	t3762_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
5	t3763_000	ouch	AVD	ouch	_	(MF *	_	
6	t3764_000	niemande	DIA	niè-mand	*.Dat.Sg.st	 *	_	
7	t3765_000	kein	DIA	kèin	Masc,Neut.Akk.Sg.0	(NX *	_	
8	t3766_000	gelt	NA	gëlt	Akk.Sg	 * ) )	_	
9	t3767_000	besehen	VVINF	be-sëhen	_	(RB (VX * ) )	_	
10	t3768_000	-	$_	_	_	 * )	_	
11	t3769_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
12	t3770_000	welle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
13	t3771_000	denne	KOKOM	danne	_	(MF *	_	
14	t3772_000	daz	DDART	dër	Neut.Akk.Sg	 *	_	
15	t3773_000	boese	ADJA	boèse	Pos.Neut.Akk.Sg.wk	 * )	_	
16	t3774_000	lân	VVINF	lâzen	_	(RB (VX * ) )	_	
17	t3775_000	zersnîden	VVINF	zer-snîden	_	(PostF (VX * ) )	_	
18	t3776_000	-	$_	_	_	 * )	_	
19	t3777_000	oder	KON	oder	_	(Frag *	_	
20	t3778_000	stechen	VVINF	stëchen	_	(VX * )	_	
21	t3779_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3780_000	sie	PPER	ër	Masc.Nom.Pl.3	(S (Cl (PreF (NX * ) )	_	
2	t3781_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t3782_000	ouch	AVD	ouch	_	(MF * )	_	
4	t3783_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
5	t3784_000	ze	APPR	ze	_	(PostF (PPX *	_	
6	t3785_000	lône	NA	lôn	Dat.Sg	(NX * ) ) )	_	
7	t3786_000	-	$_	_	_	 *	_	
8	t3787_000	von	APPR	von	_	(Frag (PPX *	_	
9	t3788_000	einem	CARDA	èin	Neut.Dat.Sg.st	(NX *	_	
10	t3789_000	pfunde	NA	pfunt	Dat.Sg	 * ) )	_	
11	t3790_000	-	$_	_	_	 * )	_	
12	t3791_000	oder	KON	oder	_	(Frag *	_	
13	t3792_000	von	APPR	von	_	(PPX *	_	
14	t3793_000	zehen	CARDA	zëhen	*.Dat.Pl.0	(NX *	_	
15	t3794_000	schillingen	NA	schilling	Dat.Pl	 *	_	
16	t3795_000	hellern	NA	haller(e)	Dat.Pl	 * ) )	_	
17	t3796_000	-	$_	_	_	 * )	_	
18	t3797_000	einen	CARDA	èin	Masc.Akk.Sg.st	(Frag (NX *	_	
19	t3798_000	heller	NA	haller(e)	Akk.Sg	 * )	_	
20	t3799_000	-	$_	_	_	 * )	_	
21	t3800_000	und	KON	unte	_	(Frag *	_	
22	t3801_000	dâr	PAVD	dâr/+unter	_	 *	_	
23	t3801_001	under	PAVAP	unter/dâr+	_	 *	_	
24	t3802_000	nihtesniht	AVD	nihtes-niht	_	 *	_	
25	t3803_000	ob	KOUS	obe	_	(Cl (LB * )	_	
26	t3804_000	des	DDART	dër	Masc,Neut.Gen.Sg	(MF (NX *	_	
27	t3805_000	geltes	NA	gëlt	Gen.Sg	 * )	_	
28	t3806_000	minner	ADJA	minner	Comp.Neut.Nom.Sg.0	 * )	_	
29	t3807_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX * ) )	_	
30	t3808_000	bî	APPR	bî	_	(PostF (PPX *	_	
31	t3809_000	iren	DPOSA	ir(e)	*.Dat.Pl.st	(NX *	_	
32	t3810_000	eiden	NA	èid	Dat.Pl	 * ) ) )	_	
33	t3811_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3812_000	wâ	AVD	wâre	_	(S (PreF * )	_	
2	t3813_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
3	t3814_000	die	DDART	dër	Masc.Akk.Pl	(PreF (NX *	_	
4	t3815_000	kiesær	NA	kièsære	Akk.Pl	 * ) )	_	
5	t3816_000	vindet	VVFIN	vinden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t3817_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3818_000	ouch	AVD	ouch	_	(S (Cl (PreF * )	_	
2	t3819_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t3820_000	under	APPR	unter	_	(MF (PPX *	_	
4	t3821_000	iewederem	DIA	iè-wëder	Neut.Dat.Sg.st	(NX *	_	
5	t3822_000	tore	NA	tor	Dat.Sg	 * ) )	_	
6	t3823_000	ein	CARDA	èin	Masc.Nom.Sg.0	(NX *	_	
7	t3824_000	kiesær	NA	kièsære	Nom.Sg	 * )	_	
8	t3825_000	sîn	VAINF	sîn	_	(VX * ) )	_	
9	t3826_000	-	$_	_	_	 *	_	
10	t3827_000	und	KON	unte	_	(Frag *	_	
11	t3828_000	jenhalp	APPR	jèn-halb(en)	_	 *	_	
12	t3829_000	Mains	_	Main	Gen.Sg	 *	_	
13	t3830_000	ouch	AVD	ouch	_	 *	_	
14	t3831_000	einer	CARDS	èin	Masc.Nom.Sg.st	(NX * ) )	_	
15	t3832_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
16	t3833_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
17	t3834_000	grêden	NA	grêde	Dat.Pl	 * ) )	_	
18	t3835_000	zwêne	CARDS	zwêne	Masc.Nom.Pl.st	(NX * ) ) )	_	
19	t3836_000	einer	CARDS	èin	Masc.Nom.Sg.st	(NX *	_	
20	t3837_000	an	APPR	ane	_	(PPX *	_	
21	t3838_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
22	t3839_000	eiermarkete	NA	èier-market	Dat.Sg	 *	_	
23	t3840_000	vore	APPR	vor(e)	_	(PPX *	_	
24	t3841_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
25	t3842_000	brôthûse	NA	brôt-hûs	Dat.Sg	 * ) ) ) ) )	_	
26	t3843_000	einer	CARDS	èin	Masc.Nom.Sg.st	(NX *	_	
27	t3844_000	under	APPR	unter	_	(PPX *	_	
28	t3845_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
29	t3846_000	vleischbanken	NA	vlèisch-bank	Dat.Pl	 * ) ) )	_	
30	t3847_000	einer	CARDS	èin	Masc.Nom.Sg.st	(NX *	_	
31	t3848_000	an	APPR	ane	_	(PPX *	_	
32	t3849_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
33	t3850_000	vischpforten	NA	visch-pforte	Dat.Sg	 * ) ) )	_	
34	t3851_000	einer	CARDS	èin	Masc.Nom.Sg.st	(NX *	_	
35	t3852_000	under	APPR	unter	_	(PPX *	_	
36	t3853_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
37	t3854_000	gademen	NA	gadem	Dat.Pl	 * ) ) )	_	
38	t3855_000	zwêne	CARDS	zwêne	Masc.Nom.Pl.st	(Frag (NX * )	_	
39	t3856_000	unden	AVD	unten(e)	_	 *	_	
40	t3857_000	an	APPR	ane	_	(PPX *	_	
41	t3858_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
42	t3859_000	markete	NA	market	Dat.Sg	 * ) ) )	_	
43	t3860_000	zwêne	CARDS	zwêne	Masc.Nom.Pl.st	(Frag (NX * )	_	
44	t3861_000	gemeine	ADJD	ge-mèine	Pos....0	 *	_	
45	t3862_000	-	$_	_	_	 * )	_	
46	t3863_000	ein	CARDA	èin	Masc.Nom.Sg.0	(Frag (NX *	_	
47	t3864_000	jude	NA	jude	Nom.Sg	 * )	_	
48	t3865_000	unde	KON	unte	_	 *	_	
49	t3866_000	ein	CARDA	èin	Masc.Nom.Sg.0	 *	_	
50	t3867_000	kristen	ADJA	kristen	Pos.Masc.Nom.Sg.0	 *	_	
51	t3868_000	in	APPR	in	_	 *	_	
52	t3868_001	der	DDART	dër	Fem.Dat.Sg	 *	_	
53	t3869_000	Judengazzen	_	Juden-gazze	Dat.Sg	 *	_	
54	t3870_000	-	$_	_	_	 * )	_	
55	t3871_000	zwêne	CARDS	zwêne	Masc.Nom.Pl.st	(Frag (NX *	_	
56	t3872_000	jensît	APPR	jèn-sît	_	(PPX *	_	
57	t3873_000	marketes	NA	market	Gen.Sg	(NX * ) ) )	_	
58	t3874_000	-	$_	_	_	 * )	_	
59	t3875_000	und	KON	unte	_	(Frag *	_	
60	t3876_000	zwêne	CARDS	zwêne	Masc.Nom.Pl.st	(NX * )	_	
61	t3877_000	dissît	AVD	dis-sît	_	 *	_	
62	t3878_000	-	$_	_	_	 *	_	
63	t3879_000	die	DRELS	dër	Masc.Nom.Pl	(Cl (LB (NX * ) )	_	
64	t3880_000	den	DDART	dër	*.Dat.Pl	(MF (NX *	_	
65	t3881_000	wînmezzærn	NA	wîn-mëzzære	Dat.Pl	 * )	_	
66	t3882_000	ire	DPOSA	ir(e)	Neut.Akk.Sg.0	(NX *	_	
67	t3883_000	gelt	NA	gëlt	Akk.Sg	 * ) )	_	
68	t3884_000	besehen	VVFIN	be-sëhen	*.Pres.Pl.3	(RB (VX * ) )	_	
69	t3885_000	-	$_	_	_	 * ) )	_	
70	t3886_000	und	KON	unte	_	(Cl (PrePreF * )	_	
71	t3887_000	kiesen	VVFIN	kièsen	*.Pres.Pl.3	(LB (VX * ) ) )	_	
72	t3888_000	ob	KOUS	obe	_	(Cl (LB * )	_	
73	t3889_000	des	DDS	dër	Neut.Gen.Sg	(MF (NX * )	_	
74	t3890_000	nôt	NA	nôt	Nom.Sg	(NX * ) )	_	
75	t3891_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(RB (VX * ) )	_	
76	t3892_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3893_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t3894_000	gekoren	VVPP	kièsen	_	(VX * )	_	
3	t3895_000	gelt	NA	gëlt	Akk.Sg	(PreF (NX * ) )	_	
4	t3896_000	verslehet	VVFIN	ver-slahen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t3897_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3898_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t3899_000	ouch	AVD	ouch	_	(PreF *	_	
3	t3900_000	des	DDART	dër	Masc,Neut.Gen.Sg	(NX *	_	
4	t3901_000	geltes	NA	gëlt	Gen.Sg	 * ) )	_	
5	t3902_000	daz	DRELS	dër	Neut.Akk.Sg	(LB (NX * ) )	_	
6	t3903_000	die	DDART	dër	Masc.Nom.Pl	(MF (NX *	_	
7	t3904_000	kiesære	NA	kièsære	Nom.Pl	 * )	_	
8	t3905_000	oder	KON	oder	_	 *	_	
9	t3906_000	ir	PPER	ër	*.Gen.Pl.3	(NX * )	_	
10	t3907_000	einer	CARDS	èin	Masc.Nom.Sg.st	(NX * ) )	_	
11	t3908_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
12	t3909_000	nemen	VVINF	nëmen	_	(PostF (VX * ) )	_	
13	t3910_000	-	$_	_	_	 * )	_	
14	t3911_000	niht	PTKNEG	niht	_	(Cl (PreF * )	_	
15	t3912_000	en	PTKNEG	ne	_	(LB (VX *	_	
16	t3912_001	nimet	VVFIN	nëmen	Ind.Pres.Sg.3	 * ) )	_	
17	t3913_000	-	$_	_	_	 * )	_	
18	t3914_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
19	t3915_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t3916_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
21	t3917_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
22	t3918_000	buoze	NA	buoze	Akk.Sg	 *	_	
23	t3919_000	under	APPR	unter	_	(PPX *	_	
24	t3920_000	zehen	CARDA	zëhen	*.Dat.Pl.0	(NX *	_	
25	t3921_000	schillingen	NA	schilling	Dat.Pl	 * ) ) ) )	_	
26	t3922_000	von	APPR	von	_	(Frag (PPX *	_	
27	t3923_000	iewederem	DIA	iè-wëder	Masc.Dat.Sg.st	(NX *	_	
28	t3924_000	haller	NA	haller(e)	Dat.Sg	 * ) )	_	
29	t3925_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
30	t3926_000	haller	NA	haller(e)	Akk.Sg	 * )	_	
31	t3927_000	-	$_	_	_	 * )	_	
32	t3928_000	oder	KON	oder	_	(Frag *	_	
33	t3929_000	von	APPR	von	_	(PPX *	_	
34	t3930_000	zehen	CARDA	zëhen	*.Dat.Pl.0	(NX *	_	
35	t3931_000	schillingen	NA	schilling	Dat.Pl	 * ) )	_	
36	t3932_000	-	$_	_	_	 * )	_	
37	t3933_000	hellern	NA	haller(e)	Dat.Pl	(Frag (NX * )	_	
38	t3934_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
39	t3935_000	schillinc	NA	schilling	Akk.Sg	 *	_	
40	t3936_000	haller	NA	haller(e)	Gen.Pl	(NX * ) )	_	
41	t3937_000	-	$_	_	_	 * )	_	
42	t3938_000	und	KON	unte	_	(Frag *	_	
43	t3939_000	von	APPR	von	_	(PPX *	_	
44	t3940_000	iewederem	DIA	iè-wëder	Neut.Dat.Sg.st	(NX *	_	
45	t3941_000	pfunde	NA	pfunt	Dat.Sg	 *	_	
46	t3942_000	haller	NA	haller(e)	Gen.Pl	(NX * ) ) )	_	
47	t3943_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
48	t3944_000	schillinge	NA	schilling	Akk.Pl	 *	_	
49	t3945_000	haller	NA	haller(e)	Gen.Pl	(NX * ) )	_	
50	t3946_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3947_000	die	DDART	dër	Masc.Akk.Pl	(S (Cl (PreF (NX *	_	
2	t3948_000	selben	DDA	sëlb	*.Akk.Pl.wk	 *	_	
3	t3949_000	pîne	NA	pîn	Akk.Pl	 * ) )	_	
4	t3950_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t3951_000	vordern	VVINF	vorder(e)n	_	(RB (VX * ) )	_	
6	t3952_000	der	DDART	dër	Masc.Nom.Sg	(PostF (NX *	_	
7	t3953_000	kiesær	NA	kièsære	Nom.Sg	 * ) )	_	
8	t3954_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3955_000	wær	VAFIN	wësen	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t3956_000	aber	AVD	aber	_	(MF *	_	
3	t3957_000	ieman	DIA	iè-mann	*.Nom.Sg.st	 *	_	
4	t3958_000	im	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
5	t3959_000	dâr	PAVD	dâr/+wider(e)	_	 *	_	
6	t3959_001	wider	PAVAP	wider(e)/dâr+	_	 * )	_	
7	t3960_000	-	$_	_	_	 * )	_	
8	t3961_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t3962_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t3963_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
11	t3964_000	vorderen	VVINF	vorder(e)n	_	(RB (VX * ) )	_	
12	t3965_000	ein	DIART	èin	Neut.Akk.Sg.0	(PostF (NX *	_	
13	t3966_000	pfant	NA	pfant	Akk.Sg	 * )	_	
14	t3967_000	dâ	PAVD	dâr/+vür(e)	_	 *	_	
15	t3968_000	vüre	PAVAP	vür(e)/dâr+	_	 * )	_	
16	t3969_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3970_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t3971_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
3	t3972_000	im	PPER	ër	Masc.Dat.Sg.3	(NX *	_	
4	t3973_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
5	t3974_000	niht	NA	niht	Akk.Sg	(NX * ) )	_	
6	t3975_000	-	$_	_	_	 * )	_	
7	t3976_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t3977_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t3978_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
10	t3979_000	dâ	PAVD	dâr/+vür(e)	_	(RB (VX *	_	
11	t3980_000	vüre	PAVAP	vür(e)/dâr+	_	 *	_	
12	t3981_000	pfenden	VVINF	pfènten	_	 * ) )	_	
13	t3982_000	-	$_	_	_	 *	_	
14	t3983_000	mit	APPR	mit	_	(Frag (PPX *	_	
15	t3984_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
16	t3985_000	gerihtes	NA	ge-riht(e)	Gen.Sg	 * ) )	_	
17	t3986_000	boten	NA	bote	Dat.Pl	(NX * )	_	
18	t3987_000	-	$_	_	_	 * ) )	_	
19	t3988_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
20	t3989_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
21	t3990_000	under	APPR	unter	_	(MF (PPX *	_	
22	t3991_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
23	t3992_000	bretern	NA	brët	Dat.Pl	 * ) ) )	_	
24	t3993_000	-	$_	_	_	 *	_	
25	t3994_000	oder	KON	oder	_	(Frag *	_	
26	t3995_000	ûf	APPR	ûf	_	(PPX *	_	
27	t3995_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
28	t3996_000	sal	NA	sal	Dat.Sg	 * ) )	_	
29	t3997_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3998_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t3999_000	der	DRELS	dër	Masc.Nom.Sg	(LB (NX * ) )	_	
3	t4000_000	sich	PRF	sich	Akk	(MF (NX * )	_	
4	t4001_000	alsô	AVD	all-sô	_	 * )	_	
5	t4002_000	læzet	VVFIN	lâzen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
6	t4003_000	pfenden	VVINF	pfènten	_	(PostF (VX * ) )	_	
7	t4004_000	-	$_	_	_	 * )	_	
8	t4005_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t4006_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t4007_000	vüre	APPR	vür(e)	_	(MF (PPX *	_	
11	t4008_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
12	t4009_000	vrevel	NA	vrèvel(e)	Akk.Sg	 * ) )	_	
13	t4010_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
14	t4011_000	buoze	NA	buoze	Akk.Sg	 * )	_	
15	t4012_000	zwivalt	ADJD	zwi-valt	Pos....0	 * )	_	
16	t4013_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
17	t4014_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4015_000	ouch	AVD	ouch	_	(S (Frag *	_	
2	t4016_000	von	APPR	von	_	(PPX *	_	
3	t4017_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
4	t4018_000	kiesærn	NA	kièsære	Dat.Pl	 * ) )	_	
5	t4019_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4020_000	die	DDART	dër	Masc.Nom.Pl	(S (Cl (PreF (NX *	_	
2	t4021_000	selben	DDA	sëlb	*.Nom.Pl.wk	 *	_	
3	t4022_000	kiesær	NA	kièsære	Nom.Pl	 * ) )	_	
4	t4023_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
5	t4024_000	die	DDART	dër	Neut.Akk.Pl	(MF (NX *	_	
6	t4025_000	pfant	NA	pfant	Akk.Pl	 * ) )	_	
7	t4026_000	-	$_	_	_	 * )	_	
8	t4027_000	oder	KON	oder	_	(Frag *	_	
9	t4028_000	pfenninge	NA	pfènning	Akk.Pl	(NX *	_	
10	t4029_000	vüre	APPR	vür(e)	_	(PPX *	_	
11	t4030_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
12	t4031_000	rât	NA	rât	Akk.Sg	 *	_	
13	t4032_000	ûf	APPR	ûf	_	(PPX *	_	
14	t4032_001	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
15	t4033_000	sal	NA	sal	Akk.Sg	 * ) ) ) ) )	_	
16	t4034_000	bringen	VVINF	bringen	_	(VX * )	_	
17	t4035_000	-	$_	_	_	 *	_	
18	t4036_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
19	t4037_000	dâr	PAVD	dâr/+über(e)	_	(RB (VX *	_	
20	t4038_000	über	PAVAP	über(e)/dâr+	_	 *	_	
21	t4039_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 *	_	
22	t4040_000	gesatzt	VVPP	sètzen	_	 * ) )	_	
23	t4041_000	und	KON	unte	_	(PostF (PrePreF * )	_	
24	t4042_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
25	t4043_000	dâ	AVD	dâr	_	(MF * ) )	_	
26	t4044_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
27	t4045_000	daz	DDART	dër	Neut.Akk.Sg	(PostF (NX *	_	
28	t4046_000	halbe	ADJA	halb	Pos.Neut.Akk.Sg.wk	 *	_	
29	t4047_000	teil	NA	tèil	Akk.Sg	 *	_	
30	t4048_000	zuo	APPR	ze	_	(PPX *	_	
31	t4049_000	lône	NA	lôn	Dat.Sg	(NX * ) ) ) )	_	
32	t4050_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4051_000	waz	PW	wër	Neut.Akk.Sg.st	(S (Frag *	_	
2	t4052_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
3	t4053_000	den	DDART	dër	*.Dat.Pl	(PreF (NX *	_	
4	t4054_000	knehten	NA	knëht	Dat.Pl	 * ) )	_	
5	t4055_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t4056_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4057_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t4058_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4059_000	ouch	AVD	ouch	_	(PreF (MF *	_	
4	t4060_000	iewederem	DIA	iè-wëder	Masc.Dat.Sg.st	(NX *	_	
5	t4061_000	knehte	NA	knëht	Dat.Sg	 * ) ) )	_	
6	t4062_000	der	DRELS	dër	Masc.Nom.Sg	(LB (NX * ) )	_	
7	t4063_000	dâ	AVD	dâr	_	(MF * )	_	
8	t4064_000	pfendet	VVFIN	pfènten	Ind.Pres.Sg.3	(RB (VX * ) )	_	
9	t4065_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
10	t4066_000	von	APPR	von	_	(PostF (PPX *	_	
11	t4067_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
12	t4068_000	gange	NA	gang	Dat.Sg	 * ) ) )	_	
13	t4069_000	-	$_	_	_	 * )	_	
14	t4070_000	swer	PG	swër	Masc.Nom.Sg.st	(Cl (PreF (NX *	_	
15	t4071_000	der	DDS	dër	Masc.Nom.Sg	 * ) )	_	
16	t4072_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t4073_000	-	$_	_	_	 *	_	
18	t4074_000	niht	NA	niht	Akk.Sg	(Frag (NX * )	_	
19	t4075_000	wanne	KOKOM	wan	_	 *	_	
20	t4076_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
21	t4077_000	pfenninc	NA	pfènning	Akk.Sg	 * )	_	
22	t4078_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4079_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t4080_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t4081_000	hallern	NA	haller(e)	Dat.Pl	 * ) )	_	
4	t4082_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4083_000	ouch	AVD	ouch	_	(S (Cl (PreF * )	_	
2	t4084_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4085_000	nieman	DIA	niè-mann	*.Nom.Sg.st	(MF *	_	
4	t4086_000	kein	DIA	kèin	Masc.Akk.Sg.0	(NX *	_	
5	t4087_000	boesen	ADJA	boèse	Pos.Masc.Akk.Sg.*	 *	_	
6	t4088_000	haller	NA	haller(e)	Akk.Sg	 * ) )	_	
7	t4089_000	wehseln	VVINF	wëhsel(e)n	_	(RB (VX * ) )	_	
8	t4090_000	-	$_	_	_	 * )	_	
9	t4091_000	oder	KON	oder	_	(Frag *	_	
10	t4092_000	koufen	VVINF	koufen	_	(VX * ) )	_	
11	t4093_000	sie	PPER	ër	Masc.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
12	t4094_000	sîn	VAFIN	sîn	Subj.Pres.Pl.3	(LB (VX * ) )	_	
13	t4095_000	danne	KOKOM	danne	_	(MF * )	_	
14	t4096_000	zersniten	VVPP	zer-snîden	_	(RB (VX (VX * )	_	
15	t4097_000	oder	KON	oder	_	 *	_	
16	t4098_000	zerstochen	VVPP	zer-stëchen	_	(VX * ) ) )	_	
17	t4099_000	-	$_	_	_	 *	_	
18	t4100_000	bî	APPR	bî	_	(Frag *	_	
19	t4101_000	der	DDART	dër	Fem.Dat.Sg	 *	_	
20	t4102_000	vore	PTKVZ	vor(e)/+nènnen	_	 *	_	
21	t4102_001	genanten	ADJA	nènnen/vor(e)+	Pos.Fem.Dat.Sg.wk	(NX *	_	
22	t4103_000	buoze	NA	buoze	Dat.Sg	 * )	_	
23	t4104_000	-	$_	_	_	 * )	_	
24	t4105_000	von	APPR	von	_	(Frag (PPX *	_	
25	t4106_000	iegelîchem	DIA	iè-ge-lich	Masc.Dat.Sg.st	(NX *	_	
26	t4107_000	haller	NA	haller(e)	Dat.Sg	 * ) )	_	
27	t4108_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
28	t4109_000	haller	NA	haller(e)	Akk.Sg	 * )	_	
29	t4110_000	-	$_	_	_	 * )	_	
30	t4111_000	als	AVD	all-sô	_	(Frag *	_	
31	t4112_000	vile	AVD	vil(e)	_	 * )	_	
32	t4113_000	als	KO*	all-sô	_	(Frag *	_	
33	t4114_000	er	PPER	ër	Masc.Nom.Sg.3	(PreF (NX * ) )	_	
34	t4115_000	koufet	VVFIN	koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
35	t4116_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4117_000	von	APPR	von	_	(S (PPX *	_	
2	t4118_000	den	DDS	dër	*.Dat.Pl	(NX * ) )	_	
3	t4119_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX * ) )	_	
4	t4120_000	die	DDART	dër	Masc.Akk.Pl	(MF (NX *	_	
5	t4121_000	kiesær	NA	kièsære	Akk.Pl	 * ) )	_	
6	t4122_000	strâfent	VVFIN	strâfen	Ind.Pres.Pl.3	(RB (VX * ) )	_	
7	t4123_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4124_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t4125_000	ouch	AVD	ouch	_	(PreF *	_	
3	t4126_000	die	DDART	dër	Masc.Akk.Pl	(NX *	_	
4	t4127_000	kiesær	NA	kièsære	Akk.Pl	 * ) )	_	
5	t4128_000	strâfet	VVFIN	strâfen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t4129_000	-	$_	_	_	 * )	_	
7	t4130_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
8	t4131_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t4132_000	mit	APPR	mit	_	(MF (PPX *	_	
10	t4133_000	worten	NA	wort	Dat.Pl	(NX * ) )	_	
11	t4134_000	oder	KON	oder	_	 *	_	
12	t4135_000	mit	APPR	mit	_	(PPX *	_	
13	t4136_000	werken	NA	wërk	Dat.Pl	(NX * ) ) )	_	
14	t4137_000	-	$_	_	_	 * )	_	
15	t4138_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
16	t4139_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
17	t4140_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
18	t4141_000	übersaget	VVPP	über-sagen	_	(RB (VX * ) )	_	
19	t4142_000	-	$_	_	_	 *	_	
20	t4143_000	mit	APPR	mit	_	(Frag (PPX *	_	
21	t4144_000	zwein	CARDA	zwêne	*.Dat.Pl.st	(NX *	_	
22	t4145_000	êrbærn	ADJA	êr-bære	Pos.*.Dat.Pl.*	 *	_	
23	t4146_000	mannen	NA	mann	Dat.Pl	 * ) )	_	
24	t4147_000	-	$_	_	_	 * )	_	
25	t4148_000	oder	KON	oder	_	(Frag *	_	
26	t4149_000	vrouwen	NA	vrouwe	Dat.Pl	(NX * )	_	
27	t4150_000	-	$_	_	_	 * ) )	_	
28	t4151_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
29	t4152_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
30	t4153_000	einen	CARDA	èin	Masc.Akk.Sg.st	(MF (NX *	_	
31	t4154_000	schillinc	NA	schilling	Akk.Sg	 *	_	
32	t4155_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
33	t4156_000	-	$_	_	_	 *	_	
34	t4157_000	als	KO*	all-sô	_	(Frag *	_	
35	t4158_000	dicke	AVD	dicke	_	(PreF * )	_	
36	t4159_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
37	t4160_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
38	t4161_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
39	t4162_000	-	$_	_	_	 * ) )	_	
40	t4163_000	âne	APPR	âne	_	(PPX *	_	
41	t4164_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
42	t4165_000	buoze	NA	buoze	Akk.Sg	 *	_	
43	t4166_000	die	DRELS	dër	Fem.Akk.Sg	(Cl (LB (NX * ) )	_	
44	t4167_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
45	t4168_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
46	t4169_000	rât	NA	rât	Nom.Sg	 * ) )	_	
47	t4170_000	ûf	PTKVZ	ûf/+sètzen	_	(RB (VX *	_	
48	t4171_000	setzet	VVFIN	sètzen/ûf+	Ind.Pres.Sg.3	 * ) )	_	
49	t4172_000	-	$_	_	_	 *	_	
50	t4173_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
51	t4174_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
52	t4175_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(RB (VX *	_	
53	t4176_000	varente	VVPS	var(e)n	_	 * ) )	_	
54	t4177_000	von	APPR	von	_	(PostF (PPX *	_	
55	t4178_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
56	t4179_000	stat	NA	stat	Dat.Sg	 * ) )	_	
57	t4180_000	und	KON	unte	_	 *	_	
58	t4181_000	rûmente	VVPS	rûmen	_	(VX * ) )	_	
59	t4182_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4183_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t4184_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
3	t4185_000	heckær	NA	hèckære	Gen.Pl	 * ) )	_	
4	t4186_000	glocken	NA	glocke	Dat.Sg	(NX * )	_	
5	t4187_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4188_000	unser	DPOSA	unser	Masc.Nom.Sg.0	(S (NX *	_	
2	t4189_000	hêrre	NA	hêrre	Nom.Sg	 * )	_	
3	t4190_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
4	t4191_000	bischof	NA	bischov	Nom.Sg	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4192_000	-	$_	_	_	(S *	_	
2	t4193_000	und	KON	unte	_	(Frag *	_	
3	t4194_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
4	t4195_000	rât	NA	rât	Nom.Sg	 *	_	
5	t4196_000	ûf	APPR	ûf	_	(PPX *	_	
6	t4196_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
7	t4197_000	sal	NA	sal	Dat.Sg	 * ) ) )	_	
8	t4198_000	-	$_	_	_	 * )	_	
9	t4199_000	haben	VAFIN	haben	*.Pres.Pl.3	(Frag (VX *	_	
10	t4200_000	gemachet	VVPP	machen	_	 * )	_	
11	t4201_000	und	KON	unte	_	 *	_	
12	t4202_000	gesetzet	VVPP	sètzen	_	(VX * )	_	
13	t4203_000	-	$_	_	_	 *	_	
14	t4204_000	daz	KOUS	dazz	_	(Frag *	_	
15	t4205_000	man	PI	man	*.Nom.Sg.st	(NX *	_	
16	t4206_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
17	t4207_000	morgenes	NA	morgen	Gen.Sg	 * ) )	_	
18	t4208_000	vrüeje	AVD	vrüèje	_	 *	_	
19	t4209_000	-	$_	_	_	 * ) )	_	
20	t4210_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
21	t4211_000	liuten	VVINF	liuten	_	(RB (VX * ) )	_	
22	t4212_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
23	t4213_000	glocken	NA	glocke	Akk.Sg	 *	_	
24	t4214_000	zuo	APPR	ze	_	(PPX *	_	
25	t4215_000	græven	NA	græve	Dat.Sg	(NX *	_	
26	t4216_000	E`ggeharten	NE	Ège-hart	Dat.Sg	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4217_000	vore	APPR	vor(e)	_	(S (Cl (PreF (PPX *	_	
2	t4218_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
3	t4219_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
4	t4220_000	glocken	NA	glocke	Dat.Sg	 * ) ) )	_	
5	t4221_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t4222_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
7	t4223_000	iegelich	DIA	iè-ge-lich	Masc.Nom.Sg.0	 *	_	
8	t4224_000	wîngartman	NA	wîn-gart-mann	Nom.Sg	 * )	_	
9	t4225_000	haben	VAINF	haben	_	(VX * )	_	
10	t4226_000	gewunnen	VVPP	ge-winnen	_	(VX * )	_	
11	t4227_000	heckær	NA	hèckære	Akk.Pl	(NX * ) )	_	
12	t4228_000	-	$_	_	_	 *	_	
13	t4229_000	snitær	NA	snitære	Akk.Pl	(Frag (NX * )	_	
14	t4230_000	-	$_	_	_	 * )	_	
15	t4231_000	oder	KON	oder	_	(Frag *	_	
16	t4232_000	bintær	NA	bintære	Akk.Pl	(NX * )	_	
17	t4233_000	-	$_	_	_	 * ) )	_	
18	t4234_000	und	KON	unte	_	(Frag *	_	
19	t4235_000	ouch	AVD	ouch	_	 *	_	
20	t4236_000	ûz	PTKVZ	ûz/+vüèren	_	(VX *	_	
21	t4237_000	vüeren	VVINF	vüèren/ûz+	_	 * )	_	
22	t4238_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4239_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t4240_000	aber	AVD	aber	_	(PreF * )	_	
3	t4241_000	versitzet	VVFIN	ver-sitzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t4242_000	biz	AVD	biz	_	(MF *	_	
5	t4243_000	nâch	APPR	nâh	_	(PPX *	_	
6	t4244_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
7	t4245_000	glocken	NA	glocke	Dat.Sg	 * ) ) )	_	
8	t4246_000	-	$_	_	_	 * )	_	
9	t4247_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
10	t4248_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t4249_000	nieman	DIA	niè-mann	*.Nom.Sg.st	(MF *	_	
12	t4250_000	vürebaz	AVD	vür(e)-bazz	_	 * )	_	
13	t4251_000	ûz	PTKVZ	ûz/+vüèren	_	(RB (VX *	_	
14	t4252_000	vüeren	VVINF	vüèren/ûz+	_	 * ) )	_	
15	t4253_000	-	$_	_	_	 * )	_	
16	t4254_000	noch	KON	noh	_	(Frag *	_	
17	t4255_000	gewinnen	VVINF	ge-winnen	_	(VX * )	_	
18	t4256_000	-	$_	_	_	 * )	_	
19	t4257_000	bî	APPR	bî	_	(Frag (PPX *	_	
20	t4258_000	sehtzic	CARDA	sëh-zig	*.Dat.Pl.0	(NX *	_	
21	t4259_000	pfenningen	NA	pfènning	Dat.Pl	 * ) )	_	
22	t4260_000	-	$_	_	_	 *	_	
23	t4261_000	die	DRELS	dër	Masc.Nom.Pl	(Cl (LB (NX * ) )	_	
24	t4262_000	dâr	PAVD	dâr/+über(e)	_	(MF (VX *	_	
25	t4263_000	über	PAVAP	über(e)/dâr+	_	 * ) )	_	
26	t4264_000	gesetzet	VVPP	sètzen	_	(RB (VX *	_	
27	t4265_000	sîn	VAFIN	sîn	*.Pres.Pl.3	 * ) )	_	
28	t4266_000	-	$_	_	_	 * ) )	_	
29	t4267_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
30	t4268_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
31	t4269_000	halt	AVD	halt	_	(MF *	_	
32	t4270_000	hêrre	NA	hêrre	Nom.Sg	(NX * )	_	
33	t4271_000	oder	KON	oder	_	 *	_	
34	t4272_000	wîngartman	NA	wîn-gart-mann	Nom.Sg	(NX * ) )	_	
35	t4273_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4274_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t4275_000	ouch	AVD	ouch	_	(PreF *	_	
3	t4276_000	die	DDART	dër	Masc,Neut.Akk.Pl	(NX *	_	
4	t4277_000	loene	NA	lôn	Akk.Pl	 * ) )	_	
5	t4278_000	steiget	VVFIN	stèigen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t4279_000	-	$_	_	_	 *	_	
7	t4280_000	alsô	AVD	all-sô	_	(MF * )	_	
8	t4281_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
9	t4282_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
10	t4283_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
11	t4284_000	andern	DIS	ander	Masc.Dat.Sg.wk	 * )	_	
12	t4285_000	sîn	DPOSA	sîn	Masc.Akk.Sg.0	(NX *	_	
13	t4286_000	gedingeten	ADJA	ge-dingen	Pos.Masc.Akk.Sg.*	 *	_	
14	t4287_000	arbeitær	NA	arbèitære	Akk.Sg	 *	_	
15	t4288_000	ûz	APPR	ûz	_	(PPX *	_	
16	t4288_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
17	t4289_000	hant	NA	hant	Dat.Sg	 * ) ) ) )	_	
18	t4290_000	ziuhet	VVFIN	zièhen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
19	t4291_000	-	$_	_	_	 * ) )	_	
20	t4292_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
21	t4293_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) ) )	_	
22	t4294_000	swer	PG	swër	Masc.Nom.Sg.st	(Cl (PreF (NX *	_	
23	t4295_000	er	PPER	ër	Masc.Nom.Sg.3	 * ) )	_	
24	t4296_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
25	t4297_000	-	$_	_	_	 * )	_	
26	t4298_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
27	t4299_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
28	t4300_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
29	t4301_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(PostF (NX *	_	
30	t4302_000	pfenninge	NA	pfènning	Akk.Pl	 *	_	
31	t4303_000	zuo	APPR	ze	_	(PPX *	_	
32	t4304_000	buoze	NA	buoze	Dat.Sg	(NX * ) ) ) )	_	
33	t4305_000	-	$_	_	_	 * )	_	
34	t4306_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4307_000	wær	VAFIN	wësen	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t4308_000	aber	AVD	aber	_	(MF * )	_	
3	t4309_000	-	$_	_	_	 *	_	
4	t4310_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
5	t4311_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
6	t4312_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
7	t4313_000	wîngartman	NA	wîn-gart-mann	Nom.Sg	 * )	_	
8	t4314_000	-	$_	_	_	 *	_	
9	t4315_000	oder	KON	oder	_	 *	_	
10	t4316_000	swer	PG	swër	Masc.Nom.Sg.st	(NX *	_	
11	t4317_000	er	PPER	ër	Masc.Nom.Sg.3	 * ) )	_	
12	t4318_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX * ) )	_	
13	t4319_000	-	$_	_	_	 * ) ) )	_	
14	t4320_000	zuo	APPR	ze	_	(Cl (PreF (PPX *	_	
15	t4321_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
16	t4322_000	nâhesten	ADJA	nâh	Pos.Masc.Dat.Sg.wk	 *	_	
17	t4323_000	râte	NA	rât	Dat.Sg	 *	_	
18	t4324_000	ûf	APPR	ûf	_	(PPX *	_	
19	t4324_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
20	t4325_000	sal	NA	sal	Dat.Sg	 * ) ) ) ) )	_	
21	t4326_000	niht	PTKNEG	niht	_	(LB (VX *	_	
22	t4327_000	klagete	VVFIN	klagen	(Subj).Past.Sg.3	 * ) )	_	
23	t4328_000	-	$_	_	_	 * )	_	
24	t4329_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
25	t4330_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
26	t4331_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
27	t4332_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
28	t4333_000	selben	DDA	sëlb	Fem.Akk.Sg.wk	 *	_	
29	t4334_000	buoze	NA	buoze	Akk.Sg	 * ) )	_	
30	t4335_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4336_000	der	DDS	dër	Fem.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t4337_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4338_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
4	t4339_000	ouch	AVD	ouch	_	 *	_	
5	t4340_000	niemanne	DIA	niè-mann	*.Dat.Sg.st	 *	_	
6	t4341_000	niht	NA	niht	Akk.Sg	(NX * ) )	_	
7	t4342_000	lâzen	VVINF	lâzen	_	(RB (VX * ) )	_	
8	t4343_000	-	$_	_	_	 * )	_	
9	t4344_000	daz	DDS	dër	Neut.Nom.Sg	(Frag (NX * )	_	
10	t4345_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX *	_	
11	t4346_000	verredet	VVPP	ver-rèden	_	 * )	_	
12	t4347_000	und	KON	unte	_	 *	_	
13	t4348_000	versprochen	VVPP	ver-sprëchen	_	(VX * )	_	
14	t4349_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4350_000	super	FM	super	_	(S (Frag *	_	
2	t4351_000	anno	FM	annus	_	 *	_	
3	t4352_000	domini	FM	dominus	_	 *	_	
4	t4353_000	-	FM	m	_	 *	_	
5	t4354_000	-	$_	_	_	 * )	_	
6	t4355_000	-	FM	c	_	(Frag *	_	
7	t4356_000	-	$_	_	_	 * )	_	
8	t4357_000	-	FM	xlji	_	(Frag *	_	
9	t4358_000	-	$_	_	_	 * )	_	
10	t4359_000	feriâ	FM	feria	_	(Frag *	_	
11	t4360_000	tertiâ	FM	tertius	_	 *	_	
12	t4361_000	post	FM	post	_	 *	_	
13	t4362_000	diem	FM	dies	_	 *	_	
14	t4363_000	beati	FM	beatus	_	 *	_	
15	t4364_000	Kyliani	FM	Kilianus	_	 *	_	
16	t4365_000	publicata	FM	publicare	_	 *	_	
17	t4366_000	sunt	FM	esse	_	 *	_	
18	t4367_000	haec	FM	hic	_	 *	_	
19	t4368_000	statuta	FM	statuere	_	 *	_	
20	t4369_000	-	$_	_	_	 * )	_	
21	t4370_000	domini	FM	dominus	_	(Frag *	_	
22	t4371_000	Ottonis	NE	Otto	Gen.Sg	(NX * )	_	
23	t4372_000	Episcopi	FM	episcopus	_	 *	_	
24	t4373_000	Herbipolin	FM	Herbipolis	_	 *	_	
25	t4374_000	-	$_	_	_	 * )	_	
26	t4375_000	infrascripta	FM	infrascribere	_	(Frag *	_	
27	t4376_000	-	$_	_	_	 * )	_	
28	t4377_000	von	APPR	von	_	(Frag (PPX *	_	
29	t4378_000	kolen	NA	kol(e)	Dat.Pl	(NX * ) )	_	
30	t4379_000	-	$_	_	_	 * )	_	
31	t4380_000	und	KON	unte	_	(Frag *	_	
32	t4381_000	von	APPR	von	_	(PPX *	_	
33	t4382_000	koletragærn	NA	kol(e)-tragære	Dat.Pl	(NX * ) )	_	
34	t4383_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4384_000	unser	DPOSA	unser	Masc.Nom.Sg.0	(S (NX *	_	
2	t4385_000	hêrre	NA	hêrre	Nom.Sg	 * )	_	
3	t4386_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
4	t4387_000	bischof	NA	bischov	Nom.Sg	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4388_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t4389_000	zuo	APPR	ze	_	(MF (PPX *	_	
3	t4390_000	râte	NA	rât	Dat.Sg	(NX * ) )	_	
4	t4391_000	worden	VAPP	wërden	_	(VX * ) )	_	
5	t4392_000	-	$_	_	_	 *	_	
6	t4393_000	mit	APPR	mit	_	(Frag (PPX *	_	
7	t4394_000	unsern	DPOSA	unser	*.Dat.Pl.st	(NX *	_	
8	t4395_000	hêrren	NA	hêrre	Dat.Pl	 * ) )	_	
9	t4396_000	-	$_	_	_	 * )	_	
10	t4397_000	dienestmannen	NA	diènest-mann	Dat.Pl	(Frag (NX * )	_	
11	t4398_000	-	$_	_	_	 * )	_	
12	t4399_000	und	KON	unte	_	(Frag *	_	
13	t4400_000	mit	APPR	mit	_	(PPX *	_	
14	t4401_000	unsern	DPOSA	unser	*.Dat.Pl.st	(NX *	_	
15	t4402_000	burgærn	NA	burger(e)	Dat.Pl	 * ) )	_	
16	t4403_000	-	$_	_	_	 * )	_	
17	t4404_000	durch	APPR	durh	_	(Frag (PPX *	_	
18	t4405_000	gemein	ADJA	ge-mèine	Pos.Masc.Akk.Sg.0	(NX *	_	
19	t4406_000	nutz	NA	nutz	Akk.Sg	 * ) )	_	
20	t4407_000	rîcher	ADJA	rîche	Pos.*.Gen.Pl.st	 *	_	
21	t4408_000	und	KON	unte	_	 *	_	
22	t4409_000	armer	ADJA	arm	Pos.*.Gen.Pl.st	(NX *	_	
23	t4410_000	liute	NA	liut	Gen.Pl	 * )	_	
24	t4411_000	-	$_	_	_	 * )	_	
25	t4412_000	in	APPR	in	_	(Frag (PPX *	_	
26	t4412_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
27	t4413_000	stat	NA	stat	Dat.Sg	 *	_	
28	t4414_000	zuo	APPR	ze	_	(PPX *	_	
29	t4415_000	Wirzeburc	NE	Wirze-burg	Dat.Sg	(NX * ) ) ) )	_	
30	t4416_000	-	$_	_	_	 * ) )	_	
31	t4417_000	und	KON	unte	_	(Frag *	_	
32	t4418_000	haben	VAFIN	haben	*.Pres.Pl.3	(VX *	_	
33	t4419_000	gesatzt	VVPP	sètzen	_	 * )	_	
34	t4420_000	und	KON	unte	_	 *	_	
35	t4421_000	gemachet	VVPP	machen	_	(VX * )	_	
36	t4422_000	die	DDART	dër	Masc.Akk.Pl	(NX *	_	
37	t4423_000	setze	NA	satz	Akk.Pl	 * )	_	
38	t4424_000	-	$_	_	_	 *	_	
39	t4425_000	die	DRELS	dër	Masc.Nom.Pl	(Cl (LB (NX * ) )	_	
40	t4426_000	her	PAVD	hër(e)/+nâh	_	(MF (VX *	_	
41	t4426_001	nâch	PAVAP	nâh/hër(e)+	_	 * ) )	_	
42	t4427_000	geschriben	VVPP	schrîben	_	(RB (VX *	_	
43	t4428_000	stên	VVFIN	stân	*.Pres.Pl.3	 * ) )	_	
44	t4429_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4430_000	-	FM	rubrica	_	(S (Frag *	_	
2	t4431_000	-	$_	_	_	 * )	_	
3	t4432_000	von	APPR	von	_	(Frag (PPX *	_	
4	t4433_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
5	t4434_000	selben	DDS	sëlb	*.Dat.Pl.st	 * ) )	_	
6	t4435_000	-	$_	_	_	 * )	_	
7	t4436_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4437_000	des	DDART	dër	Neut.Gen.Sg	(S (Frag *	_	
2	t4438_000	êrsten	ADJA	êr(e)st	Sup.Neut.Gen.Sg.wk	 *	_	
3	t4439_000	von	APPR	von	_	(PPX *	_	
4	t4440_000	kolen	NA	kol(e)	Dat.Pl	(NX * ) )	_	
5	t4441_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4442_000	dâ	PAVD	dâr/.+ane	_	(S (Frag *	_	
2	t4443_000	grôzer	ADJA	grôz	Pos.Masc.Nom.Sg.st	(NX *	_	
3	t4444_000	gebrest	NA	ge-brëst(e)	Nom.Sg	 * )	_	
4	t4445_000	an	PAVAP	ane/dâr.+	_	(VX * )	_	
5	t4446_000	gewesen	VAPP	wësen	_	(VX *	_	
6	t4447_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
7	t4448_000	biz	AVD	biz	_	 *	_	
8	t4449_000	her	AVD	hër(e)	_	 *	_	
9	t4450_000	-	$_	_	_	 *	_	
10	t4451_000	von	APPR	von	_	(Cl (PreF (PPX *	_	
11	t4452_000	den	DDS	dër	*.Dat.Pl	(NX * ) ) )	_	
12	t4453_000	die	DRELS	dër	*.Nom.Pl	(LB (NX * ) )	_	
13	t4454_000	kolen	NA	kol(e)	Akk.Pl	(MF (NX * ) )	_	
14	t4455_000	vürekoufeten	VVFIN	vür(e)-koufen	Ind.Past.Pl.3	(RB (VX * ) )	_	
15	t4456_000	-	$_	_	_	 * ) )	_	
16	t4457_000	und	KON	unte	_	(Frag *	_	
17	t4458_000	ouch	AVD	ouch	_	 *	_	
18	t4459_000	von	APPR	von	_	(PPX *	_	
19	t4460_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
20	t4461_000	koletragærn	NA	kol(e)-tragære	Dat.Pl	 * ) )	_	
21	t4462_000	-	$_	_	_	 *	_	
22	t4463_000	die	DRELS	dër	Masc.Nom.Pl	(Cl (LB (NX * ) )	_	
23	t4464_000	swærn	ADJA	swære	Pos.Masc.Akk.Sg.*	(MF (NX *	_	
24	t4465_000	lôn	NA	lôn	Akk.Sg	 * ) )	_	
25	t4466_000	genomen	VVPP	nëmen	_	(RB (VX *	_	
26	t4467_000	haben	VAFIN	haben	*.Pres.Pl.3	 * ) )	_	
27	t4468_000	von	APPR	von	_	(PostF *	_	
28	t4469_000	armen	ADJA	arm	Pos.*.Dat.Pl.*	 *	_	
29	t4470_000	und	KON	unte	_	 *	_	
30	t4471_000	von	APPR	von	_	(PPX *	_	
31	t4472_000	rîchen	ADJA	rîche	Pos.*.Dat.Pl.*	(NX *	_	
32	t4473_000	liuten	NA	liut	Dat.Pl	 * ) ) )	_	
33	t4474_000	-	$_	_	_	 *	_	
34	t4475_000	alsô	AVD	all-sô	_	(PostF * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4476_000	daz	KOUS	dazz	_	(S (Cl (LB * )	_	
2	t4477_000	nieman	DIA	niè-mann	*.Nom.Sg.st	(PreF (MF * ) )	_	
3	t4478_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t4479_000	koufen	VVINF	koufen	_	(RB (VX * ) )	_	
5	t4480_000	über	APPR	über	_	(PostF (PPX *	_	
6	t4481_000	vünvzic	CARDA	vünv-zig	Masc.Akk.Pl.0	(NX *	_	
7	t4482_000	körbe	NA	korb	Akk.Pl	 *	_	
8	t4483_000	kolen	NA	kol(e)	Gen.Pl	(NX * ) ) ) )	_	
9	t4484_000	-	$_	_	_	 *	_	
10	t4485_000	und	KON	unte	_	(PostF (PrePreF * )	_	
11	t4486_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t4487_000	ouch	AVD	ouch	_	(MF *	_	
13	t4488_000	ein	DIART	èin	Neut.Nom.Sg.0	(NX *	_	
14	t4489_000	lastschif	NA	last-schiff	Nom.Sg	 *	_	
15	t4490_000	mit	APPR	mit	_	(PPX *	_	
16	t4491_000	kolen	NA	kol(e)	Dat.Pl	(NX * ) ) )	_	
17	t4492_000	ahte	CARDA	ahte	Masc.Akk.Pl.0	(NX *	_	
18	t4493_000	tage	NA	tag	Akk.Pl	 * ) ) )	_	
19	t4494_000	stên	VVINF	stân	_	(RB (VX * ) )	_	
20	t4495_000	-	$_	_	_	 *	_	
21	t4496_000	âne	APPR	âne	_	(PostF (PPX *	_	
22	t4497_000	vürekouf	NA	vür(e)-kouf	Akk.Sg	(NX * ) ) )	_	
23	t4498_000	-	$_	_	_	 *	_	
24	t4499_000	under	APPR	unter	_	(PostF (PPX *	_	
25	t4500_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
26	t4501_000	buoze	NA	buoze	Dat.Sg	 * ) ) )	_	
27	t4502_000	-	$_	_	_	 *	_	
28	t4503_000	als	KO*	all-sô	_	(PostF *	_	
29	t4504_000	sie	PPER	ër	Fem.Nom.Sg.3	(NX *	_	
30	t4505_000	von	APPR	von	_	(PPX *	_	
31	t4506_000	alter	NA	alter	Dat.Sg	(NX * ) ) )	_	
32	t4507_000	her	AVD	hër(e)	_	 * )	_	
33	t4508_000	kumen	VVPP	komen	_	(RB (VX *	_	
34	t4509_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
35	t4510_000	-	$_	_	_	 *	_	
36	t4511_000	vier	CARDA	vièr	Masc.Nom.Pl.0	(Frag (NX *	_	
37	t4512_000	schillinge	NA	schilling	Nom.Pl	 *	_	
38	t4513_000	pfenninge	NA	pfènning	Gen.Pl	(NX *	_	
39	t4514_000	von	APPR	von	_	(PPX *	_	
40	t4515_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
41	t4516_000	pfunde	NA	pfunt	Dat.Sg	 *	_	
42	t4517_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) ) ) )	_	
43	t4518_000	-	$_	_	_	 * )	_	
44	t4519_000	als	KO*	all-sô	_	(Frag *	_	
45	t4520_000	ofte	AVD	ofte	_	(PreF *	_	
46	t4521_000	daz	DDS	dër	Neut.Nom.Sg	(NX * ) )	_	
47	t4522_000	geschihet	VVFIN	ge-schëhen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
48	t4523_000	-	$_	_	_	 * ) )	_	
49	t4524_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4525_000	dâr	PAVD	dâr/+nâh	_	(S (Frag *	_	
2	t4526_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
3	t4527_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
4	t4528_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
5	t4529_000	iegelich	DIA	iè-ge-lich	Masc.Nom.Sg.0	 *	_	
6	t4530_000	arm	ADJA	arm	Pos.Masc.Nom.Sg.0	 *	_	
7	t4531_000	man	NA	mann	Nom.Sg	 * )	_	
8	t4532_000	-	$_	_	_	 *	_	
9	t4533_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	(NX *	_	
10	t4534_000	guot	NA	guot	Akk.Sg	 * ) )	_	
11	t4535_000	geluste	VVFIN	ge-lüsten	(Subj).Past.Sg.3	(RB (VX * ) )	_	
12	t4536_000	her	AVD	hër(e)	_	(PostF *	_	
13	t4537_000	ze	APPR	ze	_	(PPX *	_	
14	t4537_001	vüerenne	NA	vüèren	Dat.Sg	(NX * ) )	_	
15	t4538_000	dester	AVD	dëster	_	 *	_	
16	t4539_000	baz	AVD	bazz	Comp	 * )	_	
17	t4540_000	-	$_	_	_	 * ) )	_	
18	t4541_000	sô	AVD	sô	_	(Cl (PreF * )	_	
19	t4542_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t4543_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
21	t4544_000	gesatzt	VVPP	sètzen	_	(RB (VX * ) )	_	
22	t4545_000	daz	KOUS	dazz	_	(PostF (Frag *	_	
23	t4546_000	ein	DIART	èin	Neut.Nom.Sg.0	(PreF (NX *	_	
24	t4547_000	iegelich	DIA	iè-ge-lich	Neut.Nom.Sg.0	 *	_	
25	t4548_000	schif	NA	schiff	Nom.Sg	 * ) )	_	
26	t4549_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
27	t4550_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
28	t4551_000	niur	AVD	niur	_	(PostF *	_	
29	t4552_000	ahtzehen	CARDA	aht-zëhen	Masc.Akk.Pl.0	(NX *	_	
30	t4553_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
31	t4554_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4555_000	dâr	PAVD	dâr/+zuo	_	(S (Cl (LB (VX *	_	
2	t4556_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
3	t4557_000	hât	VAFIN	haben	Ind.Pres.Sg.3	 * ) )	_	
4	t4558_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
5	t4559_000	bescheiden	VVPP	be-schèiden	_	(RB (VX * ) )	_	
6	t4560_000	einen	DIART	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
7	t4561_000	êrbærn	ADJA	êr-bære	Pos.Masc.Akk.Sg.*	 *	_	
8	t4562_000	man	NA	mann	Akk.Sg	 * ) )	_	
9	t4563_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4564_000	der	DDS	dër	Masc.Nom.Sg	(S (Frag (NX * )	_	
2	t4565_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(VX *	_	
3	t4566_000	gesworen	VVPP	swèr(e)n	_	 * )	_	
4	t4567_000	zuo	APPR	ze	_	 *	_	
5	t4568_000	den	DDART	dër	*.Dat.Pl	 *	_	
6	t4569_000	heiligen	ADJA	hèilig	Pos.*.Dat.Pl..%.*	 *	_	
7	t4570_000	-	$_	_	_	 * )	_	
8	t4571_000	und	KON	unte	_	(Cl (PrePreF * )	_	
9	t4572_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t4573_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
11	t4574_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
12	t4575_000	iegelîcher	DIS	iè-ge-lich	Masc.Nom.Sg.st	 *	_	
13	t4576_000	nâch	APPR	nâh	_	(PPX *	_	
14	t4577_000	im	PPER	ër	Masc.Dat.Sg.3	(NX * ) ) ) )	_	
15	t4578_000	tuon	VVINF	tuon	_	(RB (VX * ) )	_	
16	t4579_000	-	$_	_	_	 *	_	
17	t4580_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX *	_	
18	t4581_000	an	APPR	ane	_	(PPX *	_	
19	t4582_000	sîn	DPOSA	sîn	Fem.Akk.Sg.0	(NX *	_	
20	t4583_000	stat	NA	stat	Akk.Sg	 * ) ) ) )	_	
21	t4584_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
22	t4585_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4586_000	der	DDS	dër	Masc.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t4587_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4588_000	haben	VAINF	haben	_	(MF (VX * )	_	
4	t4589_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
5	t4590_000	ganzen	ADJA	ganz	Pos.Masc.Akk.Sg.*	 *	_	
6	t4591_000	korp	NA	korb	Akk.Sg	 * ) )	_	
7	t4592_000	-	$_	_	_	 *	_	
8	t4593_000	und	KON	unte	_	(Frag *	_	
9	t4594_000	ouch	AVD	ouch	_	 *	_	
10	t4595_000	als	AVD	all-sô	_	 *	_	
11	t4596_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
12	t4597_000	halber	ADJA	halb	Pos.*.Gen.Pl.st	(NX *	_	
13	t4598_000	körbe	NA	korb	Gen.Pl	 * ) )	_	
14	t4599_000	-	$_	_	_	 *	_	
15	t4600_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
16	t4601_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
17	t4602_000	iegelich	DIA	iè-ge-lich	Masc.Nom.Sg.0	 *	_	
18	t4603_000	gesezzen	ADJA	ge-sëzzen	Pos.Masc.Nom.Sg.0	 *	_	
19	t4604_000	man	NA	mann	Nom.Sg	 *	_	
20	t4605_000	in	APPR	in	_	(PPX *	_	
21	t4606_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
22	t4607_000	stat	NA	stat	Dat.Sg	 * ) ) )	_	
23	t4608_000	-	$_	_	_	 *	_	
24	t4609_000	von	APPR	von	_	(PPX *	_	
25	t4610_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
26	t4611_000	wegen	NA	wëg	Dat.Pl	 * ) )	_	
27	t4612_000	ungesûmet	ADJD	un-ge-sûmet	Pos....0	 * )	_	
28	t4613_000	sîn	VAFIN	sîn	Subj.Pres.Pl.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4614_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t4615_000	ouch	AVD	ouch	_	(PreF *	_	
3	t4616_000	der	DDS	dër	Masc.Nom.Sg	(NX * ) )	_	
4	t4617_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t4618_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
6	t4619_000	die	DDART	dër	Masc,Neut.Akk.Pl	(MF (NX *	_	
7	t4620_000	kolen	NA	kol(e)	Akk.Pl	 * ) )	_	
8	t4621_000	koufet	VVFIN	koufen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
9	t4622_000	-	$_	_	_	 * ) )	_	
10	t4623_000	dem	DDS	dër	Masc.Dat.Sg	(Cl (PreF (NX * ) )	_	
11	t4624_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t4625_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
13	t4626_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
14	t4627_000	korp	NA	korb	Akk.Sg	 * ) )	_	
15	t4628_000	-	$_	_	_	 * )	_	
16	t4629_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
17	t4630_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
18	t4631_000	halber	ADJA	halb	Pos.Masc.Nom.Sg.st	(MF * )	_	
19	t4632_000	-	$_	_	_	 * )	_	
20	t4633_000	oder	KON	oder	_	(Frag *	_	
21	t4634_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
22	t4635_000	ganzer	ADJA	ganz	Pos.Masc.Nom.Sg.st	 *	_	
23	t4636_000	korp	NA	korb	Nom.Sg	 * )	_	
24	t4637_000	rütteln	VVINF	rüttel(e)n	_	(VX * )	_	
25	t4638_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
26	t4638_001	stunte	NA	stunt(e)	Akk.Pl	 * )	_	
27	t4639_000	-	$_	_	_	 * )	_	
28	t4640_000	und	KON	unte	_	(Frag *	_	
29	t4641_000	gestrichen	VVPP	strîchen	_	(VX * )	_	
30	t4642_000	geben	VVINF	gëben	_	(VX * )	_	
31	t4643_000	-	$_	_	_	 *	_	
32	t4644_000	swenne	AVG	swanne	_	(Cl (LB * )	_	
33	t4645_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
34	t4646_000	hûfe	NA	hûfe	Nom.Sg	 * )	_	
35	t4647_000	dâr	PAVD	dâr/+inne	_	(VX *	_	
36	t4648_000	inne	PAVAP	inne/dâr+	_	 * ) )	_	
37	t4649_000	geîchet	VVPP	îchen	_	(RB (VX *	_	
38	t4650_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
39	t4651_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4652_000	und	KON	unte	_	(S (Frag *	_	
2	t4653_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t4654_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t4655_000	tuon	VVINF	tuon	_	(RB (VX * ) )	_	
5	t4656_000	der	DDART	dër	Masc.Nom.Sg	(PostF (NX *	_	
6	t4657_000	schifman	NA	schiff-mann	Nom.Sg	 * ) )	_	
7	t4658_000	-	$_	_	_	 * )	_	
8	t4659_000	oder	KON	oder	_	(Frag *	_	
9	t4660_000	swen	PG	swër	Masc.Akk.Sg.st	(NX * )	_	
10	t4661_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
11	t4662_000	dâr	PAVD	dâr/+zuo	_	(PreF (VX *	_	
12	t4663_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
13	t4664_000	gehaben	VVINF	ge-haben	_	 * ) )	_	
14	t4665_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t4666_000	-	$_	_	_	 * )	_	
16	t4667_000	an	APPR	ane	_	(Frag (PPX *	_	
17	t4668_000	sîner	DPOSA	sîn	Fem.Dat.Sg.st	(NX *	_	
18	t4669_000	stat	NA	stat	Dat.Sg	 *	_	
19	t4670_000	âne	APPR	âne	_	(PPX *	_	
20	t4671_000	geværde	NA	ge-vær(e)de	Akk.Sg	(NX * ) ) ) )	_	
21	t4672_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4673_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Frag (NX * )	_	
2	t4674_000	-	_	[!]	_	(PreF * )	_	
3	t4675_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t4676_000	ouch	AVD	ouch	_	(MF *	_	
5	t4677_000	ein	DIART	èin	Masc,Fem.Nom.Sg.0	(NX *	_	
6	t4678_000	iegelich	DIA	iè-ge-lich	Masc,Fem.Nom.Sg.0	 *	_	
7	t4679_000	man	NA	mann	Nom.Sg	 * ) )	_	
8	t4680_000	-	$_	_	_	 * )	_	
9	t4681_000	ader	KON	oder	_	(Frag *	_	
10	t4682_000	vrouwe	NA	vrouwe	Nom.Sg	(NX * )	_	
11	t4683_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX * ) )	_	
12	t4684_000	kolen	NA	kol(e)	Akk.Pl	(MF (NX * ) )	_	
13	t4685_000	koufen	VVFIN	koufen	*.Pres.Pl.3	(RB (VX * ) )	_	
14	t4686_000	-	$_	_	_	 * ) )	_	
15	t4687_000	heim	AVD	hèim	_	(Frag *	_	
16	t4688_000	zechen	VVINF	zëchen	_	(VX (VX * )	_	
17	t4689_000	oder	KON	oder	_	 *	_	
18	t4690_000	schicken	VVINF	schicken	_	(VX * ) )	_	
19	t4691_000	-	$_	_	_	 * )	_	
20	t4692_000	mit	APPR	mit	_	(Frag (PPX *	_	
21	t4693_000	ires	PPER	ër	*.Gen.Pl.3	(NX *	_	
22	t4694_000	selbes	DDS	sëlb	Masc,Neut.Gen.Sg.st	(NX * ) ) )	_	
23	t4695_000	gesinde	NA	ge-sinde	Dat.Sg	(NX * )	_	
24	t4696_000	-	$_	_	_	 * )	_	
25	t4697_000	mit	APPR	mit	_	(Frag (PPX *	_	
26	t4698_000	karren	NA	karre	Dat.Pl	(NX * ) )	_	
27	t4699_000	-	$_	_	_	 * )	_	
28	t4700_000	oder	KON	oder	_	(Frag *	_	
29	t4701_000	mit	APPR	mit	_	(PPX *	_	
30	t4702_000	wegenen	NA	wagen	Dat.Pl	(NX * ) )	_	
31	t4703_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4704_000	wolte	VMFIN	wèllen	(Subj).Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t4705_000	aber	AVD	aber	_	(MF *	_	
3	t4706_000	die	DDS	dër	Masc.Akk.Pl	(NX * )	_	
4	t4707_000	ieman	DIA	iè-mann	*.Nom.Sg.st	 * )	_	
5	t4708_000	verlônen	VVINF	ver-lônen	_	(RB (VX * ) )	_	
6	t4709_000	-	$_	_	_	 * )	_	
7	t4710_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t4711_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t4712_000	niht	PTKNEG	niht	_	(MF *	_	
10	t4713_000	mêr	ADJA	mêr(e)	Comp.Neut.Akk.Sg.0	 * )	_	
11	t4714_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
12	t4715_000	-	$_	_	_	 *	_	
13	t4716_000	von	APPR	von	_	(Frag (PPX *	_	
14	t4717_000	iewederem	DIA	iè-wëder	Masc.Dat.Sg.st	(NX *	_	
15	t4718_000	halben	ADJA	halb	Pos.Masc.Dat.Sg.wk	 *	_	
16	t4719_000	korbe	NA	korb	Dat.Sg	 * ) )	_	
17	t4720_000	-	$_	_	_	 * )	_	
18	t4721_000	einen	CARDA	èin	Masc.Akk.Sg.st	(Frag (NX *	_	
19	t4722_000	haller	NA	haller(e)	Akk.Sg	 * )	_	
20	t4723_000	-	$_	_	_	 * )	_	
21	t4724_000	und	KON	unte	_	(Frag *	_	
22	t4725_000	niht	PTKNEG	niht	_	 *	_	
23	t4726_000	mêr	ADJA	mêr(e)	Comp.Neut.Akk.Sg.0	 *	_	
24	t4727_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4728_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t4729_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4730_000	ouch	AVD	ouch	_	(MF * )	_	
4	t4731_000	beredet	VVPP	be-rèden	_	(RB (VX * ) )	_	
5	t4732_000	-	$_	_	_	 *	_	
6	t4733_000	daz	KOUS	dazz	_	(PostF (Frag *	_	
7	t4734_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
8	t4735_000	selbe	DDS	sëlb	Masc.Nom.Sg.wk	 * )	_	
9	t4736_000	-	$_	_	_	 *	_	
10	t4737_000	der	DRELS	dër	Masc.Nom.Sg	(NX (Cl (LB (NX * ) )	_	
11	t4738_000	die	DDART	dër	Masc.Akk.Pl	(MF (NX *	_	
12	t4739_000	körbe	NA	korb	Akk.Pl	 * ) )	_	
13	t4740_000	inne	PTKVZ	inne/+haben	_	(RB (VX *	_	
14	t4741_000	hât	VAFIN	haben/inne+	Ind.Pres.Sg.3	 * ) )	_	
15	t4742_000	-	$_	_	_	 * ) ) ) ) )	_	
16	t4743_000	vordern	VVINF	vorder(e)n	_	(Cl (PreF (VX * ) )	_	
17	t4744_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
18	t4745_000	vore	APPR	vor(e)	_	(MF (PPX *	_	
19	t4746_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
20	t4747_000	liuten	NA	liut	Dat.Pl	 * ) ) )	_	
21	t4748_000	-	$_	_	_	 *	_	
22	t4749_000	die	DDART	dër	Masc.Akk.Pl	(Frag (NX *	_	
23	t4750_000	münzær	NA	münzære	Akk.Pl	 *	_	
24	t4751_000	mit	APPR	mit	_	(PPX *	_	
25	t4752_000	kolen	NA	kol(e)	Dat.Pl	(NX * ) ) )	_	
26	t4753_000	-	$_	_	_	 * ) )	_	
27	t4754_000	und	KON	unte	_	(Cl (PrePreF * )	_	
28	t4755_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
29	t4756_000	die	DDS	dër	Masc.Akk.Pl	(MF (NX * ) )	_	
30	t4757_000	verlônen	VVINF	ver-lônen	_	(RB (VX * ) )	_	
31	t4758_000	von	APPR	von	_	(PostF (PPX *	_	
32	t4759_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
33	t4760_000	gelte	NA	gëlt	Dat.Sg	 * ) ) )	_	
34	t4761_000	-	$_	_	_	 *	_	
35	t4762_000	daz	DRELS	dër	Neut.Akk.Sg	(PostF (Cl (LB (NX * ) )	_	
36	t4763_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
37	t4764_000	nimet	VVFIN	nëmen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
38	t4765_000	von	APPR	von	_	(PostF (PPX *	_	
39	t4766_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
40	t4767_000	schiffen	NA	schiff	Dat.Pl	 * ) ) )	_	
41	t4768_000	-	$_	_	_	 * ) )	_	
42	t4769_000	und	KON	unte	_	(Frag *	_	
43	t4770_000	dâr	PAVD	dâr/+nâh	_	 *	_	
44	t4771_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
45	t4772_000	die	DDART	dër	Masc.Akk.Pl	(NX *	_	
46	t4773_000	smide	NA	smid	Akk.Pl	 * )	_	
47	t4774_000	-	$_	_	_	 * )	_	
48	t4775_000	als	KO*	all-sô	_	(Frag *	_	
49	t4776_000	vile	AVD	vil(e)	_	(PreF *	_	
50	t4777_000	sie	PPER	ër	Masc.Nom.Pl.3	(NX * ) )	_	
51	t4778_000	bedurfen	VVFIN	be-durfen	*.Pres.Pl.3	(LB (VX * ) )	_	
52	t4779_000	zuo	APPR	ze	_	(MF (PPX *	_	
53	t4780_000	irem	DPOSA	ir(e)	Neut.Dat.Sg.st	(NX *	_	
54	t4781_000	werke	NA	wërk	Dat.Sg	 * ) ) )	_	
55	t4782_000	-	$_	_	_	 * )	_	
56	t4783_000	âne	APPR	âne	_	(Frag (PPX *	_	
57	t4784_000	allez	DIA	all	Neut.Akk.Sg.st	(NX *	_	
58	t4785_000	geværde	NA	ge-vær(e)de	Akk.Sg	 * ) )	_	
59	t4786_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4787_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t4788_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4789_000	ouch	AVD	ouch	_	(MF *	_	
4	t4790_000	niemanne	DIA	niè-mann	*.Dat.Sg.st	 *	_	
5	t4791_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
6	t4792_000	gemülle	NA	ge-mülle	Akk.Sg	 * ) )	_	
7	t4793_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
8	t4794_000	-	$_	_	_	 *	_	
9	t4795_000	under	APPR	unter	_	(Frag (PPX *	_	
10	t4796_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
11	t4797_000	kolen	NA	kol(e)	Dat.Pl	 * ) )	_	
12	t4798_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4799_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t4800_000	ouch	AVD	ouch	_	(PreF *	_	
3	t4801_000	kolen	NA	kol(e)	Akk.Pl	(NX * ) )	_	
4	t4802_000	koufet	VVFIN	koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t4803_000	ûf	APPR	ûf	_	(MF (PPX *	_	
6	t4804_000	wegenen	NA	wagen	Dat.Pl	(NX * ) ) )	_	
7	t4805_000	-	$_	_	_	 * )	_	
8	t4806_000	dem	DDS	dër	Masc.Dat.Sg	(Cl (PreF (NX * ) )	_	
9	t4807_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t4808_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
11	t4809_000	die	DDART	dër	Masc.Akk.Pl	(NX *	_	
12	t4810_000	körbe	NA	korb	Akk.Pl	 * ) )	_	
13	t4811_000	dâr	PAVD	dâr/+zuo	_	(RB (VX *	_	
14	t4812_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
15	t4813_000	lîhen	VVINF	lîhen	_	 * ) )	_	
16	t4814_000	-	$_	_	_	 * )	_	
17	t4815_000	und	KON	unte	_	(Cl (PrePreF * )	_	
18	t4816_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t4817_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
20	t4818_000	wagenman	NA	wagen-mann	Nom.Sg	 * )	_	
21	t4819_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
22	t4820_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
23	t4821_000	dâ	PAVD	dâr/+von(e)	_	(RB (VX *	_	
24	t4822_000	von	PAVAP	von(e)/dâr+	_	 *	_	
25	t4823_000	geben	VVINF	gëben	_	 * ) )	_	
26	t4824_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4825_000	wie	AVW	wiè	_	(S (Frag *	_	
2	t4826_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
3	t4827_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
4	t4828_000	korn	NA	korn	Akk.Sg	 * )	_	
5	t4829_000	entvâhen	VVINF	ent-vâhen	_	(PreF (VX * ) )	_	
6	t4830_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t4831_000	-	$_	_	_	 * )	_	
8	t4832_000	und	KON	unte	_	(Frag *	_	
9	t4833_000	ûz	PTKVZ	ûz/+gëben	_	(PreF (VX *	_	
10	t4833_001	geben	VVINF	gëben/ûz+	_	 * ) )	_	
11	t4834_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t4835_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4836_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t4837_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4838_000	ouch	AVD	ouch	_	(MF * )	_	
4	t4839_000	gemachet	VVPP	machen	_	(RB (VX (VX * )	_	
5	t4840_000	unde	KON	unte	_	 *	_	
6	t4841_000	verniuwet	VVPP	ver-niuwen	_	(VX * ) ) )	_	
7	t4842_000	-	$_	_	_	 * )	_	
8	t4843_000	als	KO*	all-sô	_	(Frag *	_	
9	t4844_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX *	_	
10	t4845_000	von	APPR	von	_	(PPX *	_	
11	t4846_000	alter	NA	alter	Dat.Sg	(NX * ) ) )	_	
12	t4847_000	her	AVD	hër(e)	_	 *	_	
13	t4848_000	kumen	VVPP	komen	_	(VX *	_	
14	t4849_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
15	t4850_000	-	$_	_	_	 *	_	
16	t4851_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
17	t4852_000	ein	DIART	èin	Masc.Nom.Sg.0	(PreF (MF (NX *	_	
18	t4853_000	iegelich	DIA	iè-ge-lich	Masc.Nom.Sg.0	 *	_	
19	t4854_000	man	NA	mann	Nom.Sg	 * )	_	
20	t4855_000	-	$_	_	_	 *	_	
21	t4856_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
22	t4857_000	korn	NA	korn	Akk.Sg	 * ) ) )	_	
23	t4858_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
24	t4859_000	mit	APPR	mit	_	(MF (PPX *	_	
25	t4860_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
26	t4861_000	metzen	NA	mètze	Dat.Pl	 * ) ) )	_	
27	t4862_000	entvâhen	VVINF	ent-vâhen	_	(RB (VX * ) )	_	
28	t4863_000	-	$_	_	_	 *	_	
29	t4864_000	und	KON	unte	_	(PostF *	_	
30	t4865_000	mit	APPR	mit	_	(PPX *	_	
31	t4866_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
32	t4867_000	sumberen	NA	sumber	Dat.Sg	 * ) )	_	
33	t4868_000	wider	AVD	wider(e)	_	 *	_	
34	t4869_000	ûz	PTKVZ	ûz/+gëben	_	(VX *	_	
35	t4870_000	geben	VVINF	gëben/ûz+	_	 * ) )	_	
36	t4871_000	-	$_	_	_	 *	_	
37	t4872_000	ez	PPER	ër	Neut.Nom.Sg.3	(PostF (NX * ) )	_	
38	t4873_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) )	_	
39	t4874_000	zuo	APPR	ze	_	(PostF (PPX *	_	
40	t4875_000	müle	NA	mül(e)	Dat.Sg	(NX * ) )	_	
41	t4876_000	oder	KON	oder	_	 *	_	
42	t4877_000	anderswô	AVD	ander(e)s-wô	_	 * )	_	
43	t4878_000	-	$_	_	_	 * ) )	_	
44	t4879_000	bî	APPR	bî	_	(Frag (PPX *	_	
45	t4880_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
46	t4881_000	buoze	NA	buoze	Dat.Sg	 * ) )	_	
47	t4882_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
48	t4883_000	schillinc	NA	schilling	Akk.Sg	 *	_	
49	t4884_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
50	t4885_000	-	$_	_	_	 * )	_	
51	t4886_000	von	APPR	von	_	(Frag (PPX *	_	
52	t4887_000	iewederem	DIA	iè-wëder	Neut.Dat.Sg.st	(NX *	_	
53	t4888_000	malter	NA	malter	Dat.Sg	 * ) )	_	
54	t4889_000	-	$_	_	_	 *	_	
55	t4890_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
56	t4891_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) )	_	
57	t4892_000	ûz	PTKVZ	ûz/+gëben	_	(RB (VX (VX *	_	
58	t4893_000	gît	VVFIN	gëben/ûz+	Ind.Pres.Sg.3	 * )	_	
59	t4894_000	oder	KON	oder	_	 *	_	
60	t4895_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(VX * ) ) )	_	
61	t4896_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4897_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t4898_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t4899_000	saktragærn	NA	sack-tragære	Dat.Pl	 * ) )	_	
4	t4900_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4901_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t4902_000	verbiutet	VVFIN	ver-bièten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4903_000	ouch	AVD	ouch	_	(MF *	_	
4	t4904_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
5	t4905_000	saktragærn	NA	sack-tragære	Dat.Pl	 *	_	
6	t4906_000	bî	APPR	bî	_	(PPX *	_	
7	t4907_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
8	t4908_000	eiden	NA	èid	Dat.Pl	 * ) ) ) )	_	
9	t4909_000	-	$_	_	_	 *	_	
10	t4910_000	die	DRELS	dër	Masc.Akk.Pl	(PostF (Cl (LB (NX * ) )	_	
11	t4911_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
12	t4912_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
13	t4913_000	stete	NA	stat	Dat.Sg	 * ) )	_	
14	t4914_000	gesworen	VVPP	swèr(e)n	_	(RB (VX *	_	
15	t4915_000	haben	VAFIN	haben	*.Pres.Pl.3	 * ) )	_	
16	t4916_000	-	$_	_	_	 *	_	
17	t4917_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
18	t4918_000	si	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
19	t4919_000	vürebaz	AVD	vür(e)-bazz	_	 *	_	
20	t4920_000	kein	DIA	kèin	Neut.Akk.Sg.0	(NX *	_	
21	t4921_000	korn	NA	korn	Akk.Sg	 * )	_	
22	t4922_000	-	$_	_	_	 *	_	
23	t4923_000	weize	NA	wèize	Akk.Sg	(NX * )	_	
24	t4924_000	oder	KON	oder	_	 *	_	
25	t4925_000	habern	NA	haber(e)	Akk.Sg	(NX * )	_	
26	t4926_000	-	$_	_	_	 *	_	
27	t4927_000	niemanne	DIA	niè-mann	*.Dat.Sg.st	 *	_	
28	t4928_000	verkoufen	VVINF	ver-koufen	_	(VX * ) )	_	
29	t4929_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(RB (VX * ) )	_	
30	t4930_000	-	$_	_	_	 * ) ) ) )	_	
31	t4931_000	nâch	APPR	nâh	_	(Frag (PPX *	_	
32	t4932_000	mezzenne	NA	mëzzen	Dat.Sg	(NX *	_	
33	t4933_000	umbe	APPR	umbe	_	(PPX *	_	
34	t4934_000	lôn	NA	lôn	Akk.Sg	(NX * ) ) ) )	_	
35	t4935_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4936_000	wær	VAFIN	wësen	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t4937_000	aber	AVD	aber	_	(MF * )	_	
3	t4938_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
4	t4939_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
5	t4940_000	ieman	DIA	iè-mann	*.Akk.Sg.st	 * )	_	
6	t4941_000	wisten	VVFIN	wizzen	(Subj).Past.Pl.3	(RB (VX * ) )	_	
7	t4942_000	-	$_	_	_	 * ) ) )	_	
8	t4943_000	dâ	PAVD	dâr/.+von(e)	_	(Cl (LB (VX *	_	
9	t4944_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	 * ) )	_	
10	t4945_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
11	t4946_000	kein	DIA	kèin	Masc,Neut.Akk.Sg.0	(NX *	_	
12	t4947_000	gelt	NA	gëlt	Akk.Sg	 * ) )	_	
13	t4948_000	von	PAVAP	von(e)/dâr.+	_	(RB (VX *	_	
14	t4949_000	nemen	VVINF	nëmen	_	 * ) )	_	
15	t4950_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4951_000	swem	PG	swër	Masc.Dat.Sg.st	(S (Frag (NX * )	_	
2	t4952_000	aber	AVD	aber	_	 *	_	
3	t4953_000	sie	PPER	ër	Masc.Nom.Pl.3	(NX * )	_	
4	t4954_000	korn	NA	korn	Akk.Sg	(NX * ) )	_	
5	t4955_000	weize	NA	wèize	Akk.Sg	(Frag (NX * )	_	
6	t4956_000	-	$_	_	_	 * )	_	
7	t4957_000	oder	KON	oder	_	(Frag *	_	
8	t4958_000	habern	NA	haber(e)	Akk.Sg	(PreF (NX * ) )	_	
9	t4959_000	tragen	VVFIN	tragen	*.Pres.Pl.3	(LB (VX * ) )	_	
10	t4960_000	-	$_	_	_	 * )	_	
11	t4961_000	dâ	PAVD	dâr/.+von(e)	_	(Cl (LB (VX *	_	
12	t4962_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	 * ) )	_	
13	t4963_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
14	t4964_000	niht	PTKNEG	niht	_	 *	_	
15	t4965_000	mêr	ADJA	mêr(e)	Comp.Neut.Akk.Sg.0	 * )	_	
16	t4966_000	von	PAVAP	von(e)/dâr.+	_	(RB (VX *	_	
17	t4967_000	nemen	VVINF	nëmen	_	 * ) )	_	
18	t4968_000	zuo	APPR	ze	_	(PostF (PPX *	_	
19	t4969_000	tragenne	NA	tragen	Dat.Sg	(NX * ) ) )	_	
20	t4970_000	-	$_	_	_	 *	_	
21	t4971_000	und	KON	unte	_	(Frag *	_	
22	t4972_000	von	PAVAP	von(e)/dâr.+	_	 *	_	
23	t4973_000	ze	APPR	ze	_	(PPX *	_	
24	t4973_001	verkoufenne	NA	ver-koufen	Dat.Sg	(NX * ) )	_	
25	t4974_000	-	$_	_	_	 * )	_	
26	t4975_000	denne	KOKOM	danne	_	(Frag *	_	
27	t4976_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
28	t4977_000	pfenninc	NA	pfènning	Akk.Sg	 * )	_	
29	t4978_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4979_000	als	KO*	all-sô	_	(S (Frag *	_	
2	t4980_000	dicke	AVD	dicke	_	(PreF * )	_	
3	t4981_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
4	t4982_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
5	t4983_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t4984_000	-	$_	_	_	 * )	_	
7	t4985_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t4986_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t4987_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
10	t4988_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
11	t4989_000	von	APPR	von	_	(PostF (PPX *	_	
12	t4990_000	iewederem	DIA	iè-wëder	Neut.Dat.Sg.st	(NX *	_	
13	t4991_000	malter	NA	malter	Dat.Sg	 * ) ) )	_	
14	t4992_000	-	$_	_	_	 *	_	
15	t4993_000	einen	CARDA	èin	Masc.Akk.Sg.st	(Frag (NX *	_	
16	t4994_000	schillinc	NA	schilling	Akk.Sg	 *	_	
17	t4995_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
18	t4996_000	-	$_	_	_	 * ) )	_	
19	t4997_000	und	KON	unte	_	(Cl (PrePreF * )	_	
20	t4998_000	dâr	PAVD	dâr/+zuo	_	(LB (VX *	_	
21	t4998_001	zuo	PAVAP	zuo/dâr+	_	 *	_	
22	t4999_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	 * ) )	_	
23	t5000_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
24	t5001_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
25	t5002_000	stat	NA	stat	Akk.Sg	 * )	_	
26	t5003_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
27	t5004_000	mânden	NA	mând(e)	Akk.Sg	 * ) )	_	
28	t5005_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
29	t5006_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5007_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t5008_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
3	t5009_000	wâge	NA	wâge	Dat.Sg	 *	_	
4	t5010_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
5	t5011_000	getreides	NA	ge-trègede	Gen.Sg	 * ) ) )	_	
6	t5012_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5013_000	dâr	PAVD	dâr/+nâh	_	(S (Cl (LB (VX *	_	
2	t5014_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
3	t5015_000	hât	VAFIN	haben	Ind.Pres.Sg.3	 * ) )	_	
4	t5016_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
5	t5017_000	gemachet	VVPP	machen	_	(RB (VX * ) )	_	
6	t5018_000	wâge	NA	wâge	Akk.Sg	(PostF (NX * ) )	_	
7	t5019_000	-	$_	_	_	 *	_	
8	t5020_000	dâ	PAVD	dâr/+mit(e)	_	(Frag *	_	
9	t5021_000	mit	PAVAP	mit(e)/dâr+	_	 *	_	
10	t5022_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
11	t5023_000	wegen	VVINF	wëgen	_	(PreF (VX * ) )	_	
12	t5024_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t5025_000	-	$_	_	_	 * ) )	_	
14	t5026_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
15	t5027_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
16	t5028_000	korn	NA	korn	Nom.Sg	(MF (NX * )	_	
17	t5029_000	oder	KON	oder	_	 *	_	
18	t5030_000	weize	NA	wèize	Nom.Sg	(NX * ) )	_	
19	t5031_000	-	$_	_	_	 *	_	
20	t5032_000	daz	DRELS	dër	Neut.Akk.Sg	(PostF (Cl (LB (NX * ) )	_	
21	t5033_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
22	t5034_000	tuon	VVINF	tuon	_	(VX * ) )	_	
23	t5035_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
24	t5036_000	zuo	APPR	ze	_	(PostF (PPX *	_	
25	t5037_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
26	t5038_000	mülen	NA	mül(e)	Dat.Sg	 * ) ) )	_	
27	t5039_000	-	$_	_	_	 * ) )	_	
28	t5040_000	daz	DDART	dër	Neut.Akk.Sg	(Frag (NX *	_	
29	t5041_000	korn	NA	korn	Akk.Sg	 * )	_	
30	t5042_000	oder	KON	oder	_	 *	_	
31	t5043_000	weize	NA	wèize	Akk.Sg	(NX * )	_	
32	t5044_000	hin	PAVD	hin(e)/+ûz	_	 *	_	
33	t5045_000	ûz	PAVAP	ûz/hin(e)+	_	 *	_	
34	t5046_000	und	KON	unte	_	 *	_	
35	t5047_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
36	t5048_000	mel	NA	mëlw	Akk.Sg	 * )	_	
37	t5049_000	her	PAVD	hër(e)/.+în	_	 *	_	
38	t5050_000	wider	AVD	wider(e)	_	 *	_	
39	t5051_000	în	PAVAP	în/hër(e).+	_	 *	_	
40	t5052_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5053_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t5054_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5055_000	ieweder	DIS	iè-wëder	Masc.Nom.Sg.0	(MF (NX * ) )	_	
4	t5056_000	des	DRELS	dër	Masc.Gen.Sg	(PostF (Cl (LB (NX * ) )	_	
5	t5057_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
6	t5058_000	getreide	NA	ge-trègede	Nom.Sg	 * ) )	_	
7	t5059_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX * ) )	_	
8	t5060_000	-	$_	_	_	 * ) ) )	_	
9	t5061_000	geben	VVINF	gëben	_	(Frag (VX * )	_	
10	t5062_000	von	APPR	von	_	(PPX *	_	
11	t5063_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
12	t5064_000	malter	NA	malter	Dat.Sg	 *	_	
13	t5065_000	ze	APPR	ze	_	(PPX *	_	
14	t5066_000	wegenne	NA	wègen	Dat.Sg	(NX * ) ) ) )	_	
15	t5067_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
16	t5068_000	haller	NA	haller(e)	Akk.Sg	 * )	_	
17	t5069_000	-	$_	_	_	 * )	_	
18	t5070_000	unde	KON	unte	_	(Frag *	_	
19	t5071_000	von	APPR	von	_	(PPX *	_	
20	t5072_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
21	t5073_000	ahteile	NA	aht-tèil	Dat.Sg	 * ) )	_	
22	t5074_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
23	t5075_000	haller	NA	haller(e)	Akk.Sg	 * )	_	
24	t5076_000	-	$_	_	_	 * )	_	
25	t5077_000	und	KON	unte	_	(Frag *	_	
26	t5078_000	niht	PTKNEG	niht	_	 *	_	
27	t5079_000	mêr	ADJA	mêr(e)	Comp.Neut.Akk.Sg.0	 *	_	
28	t5080_000	-	$_	_	_	 * )	_	
29	t5081_000	und	KON	unte	_	(Frag *	_	
30	t5082_000	daz	DDART	dër	Neut.Nom.Sg	(PreF (NX *	_	
31	t5083_000	korn	NA	korn	Nom.Sg	 * ) )	_	
32	t5084_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
33	t5085_000	vore	AVD	vor(e)	_	(MF *	_	
34	t5086_000	geveget	VVPP	vëgen	_	(VX * )	_	
35	t5087_000	sîn	VAINF	sîn	_	(VX * ) )	_	
36	t5088_000	-	$_	_	_	 * )	_	
37	t5089_000	êr denne	KO*	êr~danne	_	(Frag *	_	
38	t5090_000	ez	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
39	t5091_000	kume	VVFIN	komen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
40	t5092_000	zuo	APPR	ze	_	(MF (PPX *	_	
41	t5093_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
42	t5094_000	wâge	NA	wâge	Dat.Sg	 * ) ) )	_	
43	t5095_000	-	$_	_	_	 * )	_	
44	t5096_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5097_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t5098_000	aber	AVD	aber	_	 *	_	
3	t5099_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	(NX *	_	
4	t5100_000	korn	NA	korn	Akk.Sg	 * )	_	
5	t5101_000	oder	KON	oder	_	 *	_	
6	t5102_000	weize	NA	wèize	Akk.Sg	(PreF (NX * ) )	_	
7	t5103_000	bringet	VVFIN	bringen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t5104_000	zuo	APPR	ze	_	(MF (PPX *	_	
9	t5105_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
10	t5106_000	wâge	NA	wâge	Dat.Sg	 * ) ) )	_	
11	t5107_000	-	$_	_	_	 * )	_	
12	t5108_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
13	t5109_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
14	t5110_000	die	DDS	dër	Masc.Nom.Pl	(MF (NX * ) )	_	
15	t5111_000	besehen	VVINF	be-sëhen	_	(RB (VX * ) )	_	
16	t5112_000	-	$_	_	_	 *	_	
17	t5113_000	die	DRELS	dër	Masc.Nom.Pl	(PostF (Cl (LB (NX *	_	
18	t5114_000	der	DDART	dër	Fem.Gen.Sg	(NX *	_	
19	t5115_000	wâge	NA	wâge	Gen.Sg	 * ) ) )	_	
20	t5116_000	warten	VVFIN	warten	*.Pres.Pl.3	(RB (VX * ) )	_	
21	t5117_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5118_000	vinden	VVFIN	vinden	*.Pres.Pl.3	(S (Cl (LB (VX * ) )	_	
2	t5119_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
3	t5120_000	daz	DDS	dër	Neut.Akk.Sg	(NX * )	_	
4	t5121_000	ungeveget	ADJD	un-ge-vèget	Pos....0	 * )	_	
5	t5122_000	-	$_	_	_	 *	_	
6	t5123_000	und	KON	unte	_	(Frag *	_	
7	t5124_000	ungeliutert	ADJD	un-ge-liuter(e)t	Pos....0	 *	_	
8	t5125_000	-	$_	_	_	 * ) )	_	
9	t5126_000	sô	AVD	sô	_	(Cl (PreF * )	_	
10	t5127_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t5128_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
12	t5129_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
13	t5130_000	-	$_	_	_	 *	_	
14	t5131_000	von	APPR	von	_	(Frag (PPX *	_	
15	t5132_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
16	t5133_000	selben	DDA	sëlb	Neut.Dat.Sg.wk	 *	_	
17	t5134_000	malter	NA	malter	Dat.Sg	 * ) )	_	
18	t5135_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
19	t5136_000	schillinc	NA	schilling	Akk.Sg	 *	_	
20	t5137_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
21	t5138_000	-	$_	_	_	 * ) )	_	
22	t5139_000	und	KON	unte	_	(Cl (PrePreF * )	_	
23	t5140_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
24	t5141_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
25	t5142_000	korn	NA	korn	Nom.Sg	 * )	_	
26	t5143_000	als	AVD	all-sô	_	 *	_	
27	t5144_000	lange	AVD	lange	_	 *	_	
28	t5145_000	dâ	AVD	dâr	_	 * )	_	
29	t5146_000	stên	VVINF	stân	_	(RB (VX * ) )	_	
30	t5147_000	-	$_	_	_	 *	_	
31	t5148_000	biz	KOUS	biz	_	(PostF (Cl (LB * )	_	
32	t5149_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
33	t5150_000	schillinc	NA	schilling	Nom.Sg	 *	_	
34	t5151_000	pfenninc	NA	pfènning	Nom.Sg	 * ) )	_	
35	t5152_000	gevallen	VVPP	vallen	_	(RB (VX *	_	
36	t5153_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
37	t5154_000	-	$_	_	_	 * ) ) )	_	
38	t5155_000	und	KON	unte	_	(Cl (PrePreF * )	_	
39	t5156_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
40	t5157_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
41	t5158_000	dannoch	AVD	dan-noh	_	 *	_	
42	t5159_000	geveget	VVPP	vëgen	_	(VX * ) )	_	
43	t5160_000	-	$_	_	_	 * )	_	
44	t5161_000	und	KON	unte	_	(Frag *	_	
45	t5162_000	geliutert	VVPP	liuter(e)n	_	(VX * )	_	
46	t5163_000	sîn	VAINF	sîn	_	(VX * )	_	
47	t5164_000	-	$_	_	_	 * )	_	
48	t5165_000	als	KO*	all-sô	_	(Frag *	_	
49	t5166_000	vore	AVD	vor(e)	_	 *	_	
50	t5167_000	geredet	VVPP	rèden	_	(VX *	_	
51	t5168_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
52	t5169_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5170_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t5171_000	ouch	AVD	ouch	_	(PreF * )	_	
3	t5172_000	vürevert	VVFIN	vür(e)-var(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t5173_000	-	$_	_	_	 * )	_	
5	t5174_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
6	t5175_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
7	t5176_000	in	APPR	in	_	(MF (PPX *	_	
8	t5177_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
9	t5178_000	stat	NA	stat	Dat.Sg	 * ) ) )	_	
10	t5179_000	-	$_	_	_	 *	_	
11	t5180_000	oder	KON	oder	_	(Frag *	_	
12	t5181_000	dâr	PAVD	dâr/+vor(e)	_	 *	_	
13	t5182_000	vore	PAVAP	vor(e)/dâr+	_	 * )	_	
14	t5183_000	ungewegen	ADJD	un-ge-wëgen	Pos....0	(Frag *	_	
15	t5184_000	-	$_	_	_	 * )	_	
16	t5185_000	hin	AVD	hin(e)	_	(Frag *	_	
17	t5186_000	ûz	AVD	ûz	_	 *	_	
18	t5187_000	oder	KON	oder	_	 *	_	
19	t5188_000	her	PAVD	hër(e)/+în	_	 *	_	
20	t5189_000	în	PAVAP	în/hër(e)+	_	 *	_	
21	t5190_000	-	$_	_	_	 * )	_	
22	t5191_000	mit	APPR	mit	_	(Frag (PPX *	_	
23	t5192_000	korne	NA	korn	Dat.Sg	(NX * ) )	_	
24	t5193_000	oder	KON	oder	_	 *	_	
25	t5194_000	mit	APPR	mit	_	(PPX *	_	
26	t5195_000	melwe	NA	mëlw	Dat.Sg	(NX * ) )	_	
27	t5196_000	-	$_	_	_	 * ) )	_	
28	t5197_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
29	t5198_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
30	t5199_000	bî	APPR	bî	_	(MF (PPX *	_	
31	t5200_000	tage	NA	tag	Dat.Sg	(NX * ) )	_	
32	t5201_000	oder	KON	oder	_	 *	_	
33	t5202_000	bî	APPR	bî	_	(PPX *	_	
34	t5203_000	naht	NA	naht	Dat.Sg	(NX * ) ) )	_	
35	t5204_000	-	$_	_	_	 * )	_	
36	t5205_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
37	t5206_000	gibet	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
38	t5207_000	ze	APPR	ze	_	(MF (PPX *	_	
39	t5208_000	buoze	NA	buoze	Dat.Sg	(NX * ) )	_	
40	t5209_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
41	t5210_000	schillinge	NA	schilling	Akk.Pl	 *	_	
42	t5211_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
43	t5212_000	-	$_	_	_	 *	_	
44	t5213_000	als	KO*	all-sô	_	(Frag *	_	
45	t5214_000	dicke	AVD	dicke	_	(PreF * )	_	
46	t5215_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
47	t5216_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
48	t5217_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
49	t5218_000	-	$_	_	_	 * ) )	_	
50	t5219_000	und	KON	unte	_	(Cl (PrePreF * )	_	
51	t5220_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
52	t5221_000	ouch	AVD	ouch	_	(MF *	_	
53	t5222_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
54	t5223_000	stat	NA	stat	Akk.Sg	 * )	_	
55	t5224_000	vier	CARDA	vièr	Fem.Akk.Pl.0	(NX *	_	
56	t5225_000	wochen	NA	woche	Akk.Pl	 * ) )	_	
57	t5226_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
58	t5227_000	-	$_	_	_	 *	_	
59	t5228_000	drî	CARDA	drî	Fem.Akk.Pl.0	(Frag (NX *	_	
60	t5229_000	mîle	NA	mîle	Akk.Pl	 *	_	
61	t5230_000	von	APPR	von	_	(PPX *	_	
62	t5231_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
63	t5232_000	stat	NA	stat	Dat.Sg	 *	_	
64	t5233_000	âne	APPR	âne	_	(PPX *	_	
65	t5234_000	genâde	NA	ge-nâde	Akk.Sg	(NX * ) ) ) ) )	_	
66	t5235_000	-	$_	_	_	 * ) )	_	
67	t5236_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5237_000	swelich	DGA	swèl(i)ch	Masc.Nom.Sg.0	(S (Frag (NX *	_	
2	t5238_000	mülenær	NA	mül(e)nære	Nom.Sg	 * )	_	
3	t5239_000	minner	ADJA	minner	Comp.Neut.Akk.Sg.0	 *	_	
4	t5240_000	melwes	NA	mëlw	Gen.Sg	(NX * )	_	
5	t5241_000	wider	AVD	wider(e)	_	(PreF * )	_	
6	t5242_000	entwürtet	VVFIN	ant-würten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t5243_000	-	$_	_	_	 *	_	
8	t5244_000	denne	KOUS	danne	_	(Cl (LB * )	_	
9	t5245_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
10	t5246_000	zuo	APPR	ze	_	(PPX *	_	
11	t5247_000	rehte	NA	rëht	Dat.Sg	(NX * ) ) ) )	_	
12	t5248_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(RB (VX * ) )	_	
13	t5249_000	-	$_	_	_	 * ) )	_	
14	t5250_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
15	t5251_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t5252_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) )	_	
17	t5253_000	ervüllen	VVINF	er-vüllen	_	(RB (VX * ) )	_	
18	t5254_000	mit	APPR	mit	_	(PostF (PPX *	_	
19	t5255_000	anderm	DIA	ander	Neut.Dat.Sg.st	(NX *	_	
20	t5256_000	gerehtem	ADJA	ge-rëht	Pos.Neut.Dat.Sg.st	 *	_	
21	t5257_000	melwe	NA	mëlw	Dat.Sg	 * ) ) )	_	
22	t5258_000	-	$_	_	_	 * )	_	
23	t5259_000	und	KON	unte	_	(Cl (PrePreF * )	_	
24	t5260_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
25	t5261_000	dâr	PAVD	dâr/+zuo	_	(RB (VX *	_	
26	t5262_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
27	t5263_000	geben	VVINF	gëben	_	 * ) )	_	
28	t5264_000	-	$_	_	_	 *	_	
29	t5265_000	einen	CARDA	èin	Masc.Akk.Sg.st	(Frag (NX *	_	
30	t5266_000	schillinc	NA	schilling	Akk.Sg	 *	_	
31	t5267_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
32	t5268_000	-	$_	_	_	 * )	_	
33	t5269_000	als	KO*	all-sô	_	(Frag *	_	
34	t5270_000	dicke	AVD	dicke	_	(PreF * )	_	
35	t5271_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
36	t5272_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
37	t5273_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
38	t5274_000	-	$_	_	_	 * ) )	_	
39	t5275_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5276_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t5277_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5278_000	ouch	AVD	ouch	_	(MF *	_	
4	t5279_000	kein	DIA	kèin	Masc.Nom.Sg.0	(NX *	_	
5	t5280_000	mülenær	NA	mül(e)nære	Nom.Sg	 * ) )	_	
6	t5281_000	-	$_	_	_	 * )	_	
7	t5282_000	kein	DIA	kèin	Neut.Akk.Sg.0	(Frag (NX *	_	
8	t5283_000	korn	NA	korn	Akk.Sg	 * )	_	
9	t5284_000	oder	KON	oder	_	 *	_	
10	t5285_000	weize	NA	wèize	Akk.Sg	(NX * )	_	
11	t5286_000	wizzentlîche	AVD	wizzen(t)-lîche	_	 *	_	
12	t5287_000	ungewegen	ADJD	un-ge-wëgen	Pos....0	 *	_	
13	t5288_000	în	PTKVZ	în/+nëmen	_	(VX *	_	
14	t5288_001	nemen	VVINF	nëmen/în+	_	 * )	_	
15	t5289_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5290_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t5291_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t5292_000	tæte	VVFIN	tuon	Subj.Past.Sg.3	(LB (VX * ) )	_	
4	t5293_000	-	$_	_	_	 * )	_	
5	t5294_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t5295_000	gibet	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t5296_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(MF (NX *	_	
8	t5297_000	schillinge	NA	schilling	Akk.Pl	 *	_	
9	t5298_000	pfenninge	NA	pfènning	Gen.Pl	(NX *	_	
10	t5299_000	zuo	APPR	ze	_	(PPX *	_	
11	t5300_000	buoze	NA	buoze	Dat.Sg	(NX * ) ) ) ) )	_	
12	t5301_000	-	$_	_	_	 * )	_	
13	t5302_000	und	KON	unte	_	(Cl (PrePreF * )	_	
14	t5303_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t5304_000	dâr	PAVD	dâr/+zuo	_	(RB (VX *	_	
16	t5305_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
17	t5306_000	rûmen	VVINF	rûmen	_	 * ) )	_	
18	t5307_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
19	t5308_000	stat	NA	stat	Akk.Sg	 * )	_	
20	t5309_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
21	t5310_000	mânden	NA	mând(e)	Akk.Sg	 * )	_	
22	t5311_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
23	t5312_000	mîle	NA	mîle	Akk.Pl	 *	_	
24	t5313_000	von	APPR	von	_	(PPX *	_	
25	t5314_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
26	t5315_000	stat	NA	stat	Dat.Sg	 * ) ) ) )	_	
27	t5316_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5317_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t5318_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t5319_000	ziegelærn	NA	ziègelære	Dat.Pl	 * ) )	_	
4	t5320_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5321_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t5322_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5323_000	ouch	AVD	ouch	_	(MF *	_	
4	t5324_000	ze	APPR	ze	_	(PPX *	_	
5	t5325_000	râte	NA	rât	Dat.Sg	(NX * ) )	_	
6	t5326_000	worden	VAPP	wërden	_	(VX * ) )	_	
7	t5327_000	-	$_	_	_	 * )	_	
8	t5328_000	und	KON	unte	_	(Cl (PrePreF * )	_	
9	t5329_000	hân	VAFIN	haben	*.Pres.Pl.1	(LB (VX * ) )	_	
10	t5330_000	gesetze	NA	ge-sètze	Akk.Pl	(MF (NX *	_	
11	t5331_000	von	APPR	von	_	(PPX *	_	
12	t5332_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
13	t5333_000	ziegelærn	NA	ziègelære	Dat.Pl	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5334_000	den	DDS	dër	*.Dat.Pl	(S (Cl (PreF (NX * ) )	_	
2	t5335_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5336_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
4	t5337_000	niuwe	ADJA	niuwe	Pos.Neut.Akk.Pl.st	(NX *	_	
5	t5338_000	îsen	NA	îsen	Akk.Pl	 * ) )	_	
6	t5339_000	gemachet	VVPP	machen	_	(RB (VX * ) )	_	
7	t5340_000	-	$_	_	_	 *	_	
8	t5341_000	nâch	APPR	nâh	_	(PostF (Cl (LB (PPX *	_	
9	t5342_000	der	DRELS	dër	*.Gen.Pl	(NX * ) ) )	_	
10	t5343_000	forme	NA	form(e)	Dat.Sg	(MF (NX * )	_	
11	t5344_000	sie	PPER	ër	Masc.Nom.Pl.3	(NX * )	_	
12	t5345_000	wirken	VVINF	wirken	_	(VX * ) )	_	
13	t5346_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(RB (VX * ) )	_	
14	t5347_000	-	$_	_	_	 * ) ) )	_	
15	t5348_000	sie	PPER	ër	Masc.Nom.Pl.3	(Cl (PreF (NX * ) )	_	
16	t5349_000	sîn	VAFIN	sîn	Subj.Pres.Pl.3	(LB (VX * ) )	_	
17	t5350_000	hier	AVD	hièr	_	(MF *	_	
18	t5351_000	gesezzen	ADJD	ge-sëzzen	Pos....0	 * )	_	
19	t5352_000	-	$_	_	_	 *	_	
20	t5353_000	oder	KON	oder	_	(Frag *	_	
21	t5354_000	anderswâ	AVD	ander(e)s-wâr	_	 *	_	
22	t5355_000	-	$_	_	_	 * ) )	_	
23	t5356_000	die	DDART	dër	Masc.Akk.Pl	(Frag (NX *	_	
24	t5357_000	ziegel	NA	ziègel	Akk.Pl	 * )	_	
25	t5358_000	her	AVD	hër(e)	_	 *	_	
26	t5359_000	geben	VVINF	gëben	_	(VX * )	_	
27	t5360_000	in	APPR	in	_	(PPX *	_	
28	t5361_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
29	t5362_000	stat	NA	stat	Akk.Sg	 * ) )	_	
30	t5363_000	-	$_	_	_	 * )	_	
31	t5364_000	und	KON	unte	_	(Frag *	_	
32	t5365_000	besunder	AVD	be-sunter	_	 *	_	
33	t5366_000	die	DDS	dër	Masc.Akk.Pl	(NX *	_	
34	t5367_000	von	APPR	von	_	(PPX *	_	
35	t5368_000	zelle	NA	zëlle	Dat.Sg	(NX * ) ) )	_	
36	t5369_000	oben	AVD	oben(e)	_	 *	_	
37	t5370_000	und	KON	unte	_	 *	_	
38	t5371_000	niden	AVD	niden(e)	_	 *	_	
39	t5372_000	-	$_	_	_	 * )	_	
40	t5373_000	under	APPR	unter	_	(Frag (PPX *	_	
41	t5374_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
42	t5375_000	buoze	NA	buoze	Dat.Sg	 *	_	
43	t5376_000	von	APPR	von	_	(PPX *	_	
44	t5377_000	iewederem	DIA	iè-wëder	Neut.Dat.Sg.st	(NX *	_	
45	t5378_000	hunderte	NA	hundert	Dat.Sg	 * ) ) ) )	_	
46	t5379_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
47	t5380_000	schillinc	NA	schilling	Akk.Sg	 *	_	
48	t5381_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
49	t5382_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5383_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t5384_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t5385_000	vuoterærn	NA	vuoterære	Dat.Pl	 * ) )	_	
4	t5386_000	-	$_	_	_	 * )	_	
5	t5387_000	und	KON	unte	_	(Frag *	_	
6	t5388_000	die	DDS	dër	*.Nom.Pl	(NX * )	_	
7	t5389_000	habern	NA	haber(e)	Akk.Sg	(NX * )	_	
8	t5390_000	veil	ADJD	vèil(e)	Pos....0	(PreF * )	_	
9	t5391_000	haben	VAFIN	haben	*.Pres.Pl.3	(LB (VX * ) )	_	
10	t5392_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5393_000	ouch	AVD	ouch	_	(S (Cl (PreF * )	_	
2	t5394_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5395_000	man	PI	man	*.Nom.Sg.st	(MF (NX *	_	
4	t5396_000	ze	APPR	ze	_	(PPX *	_	
5	t5396_001	râte	NA	rât	Dat.Sg	(NX * ) ) )	_	
6	t5397_000	worden	VAPP	wërden	_	(VX * ) )	_	
7	t5398_000	-	$_	_	_	 * )	_	
8	t5399_000	und	KON	unte	_	(Frag *	_	
9	t5400_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(VX *	_	
10	t5401_000	gesatzt	VVPP	sètzen	_	 * )	_	
11	t5402_000	-	$_	_	_	 * )	_	
12	t5403_000	umbe	APPR	umbe	_	(Frag (PPX *	_	
13	t5404_000	alle	DIA	all	Masc.Akk.Pl.st	(NX *	_	
14	t5405_000	die	DDS	dër	Masc.Akk.Pl	 * ) )	_	
15	t5406_000	-	$_	_	_	 *	_	
16	t5407_000	die	DRELS	dër	Masc.Nom.Pl	(Cl (LB (NX * ) )	_	
17	t5408_000	habern	NA	haber(e)	Akk.Sg	(MF (NX * )	_	
18	t5409_000	veil	ADJD	vèil(e)	Pos....0	 * )	_	
19	t5410_000	haben	VAFIN	haben	*.Pres.Pl.3	(RB (VX * ) )	_	
20	t5411_000	-	$_	_	_	 * ) )	_	
21	t5412_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
22	t5413_000	sîn	VAFIN	sîn	Subj.Pres.Pl.3	(LB (VX * ) )	_	
23	t5414_000	vuoterær	NA	vuoterære	Nom.Pl	(MF (NX * ) )	_	
24	t5415_000	-	$_	_	_	 *	_	
25	t5416_000	oder	KON	oder	_	(Frag *	_	
26	t5417_000	die	DDS	dër	*.Nom.Pl	(NX * )	_	
27	t5418_000	leistente	ADJA	lèisten	Pos.Neut.Akk.Pl.st	(PreF (NX *	_	
28	t5419_000	pfert	NA	pfèrd	Akk.Pl	 * ) )	_	
29	t5420_000	haben	VAFIN	haben	*.Pres.Pl.3	(LB (VX * ) )	_	
30	t5421_000	-	$_	_	_	 * )	_	
31	t5422_000	oder	KON	oder	_	(Frag *	_	
32	t5423_000	die	DDS	dër	*.Nom.Pl	(NX * )	_	
33	t5424_000	-	$_	_	_	 *	_	
34	t5425_000	die	DRELS	dër	*.Nom.Pl	(NX (Cl (LB (NX * ) )	_	
35	t5426_000	anderswâ	AVD	ander(e)s-wâr	_	(MF *	_	
36	t5427_000	habern	NA	haber(e)	Akk.Sg	(NX * )	_	
37	t5428_000	veil	ADJD	vèil(e)	Pos....0	 * )	_	
38	t5429_000	haben	VAFIN	haben	*.Pres.Pl.3	(RB (VX * ) )	_	
39	t5430_000	-	$_	_	_	 * ) ) )	_	
40	t5431_000	mit	APPR	mit	_	(Frag (PPX *	_	
41	t5432_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
42	t5433_000	mâze	NA	mâz	Dat.Sg	 * ) )	_	
43	t5434_000	-	$_	_	_	 *	_	
44	t5435_000	der	DRELS	dër	*.Gen.Pl	(Cl (LB (NX * ) )	_	
45	t5436_000	ahtzehene	CARDS	aht-zëhen	Masc.Nom.Pl.st	(MF (NX * ) )	_	
46	t5437_000	gên	VVFIN	gân	*.Pres.Pl.3	(RB (VX * ) )	_	
47	t5438_000	in	APPR	in	_	(PostF (PPX *	_	
48	t5439_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
49	t5440_000	malter	NA	malter	Akk.Sg	 * ) ) )	_	
50	t5441_000	-	$_	_	_	 * ) ) )	_	
51	t5442_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(Cl (LB (VX * ) )	_	
52	t5443_000	zuo	APPR	ze	_	(MF (PPX *	_	
53	t5444_000	gewinne	NA	ge-winn	Dat.Sg	(NX * ) ) )	_	
54	t5445_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
55	t5446_000	-	$_	_	_	 *	_	
56	t5447_000	an	APPR	ane	_	(Frag (PPX *	_	
57	t5448_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
58	t5449_000	mâze	NA	mâz	Dat.Sg	 * ) )	_	
59	t5450_000	niur	AVD	niur	_	 *	_	
60	t5451_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
61	t5452_000	pfenninc	NA	pfènning	Akk.Sg	 * )	_	
62	t5453_000	-	$_	_	_	 * ) )	_	
63	t5454_000	der	DDART	dër	Masc.Nom.Sg	(Cl (PreF (NX *	_	
64	t5455_000	haber	NA	haber(e)	Nom.Sg	 * ) )	_	
65	t5456_000	gelte	VVFIN	gëlten	Subj.Pres.Sg.3	(LB (VX * ) )	_	
66	t5457_000	vile	NA	vil(e)	Akk.Sg	(MF (NX * )	_	
67	t5458_000	oder	KON	oder	_	 *	_	
68	t5459_000	wênic	NA	wênig	Akk.Sg	(NX * ) )	_	
69	t5460_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5461_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t5462_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5463_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
4	t5464_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
5	t5465_000	dem	DDART	dër	Neut.Dat.Sg	(PostF (NX *	_	
6	t5466_000	leistenden	ADJA	lèisten	Pos.Neut.Dat.Sg.wk	 *	_	
7	t5467_000	pferde	NA	pfèrd	Dat.Sg	 * ) )	_	
8	t5468_000	-	$_	_	_	 *	_	
9	t5469_000	ein	CARDA	èin	Neut.Akk.Sg.0	(Frag (NX *	_	
10	t5470_000	mâz	NA	mâz	Akk.Sg	 *	_	
11	t5471_000	habern	NA	haber(e)	Gen.Sg	(NX * ) )	_	
12	t5472_000	-	$_	_	_	 * )	_	
13	t5473_000	und	KON	unte	_	(Frag *	_	
14	t5474_000	zwei	CARDA	zwêne	Neut.Akk.Pl.st	(NX *	_	
15	t5475_000	pfennincwert	NA	pfènning-wërd	Akk.Pl	 *	_	
16	t5476_000	höuwes	NA	höuwe	Gen.Sg	(NX *	_	
17	t5477_000	zuo	APPR	ze	_	(PPX *	_	
18	t5478_000	tage	NA	tag	Dat.Sg	(NX * ) ) ) )	_	
19	t5479_000	und	KON	unte	_	 *	_	
20	t5480_000	zuo	APPR	ze	_	(PPX *	_	
21	t5481_000	naht	NA	naht	Dat.Sg	(NX * ) )	_	
22	t5482_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5483_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t5484_000	ouch	AVD	ouch	_	(PreF * )	_	
3	t5485_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	(NX *	_	
4	t5486_000	vuoter	NA	vuoter	Akk.Sg	 * )	_	
5	t5487_000	heim	AVD	hèim	_	(PreF * )	_	
6	t5488_000	nimet	VVFIN	nëmen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t5489_000	-	$_	_	_	 * )	_	
8	t5490_000	oder	KON	oder	_	(Frag *	_	
9	t5491_000	heim	AVD	hèim	_	(PreF * )	_	
10	t5492_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t5493_000	tragen	VVINF	tragen	_	(MF (VX * ) )	_	
12	t5494_000	-	$_	_	_	 * )	_	
13	t5495_000	dem	DDS	dër	Masc.Dat.Sg	(Cl (PreF (NX * ) )	_	
14	t5496_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t5497_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
16	t5498_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
17	t5499_000	anderthalp	ADJA	ander-halb	Pos.Neut.Akk.S,P.0	(PostF (NX *	_	
18	t5500_000	mâz	NA	mâz	Akk.S,P	 * ) )	_	
19	t5501_000	-	$_	_	_	 *	_	
20	t5502_000	und	KON	unte	_	(Frag *	_	
21	t5503_000	niht	PTKNEG	niht	_	 *	_	
22	t5504_000	mêr	ADJA	mêr(e)	Comp.Neut.Akk.Sg.0	 *	_	
23	t5505_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5506_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t5507_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t5508_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t5509_000	-	$_	_	_	 * )	_	
5	t5510_000	und	KON	unte	_	(Frag *	_	
6	t5511_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
7	t5512_000	vuoter	NA	vuoter	Akk.Sg	 * )	_	
8	t5513_000	hôher	ADJD	hôh	Pos....0	(PreF * )	_	
9	t5514_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t5515_000	-	$_	_	_	 *	_	
11	t5516_000	denne	KOUS	danne	_	(Cl (LB * )	_	
12	t5517_000	dô	AVD	dô	_	(MF * )	_	
13	t5518_000	geredet	VVPP	rèden	_	(RB (VX *	_	
14	t5519_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
15	t5520_000	-	$_	_	_	 * ) )	_	
16	t5521_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
17	t5522_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
18	t5523_000	zuo	APPR	ze	_	(MF (PPX *	_	
19	t5524_000	pîne	NA	pîn	Dat.Sg	(NX * ) ) )	_	
20	t5525_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
21	t5526_000	-	$_	_	_	 *	_	
22	t5527_000	von	APPR	von	_	(Frag (PPX *	_	
23	t5528_000	iewederem	DIA	iè-wëder	Masc.Dat.Sg.st	(NX *	_	
24	t5529_000	mâze	NA	mâz	Dat.Sg	 * ) )	_	
25	t5530_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
26	t5531_000	schillinge	NA	schilling	Akk.Pl	 *	_	
27	t5532_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
28	t5533_000	-	$_	_	_	 * )	_	
29	t5534_000	als	KO*	all-sô	_	(Frag *	_	
30	t5535_000	dicke	AVD	dicke	_	(PreF * )	_	
31	t5536_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
32	t5537_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
33	t5538_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
34	t5539_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5540_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t5541_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t5542_000	melwærinnen	NA	mëlwærinne	Dat.Pl	 * ) )	_	
4	t5543_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5544_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t5545_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5546_000	ouch	AVD	ouch	_	(MF *	_	
4	t5547_000	ze	APPR	ze	_	(PPX *	_	
5	t5547_001	râte	NA	rât	Dat.Sg	(NX * ) )	_	
6	t5548_000	worden	VAPP	wërden	_	(VX * ) )	_	
7	t5549_000	-	$_	_	_	 * )	_	
8	t5550_000	umbe	APPR	umbe	_	(PPX *	_	
9	t5551_000	die	DDART	dër	Fem.Akk.Pl	(NX *	_	
10	t5552_000	melwærinne	NA	mëlwærinne	Akk.Pl	 * ) )	_	
11	t5553_000	die	DRELS	dër	Fem.Nom.Pl	(Cl (LB (NX * ) )	_	
12	t5554_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
13	t5555_000	heberîn	ADJA	hèberîn	Pos.Neut.Akk.Sg.0	 *	_	
14	t5556_000	mel	NA	mëlw	Akk.Sg	 * ) )	_	
15	t5557_000	machen	VVFIN	machen	*.Pres.Pl.3	(RB (VX * ) )	_	
16	t5558_000	-	$_	_	_	 *	_	
17	t5559_000	daz	KOUS	dazz	_	(PostF (Frag *	_	
18	t5560_000	ir	PPER	ër	*.Gen.Pl.3	(NX * )	_	
19	t5561_000	iegelîche	DIS	iè-ge-lich	Fem.Nom.Sg.st	(NX * )	_	
20	t5562_000	bereiten	VVINF	be-rèiten	_	(PreF (VX * ) )	_	
21	t5563_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
22	t5564_000	und	KON	unte	_	(MF * )	_	
23	t5565_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
24	t5566_000	zwei	CARDA	zwêne	Neut.Akk.Pl.st	(PostF (NX *	_	
25	t5567_000	malter	NA	malter	Akk.Pl	 * ) )	_	
26	t5568_000	-	$_	_	_	 * ) )	_	
27	t5569_000	zuo	APPR	ze	_	(Frag (PPX *	_	
28	t5570_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
29	t5571_000	wochen	NA	woche	Dat.Sg	 * ) )	_	
30	t5572_000	-	$_	_	_	 * ) )	_	
31	t5573_000	und	KON	unte	_	(Cl (PrePreF * )	_	
32	t5574_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
33	t5575_000	ouch	AVD	ouch	_	(MF *	_	
34	t5576_000	über	APPR	über	_	(PPX *	_	
35	t5577_000	die	DDART	dër	Neut.Akk.Pl	(NX *	_	
36	t5578_000	zwei	CARDA	zwêne	Neut.Akk.Pl.st	 *	_	
37	t5579_000	malter	NA	malter	Akk.Pl	 * ) )	_	
38	t5580_000	keinen	DIA	kèin	Masc.Akk.Sg.st	(NX *	_	
39	t5581_000	habern	NA	haber(e)	Akk.Sg	 * )	_	
40	t5582_000	mêr	AVD	mêr(e)	Comp	 * )	_	
41	t5583_000	koufen	VVINF	koufen	_	(RB (VX * ) )	_	
42	t5584_000	-	$_	_	_	 *	_	
43	t5585_000	hier	AVD	hièr	_	(Frag *	_	
44	t5586_000	zwischen	APPR	zwischen	_	 *	_	
45	t5587_000	sancte	ADJA	sancte	Pos.*..0	 *	_	
46	t5588_000	Martines	NE	Martin	Gen.Sg	(NX * )	_	
47	t5589_000	tage	NA	tag	Dat.Sg	(NX * )	_	
48	t5590_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5591_000	sweliche	DGS	swèl(i)ch	Fem.Nom.Sg.st	(S (Frag (NX * )	_	
2	t5592_000	ouch	AVD	ouch	_	 *	_	
3	t5593_000	mêr	ADJA	mêr(e)	Comp.Neut.Akk.Sg.0	 *	_	
4	t5594_000	habern	NA	haber(e)	Gen.Sg	(PreF (NX * ) )	_	
5	t5595_000	koufete	VVFIN	koufen	(Subj).Past.Sg.3	(LB (VX * ) )	_	
6	t5596_000	-	$_	_	_	 * )	_	
7	t5597_000	oder	KON	oder	_	(Frag *	_	
8	t5598_000	melwes	NA	mëlw	Gen.Sg	(PreF (NX * ) )	_	
9	t5599_000	machete	VVFIN	machen	(Subj).Past.Sg.3	(LB (VX * ) )	_	
10	t5600_000	-	$_	_	_	 * )	_	
11	t5601_000	die	DDS	dër	Fem.Nom.Sg	(Cl (PreF (NX * ) )	_	
12	t5602_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t5603_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
14	t5604_000	von	APPR	von	_	(PostF (PPX *	_	
15	t5605_000	iewederem	DIA	iè-wëder	Neut.Dat.Sg.st	(NX *	_	
16	t5606_000	malter	NA	malter	Dat.Sg	 * ) )	_	
17	t5607_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
18	t5608_000	schillinge	NA	schilling	Akk.Pl	 *	_	
19	t5609_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
20	t5610_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5611_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t5612_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
3	t5613_000	gewihten	NA	ge-wihte	Dat.Pl	 * ) )	_	
4	t5614_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5615_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t5616_000	sîn	VAFIN	sîn	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t5617_000	ouch	AVD	ouch	_	(MF *	_	
4	t5618_000	alle	DIA	all	Neut.Nom.Pl.st	(NX *	_	
5	t5619_000	gewihte	NA	ge-wihte	Nom.Pl	 * )	_	
6	t5620_000	niuwe	ADJD	niuwe	Pos....0	 * )	_	
7	t5621_000	gemachet	VVPP	machen	_	(RB (VX * ) )	_	
8	t5622_000	-	$_	_	_	 * )	_	
9	t5623_000	und	KON	unte	_	(Frag *	_	
10	t5624_000	gezeichenet	VVPP	zèichenen	_	(VX * )	_	
11	t5625_000	mit	APPR	mit	_	(PPX *	_	
12	t5626_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
13	t5627_000	trutenvuoze	NA	truten-vuoz	Dat.Sg	 * ) )	_	
14	t5628_000	-	$_	_	_	 * )	_	
15	t5629_000	und	KON	unte	_	(Cl (PrePreF * )	_	
16	t5630_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
17	t5631_000	ouch	AVD	ouch	_	(MF *	_	
18	t5632_000	êwiclîchen	AVD	êwig-lîche	_	 *	_	
19	t5633_000	alsô	AVD	all-sô	_	 * )	_	
20	t5634_000	belîben	VVINF	be-lîben	_	(RB (VX * ) )	_	
21	t5635_000	-	$_	_	_	 *	_	
22	t5636_000	âne	KOUS	âne	_	(PostF (Cl (LB * )	_	
23	t5637_000	die	DDART	dër	Fem.Nom.Sg	(MF (NX *	_	
24	t5638_000	vrônwâge	NA	vrôn(e)-wâge	Nom.Sg	 * )	_	
25	t5639_000	-	$_	_	_	 * )	_	
26	t5640_000	bestêt	VVFIN	be-stân	Ind.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
27	t5641_000	als	KO*	all-sô	_	(Frag *	_	
28	t5642_000	sie	PPER	ër	Fem.Nom.Sg.3	(NX *	_	
29	t5643_000	von	APPR	von	_	(PPX *	_	
30	t5644_000	alter	NA	alter	Dat.Sg	(NX * ) ) )	_	
31	t5645_000	her	AVD	hër(e)	_	 *	_	
32	t5646_000	gewest	VAPP	wësen	_	(VX *	_	
33	t5647_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
34	t5648_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5649_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t5650_000	aber	AVD	aber	_	 *	_	
3	t5651_000	mit	APPR	mit	_	(PPX *	_	
4	t5652_000	anderm	DIA	ander	Neut.Dat.Sg.st	(NX *	_	
5	t5653_000	gewihte	NA	ge-wihte	Dat.Sg	 * ) )	_	
6	t5654_000	ûz	PTKVZ	ûz/+mëzzen	_	(VX *	_	
7	t5655_000	mæze	VVFIN	mëzzen/ûz+	Subj.Past.Sg.3	 * )	_	
8	t5656_000	sîn	DPOSA	sîn	Fem.Akk.Sg.0	(NX *	_	
9	t5657_000	koufmanschaft	NA	kouf-mann-schaft	Akk.Sg	 * )	_	
10	t5658_000	-	$_	_	_	 * )	_	
11	t5659_000	swelicher	DGA	swèl(i)ch	Fem.Gen.Sg.st	(Frag (NX *	_	
12	t5659_001	leie	NA	lèie	Gen.Sg	 * )	_	
13	t5660_000	die	DDS	dër	Fem.Nom.Sg	(PreF (NX * ) )	_	
14	t5661_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
15	t5662_000	-	$_	_	_	 * )	_	
16	t5663_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
17	t5664_000	wær	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
18	t5665_000	man	NA	mann	Nom.Sg	(MF (NX * )	_	
19	t5666_000	oder	KON	oder	_	 *	_	
20	t5667_000	vrouwe	NA	vrouwe	Nom.Sg	(NX * ) )	_	
21	t5668_000	-	$_	_	_	 *	_	
22	t5669_000	kneht	NA	knëht	Nom.Sg	(Frag (NX * )	_	
23	t5670_000	oder	KON	oder	_	 *	_	
24	t5671_000	maget	NA	maged	Nom.Sg	(NX * )	_	
25	t5672_000	-	$_	_	_	 *	_	
26	t5673_000	bî	APPR	bî	_	(Cl (LB (PPX *	_	
27	t5674_000	dem	DRELS	dër	Masc.Dat.Sg	(NX * ) ) )	_	
28	t5675_000	di	DDS	dër	Neut.Nom.Pl	(MF (NX * )	_	
29	t5676_000	vunden	VVPP	vinden	_	(VX (VX * )	_	
30	t5677_000	oder	KON	oder	_	 * ) )	_	
31	t5678_000	begriffen	VVPP	be-grîfen	_	(RB (VX *	_	
32	t5679_000	würden	VAFIN	wërden	(Subj).Past.Pl.3	 * ) )	_	
33	t5680_000	-	$_	_	_	 * ) )	_	
34	t5681_000	âne daz	KO*	âne~dazz	_	(Frag *	_	
35	t5682_000	unser	DPOSA	unser	Masc.Nom.Sg.0	(PreF (NX *	_	
36	t5683_000	hêrre	NA	hêrre	Nom.Sg	 *	_	
37	t5684_000	zuo	APPR	ze	_	(PPX *	_	
38	t5685_000	in	PPER	ër	*.Dat.Pl.3	(NX *	_	
39	t5686_000	rehtes	NA	rëht	Gen.Sg	(NX * ) ) ) ) )	_	
40	t5687_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
41	t5688_000	besunder	AVD	be-sunter	_	(MF * )	_	
42	t5689_000	-	$_	_	_	 * ) )	_	
43	t5690_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
44	t5691_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
45	t5692_000	jâr	NA	jâr	Akk.Sg	(MF (NX * )	_	
46	t5693_000	und	KON	unte	_	 *	_	
47	t5694_000	tac	NA	tag	Akk.Sg	(NX * )	_	
48	t5695_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
49	t5696_000	stat	NA	stat	Akk.Sg	 * ) )	_	
50	t5697_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
51	t5698_000	-	$_	_	_	 *	_	
52	t5699_000	in	APPR	in	_	(Frag (PPX *	_	
53	t5700_000	ahte	CARDA	ahte	*.Dat.Pl.0	(NX *	_	
54	t5701_000	tagen	NA	tag	Dat.Pl	 * ) )	_	
55	t5702_000	dâr	PAVD	dâr/+nâh	_	 *	_	
56	t5703_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
57	t5704_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
58	t5705_000	mîle	NA	mîle	Akk.Pl	 *	_	
59	t5706_000	von	APPR	von	_	(PPX *	_	
60	t5707_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
61	t5708_000	stat	NA	stat	Dat.Sg	 *	_	
62	t5709_000	âne	APPR	âne	_	(PPX *	_	
63	t5710_000	alle	DIA	all	Fem.Akk.Sg.st	(NX *	_	
64	t5711_000	genâde	NA	ge-nâde	Akk.Sg	 * ) ) ) ) )	_	
65	t5712_000	-	$_	_	_	 * ) )	_	
66	t5713_000	und	KON	unte	_	(Cl (PrePreF * )	_	
67	t5714_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
68	t5715_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(MF (NX *	_	
69	t5716_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
70	t5717_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
71	t5718_000	dem	DDART	dër	Masc.Dat.Sg	(Frag (NX *	_	
72	t5719_000	râte	NA	rât	Dat.Sg	 * )	_	
73	t5720_000	halbe	AVD	halbe	_	 *	_	
74	t5721_000	-	$_	_	_	 * )	_	
75	t5722_000	unde	KON	unte	_	(Frag *	_	
76	t5723_000	dem	DDS	dër	Masc.Dat.Sg	(NX * )	_	
77	t5724_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX *	_	
78	t5724_001	es	PPER	ër	Neut.Gen.Sg.3	(NX * ) ) )	_	
79	t5725_000	wartet	VVFIN	warten	Ind.Pres.Sg.3	(RB (VX * ) ) ) )	_	
80	t5726_000	halbe	AVD	halbe	_	(Frag *	_	
81	t5727_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5728_000	von	APPR	von	_	(S (PPX *	_	
2	t5729_000	den	DDS	dër	*.Dat.Pl	(NX * ) )	_	
3	t5730_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX * ) )	_	
4	t5731_000	pfæl	NA	pfâl	Akk.Pl	(MF (NX * )	_	
5	t5732_000	her	AVD	hër(e)	_	 * )	_	
6	t5733_000	vüeren	VVFIN	vüèren	*.Pres.Pl.3	(RB (VX * ) )	_	
7	t5734_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5735_000	ouch	AVD	ouch	_	(S (Frag *	_	
2	t5736_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX *	_	
3	t5737_000	geredet	VVPP	rèden	_	 * )	_	
4	t5738_000	und	KON	unte	_	 *	_	
5	t5739_000	gesatzt	VVPP	sètzen	_	(VX * )	_	
6	t5740_000	-	$_	_	_	 *	_	
7	t5741_000	daz	KOUS	dazz	_	(Frag *	_	
8	t5742_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
9	t5743_000	iegelich	DIA	iè-ge-lich	Masc.Nom.Sg.0	 *	_	
10	t5744_000	man	NA	mann	Nom.Sg	 *	_	
11	t5745_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
12	t5746_000	pfæl	NA	pfâl	Akk.Pl	(MF (NX * )	_	
13	t5747_000	her	AVD	hër(e)	_	 * )	_	
14	t5748_000	vüert	VVFIN	vüèren	Ind.Pres.Sg.3	(RB (VX * ) ) ) ) ) )	_	
15	t5749_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
16	t5750_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
17	t5751_000	vünvzic	CARDA	vünv-zig	Masc.Akk.Pl.0	(PostF (NX *	_	
18	t5752_000	pfæl	NA	pfâl	Akk.Pl	 * )	_	
19	t5753_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
20	t5754_000	zal	NA	zal(e)	Akk.Sg	 *	_	
21	t5755_000	mit	APPR	mit	_	(PPX *	_	
22	t5756_000	halben	ADJA	halb	Pos.*.Dat.Pl.*	(NX *	_	
23	t5757_000	bürden	NA	bürde	Dat.Pl	 * ) ) ) )	_	
24	t5758_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5759_000	wær	VAFIN	wësen	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t5760_000	aber	AVD	aber	_	(MF * )	_	
3	t5761_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
4	t5762_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
5	t5763_000	dâr	PAVD	dâr/+ane	_	 *	_	
6	t5764_000	an	PAVAP	ane/dâr+	_	 *	_	
7	t5765_000	minner	ADJA	minner	Comp.Neut.Akk.Sg.0	 * )	_	
8	t5766_000	vünte	VVFIN	vinden	Subj.Past.Sg.3	(RB (VX * ) )	_	
9	t5767_000	-	$_	_	_	 * ) )	_	
10	t5768_000	denne	KOKOM	danne	_	(Frag *	_	
11	t5769_000	vünvzic	CARDA	vünv-zig	Masc.Akk.Pl.0	(NX *	_	
12	t5770_000	pfæle	NA	pfâl	Akk.Pl	 * )	_	
13	t5771_000	-	$_	_	_	 * ) )	_	
14	t5772_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
15	t5773_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t5774_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
17	t5775_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(PostF (NX *	_	
18	t5776_000	schillinge	NA	schilling	Akk.Pl	 *	_	
19	t5777_000	pfenninge	NA	pfènning	Gen.Pl	(NX *	_	
20	t5778_000	zuo	APPR	ze	_	(PPX *	_	
21	t5779_000	buoze	NA	buoze	Dat.Sg	(NX * ) ) ) ) )	_	
22	t5780_000	-	$_	_	_	 * )	_	
23	t5781_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
24	t5782_000	wær	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
25	t5783_000	denne	KOKOM	danne	_	(MF * )	_	
26	t5784_000	-	$_	_	_	 *	_	
27	t5785_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
28	t5786_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX *	_	
29	t5787_000	âne	APPR	âne	_	(PPX *	_	
30	t5788_000	geværde	NA	ge-vær(e)de	Akk.Sg	(NX * ) ) )	_	
31	t5789_000	ein	CARDA	èin	Masc.Nom.Sg.0	(NX *	_	
32	t5790_000	pfâl	NA	pfâl	Nom.Sg	 * )	_	
33	t5791_000	oder	KON	oder	_	 *	_	
34	t5792_000	zwêne	CARDS	zwêne	Masc.Nom.Pl.st	(NX * ) )	_	
35	t5793_000	dâr	PAVD	dâr/+ûz	_	(RB (VX *	_	
36	t5794_000	ûz	PAVAP	ûz/dâr+	_	 *	_	
37	t5795_000	wurden	VAFIN	wërden	(Subj).Past.Pl.3	 *	_	
38	t5796_000	gezogen	VVPP	zièhen	_	 * ) )	_	
39	t5797_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5798_000	doch	AVD	doh	_	(S (Cl (PreF * )	_	
2	t5799_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5800_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
4	t5801_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
5	t5802_000	zal	NA	zal(e)	Akk.Sg	 * ) )	_	
6	t5803_000	ervüllen	VVINF	er-vüllen	_	(RB (VX * ) )	_	
7	t5804_000	-	$_	_	_	 * )	_	
8	t5805_000	und	KON	unte	_	(Cl (PrePreF * )	_	
9	t5806_000	sulen	VMFIN	sol(e)n	(Ind).Pres.Pl.3	(LB (VX * ) )	_	
10	t5807_000	ouch	AVD	ouch	_	(MF *	_	
11	t5808_000	sîn	VAINF	sîn	_	(VX * )	_	
12	t5809_000	zalbære	ADJD	zal(e)-bære	Pos....0	 * )	_	
13	t5810_000	-	$_	_	_	 * )	_	
14	t5811_000	und	KON	unte	_	(Frag *	_	
15	t5812_000	haben	VAINF	haben	_	(VX * )	_	
16	t5813_000	ire	DPOSA	ir(e)	Fem.Akk.Sg.0	(NX *	_	
17	t5814_000	rehte	ADJA	rëht	Pos.Fem.Akk.Sg.st	 *	_	
18	t5815_000	lenge	NA	lènge	Akk.Sg	 * ) )	_	
19	t5816_000	als	KO*	all-sô	_	(Frag *	_	
20	t5817_000	von	APPR	von	_	(PPX *	_	
21	t5818_000	alter	NA	alter	Dat.Sg	(NX * ) )	_	
22	t5819_000	her	AVD	hër(e)	_	 *	_	
23	t5820_000	kumen	VVPP	komen	_	(VX *	_	
24	t5821_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
25	t5822_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5823_000	von	APPR	von	_	(S (PPX *	_	
2	t5824_000	wîne	NA	wîn	Dat.Sg	(NX * ) )	_	
3	t5825_000	den	DRELS	dër	Masc.Akk.Sg	(Cl (LB (NX * ) )	_	
4	t5826_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
5	t5827_000	ûzen	AVD	ûzen(e)	_	 * )	_	
6	t5828_000	her	PAVD	hër(e)/+în	_	(RB (VX *	_	
7	t5829_000	în	PAVAP	în/hër(e)+	_	 *	_	
8	t5830_000	vüert	VVFIN	vüèren	Ind.Pres.Sg.3	 * ) )	_	
9	t5831_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5832_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t5833_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5834_000	ouch	AVD	ouch	_	(MF * )	_	
4	t5835_000	gesatzt	VVPP	sètzen	_	(RB (VX (VX * )	_	
5	t5836_000	und	KON	unte	_	 *	_	
6	t5837_000	gemachet	VVPP	machen	_	(VX * ) ) )	_	
7	t5838_000	-	$_	_	_	 *	_	
8	t5839_000	umbe	APPR	umbe	_	(Frag (PPX *	_	
9	t5840_000	alle	DIA	all	Masc,Neut.Akk.Pl.st	(NX *	_	
10	t5841_000	ûzwart	ADJA	ûz-wërt	Pos.Masc,Neut.Akk.Pl.0	 *	_	
11	t5842_000	liute	NA	liut	Akk.Pl	 * ) )	_	
12	t5843_000	-	$_	_	_	 * )	_	
13	t5844_000	swer	PG	swër	Masc.Nom.Sg.st	(Frag (NX * )	_	
14	t5845_000	die	DDS	dër	Masc,Neut.Nom.Pl	(PreF (NX * ) )	_	
15	t5846_000	sîn	VAFIN	sîn	(Subj).Pres.Pl.3	(LB (VX * ) )	_	
16	t5847_000	-	$_	_	_	 *	_	
17	t5848_000	die	DRELS	dër	Masc,Neut.Nom.Pl	(Cl (LB (NX * ) )	_	
18	t5849_000	wîn	NA	wîn	Akk.Sg	(MF (NX * )	_	
19	t5850_000	her	AVD	hër(e)	_	 * )	_	
20	t5851_000	vüern	VVFIN	vüèren	Ind.Pres.Pl.3	(RB (VX * ) )	_	
21	t5852_000	in	APPR	in	_	(PostF (PPX *	_	
22	t5853_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
23	t5854_000	stat	NA	stat	Akk.Sg	 * ) ) )	_	
24	t5855_000	-	$_	_	_	 *	_	
25	t5856_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
26	t5857_000	die	DDS	dër	Masc,Neut.Nom.Pl	(MF (NX * )	_	
27	t5858_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
28	t5859_000	selben	DDS	sëlb	Masc.Akk.Sg.st	 * ) )	_	
29	t5860_000	vüern	VVFIN	vüèren	Ind.Pres.Pl.3	(RB (VX * ) )	_	
30	t5861_000	offenlîchen	AVD	offen-lîche	_	(PostF *	_	
31	t5862_000	an	APPR	ane	_	(PPX *	_	
32	t5863_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
33	t5864_000	market	NA	market	Akk.Sg	 * ) ) )	_	
34	t5865_000	-	$_	_	_	 * ) ) ) )	_	
35	t5866_000	und	KON	unte	_	(Frag *	_	
36	t5867_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
37	t5868_000	dâ	AVD	dâr	_	(PreF * )	_	
38	t5869_000	verkoufen	VVFIN	ver-koufen	(Ind).Pres.Pl.3	(LB (VX * ) )	_	
39	t5870_000	-	$_	_	_	 * )	_	
40	t5871_000	und	KON	unte	_	(Frag *	_	
41	t5872_000	mit	APPR	mit	_	(PPX *	_	
42	t5873_000	nihte	NA	niht	Dat.Sg	(NX * ) )	_	
43	t5874_000	kellren	VVINF	këllæren	_	(PreF (VX * ) )	_	
44	t5875_000	sulen	VMFIN	sol(e)n	(Ind).Pres.Pl.3	(LB (VX * ) )	_	
45	t5876_000	-	$_	_	_	 * ) )	_	
46	t5877_000	noch	KON	noh	_	(Frag *	_	
47	t5878_000	under	APPR	unter	_	(PPX *	_	
48	t5879_000	obedach	NA	obe-dach	Akk.Sg	(NX * ) )	_	
49	t5880_000	legen	VVINF	lègen	_	(VX * )	_	
50	t5881_000	-	$_	_	_	 * )	_	
51	t5882_000	beide	KON	bèide	_	(Frag *	_	
52	t5883_000	in	APPR	in	_	(PPX *	_	
53	t5884_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
54	t5885_000	stat	NA	stat	Dat.Sg	 * ) )	_	
55	t5886_000	-	$_	_	_	 * )	_	
56	t5887_000	und	KON	unte	_	(Frag *	_	
57	t5888_000	ouch	AVD	ouch	_	 *	_	
58	t5889_000	dâr	PAVD	dâr/+vor(e)	_	 *	_	
59	t5890_000	vore	PAVAP	vor(e)/dâr+	_	 *	_	
60	t5891_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5892_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t5893_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t5894_000	brichet	VVFIN	brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t5895_000	-	$_	_	_	 * )	_	
5	t5896_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
6	t5897_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
7	t5898_000	der	DDS	dër	Masc.Nom.Sg	(MF (NX * ) ) )	_	
8	t5899_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t5900_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t5901_000	-	$_	_	_	 * )	_	
11	t5902_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
12	t5903_000	koufet	VVFIN	koufen	Ind.Pres.Sg.3	(LB (VX * ) ) )	_	
13	t5904_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
14	t5905_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t5906_000	zuo	APPR	ze	_	(MF (PPX *	_	
16	t5907_000	buoze	NA	buoze	Dat.Sg	(NX *	_	
17	t5908_000	von	APPR	von	_	(PPX *	_	
18	t5909_000	iewederem	DIA	iè-wëder	Masc.Dat.Sg.st	(NX *	_	
19	t5910_000	bodeme	NA	bodem	Dat.Sg	 * ) ) ) ) )	_	
20	t5911_000	-	$_	_	_	 * )	_	
21	t5912_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
22	t5913_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
23	t5914_000	ein	DIART	èin	Neut.Nom.Sg.0	(MF (NX *	_	
24	t5915_000	klein	ADJA	klèine	Pos.Neut.Nom.Sg.0	 *	_	
25	t5916_000	vaz	NA	vazz	Nom.Sg	 * )	_	
26	t5917_000	oder	KON	oder	_	 *	_	
27	t5918_000	ein	DIART	èin	Neut.Nom.Sg.0	 *	_	
28	t5919_000	grôzez	ADJA	grôz	Pos.Neut.Nom.Sg.st	 *	_	
29	t5920_000	ein	CARDA	èin	Neut.Akk.Sg.0	(NX *	_	
30	t5921_000	pfunt	NA	pfunt	Akk.Sg	 *	_	
31	t5922_000	haller	NA	haller(e)	Gen.Pl	(NX * ) ) )	_	
32	t5923_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5924_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t5925_000	ouch	AVD	ouch	_	(PreF *	_	
3	t5926_000	der	DDS	dër	Masc.Nom.Sg	(NX * ) )	_	
4	t5927_000	wære	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
5	t5928_000	-	$_	_	_	 *	_	
6	t5929_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
7	t5930_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
8	t5931_000	selben	DDA	sëlb	Masc.Akk.Sg.st	 *	_	
9	t5932_000	wîn	NA	wîn	Akk.Sg	 * ) )	_	
10	t5933_000	în	PTKVZ	în/+nëmen	_	(RB (VX *	_	
11	t5934_000	næme	VVFIN	nëmen/în+	Subj.Past.Sg.3	 * ) )	_	
12	t5935_000	-	$_	_	_	 * ) )	_	
13	t5936_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
14	t5937_000	behielte	VVFIN	be-halten	Subj.Past.Sg.3	(LB (VX * ) )	_	
15	t5938_000	-	$_	_	_	 * )	_	
16	t5939_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
17	t5940_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
18	t5941_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
19	t5942_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
20	t5943_000	selben	DDA	sëlb	Fem.Akk.Sg.wk	 *	_	
21	t5944_000	buoze	NA	buoze	Akk.Sg	 * ) )	_	
22	t5945_000	-	$_	_	_	 * )	_	
23	t5946_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5947_000	dâr	PAVD	dâr/+zuo	_	(S (Cl (LB (VX *	_	
2	t5948_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
3	t5949_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	 * ) )	_	
4	t5950_000	bestên	VVINF	be-stân	_	(RB (VX * ) )	_	
5	t5951_000	-	$_	_	_	 *	_	
6	t5952_000	die	DDART	dër	Masc.Nom.Pl	(Frag (NX *	_	
7	t5953_000	setze	NA	satz	Nom.Pl	 * )	_	
8	t5954_000	über	APPR	über	_	 *	_	
9	t5955_000	schnevelær	_	[!]	Akk.Pl	 * )	_	
10	t5956_000	wînschinthütten	NA	wîn-schint-hütte	Akk.Pl	(Frag (NX * )	_	
11	t5957_000	-	$_	_	_	 * )	_	
12	t5958_000	und	KON	unte	_	(Frag *	_	
13	t5959_000	wînmezzær	NA	wîn-mëzzære	Akk.Pl	(NX * )	_	
14	t5960_000	-	$_	_	_	 * )	_	
15	t5961_000	mit	APPR	mit	_	(Frag (PPX *	_	
16	t5962_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
17	t5963_000	buoze	NA	buoze	Dat.Sg	 * ) )	_	
18	t5964_000	und	KON	unte	_	 *	_	
19	t5965_000	pîne	NA	pîn	Dat.Sg	(NX * )	_	
20	t5966_000	-	$_	_	_	 * ) )	_	
21	t5967_000	als	KO*	all-sô	_	(Frag *	_	
22	t5968_000	die	DDS	dër	*.Nom.Pl	(NX *	_	
23	t5969_000	von	APPR	von	_	(PPX *	_	
24	t5970_000	alter	NA	alter	Dat.Sg	(NX * ) ) )	_	
25	t5971_000	her	AVD	hër(e)	_	 *	_	
26	t5972_000	kumen	VVPP	komen	_	(VX *	_	
27	t5973_000	sîn	VAFIN	sîn	*.Pres.Pl.3	 * )	_	
28	t5974_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5975_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t5976_000	swerten	NA	swërt	Dat.Pl	(NX * ) )	_	
3	t5977_000	und	KON	unte	_	 *	_	
4	t5978_000	mezzern	NA	mèzzer	Dat.Pl	(NX * )	_	
5	t5979_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5980_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t5981_000	verbiutet	VVFIN	ver-bièten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5982_000	ouch	AVD	ouch	_	(MF *	_	
4	t5983_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
5	t5984_000	hantwercknehten	NA	hant-wërk-knëht	Dat.Pl	 * ) )	_	
6	t5985_000	-	$_	_	_	 *	_	
7	t5986_000	und	KON	unte	_	(Frag *	_	
8	t5987_000	vremeden	ADJA	vrèm(e)de	Pos.*.Dat.Pl.*	(NX *	_	
9	t5988_000	knehten	NA	knëht	Dat.Pl	 * )	_	
10	t5989_000	-	$_	_	_	 *	_	
11	t5990_000	die	DRELS	dër	Masc.Nom.Pl	(Cl (LB (NX * ) )	_	
12	t5991_000	niht	PTKNEG	niht	_	(MF (VX * ) )	_	
13	t5992_000	behûset	VVPP	be-hûsen	_	(RB (VX *	_	
14	t5993_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	 * ) )	_	
15	t5994_000	-	$_	_	_	 * ) )	_	
16	t5995_000	swert	NA	swërt	Akk.Pl	(Frag (NX * )	_	
17	t5996_000	und	KON	unte	_	 *	_	
18	t5997_000	mezzer	NA	mèzzer	Akk.Pl	(NX *	_	
19	t5998_000	bî	APPR	bî	_	(PPX *	_	
20	t5999_000	tage	NA	tag	Dat.Sg	(NX * ) ) )	_	
21	t6000_000	und	KON	unte	_	 *	_	
22	t6001_000	bî	APPR	bî	_	(PPX *	_	
23	t6002_000	naht	NA	naht	Dat.Sg	(NX * ) )	_	
24	t6003_000	-	$_	_	_	 * )	_	
25	t6004_000	und	KON	unte	_	(Frag *	_	
26	t6005_000	geværlîche	AVD	ge-vær-lîche	_	 *	_	
27	t6006_000	spitzeht	ADJA	spitzeht	Pos.Neut.Akk.Pl.0	(NX *	_	
28	t6007_000	scheidenmezzer	NA	schèid-mèzzer	Akk.Pl	 * )	_	
29	t6008_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6009_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t6010_000	aber	AVD	aber	_	 *	_	
3	t6011_000	dâ	PAVD	dâr/+mit(e)	_	(VX *	_	
4	t6012_000	mit	PAVAP	mit(e)/dâr+	_	 * )	_	
5	t6013_000	begriffen	VVPP	be-grîfen	_	(VX *	_	
6	t6014_000	würde	VAFIN	wërden	Subj.Past.Sg.3	 * ) )	_	
7	t6015_000	dem	DDS	dër	Masc.Dat.Sg	(Cl (PreF (NX * ) )	_	
8	t6016_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t6017_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
10	t6018_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) )	_	
11	t6019_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
12	t6020_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6021_000	wolte	VMFIN	wèllen	(Subj).Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t6022_000	aber	AVD	aber	_	(MF *	_	
3	t6023_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
4	t6024_000	sich	PRF	sich	Akk	(NX *	_	
5	t6025_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
6	t6026_000	widersetzen	VVINF	wider-sètzen	_	(RB (VX * ) )	_	
7	t6027_000	-	$_	_	_	 *	_	
8	t6028_000	swaz	PG	swër	Neut.Nom.Sg.st	(Frag (NX * )	_	
9	t6029_000	im	PPER	ër	Masc.Dat.Sg.3	(PreF (NX *	_	
10	t6030_000	ungemaches	NA	un-ge-mach	Gen.Sg	(NX * ) ) )	_	
11	t6031_000	dâr	PAVD	dâr/+umbe	_	(LB (VX *	_	
12	t6032_000	umbe	PAVAP	umbe/dâr+	_	 *	_	
13	t6033_000	widervert	VVFIN	wider-var(e)n	Ind.Pres.Sg.3	 * ) )	_	
14	t6034_000	-	$_	_	_	 * ) )	_	
15	t6035_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
16	t6036_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t6037_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
18	t6038_000	im	PPER	ër	Masc.Dat.Sg.3	(NX * ) )	_	
19	t6039_000	niht	PTKNEG	niht	_	(RB (VX *	_	
20	t6040_000	bezzern	VVINF	bèzzer(e)n	_	 * ) )	_	
21	t6041_000	-	$_	_	_	 * )	_	
22	t6042_000	und	KON	unte	_	(Cl (PrePreF * )	_	
23	t6043_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
24	t6044_000	des	DDS	dër	Neut.Gen.Sg	(MF (NX * ) )	_	
25	t6045_000	swern	VVINF	swèr(e)n	_	(RB (VX * ) )	_	
26	t6046_000	zuo	APPR	ze	_	(PostF *	_	
27	t6047_000	den	DDART	dër	*.Dat.Pl	 *	_	
28	t6048_000	heiligen	ADJA	hèilig	Pos.*.Dat.Pl..%.*	 * )	_	
29	t6049_000	-	$_	_	_	 *	_	
30	t6050_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
31	t6051_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
32	t6052_000	kume	VVFIN	komen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
33	t6053_000	ûf	APPR	ûf	_	(PostF (PPX *	_	
34	t6054_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
35	t6055_000	rât	NA	rât	Akk.Sg	 * ) ) )	_	
36	t6056_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6057_000	swaz	PG	swër	Neut.Akk.Sg.st	(S (Frag (NX *	_	
2	t6058_000	in	PPER	ër	Masc.Akk.Sg.3	 * )	_	
3	t6059_000	der	DDS	dër	Masc.Nom.Sg	(PreF (NX * ) )	_	
4	t6060_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t6061_000	-	$_	_	_	 * )	_	
6	t6062_000	des	DDS	dër	Neut.Gen.Sg	(Cl (PreF (NX * ) )	_	
7	t6063_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t6064_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
9	t6065_000	gehôrsam	ADJD	ge-hôr-sam	Pos....0	 *	_	
10	t6066_000	sîn	VAINF	sîn	_	(VX * ) )	_	
11	t6067_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6068_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6069_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t6070_000	warten	VVINF	warten	_	(RB (VX * ) )	_	
4	t6071_000	der	DDART	dër	*.Gen.Pl	(PostF (NX *	_	
5	t6072_000	gerihte	NA	ge-riht(e)	Gen.Pl	 * )	_	
6	t6073_000	knehte	NA	knëht	Nom.Pl	(NX * ) )	_	
7	t6074_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6075_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t6076_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
3	t6077_000	wînglocken	NA	wîn-glocke	Dat.Sg	 * ) )	_	
4	t6078_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6079_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t6080_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6081_000	ouch	AVD	ouch	_	(MF * )	_	
4	t6082_000	gemachet	VVPP	machen	_	(RB (VX * ) )	_	
5	t6083_000	nâch	APPR	nâh	_	(PostF (PPX *	_	
6	t6084_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
7	t6085_000	alten	ADJA	alt	Pos.*.Dat.Pl.*	 *	_	
8	t6086_000	setzen	NA	satz	Dat.Pl	 * ) ) )	_	
9	t6087_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6088_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Cl (PreF (NX *	_	
2	t6089_000	nâch	APPR	nâh	_	(PPX *	_	
3	t6090_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
4	t6091_000	jungesten	ADJA	jung	Pos.Fem.Dat.Sg.wk	 *	_	
5	t6092_000	wînglocken	NA	wîn-glocke	Dat.Sg	 * ) ) ) )	_	
6	t6093_000	gêt	VVFIN	gân	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t6094_000	âne	APPR	âne	_	(MF (PPX *	_	
8	t6095_000	lieht	NA	lièht	Akk.Sg	(NX * ) ) )	_	
9	t6096_000	-	$_	_	_	 *	_	
10	t6097_000	swaz	PG	swër	Neut.Nom.Sg.st	(Frag (NX * )	_	
11	t6098_000	dem	DDS	dër	Masc.Dat.Sg	(PreF (NX * ) )	_	
12	t6099_000	geschihet	VVFIN	ge-schëhen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t6100_000	-	$_	_	_	 * )	_	
14	t6101_000	mit	APPR	mit	_	(Frag (PPX *	_	
15	t6102_000	werfenne	NA	wërfen	Dat.Sg	(NX * ) )	_	
16	t6103_000	-	$_	_	_	 * )	_	
17	t6104_000	mit	APPR	mit	_	(Frag (PPX *	_	
18	t6105_000	schiezenne	NA	schièzen	Dat.Sg	(NX * ) )	_	
19	t6106_000	-	$_	_	_	 * )	_	
20	t6107_000	mit	APPR	mit	_	(Frag (PPX *	_	
21	t6108_000	slahenne	NA	slahen	Dat.Sg	(NX * ) )	_	
22	t6109_000	-	$_	_	_	 * )	_	
23	t6110_000	oder	KON	oder	_	(Frag *	_	
24	t6111_000	mit	APPR	mit	_	(PPX *	_	
25	t6112_000	stechenne	NA	stëchen	Dat.Sg	(NX * ) )	_	
26	t6113_000	-	$_	_	_	 * )	_	
27	t6114_000	oder	KON	oder	_	(Frag *	_	
28	t6115_000	swaz	PG	swër	Neut.Nom.Sg.st	(NX * )	_	
29	t6116_000	im	PPER	ër	Masc.Dat.Sg.3	(NX *	_	
30	t6117_000	ungemaches	NA	un-ge-mach	Gen.Sg	(NX * ) )	_	
31	t6118_000	geschehen	VVINF	ge-schëhen	_	(PreF (VX * ) )	_	
32	t6119_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
33	t6120_000	-	$_	_	_	 * )	_	
34	t6121_000	swer	PG	swër	Masc.Nom.Sg.st	(Frag (NX * )	_	
35	t6122_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
36	t6123_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
37	t6124_000	-	$_	_	_	 * ) )	_	
38	t6125_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
39	t6126_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
40	t6127_000	unserm	DPOSA	unser	Masc.Dat.Sg.st	(MF (NX *	_	
41	t6128_000	hêrrn	NA	hêrre	Dat.Sg	 * ) ) )	_	
42	t6129_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
43	t6130_000	bischove	NA	bischov	Dat.Sg	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6131_000	nâch	APPR	nâh	_	(S (Frag (PPX *	_	
2	t6132_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t6133_000	gerihte	NA	ge-riht(e)	Dat.Sg	 * ) )	_	
4	t6134_000	-	$_	_	_	 * )	_	
5	t6135_000	nâch	APPR	nâh	_	(Frag (PPX *	_	
6	t6136_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(NX *	_	
7	t6137_000	vriunden	NA	vriunt	Dat.Pl	 * ) )	_	
8	t6138_000	keine	DIA	kèin	Fem.Akk.Sg.st	(NX *	_	
9	t6139_000	bezzerunge	NA	bèzzerunge	Akk.Sg	 * )	_	
10	t6140_000	tuon	VVINF	tuon	_	(VX * )	_	
11	t6141_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6142_000	wolte	VMFIN	wèllen	(Subj).Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t6143_000	aber	AVD	aber	_	(MF *	_	
3	t6144_000	sich	PRF	sich	Akk	(NX *	_	
4	t6145_000	des	DDS	dër	Masc.Gen.Sg	(NX * ) )	_	
5	t6146_000	ieman	DIA	iè-mann	*.Nom.Sg.st	 * )	_	
6	t6147_000	an	PTKVZ	ane/+nëmen	_	(RB (VX *	_	
7	t6148_000	nemen	VVINF	nëmen/ane+	_	 * ) )	_	
8	t6149_000	-	$_	_	_	 * )	_	
9	t6150_000	sô	AVD	sô	_	(Cl (PreF * )	_	
10	t6151_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t6152_000	unser	DPOSA	unser	Masc.Nom.Sg.0	(MF (NX *	_	
12	t6153_000	hêrre	NA	hêrre	Nom.Sg	 * ) ) )	_	
13	t6154_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
14	t6155_000	bischof	NA	bischov	Nom.Sg	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6156_000	-	$_	_	_	(S *	_	
2	t6157_000	und	KON	unte	_	(Frag *	_	
3	t6158_000	die	DDART	dër	Masc.Nom.Pl	(NX *	_	
4	t6159_000	burgær	NA	burger(e)	Nom.Pl	 * )	_	
5	t6160_000	-	$_	_	_	 * )	_	
6	t6161_000	mit	APPR	mit	_	(Frag (PPX *	_	
7	t6162_000	im	PPER	ër	Masc.Dat.Sg.3	(NX * ) )	_	
8	t6163_000	den	DDS	dër	Masc.Akk.Sg	(NX * )	_	
9	t6164_000	beschirmen	VVINF	be-schirmen	_	(VX * )	_	
10	t6165_000	-	$_	_	_	 * )	_	
11	t6166_000	und	KON	unte	_	(Frag *	_	
12	t6167_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
13	t6168_000	beholfen	VVPP	be-hëlfen	_	(VX * )	_	
14	t6169_000	sîn	VAINF	sîn	_	(VX * )	_	
15	t6170_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6171_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t6172_000	aber	AVD	aber	_	(MF *	_	
3	t6173_000	ieman	DIA	iè-mann	*.Nom.Sg.st	 * )	_	
4	t6174_000	begriffen	VVPP	be-grîfen	_	(RB (VX * ) )	_	
5	t6175_000	nâch	APPR	nâh	_	(PostF (PPX *	_	
6	t6176_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
7	t6177_000	jungesten	ADJA	jung	Pos.Fem.Dat.Sg.wk	 *	_	
8	t6178_000	wînglocken	NA	wîn-glocke	Dat.Sg	 * ) ) )	_	
9	t6179_000	-	$_	_	_	 *	_	
10	t6180_000	âne	APPR	âne	_	(Frag (PPX *	_	
11	t6181_000	lieht	NA	lièht	Akk.Sg	(NX * ) )	_	
12	t6182_000	-	$_	_	_	 * ) )	_	
13	t6183_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
14	t6184_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
15	t6185_000	ein	DIART	èin	Masc.Nom.Sg.0	 * )	_	
16	t6186_000	unversprochen	ADJA	un-ver-sprochen	Pos.Masc.Nom.Sg.0	(NX *	_	
17	t6187_000	man	NA	mann	Nom.Sg	 * ) )	_	
18	t6188_000	-	$_	_	_	 * )	_	
19	t6189_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
20	t6190_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t6191_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
22	t6192_000	vüeren	VVINF	vüèren	_	(RB (VX * ) )	_	
23	t6193_000	ûf	APPR	ûf	_	(PostF (PPX *	_	
24	t6194_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
25	t6195_000	sal	NA	sal	Akk.Sg	 * ) ) )	_	
26	t6196_000	-	$_	_	_	 * )	_	
27	t6197_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
28	t6198_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
29	t6199_000	pfaffe	NA	pfaffe	Nom.Sg	(MF (NX * )	_	
30	t6200_000	oder	KON	oder	_	 *	_	
31	t6201_000	leie	NA	lèie	Nom.Sg	(NX * ) )	_	
32	t6202_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6203_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t6204_000	aber	AVD	aber	_	(MF *	_	
3	t6205_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
4	t6206_000	versprochen	ADJA	ver-sprëchen	Pos.Masc.Nom.Sg.0	 *	_	
5	t6207_000	man	NA	mann	Nom.Sg	 * ) )	_	
6	t6208_000	begriffen	VVPP	be-grîfen	_	(RB (VX * ) )	_	
7	t6209_000	-	$_	_	_	 * )	_	
8	t6210_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
9	t6211_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t6212_000	man	PI	man	*.Nom.Sg.st	(MF (NX *	_	
11	t6213_000	ûf	APPR	ûf	_	(PPX *	_	
12	t6214_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
13	t6215_000	stokhûs	NA	stock-hûs	Akk.Sg	 * ) ) ) )	_	
14	t6216_000	legen	VVINF	lègen	_	(RB (VX * ) )	_	
15	t6217_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6218_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t6219_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t6220_000	vleischslahtærn	NA	vlèisch-slahtære	Dat.Pl	 * ) )	_	
4	t6221_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6222_000	unser	DPOSA	unser	Masc.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t6223_000	hêrre	NA	hêrre	Nom.Sg	 * ) )	_	
3	t6224_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t6225_000	zuo	APPR	ze	_	(MF (PPX *	_	
5	t6226_000	râte	NA	rât	Dat.Sg	(NX * ) )	_	
6	t6227_000	worden	VAPP	wërden	_	(VX * )	_	
7	t6228_000	mit	APPR	mit	_	(PPX *	_	
8	t6229_000	sîneme	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
9	t6230_000	gesworen	ADJA	swèr(e)n	Pos.Masc.Dat.Sg.0	 *	_	
10	t6231_000	râte	NA	rât	Dat.Sg	 *	_	
11	t6232_000	ûf	APPR	ûf	_	(PPX *	_	
12	t6232_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
13	t6233_000	sal	NA	sal	Dat.Sg	 * ) ) ) ) )	_	
14	t6234_000	-	$_	_	_	 *	_	
15	t6235_000	und	KON	unte	_	(Frag *	_	
16	t6236_000	ouch	AVD	ouch	_	 *	_	
17	t6237_000	mit	APPR	mit	_	(PPX *	_	
18	t6238_000	unser	DPOSA	unser	*.Gen.Pl.0	(NX *	_	
19	t6239_000	hêrren	NA	hêrre	Gen.Pl	 *	_	
20	t6240_000	dienestmanne	NA	diènest-mann	Gen.Pl	 * ) )	_	
21	t6241_000	-	$_	_	_	 * ) )	_	
22	t6242_000	unde	KON	unte	_	(Frag *	_	
23	t6243_000	burgære	NA	burger(e)	Gen.Pl	(NX * )	_	
24	t6244_000	willen	NA	wille	Dat.Sg	(NX * )	_	
25	t6245_000	und	KON	unte	_	 *	_	
26	t6246_000	worte	NA	wort	Dat.Sg	(NX * )	_	
27	t6247_000	überein	AVD	über-èin	_	 *	_	
28	t6248_000	kumen	VVPP	komen	_	(VX * )	_	
29	t6249_000	-	$_	_	_	 * )	_	
30	t6250_000	umbe	APPR	umbe	_	(Frag (PPX *	_	
31	t6251_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
32	t6252_000	vleischkouf	NA	vlèisch-kouf	Akk.Sg	 * ) )	_	
33	t6253_000	-	$_	_	_	 *	_	
34	t6254_000	von	APPR	von	_	(Cl (LB (PPX *	_	
35	t6255_000	dem	DRELS	dër	Masc.Dat.Sg	(NX * ) ) )	_	
36	t6256_000	biz	AVD	biz	_	(MF *	_	
37	t6257_000	her	AVD	hër(e)	_	 *	_	
38	t6258_000	eteslîche	DIA	ëte(s)-lich	Fem.Nom.Sg.st	(NX *	_	
39	t6259_000	rede	NA	rède	Nom.Sg	 * ) )	_	
40	t6260_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX *	_	
41	t6261_000	gewesen	VAPP	wësen	_	 * ) )	_	
42	t6262_000	-	$_	_	_	 *	_	
43	t6263_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
44	t6264_000	ouch	AVD	ouch	_	(MF *	_	
45	t6265_000	allen	DIA	all	*.Dat.Pl.st	 *	_	
46	t6266_000	rîchen	ADJA	rîche	Pos.*.Dat.Pl..%.*	 *	_	
47	t6267_000	und	KON	unte	_	 *	_	
48	t6268_000	armen	ADJA	arm	Pos.*.Dat.Pl..%.*	 *	_	
49	t6269_000	deste	AVD	dëste	_	 *	_	
50	t6270_000	baz	AVD	bazz	Comp	 * )	_	
51	t6271_000	geschæhe	VVFIN	ge-schëhen	Subj.Past.Sg.3	(RB (VX * ) )	_	
52	t6272_000	-	$_	_	_	 * ) ) ) )	_	
53	t6273_000	und	KON	unte	_	(Frag *	_	
54	t6274_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(VX *	_	
55	t6275_000	gemachet	VVPP	machen	_	 * )	_	
56	t6276_000	und	KON	unte	_	 *	_	
57	t6277_000	gesatzt	VVPP	sètzen	_	(VX * ) )	_	
58	t6278_000	als	KO*	all-sô	_	(Frag *	_	
59	t6279_000	her	PAVD	hër(e)/+nâh	_	(VX *	_	
60	t6280_000	nâch	PAVAP	nâh/hër(e)+	_	 * )	_	
61	t6281_000	geschriben	VVPP	schrîben	_	(VX *	_	
62	t6282_000	stêt	VVFIN	stân	Ind.Pres.Sg.3	 * )	_	
63	t6283_000	-	$_	_	_	 * )	_	
64	t6284_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6285_000	des	DDART	dër	Neut.Gen.Sg	(S (Frag *	_	
2	t6286_000	êrsten	ADJA	êr(e)st	Sup.Neut.Gen.Sg.wk	 *	_	
3	t6287_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
4	t6288_000	alle	DIA	all	Masc.Nom.Pl.st	(PreF (MF (NX *	_	
5	t6289_000	ûzwart	ADJA	ûz-wërt	Pos.Masc.Nom.Pl.0	 *	_	
6	t6290_000	vleischslahtær	NA	vlèisch-slahtære	Nom.Pl	 * ) ) )	_	
7	t6291_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX (VX * )	_	
8	t6292_000	und	KON	unte	_	 *	_	
9	t6293_000	mügen	VMFIN	mügen	*.Pres.Pl.3	(VX * ) ) )	_	
10	t6294_000	vleisch	NA	vlèisch	Akk.Sg	(MF (NX * )	_	
11	t6295_000	her	AVD	hër(e)	_	 * )	_	
12	t6296_000	vüeren	VVINF	vüèren	_	(RB (VX * ) )	_	
13	t6297_000	in	APPR	in	_	(PostF (PPX *	_	
14	t6298_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
15	t6299_000	stat	NA	stat	Akk.Sg	 * ) ) )	_	
16	t6300_000	-	$_	_	_	 *	_	
17	t6301_000	drî	CARDA	drî	Masc.Akk.Pl.0	(PostF (NX *	_	
18	t6302_000	tage	NA	tag	Akk.Pl	 *	_	
19	t6303_000	in	APPR	in	_	(PPX *	_	
20	t6304_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
21	t6305_000	wochen	NA	woche	Dat.Sg	 * ) ) ) )	_	
22	t6306_000	-	$_	_	_	 *	_	
23	t6307_000	daz	DDS	dër	Neut.Nom.Sg	(PostF (NX * ) )	_	
24	t6308_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX * ) )	_	
25	t6309_000	ane	APPR	ane	_	(PostF (PPX *	_	
26	t6309_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
27	t6310_000	sunnentage	NA	sunne(n)-tag	Dat.Sg	 * ) ) )	_	
28	t6311_000	-	$_	_	_	 * ) )	_	
29	t6312_000	dienstage	NA	dièns-tag	Dat.Sg	(Frag (NX * )	_	
30	t6313_000	-	$_	_	_	 * )	_	
31	t6314_000	und	KON	unte	_	(Frag *	_	
32	t6315_000	donerstage	NA	doner(e)s-tag	Dat.Sg	(NX * )	_	
33	t6316_000	-	$_	_	_	 * )	_	
34	t6317_000	und	KON	unte	_	(Frag *	_	
35	t6318_000	verkoufen	VVINF	ver-koufen	_	(VX * )	_	
36	t6319_000	âne	APPR	âne	_	(PPX *	_	
37	t6320_000	allen	DIA	all	Fem.Akk.Sg.wk	(NX *	_	
38	t6321_000	irrsalunge	NA	irresalunge	Akk.Sg	 * ) )	_	
39	t6322_000	und	KON	unte	_	 *	_	
40	t6323_000	hindernisse	NA	hinternisse	Akk.Sg	(NX * )	_	
41	t6324_000	-	$_	_	_	 * )	_	
42	t6325_000	dirre	DDA	dise	*.Gen.Pl	(Frag (NX *	_	
43	t6326_000	vleischslahtær	NA	vlèisch-slahtære	Gen.Pl	 * )	_	
44	t6327_000	hier	AVD	hièr	_	 *	_	
45	t6328_000	von	APPR	von	_	(PPX *	_	
46	t6329_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
47	t6330_000	stat	NA	stat	Dat.Sg	 * ) )	_	
48	t6331_000	-	$_	_	_	 * )	_	
49	t6332_000	und	KON	unte	_	(Cl (PrePreF * )	_	
50	t6333_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
51	t6334_000	stên	VVINF	stân	_	(RB (VX * ) )	_	
52	t6335_000	von	APPR	von	_	(PostF (PPX *	_	
53	t6336_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
54	t6337_000	morgene	NA	morgen	Dat.Sg	 * ) ) )	_	
55	t6338_000	-	$_	_	_	 *	_	
56	t6339_000	biz	AVD	biz	_	(Frag *	_	
57	t6340_000	ûf	APPR	ûf	_	(PPX *	_	
58	t6341_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
59	t6342_000	glocken	NA	glocke	Akk.Sg	 * ) )	_	
60	t6343_000	-	$_	_	_	 * )	_	
61	t6344_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
62	t6345_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
63	t6346_000	brüggen	NA	brügge	Dat.Sg	 * ) )	_	
64	t6347_000	-	$_	_	_	 *	_	
65	t6348_000	die	DRELS	dër	Fem.Akk.Sg	(Cl (LB (NX * ) )	_	
66	t6349_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
67	t6350_000	zwirent	AVD	zwir(e)n(t)	_	 *	_	
68	t6351_000	liuten	VVINF	liuten	_	(VX * ) )	_	
69	t6352_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(RB (VX * ) )	_	
70	t6353_000	-	$_	_	_	 *	_	
71	t6354_000	alsô	AVD	all-sô	_	(PostF * )	_	
72	t6355_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
73	t6356_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX *	_	
74	t6357_000	ûf	APPR	ûf	_	(PPX *	_	
75	t6358_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
76	t6359_000	jungesten	ADJA	jung	Pos.Fem.Akk.Sg.wk	 *	_	
77	t6360_000	glocken	NA	glocke	Akk.Sg	 * ) ) )	_	
78	t6361_000	ire	DPOSA	ir(e)	Neut.Akk.Sg.0	(NX *	_	
79	t6362_000	vleisch	NA	vlèisch	Akk.Sg	 * ) )	_	
80	t6363_000	ûf	PTKVZ	ûf/+hèben	_	(RB (VX *	_	
81	t6364_000	haben	VAFIN	haben	*.Pres.Pl.3	 *	_	
82	t6365_000	gehebet	VVPP	hèben/ûf+	_	 * ) )	_	
83	t6366_000	-	$_	_	_	 * ) ) ) )	_	
84	t6367_000	oder	KON	oder	_	(Frag *	_	
85	t6368_000	sie	PPER	ër	Masc.Nom.Pl.3	(PreF (NX * ) )	_	
86	t6369_000	geben	VVFIN	gëben	*.Pres.Pl.3	(LB (VX * ) )	_	
87	t6370_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
88	t6371_000	buoze	NA	buoze	Akk.Sg	 * ) )	_	
89	t6372_000	-	$_	_	_	 *	_	
90	t6373_000	die	DRELS	dër	Fem.Nom.Sg	(Cl (LB (NX * ) )	_	
91	t6374_000	dâr	PAVD	dâr/+über(e)	_	(RB (VX *	_	
92	t6375_000	über	PAVAP	über(e)/dâr+	_	 *	_	
93	t6376_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 *	_	
94	t6377_000	gesetzet	VVPP	sètzen	_	 * ) ) ) )	_	
95	t6378_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(Frag (NX *	_	
96	t6379_000	schillinge	NA	schilling	Akk.Pl	 *	_	
97	t6380_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
98	t6381_000	-	$_	_	_	 * )	_	
99	t6382_000	als	KO*	all-sô	_	(Frag *	_	
100	t6383_000	ofte	AVD	ofte	_	(PreF *	_	
101	t6384_000	daz	DDS	dër	Neut.Nom.Sg	(NX * ) )	_	
102	t6385_000	geschihet	VVFIN	ge-schëhen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
103	t6386_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6387_000	in	APPR	in	_	(S (Frag *	_	
2	t6388_000	den	DDART	dër	*.Dat.Pl	 *	_	
3	t6389_000	selben	DDA	sëlb	*.Dat.Pl.st	 *	_	
4	t6390_000	vore	PTKVZ	vor(e)/+schrîben	_	 *	_	
5	t6391_000	geschriben	ADJA	schrîben/vor(e)+	Pos.*.Dat.Pl.0	(NX *	_	
6	t6392_000	drîn	CARDA	drî	*.Dat.Pl.0	 *	_	
7	t6393_000	tagen	NA	tag	Dat.Pl	 * )	_	
8	t6394_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX *	_	
9	t6395_000	geahtet	VVPP	ahten	_	 * )	_	
10	t6396_000	-	$_	_	_	 *	_	
11	t6397_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
12	t6398_000	sich	PRF	sich	Akk	(MF (NX * )	_	
13	t6399_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
14	t6400_000	iegelîcher	DIS	iè-ge-lich	Masc.Nom.Sg.st	 *	_	
15	t6401_000	mit	APPR	mit	_	(PPX *	_	
16	t6402_000	vleischkoufe	NA	vlèisch-kouf	Dat.Sg	(NX * ) ) )	_	
17	t6403_000	wole	AVD	wol(e)	_	 *	_	
18	t6404_000	besachen	VVINF	be-sachen	_	(VX * ) )	_	
19	t6405_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
20	t6406_000	-	$_	_	_	 * ) )	_	
21	t6407_000	nâch	APPR	nâh	_	(Frag (PPX *	_	
22	t6408_000	sînen	DPOSA	sîn	Masc.Dat.Sg.wk	(NX *	_	
23	t6409_000	willen	NA	wille	Dat.Sg	 * ) )	_	
24	t6410_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6411_000	ouch	AVD	ouch	_	(S (Frag *	_	
2	t6412_000	von	APPR	von	_	(PPX *	_	
3	t6413_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
4	t6414_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6415_000	ouch	AVD	ouch	_	(S (Frag *	_	
2	t6416_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX *	_	
3	t6417_000	gesatzt	VVPP	sètzen	_	 * )	_	
4	t6418_000	und	KON	unte	_	 *	_	
5	t6419_000	gemachet	VVPP	machen	_	(VX * )	_	
6	t6420_000	-	$_	_	_	 *	_	
7	t6421_000	daz	KOUS	dazz	_	(Frag *	_	
8	t6422_000	unser	DPOSA	unser	Masc.Nom.Pl.0	(NX *	_	
9	t6423_000	vleischslahtær	NA	vlèisch-slahtære	Nom.Pl	 * )	_	
10	t6424_000	hier	AVD	hièr	_	(PreF * )	_	
11	t6425_000	von	APPR	von	_	(PPX *	_	
12	t6426_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
13	t6427_000	stat	NA	stat	Dat.Sg	 * ) )	_	
14	t6428_000	einsît	AVD	èin-sît	_	(PreF * )	_	
15	t6429_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
16	t6430_000	stên	VVINF	stân	_	(RB (VX * ) )	_	
17	t6431_000	an	APPR	ane	_	(PostF (PPX *	_	
18	t6432_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
19	t6433_000	markete	NA	market	Dat.Sg	 * ) )	_	
20	t6434_000	bî	APPR	bî	_	 *	_	
21	t6435_000	einander	DIA	èin-ander	*.*.*.0	 * )	_	
22	t6436_000	-	$_	_	_	 * ) )	_	
23	t6437_000	und	KON	unte	_	(Frag *	_	
24	t6438_000	die	DDART	dër	Masc.Nom.Pl	(NX *	_	
25	t6439_000	geste	NA	gast	Nom.Pl	 * )	_	
26	t6440_000	andersît	AVD	ander-sît	_	 *	_	
27	t6441_000	bî	APPR	bî	_	 *	_	
28	t6442_000	einander	DIA	èin-ander	*.*.*.0	 *	_	
29	t6443_000	-	$_	_	_	 *	_	
30	t6444_000	alsô	AVD	all-sô	_	 *	_	
31	t6445_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
32	t6446_000	der	DDART	dër	*.Gen.Pl	(MF *	_	
33	t6447_000	hier	AVD	hièr	_	 *	_	
34	t6448_000	gesezzen	ADJA	ge-sëzzen	Pos.*.Gen.Pl.0	(NX *	_	
35	t6449_000	vleischslahtær	NA	vlèisch-slahtære	Gen.Pl	 * )	_	
36	t6450_000	keiner	DIS	kèin	Masc.Nom.Sg.st	(NX *	_	
37	t6451_000	under	APPR	unter	_	(PPX *	_	
38	t6452_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) ) ) )	_	
39	t6453_000	stê	VVFIN	stân	Subj.Pres.Sg.3	(RB (VX * ) )	_	
40	t6454_000	noch	KON	noh	_	(PostF *	_	
41	t6455_000	sie	PPER	ër	Masc.Akk.Pl.3	(PreF (NX * ) )	_	
42	t6456_000	hinder	VVFIN	hinter(e)n	Subj.Pres.Sg.3	(LB (VX * ) )	_	
43	t6457_000	an	APPR	ane	_	(MF (PPX *	_	
44	t6458_000	keineme	DIA	kèin	Masc.Dat.Sg.st	(NX *	_	
45	t6459_000	irem	DPOSA	ir(e)	Masc.Dat.Sg.st	 *	_	
46	t6460_000	koufe	NA	kouf	Dat.Sg	 * ) ) ) )	_	
47	t6461_000	-	$_	_	_	 * ) )	_	
48	t6462_000	heimelîche	AVD	hèime-lîche	_	(Frag *	_	
49	t6463_000	oder	KON	oder	_	 *	_	
50	t6464_000	offenlîche	AVD	offen-lîche	_	 *	_	
51	t6465_000	-	$_	_	_	 * )	_	
52	t6466_000	bî	APPR	bî	_	(Frag (PPX *	_	
53	t6467_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
54	t6468_000	buoze	NA	buoze	Dat.Sg	 * ) )	_	
55	t6469_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
56	t6470_000	schillinge	NA	schilling	Akk.Pl	 *	_	
57	t6471_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
58	t6472_000	-	$_	_	_	 * )	_	
59	t6473_000	und	KON	unte	_	(Frag *	_	
60	t6474_000	ein	CARDA	èin	Masc.Akk.Sg.0	(NX *	_	
61	t6475_000	mânden	NA	mând(e)	Akk.Sg	 * )	_	
62	t6476_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
63	t6477_000	stat	NA	stat	Akk.Sg	 * )	_	
64	t6478_000	rûmen	VVINF	rûmen	_	(VX * )	_	
65	t6479_000	-	$_	_	_	 * )	_	
66	t6480_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6481_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t6482_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6483_000	mêr	AVD	mêr(e)	Comp	(MF * )	_	
4	t6484_000	gesetzet	VVPP	sètzen	_	(RB (VX * ) )	_	
5	t6485_000	-	$_	_	_	 *	_	
6	t6486_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
7	t6487_000	die	DDART	dër	Masc.Nom.Pl	(MF (NX *	_	
8	t6488_000	vleischslahtær	NA	vlèisch-slahtære	Nom.Pl	 * )	_	
9	t6489_000	hier	AVD	hièr	_	 *	_	
10	t6490_000	von	APPR	von	_	(PPX *	_	
11	t6491_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
12	t6492_000	stat	NA	stat	Dat.Sg	 * ) )	_	
13	t6493_000	-	$_	_	_	 *	_	
14	t6494_000	kein	DIA	kèin	Neut.Akk.Sg.0	(NX *	_	
15	t6495_000	vleisch	NA	vlèisch	Akk.Sg	 *	_	
16	t6496_000	umbe	APPR	umbe	_	(PPX *	_	
17	t6497_000	die	DDART	dër	Masc.Akk.Pl	(NX *	_	
18	t6498_000	ûzwarten	NA	ûz-warte	Akk.Pl	 * ) ) )	_	
19	t6499_000	niht	PTKNEG	niht	_	(VX *	_	
20	t6500_000	koufen	VVINF	koufen	_	 * ) )	_	
21	t6501_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(RB (VX * ) )	_	
22	t6502_000	-	$_	_	_	 *	_	
23	t6503_000	daz	DRELS	dër	Neut.Akk.Sg	(PostF (Frag (NX * )	_	
24	t6504_000	sie	PPER	ër	Masc.Nom.Pl.3	(NX * )	_	
25	t6505_000	vürebaz	AVD	vür(e)-bazz	_	(PreF * )	_	
26	t6506_000	wellen	VMFIN	wèllen	*.Pres.Pl.3	(LB (VX * ) )	_	
27	t6507_000	verkoufen	VVINF	ver-koufen	_	(RB (VX * ) )	_	
28	t6508_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6509_000	doch	AVD	doh	_	(S (Cl (PreF (PreF (PreF * ) ) )	_	
2	t6510_000	mügen	VMFIN	mügen	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t6511_000	sie	PPER	ër	Masc.Nom.Pl.3	(PreF (MF (NX * )	_	
4	t6512_000	unsern	DPOSA	unser	*.Dat.Pl.st	(NX *	_	
5	t6513_000	hêrren	NA	hêrre	Dat.Pl	 * )	_	
6	t6514_000	und	KON	unte	_	 *	_	
7	t6515_000	ouch	AVD	ouch	_	 *	_	
8	t6516_000	unsern	DPOSA	unser	*.Dat.Pl.st	(NX *	_	
9	t6517_000	burgærn	NA	burger(e)	Dat.Pl	 * ) ) )	_	
10	t6518_000	werden	VAFIN	wërden	*.Pres.Pl.3	(LB (VX * ) )	_	
11	t6519_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX *	_	
12	t6520_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
13	t6521_000	gebeten	VVPP	biten	_	(RB (VX * ) )	_	
14	t6522_000	koufen	VVINF	koufen	_	(PreF (RB (VX * ) ) )	_	
15	t6523_000	umbe	APPR	umbe	_	(LB (PPX *	_	
16	t6524_000	die	DDART	dër	Masc.Akk.Pl	(NX *	_	
17	t6525_000	ûzwarten	NA	ûz-warte	Akk.Pl	 *	_	
18	t6526_000	des	DRELS	dër	Neut.Gen.Sg	(NX * ) ) ) )	_	
19	t6527_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX * ) )	_	
20	t6528_000	bedurfen	VVFIN	be-durfen	*.Pres.Pl.3	(RB (VX * ) )	_	
21	t6529_000	-	$_	_	_	 *	_	
22	t6530_000	und	KON	unte	_	(Frag *	_	
23	t6531_000	in	PRF	ër	*.Dat.Pl.st	(NX * )	_	
24	t6532_000	selber	DDS	sëlb	*.Dat.Pl..~.~.st	(NX *	_	
25	t6533_000	in	APPR	in	_	(PPX *	_	
26	t6534_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
27	t6535_000	küchen	NA	küchen(e)	Akk.Sg	 * ) ) )	_	
28	t6536_000	und	KON	unte	_	 *	_	
29	t6537_000	anders	AVD	ander(e)s	_	 *	_	
30	t6538_000	niht	PTKNEG	niht	_	 *	_	
31	t6539_000	-	$_	_	_	 * )	_	
32	t6540_000	bî	APPR	bî	_	(Frag (PPX *	_	
33	t6541_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
34	t6542_000	buoze	NA	buoze	Dat.Sg	 *	_	
35	t6543_000	von	APPR	von	_	(PPX *	_	
36	t6543_001	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
37	t6544_000	pfunde	NA	pfunt	Dat.Sg	 * ) ) ) )	_	
38	t6545_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(NX *	_	
39	t6546_000	schillinge	NA	schilling	Akk.Pl	 *	_	
40	t6547_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
41	t6548_000	und	KON	unte	_	 *	_	
42	t6549_000	von	APPR	von	_	(PPX *	_	
43	t6550_000	eineme	CARDA	èin	Masc.Dat.Sg.st	(NX *	_	
44	t6551_000	schillinge	NA	schilling	Dat.Sg	 * ) )	_	
45	t6552_000	sehs	CARDA	sëhs	Masc.Akk.Pl.0	(NX *	_	
46	t6553_000	pfenninge	NA	pfènning	Akk.Pl	 * )	_	
47	t6554_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6555_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t6556_000	vleischslahtærn	NA	vlèisch-slahtære	Dat.Pl	(NX * ) )	_	
3	t6557_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6558_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t6559_000	gebiutet	VVFIN	ge-bièten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6560_000	ouch	AVD	ouch	_	(MF *	_	
4	t6561_000	unsern	DPOSA	unser	*.Dat.Pl.st	(NX *	_	
5	t6562_000	vleischslahtærn	NA	vlèisch-slahtære	Dat.Pl	 * )	_	
6	t6563_000	hier	AVD	hièr	_	 *	_	
7	t6564_000	von	APPR	von	_	(PPX *	_	
8	t6565_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
9	t6566_000	stat	NA	stat	Dat.Sg	 * ) ) )	_	
10	t6567_000	-	$_	_	_	 *	_	
11	t6568_000	daz	KOUS	dazz	_	(PostF (Frag *	_	
12	t6569_000	sie	PPER	ër	Masc.Nom.Pl.3	(NX * )	_	
13	t6570_000	keinen	DIA	kèin	Masc.Akk.Sg.st	(PreF (NX *	_	
14	t6571_000	gast	NA	gast	Akk.Sg	 * ) )	_	
15	t6572_000	der	DRELS	dër	Masc.Nom.Sg	(LB (NX * ) )	_	
16	t6573_000	vihe	NA	vihe	Akk.S,P	(MF (NX * )	_	
17	t6574_000	her	AVD	hër(e)	_	 * )	_	
18	t6575_000	bringet	VVFIN	bringen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
19	t6576_000	-	$_	_	_	 * ) ) )	_	
20	t6577_000	niht	PTKNEG	niht	_	(Cl (LB (VX *	_	
21	t6578_000	hindern	VVFIN	hinter(e)n	Ind.Pres.Pl.3	 * ) )	_	
22	t6579_000	an	APPR	ane	_	(MF (PPX *	_	
23	t6580_000	sîneme	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
24	t6581_000	koufe	NA	kouf	Dat.Sg	 * ) ) )	_	
25	t6582_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6583_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t6584_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t6585_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t6586_000	-	$_	_	_	 * )	_	
5	t6587_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t6588_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t6589_000	zuo	APPR	ze	_	(MF (PPX *	_	
8	t6590_000	buoze	NA	buoze	Dat.Sg	(NX * ) ) )	_	
9	t6591_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
10	t6592_000	drî	CARDA	drî	Masc.Akk.Pl.0	(PostF (NX *	_	
11	t6593_000	schillinge	NA	schilling	Akk.Pl	 *	_	
12	t6594_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
13	t6595_000	-	$_	_	_	 * )	_	
14	t6596_000	und	KON	unte	_	(Frag *	_	
15	t6597_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
16	t6598_000	mânden	NA	mând(e)	Akk.Sg	 * )	_	
17	t6599_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
18	t6600_000	stat	NA	stat	Akk.Sg	 * )	_	
19	t6601_000	rûmen	VVINF	rûmen	_	(VX * )	_	
20	t6602_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6603_000	ouch	AVD	ouch	_	(S (Frag *	_	
2	t6604_000	von	APPR	von	_	(PPX *	_	
3	t6605_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) )	_	
4	t6606_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6607_000	ouch	AVD	ouch	_	(S (Cl (PreF * )	_	
2	t6608_000	verbiutet	VVFIN	ver-bièten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6609_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
4	t6610_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
5	t6611_000	vleischunderkoufæren	NA	vlèisch-unter-koufære	Dat.Pl	 * ) )	_	
6	t6612_000	-	$_	_	_	 *	_	
7	t6613_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t6614_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
9	t6615_000	vürebaz	AVD	vür(e)-bazz	_	 *	_	
10	t6616_000	kein	DIA	kèin	Neut.Akk.Sg.0	(NX *	_	
11	t6617_000	vleisch	NA	vlèisch	Akk.Sg	 * ) )	_	
12	t6618_000	helfen	VVFIN	hëlfen	*.Pres.Pl.3	(RB (VX * ) )	_	
13	t6619_000	koufen	VVINF	koufen	_	(PostF (VX * ) )	_	
14	t6620_000	-	$_	_	_	 * ) ) )	_	
15	t6621_000	noch	KON	noh	_	(Frag *	_	
16	t6622_000	verkoufen	VVINF	ver-koufen	_	(VX * )	_	
17	t6623_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6624_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t6625_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t6626_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t6627_000	-	$_	_	_	 * )	_	
5	t6628_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
6	t6629_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t6630_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
8	t6631_000	stat	NA	stat	Akk.Sg	 * ) )	_	
9	t6632_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
10	t6633_000	einen	CARDA	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
11	t6634_000	mânden	NA	mând(e)	Akk.Sg	 * ) )	_	
12	t6635_000	-	$_	_	_	 *	_	
13	t6636_000	als	KO*	all-sô	_	(Frag *	_	
14	t6637_000	ofte	AVD	ofte	_	(PreF * )	_	
15	t6638_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
16	t6639_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
17	t6640_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
18	t6641_000	-	$_	_	_	 * ) )	_	
19	t6642_000	und	KON	unte	_	(Cl (PrePreF * )	_	
20	t6643_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t6644_000	ie	AVD	iè	_	(MF *	_	
22	t6645_000	als	AVD	all-sô	_	 *	_	
23	t6646_000	dicke	AVD	dicke	_	 *	_	
24	t6647_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
25	t6648_000	schillinc	NA	schilling	Akk.Sg	 *	_	
26	t6649_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
27	t6650_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
28	t6651_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6652_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6653_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6654_000	man	PI	man	*.Nom.Sg.st	(MF (NX *	_	
4	t6655_000	ir	PPER	ër	*.Gen.Pl.3	(NX * ) )	_	
5	t6656_000	keinem	DIS	kèin	Masc.Dat.Sg.st	(NX * ) )	_	
6	t6657_000	übersehen	VVINF	über-sëhen	_	(RB (VX (VX * )	_	
7	t6658_000	noch	KON	noh	_	 *	_	
8	t6659_000	vertragen	VVINF	ver-tragen	_	(VX * ) ) )	_	
9	t6660_000	-	$_	_	_	 * )	_	
10	t6661_000	und	KON	unte	_	(Cl (PrePreF * )	_	
11	t6662_000	darf	VMFIN	durfen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t6663_000	ouch	AVD	ouch	_	(MF * )	_	
13	t6664_000	niht	PTKNEG	niht	_	(RB (VX *	_	
14	t6665_000	vürzîhen	VVINF	ver-zîhen	_	 * ) )	_	
15	t6666_000	-	$_	_	_	 *	_	
16	t6667_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
17	t6668_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
18	t6669_000	umbe	APPR	umbe	_	(PPX *	_	
19	t6670_000	dise	DDA	dise	Masc.Akk.Pl	(NX *	_	
20	t6671_000	setze	NA	satz	Akk.Pl	 * ) ) )	_	
21	t6672_000	niht	PTKNEG	niht	_	 * )	_	
22	t6673_000	en	PTKNEG	ne	_	(RB (VX *	_	
23	t6673_001	weste	VVFIN	wizzen	(Subj).Past.Sg.3	 * ) )	_	
24	t6674_000	-	$_	_	_	 * ) ) )	_	
25	t6675_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6676_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t6677_000	ouch	AVD	ouch	_	 *	_	
3	t6678_000	vinneht	ADJA	vinneht	Pos.Neut.Akk.Sg.0	 *	_	
4	t6679_000	oder	KON	oder	_	 *	_	
5	t6680_000	riudic	ADJA	riudig	Pos.Neut.Akk.Sg.0	(NX *	_	
6	t6681_000	vleisch	NA	vlèisch	Akk.Sg	 * )	_	
7	t6682_000	veil	ADJD	vèil(e)	Pos....0	(PreF * )	_	
8	t6683_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t6684_000	-	$_	_	_	 * )	_	
10	t6685_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
11	t6686_000	gibet	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t6687_000	vierzehen	CARDA	vièr-zëhen	Masc.Akk.Pl.0	(MF (NX *	_	
13	t6688_000	schillinge	NA	schilling	Akk.Pl	 *	_	
14	t6689_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
15	t6690_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6691_000	der	DDS	dër	*.Gen.Pl	(S (Cl (PreF (NX * ) )	_	
2	t6692_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t6693_000	dem	DDART	dër	Masc.Dat.Sg	(MF (NX *	_	
4	t6694_000	râte	NA	rât	Dat.Sg	 * )	_	
5	t6695_000	zehen	CARDS	zëhen	Masc.Akk.Pl.0	(NX * ) )	_	
6	t6696_000	-	$_	_	_	 *	_	
7	t6697_000	den	DDART	dër	*.Dat.Pl	(Frag (NX *	_	
8	t6698_000	schultheizen	NA	schuld-hèize	Dat.Pl	 * )	_	
9	t6699_000	zwêne	CARDS	zwêne	Masc.Nom.Pl.st	(NX * )	_	
10	t6700_000	-	$_	_	_	 * )	_	
11	t6701_000	und	KON	unte	_	(Frag *	_	
12	t6702_000	den	DDS	dër	*.Dat.Pl	(NX * )	_	
13	t6703_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX *	_	
14	t6704_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
15	t6705_000	warten	VVFIN	warten	*.Pres.Pl.3	(RB (VX * ) ) ) )	_	
16	t6706_000	zwêne	CARDS	zwêne	Masc.Nom.Pl.st	(Frag (NX * )	_	
17	t6707_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6708_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t6709_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t6710_000	wirten	NA	wirt	Dat.Pl	 * ) )	_	
4	t6711_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6712_000	ouch	AVD	ouch	_	(S (Cl (PreF * )	_	
2	t6713_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6714_000	unser	DPOSA	unser	Masc.Nom.Sg.0	(MF (NX *	_	
4	t6715_000	hêrre	NA	hêrre	Nom.Sg	 * ) )	_	
5	t6716_000	gesetzet	VVPP	sètzen	_	(RB (VX * ) )	_	
6	t6717_000	-	$_	_	_	 * )	_	
7	t6718_000	und	KON	unte	_	(Frag *	_	
8	t6719_000	gemachet	VVPP	machen	_	(VX * )	_	
9	t6720_000	-	$_	_	_	 * )	_	
10	t6721_000	und	KON	unte	_	(Cl (PrePreF * )	_	
11	t6722_000	gebiutet	VVFIN	ge-bièten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t6723_000	allen	DIA	all	*.Dat.Pl.st	(MF (NX *	_	
13	t6724_000	wirten	NA	wirt	Dat.Pl	 * ) )	_	
14	t6725_000	-	$_	_	_	 *	_	
15	t6726_000	zuo	APPR	ze	_	(PostF (Cl (LB (PPX *	_	
16	t6727_000	den	DRELS	dër	*.Dat.Pl	(NX * ) ) )	_	
17	t6728_000	în	PTKVZ	în/+var(e)n	_	(RB (VX *	_	
18	t6729_000	varn	VVFIN	var(e)n/în+	*.Pres.Pl.3	 * ) )	_	
19	t6730_000	die	DDART	dër	Masc.Nom.Pl	(PostF (NX *	_	
20	t6731_000	geste	NA	gast	Nom.Pl	 * ) )	_	
21	t6732_000	-	$_	_	_	 *	_	
22	t6733_000	die	DRELS	dër	Masc.Nom.Pl	(PostF (NX (Cl (LB (NX * ) )	_	
23	t6734_000	gesalzen	ADJA	ge-salzen	Pos.Neut.Akk.Sg.0	(MF *	_	
24	t6735_000	sîten	NA	sîte	Gen.Sg	(NX * )	_	
25	t6736_000	vleisch	NA	vlèisch	Akk.Sg	(NX * )	_	
26	t6737_000	her	AVD	hër(e)	_	 * )	_	
27	t6738_000	vüeren	VVFIN	vüèren	*.Pres.Pl.3	(RB (VX * ) )	_	
28	t6739_000	-	$_	_	_	 *	_	
29	t6740_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
30	t6741_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
31	t6742_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
32	t6743_000	gesten	NA	gast	Dat.Pl	 * ) )	_	
33	t6744_000	verkünde	VVFIN	ver-künden	Subj.Pres.Sg.3	(RB (VX (VX * )	_	
34	t6745_000	und	KON	unte	_	 *	_	
35	t6746_000	sage	VVFIN	sagen	Subj.Pres.Sg.3	(VX * ) ) )	_	
36	t6747_000	-	$_	_	_	 *	_	
37	t6748_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
38	t6749_000	sie	PPER	ër	Masc.Nom.Pl.3	(MF (NX *	_	
39	t6750_000	nihtes	NA	niht	Gen.Sg	(NX * ) ) )	_	
40	t6751_000	verkoufen	VVFIN	ver-koufen	*.Pres.Pl.3	(RB (VX * ) )	_	
41	t6752_000	-	$_	_	_	 * ) ) ) ) ) ) ) ) ) )	_	
42	t6753_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
43	t6754_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
44	t6755_000	denne	KOKOM	danne	_	(MF * )	_	
45	t6756_000	vore	PTKVZ	vor(e)/+be-sëhen	_	(RB (VX *	_	
46	t6757_000	besehen	VVPP	be-sëhen/vor(e)+	_	 * ) )	_	
47	t6758_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6759_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6760_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6761_000	ouch	AVD	ouch	_	(MF *	_	
4	t6762_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
5	t6763_000	gast	NA	gast	Nom.Sg	 * ) )	_	
6	t6764_000	bewern	VVINF	be-wër(e)n	_	(RB (VX * ) )	_	
7	t6765_000	mit	APPR	mit	_	(PostF (PPX *	_	
8	t6766_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
9	t6767_000	eide	NA	èid	Dat.Sg	 * ) ) )	_	
10	t6768_000	-	$_	_	_	 *	_	
11	t6769_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
12	t6770_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
13	t6771_000	reine	ADJD	rèin(e)	Pos....0	 *	_	
14	t6772_000	und	KON	unte	_	 *	_	
15	t6773_000	guot	ADJD	guot	Pos....0	 * )	_	
16	t6774_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) )	_	
17	t6775_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6776_000	tæten	VVFIN	tuon	Subj.Past.Pl.3	(S (Cl (LB (VX * ) )	_	
2	t6777_000	si	PPER	ër	Masc.Nom.Pl.3	(MF (NX * )	_	
3	t6778_000	anders	AVD	ander(e)s	_	 * )	_	
4	t6779_000	-	$_	_	_	 * )	_	
5	t6780_000	dâ	PAVD	dâr/.+umbe	_	(Cl (LB (VX *	_	
6	t6781_000	würden	VAFIN	wërden	(Subj).Past.Pl.3	 * ) )	_	
7	t6782_000	die	DDART	dër	Masc.Nom.Pl	(MF (NX *	_	
8	t6783_000	wirte	NA	wirt	Nom.Pl	 * ) )	_	
9	t6784_000	umbe	PAVAP	umbe/dâr.+	_	(RB (VX *	_	
10	t6785_000	gebüezet	VVPP	büèzen	_	 * ) )	_	
11	t6786_000	-	$_	_	_	 *	_	
12	t6787_000	und	KON	unte	_	(Frag *	_	
13	t6788_000	ouch	AVD	ouch	_	 *	_	
14	t6789_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
15	t6790_000	gast	NA	gast	Nom.Sg	 * )	_	
16	t6791_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6792_000	der	DDART	dër	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t6793_000	wirt	NA	wirt	Nom.Sg	 * ) )	_	
3	t6794_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t6795_000	einen	CARDA	èin	Masc.Akk.Sg.st	(MF (NX *	_	
5	t6796_000	mânden	NA	mând(e)	Akk.Sg	 * )	_	
6	t6797_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
7	t6798_000	stat	NA	stat	Akk.Sg	 * ) )	_	
8	t6799_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
9	t6800_000	-	$_	_	_	 * )	_	
10	t6801_000	und	KON	unte	_	(Cl (PrePreF * )	_	
11	t6802_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t6803_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(MF (NX *	_	
13	t6804_000	schillinge	NA	schilling	Akk.Pl	 *	_	
14	t6805_000	pfenninge	NA	pfènning	Gen.Pl	(NX *	_	
15	t6806_000	zuo	APPR	ze	_	(PPX *	_	
16	t6807_000	bezzerunge	NA	bèzzerunge	Dat.Sg	(NX * ) ) ) ) )	_	
17	t6808_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
18	t6809_000	-	$_	_	_	 * )	_	
19	t6810_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6811_000	-	FM	publicare	_	(S (Frag *	_	
2	t6812_000	-	FM	esse	_	 *	_	
3	t6813_000	-	FM	etiam	_	 *	_	
4	t6814_000	-	FM	infra	_	 *	_	
5	t6815_000	-	FM	scribere	_	 *	_	
6	t6816_000	-	FM	statuta	_	 *	_	
7	t6817_000	-	FM	sub	_	 *	_	
8	t6818_000	-	FM	annus	_	 *	_	
9	t6819_000	-	FM	dominus	_	 *	_	
10	t6820_000	-	FM	m	_	 *	_	
11	t6821_000	-	$_	_	_	 * )	_	
12	t6822_000	-	FM	c	_	(Frag *	_	
13	t6823_000	-	$_	_	_	 * )	_	
14	t6824_000	-	FM	xljie	_	(Frag *	_	
15	t6825_000	-	$_	_	_	 * )	_	
16	t6826_000	-	FM	in	_	(Frag *	_	
17	t6827_000	-	FM	dominicus	_	 *	_	
18	t6828_000	-	FM	die	_	 *	_	
19	t6829_000	-	FM	annus	_	 *	_	
20	t6830_000	-	FM	dies	_	 *	_	
21	t6831_000	Waltburgis	NE	Walt-burg	Gen.Sg	(NX * )	_	
22	t6832_000	-	$_	_	_	 * )	_	
23	t6833_000	-	FM	et	_	(Frag *	_	
24	t6834_000	-	FM	iterum	_	 *	_	
25	t6835_000	-	FM	publicare	_	 *	_	
26	t6836_000	-	$_	_	_	 * )	_	
27	t6837_000	von	APPR	von	_	(Frag (PPX *	_	
28	t6838_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
29	t6839_000	roggenærn	NA	roggenære	Dat.Pl	 * ) )	_	
30	t6840_000	und	KON	unte	_	 *	_	
31	t6841_000	von	APPR	von	_	(PPX *	_	
32	t6842_000	rüggînem	ADJA	rüggîn	Pos.Neut.Dat.Sg.st	(NX *	_	
33	t6843_000	brôte	NA	brôt	Dat.Sg	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6844_000	unser	DPOSA	unser	Masc.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t6845_000	hêrre	NA	hêrre	Nom.Sg	 * ) )	_	
3	t6846_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t6847_000	zuo	APPR	ze	_	(MF (PPX *	_	
5	t6848_000	râte	NA	rât	Dat.Sg	(NX * ) )	_	
6	t6849_000	worden	VAPP	wërden	_	(VX * )	_	
7	t6850_000	mit	APPR	mit	_	(PPX *	_	
8	t6851_000	sîneme	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
9	t6852_000	gesworen	ADJA	ge-swor(e)n	Pos.Masc.Dat.Sg.0	 *	_	
10	t6853_000	râte	NA	rât	Dat.Sg	 *	_	
11	t6854_000	ûf	APPR	ûf	_	(PPX *	_	
12	t6854_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
13	t6855_000	sal	NA	sal	Dat.Sg	 * ) ) ) ) )	_	
14	t6856_000	-	$_	_	_	 * )	_	
15	t6857_000	und	KON	unte	_	(Cl (PrePreF * )	_	
16	t6858_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t6859_000	ie	AVD	iè	_	(MF * )	_	
18	t6860_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
19	t6861_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
20	t6862_000	alle	DIA	all	Masc.Akk.Pl.st	(NX *	_	
21	t6863_000	wege	NA	wëg	Akk.Pl	 * ) )	_	
22	t6864_000	halte	VVFIN	halten	Subj.Pres.Sg.3	(RB (VX * ) )	_	
23	t6865_000	sôgetân	ADJA	sô-ge-tân	Pos.Neut.Akk.Pl.0	(PostF (NX *	_	
24	t6866_000	setze	NA	satz	Akk.Pl	 * )	_	
25	t6867_000	und	KON	unte	_	 *	_	
26	t6868_000	gemechte	NA	ge-mèchte	Akk.Pl	(NX * ) )	_	
27	t6869_000	-	$_	_	_	 * ) ) )	_	
28	t6870_000	als	KO*	all-sô	_	(Frag *	_	
29	t6871_000	her	PAVD	hër(e)/+nâh	_	(VX *	_	
30	t6872_000	nâch	PAVAP	nâh/hër(e)+	_	 * )	_	
31	t6873_000	geschriben	VVPP	schrîben	_	(VX *	_	
32	t6874_000	stênt	VVFIN	stân	Ind.Pres.Pl.3	 * )	_	
33	t6875_000	-	$_	_	_	 * )	_	
34	t6876_000	und	KON	unte	_	(Frag *	_	
35	t6877_000	haben	VAFIN	haben	*.Pres.Pl.3	(VX *	_	
36	t6878_000	gedâht	VVPP	dènken	_	 * )	_	
37	t6879_000	durch	APPR	durh	_	(PPX *	_	
38	t6880_000	gemeine	ADJA	ge-mèine	Pos.Masc.Akk.Sg.0	(NX *	_	
39	t6881_000	vrumen	NA	vrume	Akk.Sg	 * ) )	_	
40	t6882_000	-	$_	_	_	 * )	_	
41	t6883_000	nutz	NA	nutz	Akk.Sg	(Frag (NX * )	_	
42	t6884_000	rîcher	ADJA	rîche	Pos.*.Gen.Pl.st	 *	_	
43	t6885_000	und	KON	unte	_	 *	_	
44	t6886_000	armer	ADJA	arm	Pos.*.Gen.Pl.st	(NX *	_	
45	t6887_000	liute	NA	liut	Gen.Pl	 * )	_	
46	t6888_000	-	$_	_	_	 * )	_	
47	t6889_000	und	KON	unte	_	(Cl (PrePreF * )	_	
48	t6890_000	wellen	VMFIN	wèllen	*.Pres.Pl.3	(LB (VX * ) ) )	_	
49	t6891_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
50	t6892_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
51	t6893_000	ie	AVD	iè	_	 *	_	
52	t6894_000	ûz	APPR	ûz	_	(PPX *	_	
53	t6895_000	eineme	CARDA	èin	Neut.Dat.Sg.st	(NX *	_	
54	t6896_000	malter	NA	malter	Dat.Sg	 *	_	
55	t6897_000	kornes	NA	korn	Gen.Sg	(NX * ) ) )	_	
56	t6898_000	-	$_	_	_	 *	_	
57	t6899_000	mit	APPR	mit	_	(PPX *	_	
58	t6900_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
59	t6901_000	sumerîne	NA	sumerîn	Dat.Sg	 * ) )	_	
60	t6902_000	-	$_	_	_	 *	_	
61	t6903_000	ûf	APPR	ûf	_	(PPX *	_	
62	t6904_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
63	t6905_000	kouf	NA	kouf	Akk.Sg	 * ) )	_	
64	t6906_000	backen	VVINF	backen	_	(VX * ) )	_	
65	t6907_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(RB (VX * ) )	_	
66	t6908_000	-	$_	_	_	 *	_	
67	t6909_000	ahte	CARDA	ahte	Neut.Akk.Pl.0	(Frag *	_	
68	t6910_000	und	KON	unte	_	 *	_	
69	t6911_000	vierzic	CARDA	vièr-zig	Neut.Akk.Pl.0	(NX *	_	
70	t6912_000	wastel	NA	wastël	Akk.Pl	 * )	_	
71	t6913_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6914_000	die	DDS	dër	Neut.Nom.Pl	(S (Cl (PreF (NX * ) )	_	
2	t6915_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t6916_000	alle	DIN	all	Neut.Nom.Pl.st	(MF *	_	
4	t6917_000	gelîche	AVD	ge-lîche	_	 *	_	
5	t6918_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
6	t6919_000	gewihte	NA	ge-wihte	Akk.Sg	 * )	_	
7	t6920_000	haben	VAINF	haben	_	(VX * ) )	_	
8	t6921_000	-	$_	_	_	 * )	_	
9	t6922_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
10	t6923_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
11	t6924_000	zuo	APPR	ze	_	(MF (PPX *	_	
12	t6925_000	rehte	NA	rëht	Dat.Sg	(NX * ) )	_	
13	t6926_000	und	KON	unte	_	 *	_	
14	t6927_000	dürre	ADJD	dürre	Pos....0	 *	_	
15	t6928_000	gebacken	VVPP	backen	_	(VX * )	_	
16	t6929_000	sîn	VAINF	sîn	_	(VX * ) )	_	
17	t6930_000	-	$_	_	_	 *	_	
18	t6931_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
19	t6932_000	zwô	CARDA	zwêne	Fem.Akk.Pl.st	(NX *	_	
20	t6933_000	metzen	NA	mètze	Akk.Pl	 *	_	
21	t6934_000	klîen	NA	klîe	Gen.Pl	(NX * ) ) )	_	
22	t6935_000	und	KON	unte	_	 *	_	
23	t6936_000	ouch	AVD	ouch	_	 *	_	
24	t6937_000	unverwezzert	ADJD	un-ver-wèzzer(e)t	Pos....0	 *	_	
25	t6938_000	-	$_	_	_	 * ) )	_	
26	t6939_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6940_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t6941_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6942_000	ouch	AVD	ouch	_	(MF * )	_	
4	t6943_000	geahtet	VVPP	ahten	_	(RB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6944_000	ob	KOUS	obe	_	(S (Cl (LB * )	_	
2	t6945_000	ein	CARDA	èin	Neut.Nom.Sg.0	(MF (NX *	_	
3	t6946_000	malter	NA	malter	Nom.Sg	 *	_	
4	t6947_000	kornes	NA	korn	Gen.Sg	(NX * ) ) )	_	
5	t6948_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(RB (VX * ) )	_	
6	t6949_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(PostF (NX *	_	
7	t6950_000	schillinge	NA	schilling	Akk.Pl	 *	_	
8	t6951_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
9	t6952_000	-	$_	_	_	 * )	_	
10	t6953_000	sô	AVD	sô	_	(Cl (PreF * )	_	
11	t6954_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t6955_000	der	DDART	dër	*.Gen.Pl	(MF (NX *	_	
13	t6956_000	brôte	NA	brôt	Gen.Pl	 * )	_	
14	t6957_000	einez	CARDS	èin	Neut.Nom.Sg.st	(NX *	_	
15	t6958_000	umbe	APPR	umbe	_	(PPX *	_	
16	t6959_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
17	t6960_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
18	t6961_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6962_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t6963_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
3	t6964_000	korn	NA	korn	Nom.Sg	 * )	_	
4	t6965_000	vünf	CARDA	vünv	Masc.Akk.Pl.0	(NX *	_	
5	t6966_000	schillinge	NA	schilling	Akk.Pl	 *	_	
6	t6967_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
7	t6968_000	-	$_	_	_	 * )	_	
8	t6969_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t6970_000	kument	VVFIN	komen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
10	t6971_000	der	DDART	dër	*.Gen.Pl	(MF (NX *	_	
11	t6972_000	brôte	NA	brôt	Gen.Pl	 * )	_	
12	t6973_000	zwei	CARDS	zwêne	Neut.Nom.Pl.st	(NX *	_	
13	t6974_000	umbe	APPR	umbe	_	(PPX *	_	
14	t6975_000	vünf	CARDA	vünv	Masc.Akk.Pl.0	(NX *	_	
15	t6976_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
16	t6977_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6978_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t6979_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
3	t6980_000	sehs	CARDA	sëhs	Masc.Akk.Pl.0	(NX *	_	
4	t6981_000	schillinge	NA	schilling	Akk.Pl	 *	_	
5	t6982_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
6	t6983_000	-	$_	_	_	 * )	_	
7	t6984_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t6985_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t6986_000	der	DDART	dër	*.Gen.Pl	(MF (NX *	_	
10	t6987_000	brôte	NA	brôt	Gen.Pl	 * )	_	
11	t6988_000	einez	CARDS	èin	Neut.Nom.Sg.st	(NX *	_	
12	t6989_000	umbe	APPR	umbe	_	(PPX *	_	
13	t6990_000	drî	CARDA	drî	Masc.Akk.Pl.0	(NX *	_	
14	t6991_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
15	t6992_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6993_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t6994_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
3	t6995_000	korn	NA	korn	Nom.Sg	 * )	_	
4	t6996_000	siben	CARDA	siben	Masc.Akk.Pl.0	(NX *	_	
5	t6997_000	schillinge	NA	schilling	Akk.Pl	 *	_	
6	t6998_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
7	t6999_000	-	$_	_	_	 * )	_	
8	t7000_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t7001_000	kumen	VVFIN	komen	*.Pres.Pl.3	(LB (VX * ) )	_	
10	t7002_000	zwei	CARDA	zwêne	Neut.Nom.Pl.st	(MF (NX *	_	
11	t7003_000	brôt	NA	brôt	Nom.Pl	 *	_	
12	t7004_000	umbe	APPR	umbe	_	(PPX *	_	
13	t7005_000	siben	CARDA	siben	Masc.Akk.Pl.0	(NX *	_	
14	t7006_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
15	t7007_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7008_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t7009_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
3	t7010_000	ahte	CARDA	ahte	Masc.Akk.Pl.0	(NX *	_	
4	t7011_000	schillinge	NA	schilling	Akk.Pl	 *	_	
5	t7012_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
6	t7013_000	-	$_	_	_	 * )	_	
7	t7014_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t7015_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t7016_000	ein	CARDA	èin	Neut.Nom.Sg.0	(MF (NX *	_	
10	t7017_000	brôt	NA	brôt	Nom.Sg	 *	_	
11	t7018_000	umbe	APPR	umbe	_	(PPX *	_	
12	t7019_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(NX *	_	
13	t7020_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
14	t7021_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7022_000	und	KON	unte	_	(S (Frag *	_	
2	t7023_000	dâr	PAVD	dâr/+über(e)	_	 *	_	
3	t7024_000	über	PAVAP	über(e)/dâr+	_	 * )	_	
4	t7025_000	swaz	PG	swër	Neut.Akk.Sg.st	(Frag (NX * )	_	
5	t7026_000	daz	DDART	dër	Neut.Nom.Sg	(PreF (NX *	_	
6	t7027_000	korn	NA	korn	Nom.Sg	 * ) )	_	
7	t7028_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t7029_000	bî	APPR	bî	_	(MF (PPX *	_	
9	t7030_000	eineme	CARDA	èin	Masc.Dat.Sg.st	(NX *	_	
10	t7031_000	schillinge	NA	schilling	Dat.Sg	 *	_	
11	t7032_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) ) )	_	
12	t7033_000	-	$_	_	_	 * )	_	
13	t7034_000	sô	AVD	sô	_	(Cl (PreF * )	_	
14	t7035_000	vindet	VVFIN	vinden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t7036_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
16	t7037_000	wole	AVD	wol(e)	_	 * )	_	
17	t7038_000	wie	AVW	wiè	_	(Frag *	_	
18	t7039_000	sich	PRF	sich	Akk	(NX * )	_	
19	t7040_000	daz	DDART	dër	Neut.Nom.Sg	(PreF (NX *	_	
20	t7041_000	brôt	NA	brôt	Nom.Sg	 * ) )	_	
21	t7042_000	gebüret	VVFIN	ge-bür(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
22	t7043_000	-	$_	_	_	 * )	_	
23	t7044_000	oder	KON	oder	_	(Frag *	_	
24	t7045_000	wie	AVW	wiè	_	 *	_	
25	t7046_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
26	t7047_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
27	t7048_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
28	t7049_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
29	t7050_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7051_000	und	KON	unte	_	(S (Frag *	_	
2	t7052_000	ouch	AVD	ouch	_	(PreF * )	_	
3	t7053_000	swaz	PG	swër	Neut.Akk.Sg.st	(NX * )	_	
4	t7054_000	ez	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
5	t7055_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t7056_000	ane	APPR	ane	_	(MF (PPX *	_	
7	t7056_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
8	t7057_000	vrîtage	NA	vrî-tag	Dat.Sg	 *	_	
9	t7058_000	nâch	APPR	nâh	_	(PPX *	_	
10	t7059_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
11	t7060_000	gemeinesten	ADJA	ge-mèine	Pos.Masc.Dat.Sg.wk	 *	_	
12	t7061_000	loufe	NA	louf	Dat.Sg	 * ) ) ) ) )	_	
13	t7062_000	-	$_	_	_	 * )	_	
14	t7063_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
15	t7064_000	slahe	VVFIN	slahen/ûf+/abe+	Subj.Pres.Sg.3	(LB (VX * ) )	_	
16	t7065_000	ûf	PTKVZ	ûf/+slahen	_	(RB * )	_	
17	t7066_000	oder	KON	oder	_	(PostF *	_	
18	t7067_000	abe	PTKVZ	abe/+slahen	_	 * )	_	
19	t7068_000	-	$_	_	_	 *	_	
20	t7069_000	und	KON	unte	_	(Frag *	_	
21	t7070_000	welichem	DWA	wèl(i)ch	Masc.Dat.Sg.st	(NX *	_	
22	t7071_000	schillinge	NA	schilling	Dat.Sg	 *	_	
23	t7072_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
24	t7073_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
25	t7074_000	allernæhest	AVD	aller-næheste	Sup	(PreF * )	_	
26	t7075_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX (VX * )	_	
27	t7076_000	oder	KON	oder	_	 *	_	
28	t7077_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(VX * ) ) )	_	
29	t7078_000	-	$_	_	_	 * ) )	_	
30	t7079_000	dâr	PAVD	dâr/+nâh	_	(Cl (LB (VX *	_	
31	t7080_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
32	t7081_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	 * ) )	_	
33	t7082_000	die	DDART	dër	Masc.Nom.Pl	(MF (NX *	_	
34	t7083_000	pfister	NA	pfister	Nom.Pl	 * ) )	_	
35	t7084_000	backen	VVINF	backen	_	(RB (VX * ) )	_	
36	t7085_000	-	$_	_	_	 * )	_	
37	t7086_000	und	KON	unte	_	(Frag *	_	
38	t7087_000	ire	DPOSA	ir(e)	Neut.Akk.Sg.0	(NX *	_	
39	t7088_000	brôt	NA	brôt	Akk.Sg	 * )	_	
40	t7089_000	die	DDART	dër	Masc.Akk.Pl	(NX *	_	
41	t7090_000	nâhesten	ADJA	nâh	Pos.*.Akk.Pl.wk	 *	_	
42	t7091_000	ahte	CARDA	ahte	Masc.Akk.Pl.0	 *	_	
43	t7091_001	tage	NA	tag	Akk.Pl	 * )	_	
44	t7092_000	alsô	AVD	all-sô	_	 *	_	
45	t7093_000	verkoufen	VVINF	ver-koufen	_	(VX * )	_	
46	t7094_000	-	$_	_	_	 * )	_	
47	t7095_000	in	APPR	in	_	(Frag (PPX *	_	
48	t7096_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
49	t7097_000	selben	DDA	sëlb	Masc.Dat.Sg.wk	 *	_	
50	t7098_000	loufe	NA	louf	Dat.Sg	 * ) )	_	
51	t7099_000	-	$_	_	_	 * )	_	
52	t7100_000	und	KON	unte	_	(Frag *	_	
53	t7101_000	ouch	AVD	ouch	_	 *	_	
54	t7102_000	mêr	AVD	mêr(e)	Comp	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7103_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t7104_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7105_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
4	t7106_000	brôtkouf	NA	brôt-kouf	Nom.Sg	 * )	_	
5	t7107_000	ie	AVD	iè	_	 *	_	
6	t7108_000	alsô	AVD	all-sô	_	 * )	_	
7	t7109_000	bestên	VVINF	be-stân	_	(RB (VX * ) )	_	
8	t7110_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
9	t7111_000	selben	DDA	sëlb	Fem.Akk.Sg.wk	 *	_	
10	t7112_000	wochen	NA	woche	Akk.Sg	 * ) )	_	
11	t7113_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7114_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t7115_000	aber	AVD	aber	_	(PreF * )	_	
3	t7116_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	(NX *	_	
4	t7117_000	brôt	NA	brôt	Akk.Sg	 * )	_	
5	t7118_000	hôher	AVD	hôhe	_	(PreF * )	_	
6	t7119_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t7120_000	-	$_	_	_	 * )	_	
8	t7121_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
9	t7122_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
10	t7123_000	vrouwe	NA	vrouwe	Nom.Sg	(MF (NX * )	_	
11	t7124_000	oder	KON	oder	_	 *	_	
12	t7125_000	man	NA	mann	Nom.Sg	(NX * ) )	_	
13	t7126_000	-	$_	_	_	 *	_	
14	t7127_000	maget	NA	maged	Nom.Sg	(Frag (NX * )	_	
15	t7128_000	oder	KON	oder	_	 *	_	
16	t7129_000	kneht	NA	knëht	Nom.Sg	(NX * )	_	
17	t7130_000	-	$_	_	_	 * ) )	_	
18	t7131_000	als	AVD	all-sô	_	(Cl (PreF *	_	
19	t7132_000	dicke	AVD	dicke	_	 * )	_	
20	t7133_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t7134_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
22	t7135_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
23	t7136_000	mânden	NA	mând(e)	Akk.Sg	 * )	_	
24	t7137_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
25	t7138_000	stat	NA	stat	Akk.Sg	 * ) )	_	
26	t7139_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
27	t7140_000	-	$_	_	_	 * )	_	
28	t7141_000	oder	KON	oder	_	(Frag *	_	
29	t7142_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
30	t7143_000	schillinge	NA	schilling	Akk.Pl	 *	_	
31	t7144_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
32	t7145_000	geben	VVINF	gëben	_	(VX * )	_	
33	t7146_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7147_000	welichez	DWS	wèl(i)ch	Neut.Akk.Sg.st	(S (Frag (NX * )	_	
2	t7148_000	der	DDART	dër	Masc.Nom.Sg	(PreF (NX *	_	
3	t7149_000	rât	NA	rât	Nom.Sg	 * ) )	_	
4	t7150_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t7151_000	-	$_	_	_	 * )	_	
6	t7152_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
7	t7153_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t7154_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
9	t7155_000	tuon	VVINF	tuon	_	(RB (VX * ) )	_	
10	t7156_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7157_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t7158_000	en	PTKNEG	ne	_	(LB (VX *	_	
3	t7158_001	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	 * ) )	_	
4	t7159_000	ouch	AVD	ouch	_	(MF *	_	
5	t7160_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
6	t7161_000	kein	DIA	kèin	Neut.Akk.Sg.0	(NX *	_	
7	t7162_000	brôt	NA	brôt	Akk.Sg	 * ) )	_	
8	t7163_000	koufen	VVINF	koufen	_	(RB (VX * ) )	_	
9	t7164_000	-	$_	_	_	 * )	_	
10	t7165_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
11	t7166_000	en	PTKNEG	ne	_	(LB (VX *	_	
12	t7166_001	sî	VAFIN	sîn	Subj.Pres.Sg.3	 * ) )	_	
13	t7167_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
14	t7168_000	denne	KOKOM	danne	_	 *	_	
15	t7169_000	vore	AVD	vor(e)	_	 * )	_	
16	t7170_000	gewegen	VVPP	wëgen	_	(RB (VX * ) )	_	
17	t7171_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7172_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t7173_000	aber	AVD	aber	_	 *	_	
3	t7174_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	(NX *	_	
4	t7175_000	brôt	NA	brôt	Akk.Sg	 * )	_	
5	t7176_000	ungewegen	ADJD	un-ge-wëgen	Pos....0	 *	_	
6	t7177_000	ûz	PTKVZ	ûz/+gëben	_	(VX *	_	
7	t7178_000	gît	VVFIN	gëben/ûz+	Ind.Pres.Sg.3	 * )	_	
8	t7179_000	-	$_	_	_	 * )	_	
9	t7180_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t7181_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t7182_000	ie	AVD	iè	_	(MF *	_	
12	t7183_000	als	AVD	all-sô	_	 *	_	
13	t7184_000	dicke	AVD	dicke	_	 *	_	
14	t7185_000	von	APPR	von	_	(PPX *	_	
15	t7186_000	eineme	CARDA	èin	Neut.Dat.Sg.st	(NX *	_	
16	t7187_000	brôte	NA	brôt	Dat.Sg	 * ) )	_	
17	t7188_000	sehs	CARDA	sëhs	Masc.Akk.Pl.0	(NX *	_	
18	t7189_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
19	t7190_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
20	t7191_000	-	$_	_	_	 * )	_	
21	t7192_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7193_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t7194_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7195_000	ouch	AVD	ouch	_	(MF *	_	
4	t7196_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
5	t7197_000	iegelich	DIA	iè-ge-lich	Masc.Nom.Sg.0	 *	_	
6	t7198_000	pfister	NA	pfister	Nom.Sg	 * ) )	_	
7	t7199_000	backen	VVINF	backen	_	(RB (VX * ) )	_	
8	t7200_000	sô	KO*	sô	_	(PostF *	_	
9	t7201_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
10	t7202_000	allermeiste	AVD	aller-mèiste	Sup	(PreF * )	_	
11	t7203_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(LB (VX * ) ) )	_	
12	t7204_000	-	$_	_	_	 *	_	
13	t7205_000	âne	APPR	âne	_	(Frag (PPX *	_	
14	t7206_000	alle	DIA	all	Neut.Akk.Pl.st	(NX *	_	
15	t7207_000	hindernisse	NA	hinternisse	Akk.Pl	 * ) )	_	
16	t7208_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7209_000	wær	VAFIN	wësen	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t7210_000	aber	AVD	aber	_	(MF * )	_	
3	t7211_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
4	t7212_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
5	t7213_000	ieman	DIA	iè-mann	*.Nom.Sg.st	 * )	_	
6	t7214_000	dâr	PAVD	dâr/+ane	_	(RB (VX *	_	
7	t7215_000	an	PAVAP	ane/dâr+	_	 *	_	
8	t7216_000	irrete	VVFIN	irren	(Subj).Past.Sg.3	 * ) )	_	
9	t7217_000	-	$_	_	_	 * ) ) )	_	
10	t7218_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
11	t7219_000	hinderte	VVFIN	hinter(e)n	(Subj).Past.Sg.3	(LB (VX * ) )	_	
12	t7220_000	-	$_	_	_	 *	_	
13	t7221_000	mit	APPR	mit	_	(Frag (PPX *	_	
14	t7222_000	worten	NA	wort	Dat.Pl	(NX * ) )	_	
15	t7223_000	oder	KON	oder	_	 *	_	
16	t7224_000	mit	APPR	mit	_	(PPX *	_	
17	t7225_000	werken	NA	wërk	Dat.Pl	(NX * ) )	_	
18	t7226_000	-	$_	_	_	 * ) )	_	
19	t7227_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
20	t7228_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t7229_000	ze	APPR	ze	_	(MF (PPX *	_	
22	t7230_000	buoze	NA	buoze	Dat.Sg	(NX * ) ) )	_	
23	t7231_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
24	t7232_000	ein	CARDA	èin	Neut.Akk.Sg.0	(PostF (NX *	_	
25	t7233_000	pfunt	NA	pfunt	Akk.Sg	 *	_	
26	t7234_000	haller	NA	haller(e)	Gen.Pl	(NX * ) ) )	_	
27	t7235_000	-	$_	_	_	 * )	_	
28	t7236_000	und	KON	unte	_	(Cl (PrePreF * )	_	
29	t7237_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
30	t7238_000	ein	CARDA	èin	Neut.Akk.Sg.0	(MF (NX *	_	
31	t7239_000	jâr	NA	jâr	Akk.Sg	 * )	_	
32	t7240_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
33	t7241_000	stat	NA	stat	Akk.Sg	 * ) )	_	
34	t7242_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
35	t7243_000	-	$_	_	_	 *	_	
36	t7244_000	in	APPR	in	_	(Frag (PPX *	_	
37	t7245_000	ahte	CARDA	ahte	*.Dat.Pl.0	(NX *	_	
38	t7246_000	tagen	NA	tag	Dat.Pl	 * ) )	_	
39	t7247_000	-	$_	_	_	 * )	_	
40	t7248_000	âne	APPR	âne	_	(Frag (PPX *	_	
41	t7249_000	genâde	NA	ge-nâde	Akk.Sg	(NX * ) )	_	
42	t7250_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
43	t7251_000	mîl	NA	mîle	Akk.Pl	 *	_	
44	t7252_000	von	APPR	von	_	(PPX *	_	
45	t7253_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
46	t7254_000	stat	NA	stat	Dat.Sg	 * ) ) )	_	
47	t7255_000	-	$_	_	_	 * ) )	_	
48	t7256_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7257_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t7258_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7259_000	ouch	AVD	ouch	_	(MF *	_	
4	t7260_000	bî	APPR	bî	_	(PPX *	_	
5	t7261_000	iewederem	DIA	iè-wëder	Masc.Dat.Sg.st	(NX *	_	
6	t7262_000	tische	NA	tisch	Dat.Sg	 *	_	
7	t7263_000	in	APPR	in	_	(PPX *	_	
8	t7264_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
9	t7265_000	brôthûse	NA	brôt-hûs	Dat.Sg	 * ) ) ) ) )	_	
10	t7266_000	-	$_	_	_	 *	_	
11	t7267_000	und	KON	unte	_	(Frag *	_	
12	t7268_000	an	APPR	ane	_	(PPX *	_	
13	t7269_000	iewederem	DIA	iè-wëder	Neut.Dat.Sg.st	(NX *	_	
14	t7270_000	burctore	NA	burg-tor	Dat.Sg	 * ) )	_	
15	t7271_000	-	$_	_	_	 * )	_	
16	t7272_000	und	KON	unte	_	(Frag *	_	
17	t7273_000	ouch	AVD	ouch	_	 *	_	
18	t7274_000	ûf	APPR	ûf	_	(PPX *	_	
19	t7275_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
20	t7276_000	tuombrobstîe	NA	tuom-brobstîe	Dat.Sg	 * ) )	_	
21	t7277_000	-	$_	_	_	 * )	_	
22	t7278_000	wâ	AVW	wâr	_	(Frag *	_	
23	t7279_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
24	t7280_000	brôt	NA	brôt	Akk.Sg	(NX * )	_	
25	t7281_000	veil	ADJD	vèil(e)	Pos....0	(PreF * )	_	
26	t7282_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
27	t7283_000	-	$_	_	_	 * ) )	_	
28	t7284_000	ein	DIART	èin	Fem.Nom.Sg.0	(Frag (NX *	_	
29	t7285_000	wâge	NA	wâge	Nom.Sg	 * )	_	
30	t7286_000	sîn	VAINF	sîn	_	(VX * )	_	
31	t7287_000	-	$_	_	_	 * )	_	
32	t7288_000	mit	APPR	mit	_	(Frag (PPX *	_	
33	t7289_000	eineme	DIART	èin	Neut.Dat.Sg.st	(NX *	_	
34	t7290_000	gewihte	NA	ge-wihte	Dat.Sg	 * ) )	_	
35	t7291_000	-	$_	_	_	 *	_	
36	t7292_000	daz	DRELS	dër	Neut.Nom.Sg	(Cl (LB (NX * ) )	_	
37	t7293_000	gezeichent	VVPP	zèichenen	_	(RB (VX *	_	
38	t7294_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	 * ) )	_	
39	t7295_000	mit	APPR	mit	_	(PostF (PPX *	_	
40	t7296_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
41	t7297_000	trutenvuoze	NA	truten-vuoz	Dat.Sg	 * ) ) )	_	
42	t7298_000	-	$_	_	_	 * ) )	_	
43	t7299_000	und	KON	unte	_	(Frag *	_	
44	t7300_000	die	DDS	dër	Masc.Nom.Pl	(PreF (NX * ) )	_	
45	t7301_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
46	t7302_000	alle	DIA	all	Masc.Akk.Pl.st	(MF (NX *	_	
47	t7303_000	wege	NA	wëg	Akk.Pl	 * )	_	
48	t7304_000	alsô	AVD	all-sô	_	 * )	_	
49	t7305_000	belîben	VVINF	be-lîben	_	(RB (VX * ) )	_	
50	t7306_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7307_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t7308_000	ouch	AVD	ouch	_	(PreF * )	_	
3	t7309_000	brôt	NA	brôt	Akk.Sg	(NX * )	_	
4	t7310_000	veil	ADJD	vèil(e)	Pos....0	(PreF * )	_	
5	t7311_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t7312_000	-	$_	_	_	 * )	_	
7	t7313_000	und	KON	unte	_	(Frag *	_	
8	t7314_000	niht	NA	niht	Akk.Sg	(NX *	_	
9	t7315_000	wâge	NA	wâge	Gen.Pl	(NX *	_	
10	t7316_000	bî	APPR	bî	_	(PPX *	_	
11	t7317_000	im	PPER	ër	Masc.Dat.Sg.3	(NX * ) ) ) )	_	
12	t7318_000	hangente	VVPS	hangen	_	(VX *	_	
13	t7319_000	hât	VAFIN	haben	Ind.Pres.Sg.3	 * )	_	
14	t7320_000	mit	APPR	mit	_	(PPX *	_	
15	t7321_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
16	t7322_000	gewihte	NA	ge-wihte	Dat.Sg	 * ) )	_	
17	t7323_000	-	$_	_	_	 * )	_	
18	t7324_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
19	t7325_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t7326_000	ie	AVD	iè	_	(MF *	_	
21	t7327_000	als	AVD	all-sô	_	 *	_	
22	t7328_000	ofte	AVD	ofte	_	 *	_	
23	t7329_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
24	t7330_000	schillinc	NA	schilling	Akk.Sg	 *	_	
25	t7331_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
26	t7332_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
27	t7333_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7334_000	bî	APPR	bî	_	(S (Frag (PPX *	_	
2	t7335_000	swem	PG	swër	Masc.Dat.Sg.st	(NX * ) )	_	
3	t7336_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
4	t7337_000	aber	AVD	aber	_	(PreF *	_	
5	t7338_000	ander	DIA	ander	Neut.Akk.Pl.0	(NX *	_	
6	t7339_000	gewihte	NA	ge-wihte	Akk.Pl	 * ) )	_	
7	t7340_000	vindet	VVFIN	vinden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t7341_000	-	$_	_	_	 * )	_	
9	t7342_000	oder	KON	oder	_	(Frag *	_	
10	t7343_000	bî	APPR	bî	_	(PPX *	_	
11	t7344_000	swem	PG	swër	Masc.Dat.Sg.st	(NX * ) )	_	
12	t7345_000	die	DDS	dër	Neut.Nom.Pl	(NX * )	_	
13	t7346_000	werden	VAFIN	wërden	*.Pres.Pl.3	(VX *	_	
14	t7347_000	begriffen	VVPP	be-grîfen	_	 * )	_	
15	t7348_000	-	$_	_	_	 * )	_	
16	t7349_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
17	t7350_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
18	t7351_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
19	t7352_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(PostF (NX *	_	
20	t7353_000	pfenninge	NA	pfènning	Akk.Pl	 * )	_	
21	t7354_000	und	KON	unte	_	 *	_	
22	t7355_000	ein	CARDA	èin	Neut.Akk.Sg.0	(NX *	_	
23	t7356_000	jâr	NA	jâr	Akk.Sg	 * )	_	
24	t7357_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
25	t7358_000	stat	NA	stat	Akk.Sg	 * )	_	
26	t7359_000	rûmen	VVINF	rûmen	_	(VX * )	_	
27	t7360_000	über	APPR	über	_	(PPX *	_	
28	t7361_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
29	t7362_000	mîl	NA	mîle	Akk.Pl	 *	_	
30	t7363_000	âne	APPR	âne	_	(PPX *	_	
31	t7364_000	genâde	NA	ge-nâde	Akk.Sg	(NX *	_	
32	t7365_000	in	APPR	in	_	(PPX *	_	
33	t7366_000	ahte	CARDA	ahte	*.Dat.Pl.0	(NX *	_	
34	t7367_000	tagen	NA	tag	Dat.Pl	 * ) ) ) ) ) ) )	_	
35	t7368_000	-	$_	_	_	 * )	_	
36	t7369_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7370_000	wâ	AVW	wâr	_	(S (Frag *	_	
2	t7371_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
3	t7372_000	ouch	AVD	ouch	_	 *	_	
4	t7373_000	zuo	PTKA	ze	_	 *	_	
5	t7374_000	kleine	ADJA	klèine	Pos.Neut.Akk.Sg.0	 *	_	
6	t7375_000	oder	KON	oder	_	 *	_	
7	t7376_000	ungebacken	ADJA	un-ge-backen	Pos.Neut.Akk.Sg.0	(PreF (NX *	_	
8	t7377_000	brôt	NA	brôt	Akk.Sg	 * ) )	_	
9	t7378_000	vindet	VVFIN	vinden	Ind.Pres.Sg.3	(LB (VX * ) ) )	_	
10	t7379_000	einez	CARDS	èin	Neut.Akk.Sg.st	(Frag (NX * )	_	
11	t7380_000	oder	KON	oder	_	 *	_	
12	t7381_000	zwei	CARDS	zwêne	Neut.Akk.Pl.st	(NX * ) )	_	
13	t7382_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
14	t7383_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t7384_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
16	t7385_000	zersnîden	VVINF	zer-snîden	_	(RB (VX * ) )	_	
17	t7386_000	âne	APPR	âne	_	(PostF (PPX *	_	
18	t7387_000	buoze	NA	buoze	Akk.Sg	(NX * ) ) )	_	
19	t7388_000	-	$_	_	_	 * )	_	
20	t7389_000	und	KON	unte	_	(Frag *	_	
21	t7390_000	hin	AVD	hin(e)	_	 *	_	
22	t7391_000	geben	VVINF	gëben	_	(VX * )	_	
23	t7392_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7393_000	vindet	VVFIN	vinden	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t7394_000	man	PI	man	*.Nom.Sg.st	(PreF (MF (NX * )	_	
3	t7395_000	driu	CARDA	drî	Neut.Akk.Pl.st	(NX *	_	
4	t7396_000	brôt	NA	brôt	Akk.Pl	 * )	_	
5	t7397_000	oder	KON	oder	_	 *	_	
6	t7398_000	swaz	PG	swër	Neut.Akk.Sg.st	(NX * ) ) )	_	
7	t7399_000	dâr	PAVD	dâr/+über(e)	_	(LB (VX *	_	
8	t7400_000	über	PAVAP	über(e)/dâr+	_	 *	_	
9	t7401_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
10	t7402_000	-	$_	_	_	 * )	_	
11	t7403_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
12	t7404_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t7405_000	man	PI	man	*.Nom.Sg.st	(MF (NX *	_	
14	t7406_000	allez	DIN	all	Neut.Akk.Sg.st	 * ) )	_	
15	t7407_000	zersnîden	VVINF	zer-snîden	_	(RB (VX * ) )	_	
16	t7408_000	-	$_	_	_	 * )	_	
17	t7409_000	und	KON	unte	_	(Cl (PrePreF * )	_	
18	t7410_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t7411_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
20	t7412_000	gelîche	AVD	ge-lîche	_	 * )	_	
21	t7413_000	teilen	VVINF	tèilen	_	(RB (VX * ) )	_	
22	t7414_000	-	$_	_	_	 * )	_	
23	t7415_000	und	KON	unte	_	(Cl (PrePreF * )	_	
24	t7416_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
25	t7417_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
26	t7418_000	zuo	APPR	ze	_	 *	_	
27	t7419_000	sancte	ADJA	sancte	Pos.*..0	 *	_	
28	t7420_000	Dietrîche	NE	Dièt(e)-rîch	Dat.Sg	(NX * ) )	_	
29	t7421_000	-	$_	_	_	 * )	_	
30	t7422_000	und	KON	unte	_	(Frag *	_	
31	t7423_000	in	APPR	in	_	(PPX *	_	
32	t7424_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
33	t7425_000	niuwe	ADJA	niuwe	Pos.Neut.Akk.Sg.wk	 *	_	
34	t7426_000	spitâl	NA	spitâl	Akk.Sg	 *	_	
35	t7427_000	ze	APPR	ze	_	(PPX *	_	
36	t7428_000	houge	NA	houg	Dat.Sg	(NX * ) ) ) )	_	
37	t7429_000	geben	VVINF	gëben	_	(VX * )	_	
38	t7430_000	-	$_	_	_	 * )	_	
39	t7431_000	und	KON	unte	_	(Cl (PrePreF * )	_	
40	t7432_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
41	t7433_000	doch	AVD	doh	_	(MF *	_	
42	t7434_000	der	DDS	dër	Masc.Nom.Sg	(NX * ) )	_	
43	t7435_000	-	$_	_	_	 *	_	
44	t7436_000	des	DRELS	dër	Masc.Gen.Sg	(PostF (Cl (LB (NX * ) )	_	
45	t7437_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
46	t7438_000	brôt	NA	brôt	Nom.Sg	 * ) )	_	
47	t7439_000	gewesen	VAPP	wësen	_	(RB (VX *	_	
48	t7440_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
49	t7441_000	-	$_	_	_	 * ) ) )	_	
50	t7442_000	ie	AVD	iè	_	(Frag *	_	
51	t7443_000	als	AVD	all-sô	_	 *	_	
52	t7444_000	dicke	AVD	dicke	_	 *	_	
53	t7445_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
54	t7446_000	schillinc	NA	schilling	Akk.Sg	 *	_	
55	t7447_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
56	t7448_000	geben	VVINF	gëben	_	(VX * )	_	
57	t7449_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7450_000	und	KON	unte	_	(S (Frag *	_	
2	t7451_000	swer	PG	swër	Masc.Nom.Sg.st	(NX * )	_	
3	t7452_000	daz	DDS	dër	Neut.Akk.Sg	(NX * )	_	
4	t7453_000	drî	CARDA	drî	Fem.Akk.Pl.0	(PreF (NX *	_	
5	t7453_001	stunte	NA	stunt(e)	Akk.Pl	 * ) )	_	
6	t7454_000	verbrichet	VVFIN	ver-brëchen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t7455_000	-	$_	_	_	 * )	_	
8	t7456_000	in	APPR	in	_	(Frag (PPX *	_	
9	t7457_000	vier	CARDA	vièr	*.Dat.Pl.0	(NX *	_	
10	t7458_000	wochen	NA	woche	Dat.Pl	 * ) )	_	
11	t7459_000	-	$_	_	_	 * )	_	
12	t7460_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t7461_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t7462_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
15	t7463_000	stat	NA	stat	Akk.Sg	 * ) )	_	
16	t7464_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
17	t7465_000	in	APPR	in	_	(PostF (PPX *	_	
18	t7466_000	ahte	CARDA	ahte	*.Dat.Pl.0	(NX *	_	
19	t7467_000	tagen	NA	tag	Dat.Pl	 * ) )	_	
20	t7468_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
21	t7469_000	mîl	NA	mîle	Akk.Pl	 *	_	
22	t7470_000	von	APPR	von	_	(PPX *	_	
23	t7471_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
24	t7472_000	stat	NA	stat	Dat.Sg	 * ) ) )	_	
25	t7473_000	ein	CARDA	èin	Masc.Akk.Sg.0	(NX *	_	
26	t7474_000	mânden	NA	mând(e)	Akk.Sg	 *	_	
27	t7475_000	âne	APPR	âne	_	(PPX *	_	
28	t7476_000	genâde	NA	ge-nâde	Akk.Sg	(NX * ) ) ) )	_	
29	t7477_000	-	$_	_	_	 * )	_	
30	t7478_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7479_000	und	KON	unte	_	(S (Frag *	_	
2	t7480_000	ouch	AVD	ouch	_	(PreF * )	_	
3	t7481_000	swelich	DGA	swèl(i)ch	Masc.Nom.Sg.0	(NX *	_	
4	t7482_000	pfister	NA	pfister	Nom.Sg	 * )	_	
5	t7483_000	einen	DIART	èin	Masc.Akk.Sg.st	(PreF (NX *	_	
6	t7484_000	unredelîchen	ADJA	un-rède-lich	Pos.Masc.Akk.Sg.*	 *	_	
7	t7485_000	bac	NA	back	Akk.Sg	 * ) )	_	
8	t7486_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t7487_000	-	$_	_	_	 * )	_	
10	t7488_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
11	t7489_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t7490_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
13	t7491_000	alsô	AVD	all-sô	_	 * )	_	
14	t7492_000	verstên	VVINF	ver-stân	_	(RB (VX * ) )	_	
15	t7493_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7494_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t7495_000	klîen	NA	klîe	Akk.Sg	(NX * )	_	
3	t7496_000	-	$_	_	_	 * )	_	
4	t7497_000	oblazmelw	NA	oblazz-mëlw	Akk.Sg	(Frag (NX * )	_	
5	t7498_000	-	$_	_	_	 * )	_	
6	t7499_000	oder	KON	oder	_	(Frag *	_	
7	t7500_000	billenmel	NA	billen-mëlw	Akk.Sg	(NX * )	_	
8	t7501_000	-	$_	_	_	 * )	_	
9	t7502_000	under	APPR	unter	_	(Cl (PreF (PPX *	_	
10	t7503_000	ander	DIA	ander	Neut.Akk.Sg.0	(NX *	_	
11	t7504_000	gerehtez	ADJA	ge-rëht	Pos.Neut.Akk.Sg.st	 *	_	
12	t7505_000	mel	NA	mëlw	Akk.Sg	 * ) ) )	_	
13	t7506_000	becket	VVFIN	backen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t7507_000	-	$_	_	_	 * )	_	
15	t7508_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
16	t7509_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t7510_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
18	t7511_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(PostF (NX *	_	
19	t7512_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
20	t7513_000	-	$_	_	_	 * )	_	
21	t7514_000	und	KON	unte	_	(Frag *	_	
22	t7515_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
23	t7516_000	vierteil	NA	vièr-tèil	Akk.Sg	 *	_	
24	t7517_000	jârs	NA	jâr	Gen.Sg	(NX * ) )	_	
25	t7518_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
26	t7519_000	stat	NA	stat	Akk.Sg	 * )	_	
27	t7520_000	rûmen	VVINF	rûmen	_	(VX * )	_	
28	t7521_000	-	$_	_	_	 * )	_	
29	t7522_000	âne	APPR	âne	_	(Frag (PPX *	_	
30	t7523_000	genâde	NA	ge-nâde	Akk.Sg	(NX * ) )	_	
31	t7524_000	drî	CARDA	drî	Fem.Akk.Pl.0	(NX *	_	
32	t7525_000	mîl	NA	mîle	Akk.Pl	 *	_	
33	t7526_000	von	APPR	von	_	(PPX *	_	
34	t7527_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
35	t7528_000	stat	NA	stat	Dat.Sg	 *	_	
36	t7529_000	in	APPR	in	_	(PPX *	_	
37	t7530_000	ahte	CARDA	ahte	*.Dat.Pl.0	(NX *	_	
38	t7531_000	tagen	NA	tag	Dat.Pl	 * ) ) ) ) )	_	
39	t7532_000	-	$_	_	_	 * )	_	
40	t7533_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7534_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t7535_000	gebiutet	VVFIN	ge-bièten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7536_000	ouch	AVD	ouch	_	(MF *	_	
4	t7537_000	allermannegelîch	PI	aller-manne-ge-lîch	0.Dat.Sg..m.f.n.%	(NX * ) )	_	
5	t7538_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
6	t7539_000	gebacken	VVPP	backen	_	(RB (VX *	_	
7	t7540_000	hât	VAFIN	haben	Ind.Pres.Sg.3	 * ) )	_	
8	t7541_000	biz	AVD	biz	_	(PostF *	_	
9	t7542_000	her	AVD	hër(e)	_	 * )	_	
10	t7543_000	-	$_	_	_	 * ) ) )	_	
11	t7544_000	und	KON	unte	_	(Frag *	_	
12	t7545_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
13	t7546_000	pfister	NA	pfister	Nom.Sg	 * )	_	
14	t7547_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX *	_	
15	t7548_000	gewesen	VAPP	wësen	_	 * )	_	
16	t7549_000	-	$_	_	_	 *	_	
17	t7550_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
18	t7551_000	der	DDS	dër	Masc.Nom.Sg	(MF (NX * ) )	_	
19	t7552_000	backe	VVFIN	backen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
20	t7553_000	vürebaz	AVD	vür(e)-bazz	_	(PostF * )	_	
21	t7554_000	-	$_	_	_	 * ) )	_	
22	t7555_000	âne	APPR	âne	_	(Frag (PPX *	_	
23	t7556_000	allez	DIA	all	Neut.Akk.Sg.st	(NX *	_	
24	t7557_000	verzigenisse	NA	ver-zigenisse	Akk.Sg	 * ) )	_	
25	t7558_000	-	$_	_	_	 * )	_	
26	t7559_000	sô	KO*	sô	_	(Frag *	_	
27	t7560_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
28	t7561_000	meist	AVD	mèiste	Sup	(PreF * )	_	
29	t7562_000	müge	VMFIN	mügen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
30	t7563_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7564_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t7565_000	sich	PRF	sich	Akk	(NX * )	_	
3	t7566_000	aber	AVD	aber	_	(PreF *	_	
4	t7567_000	dâ	AVD	dâr	_	 * )	_	
5	t7568_000	widersetzet	VVFIN	wider-sètzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t7569_000	alsô	AVD	all-sô	_	(MF * )	_	
7	t7570_000	-	$_	_	_	 *	_	
8	t7571_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
9	t7572_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
10	t7573_000	niht	PTKNEG	niht	_	(VX *	_	
11	t7574_000	backen	VVINF	backen	_	 * ) )	_	
12	t7575_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
13	t7576_000	-	$_	_	_	 * ) )	_	
14	t7577_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
15	t7578_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t7579_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
17	t7580_000	stat	NA	stat	Akk.Sg	 *	_	
18	t7581_000	ane	APPR	ane	_	(PPX *	_	
19	t7581_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
20	t7582_000	nâhesten	ADJA	nâh	Pos.Masc.Dat.Sg.wk	 *	_	
21	t7583_000	tage	NA	tag	Dat.Sg	 * ) ) ) )	_	
22	t7584_000	dâr	PAVD	dâr/+nâh	_	(RB (VX *	_	
23	t7585_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
24	t7586_000	rûmen	VVINF	rûmen	_	 * ) )	_	
25	t7587_000	-	$_	_	_	 *	_	
26	t7588_000	ein	DIART	èin	Neut.Akk.Sg.0	(Frag (NX *	_	
27	t7589_000	ganzez	ADJA	ganz	Pos.Neut.Akk.Sg.st	 *	_	
28	t7590_000	jâr	NA	jâr	Akk.Sg	 * )	_	
29	t7591_000	-	$_	_	_	 * )	_	
30	t7592_000	zehen	CARDA	zëhen	Fem.Akk.Pl.0	(Frag (NX *	_	
31	t7593_000	mîle	NA	mîle	Akk.Pl	 *	_	
32	t7594_000	von	APPR	von	_	(PPX *	_	
33	t7595_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
34	t7596_000	stat	NA	stat	Dat.Sg	 *	_	
35	t7597_000	âne	APPR	âne	_	(PPX *	_	
36	t7598_000	genâde	NA	ge-nâde	Akk.Sg	(NX *	_	
37	t7599_000	mit	APPR	mit	_	(PPX *	_	
38	t7600_000	wîbe	NA	wîb	Dat.Sg	(NX * ) ) ) ) ) ) )	_	
39	t7601_000	und	KON	unte	_	 *	_	
40	t7602_000	mit	APPR	mit	_	(PPX *	_	
41	t7603_000	kinden	NA	kind	Dat.Pl	(NX * ) )	_	
42	t7604_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7605_000	kæme	VVFIN	komen	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t7606_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
3	t7607_000	nâch	APPR	nâh	_	(PPX *	_	
4	t7608_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
5	t7609_000	jâr	NA	jâr	Dat.Sg	 * ) ) )	_	
6	t7610_000	wider	AVD	wider(e)	_	 *	_	
7	t7611_000	her	PAVD	hër(e)/+în	_	 *	_	
8	t7612_000	în	PAVAP	în/hër(e)+	_	 * )	_	
9	t7613_000	-	$_	_	_	 * )	_	
10	t7614_000	und	KON	unte	_	(Cl (PrePreF * )	_	
11	t7615_000	wolte	VMFIN	wèllen	(Subj).Past.Sg.3	(LB (VX * ) )	_	
12	t7616_000	niht	PTKNEG	niht	_	(RB (VX *	_	
13	t7617_000	backen	VVINF	backen	_	 * ) )	_	
14	t7618_000	-	$_	_	_	 * )	_	
15	t7619_000	sô	AVD	sô	_	(Cl (PreF * )	_	
16	t7620_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t7621_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
18	t7622_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
19	t7623_000	stat	NA	stat	Akk.Sg	 * )	_	
20	t7624_000	dâr	PAVD	dâr/+nâh	_	 *	_	
21	t7625_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
22	t7626_000	êwiclîchen	AVD	êwig-lîche	_	 * )	_	
23	t7627_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
24	t7628_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7629_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t7630_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t7631_000	gemischeten	ADJA	ge-mischet	Pos.Neut.Dat.Sg.wk	 *	_	
4	t7632_000	brôte	NA	brôt	Dat.Sg	 * ) )	_	
5	t7633_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7634_000	ouch	AVD	ouch	_	(S (Frag *	_	
2	t7635_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX *	_	
3	t7636_000	gesetzet	VVPP	sètzen	_	 * )	_	
4	t7637_000	umbe	APPR	umbe	_	(PPX *	_	
5	t7638_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
6	t7639_000	gemischete	ADJA	ge-mischet	Pos.Neut.Akk.Sg.wk	 *	_	
7	t7640_000	brôt	NA	brôt	Akk.Sg	 * ) )	_	
8	t7641_000	-	$_	_	_	 *	_	
9	t7642_000	daz	DRELS	dër	Neut.Akk.Sg	(PPX (NX (Cl (LB (NX * ) )	_	
10	t7643_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
11	t7644_000	becket	VVFIN	backen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
12	t7645_000	ûf	APPR	ûf	_	(PostF (PPX *	_	
13	t7646_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
14	t7647_000	kouf	NA	kouf	Akk.Sg	 * ) ) )	_	
15	t7648_000	-	$_	_	_	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7649_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7650_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7651_000	halbe	AVD	halbe	_	(MF *	_	
4	t7652_000	weizîn	ADJD	wèizîn	Pos....0	 *	_	
5	t7653_000	und	KON	unte	_	 *	_	
6	t7654_000	halbe	AVD	halbe	_	 *	_	
7	t7655_000	rüggîn	ADJD	rüggîn	Pos....0	 *	_	
8	t7656_000	sîn	VAINF	sîn	_	(VX * ) )	_	
9	t7657_000	-	$_	_	_	 * )	_	
10	t7658_000	und	KON	unte	_	(Cl (PrePreF * )	_	
11	t7659_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t7660_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
13	t7661_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) )	_	
14	t7662_000	backen	VVINF	backen	_	(RB (VX * ) )	_	
15	t7663_000	ûf	APPR	ûf	_	(PostF (PPX *	_	
16	t7664_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
17	t7665_000	wastelgewihte	NA	wastël-ge-wihte	Akk.Sg	 * ) ) )	_	
18	t7666_000	-	$_	_	_	 * )	_	
19	t7667_000	und	KON	unte	_	(Cl (PrePreF * )	_	
20	t7668_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
21	t7669_000	der	DDS	dër	*.Gen.Pl	(MF (NX * )	_	
22	t7670_000	zwei	CARDS	zwêne	Neut.Nom.Pl.st	(NX * ) )	_	
23	t7671_000	-	$_	_	_	 * )	_	
24	t7672_000	ie	AVD	iè	_	(Frag *	_	
25	t7673_000	eines	CARDA	èin	Masc.Gen.Sg.st	(NX *	_	
26	t7674_000	hallers	NA	haller(e)	Gen.Sg	 * )	_	
27	t7675_000	mêr	ADJA	mêr(e)	Comp.Neut.Akk.Sg.0	 *	_	
28	t7676_000	gelten	VVINF	gëlten	_	(VX * )	_	
29	t7677_000	-	$_	_	_	 * )	_	
30	t7678_000	denne	KOKOM	danne	_	(Frag *	_	
31	t7679_000	zwei	CARDA	zwêne	Neut.Nom.Pl.st	(NX *	_	
32	t7680_000	wastel	NA	wastël	Nom.Pl	 * )	_	
33	t7681_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7682_000	und	KON	unte	_	(S (Frag *	_	
2	t7683_000	swer	PG	swër	Masc.Nom.Sg.st	(NX *	_	
3	t7684_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
4	t7685_000	ein	CARDA	èin	Neut.Akk.Sg.0	(PreF (NX *	_	
5	t7686_000	malter	NA	malter	Akk.Sg	 * ) )	_	
6	t7687_000	becket	VVFIN	backen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t7688_000	-	$_	_	_	 * )	_	
8	t7689_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t7690_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t7691_000	des	DDS	dër	Neut.Gen.Sg	(MF (NX * )	_	
11	t7692_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
12	t7693_000	ahteil	NA	aht-tèil	Akk.Sg	 *	_	
13	t7694_000	zuo	APPR	ze	_	(PPX *	_	
14	t7695_000	halben	ADJA	halb	Pos.Neut.Dat.Sg.wk	(NX *	_	
15	t7696_000	brôte	NA	brôt	Dat.Sg	 * ) ) ) )	_	
16	t7697_000	backen	VVINF	backen	_	(RB (VX * ) )	_	
17	t7698_000	-	$_	_	_	 *	_	
18	t7699_000	alsô	AVD	all-sô	_	(PostF * )	_	
19	t7700_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
20	t7701_000	ir	PPER	ër	*.Gen.Pl.3	(MF (NX * )	_	
21	t7702_000	zwei	CARDS	zwêne	Neut.Nom.Pl.st	(NX * )	_	
22	t7703_000	ein	CARDA	èin	Neut.Akk.Sg.0	(NX *	_	
23	t7704_000	wastelgewihte	NA	wastël-ge-wihte	Akk.Sg	 * ) )	_	
24	t7705_000	haben	VAFIN	haben	*.Pres.Pl.3	(RB (VX * ) )	_	
25	t7706_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7707_000	und	KON	unte	_	(S (Frag *	_	
2	t7708_000	der	DDS	dër	*.Gen.Pl	(PreF (NX * ) )	_	
3	t7709_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
4	t7710_000	vier	CARDS	vièr	Neut.Nom.Pl.0	(MF (NX *	_	
5	t7711_000	eines	CARDA	èin	Masc.Gen.Sg.st	(NX *	_	
6	t7712_000	hallers	NA	haller(e)	Gen.Sg	 * ) )	_	
7	t7713_000	mêr	ADJA	mêr(e)	Comp.Neut.Akk.Sg.0	 * )	_	
8	t7714_000	gelten	VVINF	gëlten	_	(RB (VX * ) )	_	
9	t7715_000	-	$_	_	_	 * )	_	
10	t7716_000	denne	KOKOM	danne	_	(Frag *	_	
11	t7717_000	zwei	CARDA	zwêne	Neut.Nom.Pl.st	(NX *	_	
12	t7718_000	wastel	NA	wastël	Nom.Pl	 * )	_	
13	t7719_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7720_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t7721_000	aber	AVD	aber	_	(PreF *	_	
3	t7722_000	anders	AVD	ander(e)s	_	 * )	_	
4	t7723_000	tæte	VVFIN	tuon	Subj.Past.Sg.3	(LB (VX * ) )	_	
5	t7724_000	an	APPR	ane	_	(MF (PPX *	_	
6	t7725_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
7	t7726_000	stücken	NA	stück(e)	Dat.Pl	 * ) ) )	_	
8	t7727_000	-	$_	_	_	 * )	_	
9	t7728_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t7729_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t7730_000	geben	VVINF	gëben	_	(RB (VX (VX * )	_	
12	t7731_000	und	KON	unte	_	 *	_	
13	t7732_000	lîden	VVINF	lîden	_	(VX * ) ) )	_	
14	t7733_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
15	t7734_000	buoze	NA	buoze	Akk.Sg	 * ) )	_	
16	t7735_000	-	$_	_	_	 * )	_	
17	t7736_000	als	KO*	all-sô	_	(Frag *	_	
18	t7737_000	von	APPR	von	_	(PPX *	_	
19	t7738_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
20	t7739_000	îteln	ADJA	îtel	Pos.Neut.Dat.Sg.wk	 *	_	
21	t7740_000	rüggînen	ADJA	rüggîn	Pos.Neut.Dat.Sg.wk	 *	_	
22	t7741_000	brôte	NA	brôt	Dat.Sg	 * ) )	_	
23	t7742_000	vore	AVD	vor(e)	_	 *	_	
24	t7743_000	stêt	VVFIN	stân	Ind.Pres.Sg.3	(VX *	_	
25	t7744_000	geschriben	VVPP	schrîben	_	 * )	_	
26	t7745_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7746_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t7747_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t7748_000	semelærn	NA	sëmelære	Dat.Pl	 * ) )	_	
4	t7749_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7750_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t7751_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7752_000	ouch	AVD	ouch	_	(MF * )	_	
4	t7753_000	gesetzet	VVPP	sètzen	_	(RB (VX (VX * )	_	
5	t7754_000	und	KON	unte	_	 *	_	
6	t7755_000	gemachet	VVPP	machen	_	(VX * ) ) )	_	
7	t7756_000	umbe	APPR	umbe	_	(PostF (PPX *	_	
8	t7757_000	die	DDART	dër	Masc.Akk.Pl	(NX *	_	
9	t7758_000	semelær	NA	sëmelære	Akk.Pl	 * ) ) )	_	
10	t7759_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7760_000	die	DDS	dër	Masc.Nom.Pl	(S (Cl (PreF (NX * ) )	_	
2	t7761_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t7762_000	lôse	ADJA	lôs	Pos.Masc.Akk.Pl.st	(MF (NX *	_	
4	t7763_000	wegge	NA	wègge	Akk.Pl	 * ) )	_	
5	t7764_000	backen	VVINF	backen	_	(RB (VX * ) )	_	
6	t7765_000	-	$_	_	_	 *	_	
7	t7766_000	und	KON	unte	_	(Frag *	_	
8	t7767_000	mugeln	NA	mugel	Akk.Pl	(NX * )	_	
9	t7768_000	-	$_	_	_	 * ) )	_	
10	t7769_000	ie	AVD	iè	_	(Frag *	_	
11	t7770_000	einez	CARDS	èin	Neut.Akk.Sg.st	(NX *	_	
12	t7771_000	umbe	APPR	umbe	_	(PPX *	_	
13	t7772_000	ein	CARDA	èin	Masc.Akk.Sg.0	(NX *	_	
14	t7773_000	haller	NA	haller(e)	Akk.Sg	 * ) ) )	_	
15	t7774_000	als	KO*	all-sô	_	 *	_	
16	t7775_000	von	APPR	von	_	(PPX *	_	
17	t7776_000	alter	NA	alter	Dat.Sg	(NX * ) )	_	
18	t7777_000	her	AVD	hër(e)	_	 *	_	
19	t7778_000	gewesen	VAPP	wësen	_	(VX *	_	
20	t7779_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
21	t7780_000	-	$_	_	_	 * )	_	
22	t7781_000	und	KON	unte	_	(Frag *	_	
23	t7782_000	zwei	CARDA	zwêne	Neut.Akk.Pl.st	(NX *	_	
24	t7783_000	weggelîn	NA	wèggelîn	Akk.Pl	 *	_	
25	t7784_000	umbe	APPR	umbe	_	(PPX *	_	
26	t7785_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
27	t7786_000	haller	NA	haller(e)	Akk.Sg	 * ) ) )	_	
28	t7787_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7788_000	und	KON	unte	_	(S (Frag *	_	
2	t7789_000	swaz	PG	swër	Neut.Nom.Sg.st	(NX * )	_	
3	t7790_000	semelîn	ADJD	sëmelîn	Pos....0	(PreF * )	_	
4	t7791_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) ) )	_	
5	t7792_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
6	t7793_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t7794_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
8	t7795_000	zwicken	VVINF	zwicken	_	(RB (VX * ) )	_	
9	t7796_000	-	$_	_	_	 *	_	
10	t7797_000	und	KON	unte	_	(Frag *	_	
11	t7798_000	daz	DDART	dër	Neut.Akk.Sg	 *	_	
12	t7799_000	böllîn	ADJA	böllîn	Pos.Neut.Akk.Sg.0	(PreF * )	_	
13	t7800_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t7801_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
15	t7802_000	ungezwicket	ADJD	un-ge-zwicket	Pos....0	 * )	_	
16	t7803_000	lâzen	VVINF	lâzen	_	(RB (VX * ) )	_	
17	t7804_000	-	$_	_	_	 *	_	
18	t7805_000	alsô	AVD	all-sô	_	(PostF * )	_	
19	t7806_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
20	t7807_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
21	t7808_000	einez	CARDS	èin	Neut.Akk.Sg.st	(NX *	_	
22	t7809_000	vore	APPR	vor(e)	_	(PPX *	_	
23	t7810_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
24	t7811_000	andern	DIS	ander	Neut.Dat.Sg.wk	 * ) ) ) )	_	
25	t7812_000	kenne	VVFIN	kènnen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
26	t7813_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7814_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7815_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t7816_000	backen	VVINF	backen	_	(RB (VX * ) )	_	
4	t7817_000	ûf	APPR	ûf	_	(PostF (PPX *	_	
5	t7818_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
6	t7819_000	gewihte	NA	ge-wihte	Akk.Sg	 * ) ) )	_	
7	t7820_000	-	$_	_	_	 * )	_	
8	t7821_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t7822_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t7823_000	wegen	VVINF	wëgen	_	(RB (VX * ) )	_	
11	t7824_000	âne	APPR	âne	_	(PostF (PPX *	_	
12	t7825_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
13	t7826_000	vierdunc	NA	vièrdung	Akk.Sg	 * ) )	_	
14	t7827_000	vier	CARDA	vièr	Neut.Akk.Pl.0	(NX *	_	
15	t7828_000	pfunt	NA	pfunt	Akk.Pl	 * ) )	_	
16	t7829_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7830_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7831_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7832_000	ouch	AVD	ouch	_	(MF * )	_	
4	t7833_000	vunden	VVPP	vinden	_	(RB (VX * ) )	_	
5	t7834_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7835_000	ob	KOUS	obe	_	(S (Cl (LB * )	_	
2	t7836_000	ein	CARDA	èin	Neut.Nom.Sg.0	(MF (NX *	_	
3	t7837_000	malter	NA	malter	Nom.Sg	 *	_	
4	t7838_000	weizes	NA	wèize	Gen.Sg	(NX * ) ) )	_	
5	t7839_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(RB (VX * ) )	_	
6	t7840_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(PostF (NX *	_	
7	t7841_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
8	t7842_000	-	$_	_	_	 * )	_	
9	t7843_000	sô	AVD	sô	_	(Cl (PreF * )	_	
10	t7844_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
11	t7845_000	vier	CARDA	vièr	Masc.Nom.Pl.0	(MF (NX *	_	
12	t7846_000	lôse	ADJA	lôs	Pos.Masc.Nom.Pl.st	 *	_	
13	t7847_000	wegge	NA	wègge	Nom.Pl	 * ) )	_	
14	t7848_000	-	$_	_	_	 *	_	
15	t7849_000	oder	KON	oder	_	(Frag *	_	
16	t7850_000	mugeln	NA	mugel	Nom.Pl	(NX * )	_	
17	t7851_000	-	$_	_	_	 * ) )	_	
18	t7852_000	der	DDART	dër	*.Gen.Pl	(Frag (NX *	_	
19	t7853_000	gewihte	NA	ge-wihte	Gen.Pl	 * )	_	
20	t7854_000	einez	CARDS	èin	Neut.Akk.Sg.st	(NX * )	_	
21	t7855_000	haben	VAINF	haben	_	(VX * )	_	
22	t7856_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7857_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t7858_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
3	t7859_000	weize	NA	wèize	Nom.Sg	 * )	_	
4	t7860_000	drî	CARDA	drî	Masc.Akk.Pl.st	 *	_	
5	t7861_000	und	KON	unte	_	 *	_	
6	t7862_000	sehs	CARDA	sëhs	Masc.Akk.Pl.0	(NX *	_	
7	t7863_000	schillinge	NA	schilling	Akk.Pl	 *	_	
8	t7864_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
9	t7865_000	-	$_	_	_	 * )	_	
10	t7866_000	sô	AVD	sô	_	(Cl (PreF * )	_	
11	t7867_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
12	t7868_000	der	DDART	dër	*.Gen.Pl	(MF (NX *	_	
13	t7869_000	wegge	NA	wègge	Gen.Pl	 * )	_	
14	t7870_000	oder	KON	oder	_	 *	_	
15	t7871_000	mugeln	NA	mugel	Gen.Pl	(NX * )	_	
16	t7872_000	vünf	CARDS	vünv	Neut.Nom.Pl.0	(NX * ) )	_	
17	t7873_000	-	$_	_	_	 * )	_	
18	t7874_000	daz	DDART	dër	Neut.Akk.Sg	(Frag (NX *	_	
19	t7875_000	selbe	DDA	sëlb	Neut.Akk.Sg.wk	 *	_	
20	t7876_000	gewihte	NA	ge-wihte	Akk.Sg	 * )	_	
21	t7877_000	haben	VAINF	haben	_	(VX * )	_	
22	t7878_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7879_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t7880_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t7881_000	ahtehalben	ADJA	aht(od)(e)-halb	Pos.Masc.Akk.Sg.*	(NX *	_	
4	t7882_000	schillinc	NA	schilling	Akk.Sg	 *	_	
5	t7883_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
6	t7884_000	-	$_	_	_	 * )	_	
7	t7885_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t7886_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
9	t7887_000	sehs	CARDA	sëhs	Neut.Nom.Pl.0	(MF (NX *	_	
10	t7888_000	mugeln	NA	mugel	Nom.Pl	 * ) )	_	
11	t7889_000	-	$_	_	_	 *	_	
12	t7890_000	oder	KON	oder	_	(Frag *	_	
13	t7891_000	wegge	NA	wègge	Nom.Pl	(NX * )	_	
14	t7892_000	-	$_	_	_	 * ) )	_	
15	t7893_000	der	DDART	dër	*.Gen.Pl	(Frag (NX *	_	
16	t7894_000	gewihte	NA	ge-wihte	Gen.Pl	 * )	_	
17	t7895_000	einez	CARDS	èin	Neut.Akk.Sg.st	(NX * )	_	
18	t7896_000	haben	VAINF	haben	_	(VX * )	_	
19	t7897_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7898_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t7899_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
3	t7900_000	weize	NA	wèize	Nom.Sg	 *	_	
4	t7901_000	an	APPR	ane	_	(PPX *	_	
5	t7902_000	drî	CARDA	drî	Masc.Akk.Pl.0	(NX *	_	
6	t7903_000	niun	CARDA	niun	Masc.Akk.Pl.0	 *	_	
7	t7904_000	schillinge	NA	schilling	Akk.Pl	 *	_	
8	t7905_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) ) ) )	_	
9	t7906_000	-	$_	_	_	 * )	_	
10	t7907_000	sô	AVD	sô	_	(Cl (PreF * )	_	
11	t7908_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
12	t7909_000	ahte	CARDA	ahte	Masc,Neut.Nom.Pl.0	(MF (NX *	_	
13	t7910_000	wegge	NA	wègge	Nom.Pl	 * )	_	
14	t7911_000	oder	KON	oder	_	 *	_	
15	t7912_000	mugeln	NA	mugel	Nom.Pl	(NX * ) )	_	
16	t7913_000	-	$_	_	_	 * )	_	
17	t7914_000	der	DDART	dër	*.Gen.Pl	(Frag (NX *	_	
18	t7915_000	gewihte	NA	ge-wihte	Gen.Pl	 * )	_	
19	t7916_000	einez	CARDS	èin	Neut.Akk.Sg.st	(NX * )	_	
20	t7917_000	haben	VAINF	haben	_	(VX * )	_	
21	t7918_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7919_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7920_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t7921_000	allewege	AVD	al(le)-wëg(e)	_	(MF *	_	
4	t7922_000	ortweggelîn	NA	ort-wèggelîn	Nom.Pl	(NX * )	_	
5	t7923_000	als	AVD	all-sô	_	 *	_	
6	t7924_000	swær	ADJD	swære	Pos....0	 *	_	
7	t7925_000	sîn	VAINF	sîn	_	(VX * ) )	_	
8	t7926_000	-	$_	_	_	 *	_	
9	t7927_000	als	KO*	all-sô	_	(Frag *	_	
10	t7928_000	ein	DIART	èin	Masc.Nom.Sg.0	(NX *	_	
11	t7929_000	lôser	ADJA	lôs	Pos.Masc.Nom.Sg.st	 *	_	
12	t7930_000	wegge	NA	wègge	Nom.Sg	 * )	_	
13	t7931_000	-	$_	_	_	 * )	_	
14	t7932_000	oder	KON	oder	_	(Frag *	_	
15	t7933_000	ein	DIART	èin	*.Nom.Sg.0	(NX *	_	
16	t7934_000	mugel	NA	mugel	Nom.Sg	 * )	_	
17	t7935_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7936_000	und	KON	unte	_	(S (Frag *	_	
2	t7937_000	dâr	PAVD	dâr/+nâh	_	 *	_	
3	t7938_000	nâch	PAVAP	nâh/dâr+	_	 * )	_	
4	t7939_000	swaz	PG	swër	Neut.Akk.Sg.st	(Frag (NX * )	_	
5	t7940_000	der	DDART	dër	Masc.Nom.Sg	(PreF (NX *	_	
6	t7941_000	weize	NA	wèize	Nom.Sg	 * ) )	_	
7	t7942_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t7943_000	-	$_	_	_	 * )	_	
9	t7944_000	ûf	AVD	ûf	_	(Frag *	_	
10	t7945_000	oder	KON	oder	_	 *	_	
11	t7946_000	abe	AVD	abe	_	 *	_	
12	t7947_000	-	$_	_	_	 * )	_	
13	t7948_000	vindet	VVFIN	vinden	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
14	t7949_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
15	t7950_000	wole	AVD	wol(e)	_	 * )	_	
16	t7951_000	wie	AVW	wiè	_	(Frag *	_	
17	t7952_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
18	t7953_000	die	DDART	dër	Masc.Akk.Pl	(NX *	_	
19	t7954_000	lôsen	ADJA	lôs	Pos.*.Akk.Pl.wk	 *	_	
20	t7955_000	wegge	NA	wègge	Akk.Pl	 * )	_	
21	t7956_000	-	$_	_	_	 * )	_	
22	t7957_000	mugeln	NA	mugel	Akk.Pl	(Frag (NX * )	_	
23	t7958_000	-	$_	_	_	 * )	_	
24	t7959_000	oder	KON	oder	_	(Frag *	_	
25	t7960_000	ortweggelech	NA	ort-wèggelech	Akk.S,P	(NX * )	_	
26	t7961_000	geben	VVINF	gëben	_	(PreF (VX * ) )	_	
27	t7962_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
28	t7963_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7964_000	diser	DDA	dise	Masc.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t7965_000	satz	NA	satz	Nom.Sg	 * ) )	_	
3	t7966_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t7967_000	ouch	AVD	ouch	_	(MF *	_	
5	t7968_000	sîn	VAINF	sîn	_	(VX * )	_	
6	t7969_000	bî	APPR	bî	_	(PPX *	_	
7	t7970_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
8	t7971_000	den	DDART	dër	*.Dat.Pl	 *	_	
9	t7972_000	buozen	NA	buoze	Dat.Pl	 * ) ) )	_	
10	t7973_000	-	$_	_	_	 *	_	
11	t7974_000	als	KO*	all-sô	_	(Frag *	_	
12	t7975_000	von	APPR	von	_	(PPX *	_	
13	t7976_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
14	t7977_000	rüggîn	ADJA	rüggîn	Pos.Neut.Dat.Sg.0	 *	_	
15	t7978_000	brôte	NA	brôt	Dat.Sg	 * ) )	_	
16	t7979_000	-	$_	_	_	 * ) )	_	
17	t7980_000	vore	PTKVZ	vor(e)/+schrîben	_	(Frag (VX *	_	
18	t7981_000	stêt	VVFIN	stân	Ind.Pres.Sg.3	 *	_	
19	t7982_000	geschriben	VVPP	schrîben/vor(e)+	_	 * )	_	
20	t7983_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7984_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t7985_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t7986_000	heimbacken	ADJA	hèim-backen	Pos.Neut.Dat.Sg.0	 *	_	
4	t7987_000	rüggîn	ADJA	rüggîn	Pos.Neut.Dat.Sg.0	 *	_	
5	t7988_000	brôte	NA	brôt	Dat.Sg	 * ) )	_	
6	t7989_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7990_000	daz	DDART	dër	Neut.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t7991_000	heimbacken	ADJA	hèim-backen	Pos.Neut.Akk.Sg.0	 *	_	
3	t7992_000	rüggîn	ADJA	rüggîn	Pos.Neut.Akk.Sg.0	 *	_	
4	t7993_000	brôt	NA	brôt	Akk.Sg	 * ) )	_	
5	t7994_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t7995_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
7	t7996_000	backen	VVINF	backen	_	(RB (VX * ) )	_	
8	t7997_000	ûf	APPR	ûf	_	(PostF (PPX *	_	
9	t7998_000	zwô	CARDA	zwêne	Fem.Akk.Pl.st	(NX *	_	
10	t7999_000	metzen	NA	mètze	Akk.Pl	 *	_	
11	t8000_000	klîen	NA	klîe	Gen.Sg	(NX * ) ) ) )	_	
12	t8001_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8002_000	die	DDS	dër	Masc.Nom.Pl	(S (Cl (PreF (NX * ) )	_	
2	t8003_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t8004_000	dem	DDS	dër	Masc.Dat.Sg	(MF (NX * ) )	_	
4	t8005_000	-	$_	_	_	 *	_	
5	t8006_000	des	DRELS	dër	Masc.Gen.Sg	(PostF (Cl (LB (NX * ) )	_	
6	t8007_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
7	t8008_000	korn	NA	korn	Nom.Sg	 * ) )	_	
8	t8009_000	gewesen	VAPP	wësen	_	(RB (VX *	_	
9	t8010_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
10	t8011_000	-	$_	_	_	 * ) ) )	_	
11	t8012_000	mit	APPR	mit	_	(Frag (PPX *	_	
12	t8013_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
13	t8014_000	brôte	NA	brôt	Dat.Sg	 * ) )	_	
14	t8015_000	wider	AVD	wider(e)	_	 *	_	
15	t8016_000	werden	VAINF	wërden	_	(VX * )	_	
16	t8017_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8018_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8019_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t8020_000	ein	DIART	èin	Masc,Fem.Nom.Sg.0	(MF (NX *	_	
4	t8021_000	iegelich	DIA	iè-ge-lich	Masc,Fem.Nom.Sg.0	 *	_	
5	t8022_000	man	NA	mann	Nom.Sg	 * )	_	
6	t8023_000	oder	KON	oder	_	 *	_	
7	t8024_000	vrouwe	NA	vrouwe	Nom.Sg	(NX * ) )	_	
8	t8025_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
9	t8026_000	ze	APPR	ze	_	(PostF (PPX *	_	
10	t8026_001	backenne	NA	backen	Dat.Sg	(NX * ) ) )	_	
11	t8027_000	-	$_	_	_	 *	_	
12	t8028_000	ie	AVD	iè	_	(Frag *	_	
13	t8029_000	von	APPR	von	_	(PPX *	_	
14	t8030_000	eineme	CARDA	èin	Neut.Dat.Sg.st	(NX *	_	
15	t8031_000	malter	NA	malter	Dat.Sg	 * ) )	_	
16	t8032_000	zehen	CARDA	zëhen	Masc.Akk.Pl.0	(NX *	_	
17	t8033_000	pfenninge	NA	pfènning	Akk.Pl	 * )	_	
18	t8034_000	-	$_	_	_	 * )	_	
19	t8035_000	und	KON	unte	_	(Frag *	_	
20	t8036_000	niht	PTKNEG	niht	_	 *	_	
21	t8037_000	mêr	ADJA	mêr(e)	Comp.Neut.Akk.Sg.0	 *	_	
22	t8038_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8039_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8040_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t8041_000	ie	AVD	iè	_	(MF *	_	
4	t8042_000	ûz	APPR	ûz	_	(PPX *	_	
5	t8043_000	einem	CARDA	èin	Neut.Dat.Sg.st	(NX *	_	
6	t8044_000	malter	NA	malter	Dat.Sg	 * ) )	_	
7	t8045_000	werden	VAINF	wërden	_	(VX * )	_	
8	t8046_000	vier	CARDA	vièr	Neut.Nom.Pl.0	 *	_	
9	t8047_000	und	KON	unte	_	 *	_	
10	t8048_000	vünvzic	CARDA	vünv-zig	Neut.Nom.Pl.0	(NX *	_	
11	t8049_000	wastel	NA	wastël	Nom.Pl	 * ) )	_	
12	t8050_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8051_000	die	DDS	dër	Neut.Nom.Pl	(S (Frag (NX * )	_	
2	t8052_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(VX *	_	
3	t8053_000	gewegen	VVPP	wëgen	_	 * )	_	
4	t8054_000	sîn	VAINF	sîn	_	(VX * )	_	
5	t8055_000	mit	APPR	mit	_	(PPX *	_	
6	t8056_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
7	t8057_000	gewihte	NA	ge-wihte	Dat.Sg	 * ) )	_	
8	t8058_000	-	$_	_	_	 * )	_	
9	t8059_000	dâ	PAVD	dâr/.+mit(e)	_	(Frag *	_	
10	t8060_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
11	t8061_000	daz	DDART	dër	Neut.Akk.Sg	(PreF (NX *	_	
12	t8062_000	îtel	ADJA	îtel	Pos.Neut.Akk.Sg.0	 *	_	
13	t8063_000	rüggîn	ADJA	rüggîn	Pos.Neut.Akk.Sg.0	 *	_	
14	t8064_000	koufbrôt	NA	kouf-brôt	Akk.Sg	 * ) )	_	
15	t8065_000	mit	PAVAP	mit(e)/dâr.+	_	(LB (VX *	_	
16	t8066_000	wiget	VVFIN	wëgen	Ind.Pres.Sg.3	 * ) )	_	
17	t8067_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8068_000	und	KON	unte	_	(S (Frag *	_	
2	t8069_000	ouch	AVD	ouch	_	 *	_	
3	t8070_000	swelich	DGA	swèl(i)ch	Masc.Nom.Sg.0	(NX *	_	
4	t8071_000	pfister	NA	pfister	Nom.Sg	 * )	_	
5	t8072_000	minner	ADJA	minner	Comp.Neut.Akk.Sg.0	 *	_	
6	t8073_000	brôtes	NA	brôt	Gen.Sg	(PreF (NX * ) )	_	
7	t8074_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t8075_000	-	$_	_	_	 * )	_	
9	t8076_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t8077_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t8078_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) )	_	
12	t8079_000	ervüllen	VVINF	er-vüllen	_	(RB (VX * ) )	_	
13	t8080_000	in	APPR	in	_	(PostF (PPX *	_	
14	t8081_000	drîen	CARDA	drî	*.Dat.Pl.st	(NX *	_	
15	t8082_000	tagen	NA	tag	Dat.Pl	 * ) ) )	_	
16	t8083_000	-	$_	_	_	 * )	_	
17	t8084_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
18	t8085_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t8086_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
20	t8087_000	zwirent	AVD	zwir(e)n(t)	_	 *	_	
21	t8088_000	als	AVD	all-sô	_	 *	_	
22	t8089_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
23	t8090_000	brôtes	NA	brôt	Gen.Sg	(NX * ) ) )	_	
24	t8091_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
25	t8092_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8093_000	tæte	VVFIN	tuon	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t8094_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
3	t8095_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
4	t8096_000	niht	NA	niht	Akk.Sg	(NX * ) )	_	
5	t8097_000	-	$_	_	_	 * )	_	
6	t8098_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
7	t8099_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
8	t8100_000	danne	AVD	danne	_	 *	_	
9	t8101_000	zuo	APPR	ze	_	(PPX *	_	
10	t8102_000	klage	NA	klage	Dat.Sg	(NX *	_	
11	t8103_000	vore	APPR	vor(e)	_	(PPX *	_	
12	t8104_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
13	t8105_000	râte	NA	rât	Dat.Sg	 * ) ) ) ) )	_	
14	t8106_000	-	$_	_	_	 * )	_	
15	t8107_000	sô	AVD	sô	_	(Cl (PreF * )	_	
16	t8108_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t8109_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
18	t8110_000	pfister	NA	pfister	Nom.Sg	 * )	_	
19	t8111_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
20	t8112_000	râte	NA	rât	Dat.Sg	 * )	_	
21	t8113_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(NX *	_	
22	t8114_000	pfenninge	NA	pfènning	Akk.Pl	 *	_	
23	t8115_000	zuo	APPR	ze	_	(PPX *	_	
24	t8116_000	bezzerunge	NA	bèzzerunge	Dat.Sg	(NX * ) ) ) )	_	
25	t8117_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
26	t8118_000	-	$_	_	_	 * )	_	
27	t8119_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
28	t8120_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
29	t8121_000	einen	CARDA	èin	Masc.Akk.Sg.st	(MF (NX *	_	
30	t8122_000	mânden	NA	mând(e)	Akk.Sg	 * )	_	
31	t8123_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
32	t8124_000	stat	NA	stat	Akk.Sg	 * ) )	_	
33	t8125_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
34	t8126_000	âne	APPR	âne	_	(PostF (PPX *	_	
35	t8127_000	alle	DIA	all	Fem.Akk.Sg.st	(NX *	_	
36	t8128_000	genâde	NA	ge-nâde	Akk.Sg	 * ) ) )	_	
37	t8129_000	-	$_	_	_	 * )	_	
38	t8130_000	und	KON	unte	_	(Cl (PrePreF * )	_	
39	t8131_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
40	t8132_000	doch	AVD	doh	_	(MF *	_	
41	t8133_000	daz	DDART	dër	Neut.Nom.Sg	(NX *	_	
42	t8134_000	brôt	NA	brôt	Nom.Sg	 * )	_	
43	t8135_000	vore	AVD	vor(e)	_	 *	_	
44	t8136_000	ervüllet	VVPP	er-vüllen	_	(VX * )	_	
45	t8137_000	sîn	VAINF	sîn	_	(VX * ) )	_	
46	t8138_000	-	$_	_	_	 * )	_	
47	t8139_000	als	KO*	all-sô	_	(Frag *	_	
48	t8140_000	iezunt	AVD	iè-zunt	_	 *	_	
49	t8141_000	geredet	VVPP	rèden	_	(VX *	_	
50	t8142_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
51	t8143_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8144_000	geschihet	VVFIN	ge-schëhen	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t8145_000	ouch	AVD	ouch	_	(MF * )	_	
3	t8146_000	-	$_	_	_	 *	_	
4	t8147_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
5	t8148_000	ein	DIART	èin	Masc.Nom.Sg.0	(MF (NX *	_	
6	t8149_000	pfister	NA	pfister	Nom.Sg	 * )	_	
7	t8150_000	iemanne	DIA	iè-mann	*.Dat.Sg.st	 *	_	
8	t8151_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
9	t8152_000	bac	NA	back	Akk.Sg	 * ) )	_	
10	t8153_000	verwarlôset	VVFIN	ver-war-lôsen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
11	t8154_000	-	$_	_	_	 * ) ) )	_	
12	t8155_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t8156_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t8157_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
15	t8158_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
16	t8159_000	andern	DIA	ander	Masc.Akk.Sg.st	 *	_	
17	t8160_000	bac	NA	back	Akk.Sg	 * ) )	_	
18	t8161_000	backen	VVINF	backen	_	(RB (VX * ) )	_	
19	t8162_000	in	APPR	in	_	(PostF (PPX *	_	
20	t8163_000	drîen	CARDA	drî	*.Dat.Pl.st	(NX *	_	
21	t8164_000	tagen	NA	tag	Dat.Pl	 *	_	
22	t8165_000	zuo	APPR	ze	_	(PPX *	_	
23	t8166_000	rehte	NA	rëht	Dat.Sg	(NX * ) ) ) ) )	_	
24	t8167_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8168_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t8169_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
3	t8170_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
4	t8171_000	niht	NA	niht	Akk.Sg	(NX * ) )	_	
5	t8172_000	-	$_	_	_	 * )	_	
6	t8173_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t8174_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t8175_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
9	t8176_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
10	t8177_000	stat	NA	stat	Akk.Sg	 * ) )	_	
11	t8178_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
12	t8179_000	einen	CARDA	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
13	t8180_000	mânden	NA	mând(e)	Akk.Sg	 * ) )	_	
14	t8181_000	-	$_	_	_	 * )	_	
15	t8182_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
16	t8183_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t8184_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(MF (NX *	_	
18	t8185_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
19	t8186_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
20	t8187_000	halbe	AVD	halbe	_	(PostF *	_	
21	t8188_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
22	t8189_000	râte	NA	rât	Dat.Sg	 * ) )	_	
23	t8190_000	-	$_	_	_	 *	_	
24	t8191_000	und	KON	unte	_	(Frag *	_	
25	t8192_000	halbe	AVD	halbe	_	 *	_	
26	t8193_000	dem	DDS	dër	Masc.Dat.Sg	(NX * )	_	
27	t8194_000	-	$_	_	_	 *	_	
28	t8195_000	des	DRELS	dër	Masc.Gen.Sg	(Cl (LB (NX * ) )	_	
29	t8196_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
30	t8197_000	brôt	NA	brôt	Nom.Sg	 * ) )	_	
31	t8198_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX *	_	
32	t8199_000	gewesen	VAPP	wësen	_	 * ) )	_	
33	t8200_000	-	$_	_	_	 * ) ) )	_	
34	t8201_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8202_000	swelich	DGA	swèl(i)ch	Masc.Nom.Sg.0	(S (Frag (NX *	_	
2	t8203_000	pfister	NA	pfister	Nom.Sg	 * )	_	
3	t8204_000	heimbacken	ADJA	hèim-backen	Pos.Neut.Akk.Sg.0	(PreF (NX *	_	
4	t8205_000	brôt	NA	brôt	Akk.Sg	 * ) )	_	
5	t8206_000	becket	VVFIN	backen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t8207_000	ungewegen	AVD	un-ge-wëgen	_	(MF * )	_	
7	t8208_000	-	$_	_	_	 * )	_	
8	t8209_000	oder	KON	oder	_	(Frag *	_	
9	t8210_000	swer	PG	swër	Masc.Nom.Sg.st	(NX * )	_	
10	t8211_000	daz	DDS	dër	Neut.Akk.Sg	(NX * )	_	
11	t8212_000	in	PPER	ër	*.Dat.Pl.3	(PreF (NX * ) )	_	
12	t8212_001	nimet	VVFIN	nëmen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t8213_000	ungewegen	AVD	un-ge-wëgen	_	(MF * )	_	
14	t8214_000	-	$_	_	_	 * )	_	
15	t8215_000	der	DDS	dër	*.Gen.Pl	(Cl (PreF (NX * ) )	_	
16	t8216_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t8217_000	iegelîcher	DIS	iè-ge-lich	Masc.Nom.Sg.st	(MF (NX * )	_	
18	t8218_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(NX *	_	
19	t8219_000	schillinge	NA	schilling	Akk.Pl	 *	_	
20	t8220_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
21	t8221_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
22	t8222_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8223_000	swem	PG	swër	Masc.Dat.Sg.st	(S (Frag (NX * )	_	
2	t8224_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
3	t8225_000	ouch	AVD	ouch	_	 *	_	
4	t8226_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
5	t8227_000	teschern	NA	tèschære	Akk.Sg	 * )	_	
6	t8228_000	-	$_	_	_	 * )	_	
7	t8229_000	oder	KON	oder	_	(Frag *	_	
8	t8230_000	zwêne	CARDS	zwêne	Masc.Akk.Pl.st	(NX * )	_	
9	t8231_000	-	$_	_	_	 * )	_	
10	t8232_000	oder	KON	oder	_	(Frag *	_	
11	t8233_000	kuochelech	NA	kuochelech	Akk.Sg	(NX * )	_	
12	t8234_000	sînen	DPOSA	sîn	*.Dat.Pl.st	(PreF (NX *	_	
13	t8235_000	kinden	NA	kind	Dat.Pl	 *	_	
14	t8236_000	mit	APPR	mit	_	(PPX *	_	
15	t8237_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
16	t8238_000	brôte	NA	brôt	Dat.Sg	 * ) ) ) )	_	
17	t8239_000	bringet	VVFIN	bringen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
18	t8240_000	-	$_	_	_	 * )	_	
19	t8241_000	swaz	PG	swër	Neut.Akk.Sg.st	(Frag (NX * )	_	
20	t8242_000	die	DDS	dër	Masc,Neut.Nom.Pl	(PreF (NX * ) )	_	
21	t8243_000	wegen	VVFIN	wëgen	*.Pres.Pl.3	(LB (VX * ) )	_	
22	t8244_000	-	$_	_	_	 * )	_	
23	t8245_000	als	AVD	all-sô	_	(Cl (PreF *	_	
24	t8246_000	vile	AVD	vil(e)	_	 * )	_	
25	t8247_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
26	t8248_000	dem	DDART	dër	Masc.Dat.Sg	(MF (NX *	_	
27	t8249_000	pfister	NA	pfister	Dat.Sg	 * ) )	_	
28	t8250_000	abe	PTKVZ	abe/+gân	_	(RB (VX *	_	
29	t8251_000	gên	VVINF	gân/abe+	_	 * ) )	_	
30	t8252_000	an	APPR	ane	_	(PostF (PPX *	_	
31	t8253_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
32	t8254_000	gewihte	NA	ge-wihte	Dat.Sg	 * ) ) )	_	
33	t8255_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8256_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t8257_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t8258_000	heimbacken	ADJA	hèim-backen	Pos.Neut.Dat.Sg.0	 *	_	
4	t8259_000	gemischeten	ADJA	ge-mischet	Pos.Neut.Dat.Sg.wk	 *	_	
5	t8260_000	brôte	NA	brôt	Dat.Sg	 * ) )	_	
6	t8261_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8262_000	swem	PG	swër	Masc.Dat.Sg.st	(S (Frag (NX * )	_	
2	t8263_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
3	t8264_000	aber	AVD	aber	_	(PreF * )	_	
4	t8265_000	gemischet	ADJA	ge-mischet	Pos.Neut.Akk.Sg.0	(NX *	_	
5	t8266_000	brôt	NA	brôt	Akk.Sg	 * )	_	
6	t8267_000	hin	AVD	hin(e)	_	(PreF *	_	
7	t8268_000	heim	AVD	hèim	_	 * )	_	
8	t8269_000	becket	VVFIN	backen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t8270_000	-	$_	_	_	 * )	_	
10	t8271_000	dem	DDS	dër	Masc.Dat.Sg	(Cl (PreF (NX * ) )	_	
11	t8272_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t8273_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
13	t8274_000	als	AVD	all-sô	_	 *	_	
14	t8275_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
15	t8276_000	brôtes	NA	brôt	Gen.Sg	(NX * ) ) )	_	
16	t8277_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
17	t8278_000	-	$_	_	_	 *	_	
18	t8279_000	als	KO*	all-sô	_	(Frag *	_	
19	t8280_000	daz	DDART	dër	Neut.Nom.Sg	(PreF (NX *	_	
20	t8281_000	rüggîn	ADJA	rüggîn	Pos.Neut.Nom.Sg.0	 *	_	
21	t8282_000	heimbacken	ADJA	hèim-backen	Pos.Neut.Nom.Sg.0	 *	_	
22	t8283_000	brôt	NA	brôt	Nom.Sg	 *	_	
23	t8284_000	an	APPR	ane	_	(PPX *	_	
24	t8285_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
25	t8286_000	zal	NA	zal(e)	Dat.Sg	 * ) ) ) )	_	
26	t8287_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
27	t8288_000	-	$_	_	_	 * )	_	
28	t8289_000	und	KON	unte	_	(Frag *	_	
29	t8290_000	ouch	AVD	ouch	_	 *	_	
30	t8291_000	mit	APPR	mit	_	(PPX *	_	
31	t8292_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
32	t8293_000	selben	DDA	sëlb	Neut.Dat.Sg.wk	 *	_	
33	t8294_000	gewihte	NA	ge-wihte	Dat.Sg	 * ) )	_	
34	t8295_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8296_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t8297_000	leibînem	ADJA	lèibîn	Pos.Neut.Dat.Sg.st	(NX *	_	
3	t8298_000	brôte	NA	brôt	Dat.Sg	 * ) )	_	
4	t8299_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8300_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t8301_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t8302_000	ouch	AVD	ouch	_	(MF *	_	
4	t8303_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 *	_	
5	t8304_000	kein	DIA	kèin	Neut.Akk.Sg.0	(NX *	_	
6	t8305_000	leibîn	ADJA	lèibîn	Pos.Neut.Akk.Sg.0	 *	_	
7	t8306_000	brôt	NA	brôt	Akk.Sg	 *	_	
8	t8307_000	ûf	APPR	ûf	_	(PPX *	_	
9	t8308_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
10	t8309_000	kouf	NA	kouf	Akk.Sg	 * ) ) ) )	_	
11	t8310_000	backen	VVINF	backen	_	(RB (VX * ) )	_	
12	t8311_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8312_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t8313_000	leibîn	ADJA	lèibîn	Pos.Neut.Akk.Sg.0	(NX *	_	
3	t8314_000	brôt	NA	brôt	Akk.Sg	 * )	_	
4	t8315_000	ezzen	VVINF	ëzzen	_	(PreF (VX (VX * )	_	
5	t8316_000	oder	KON	oder	_	 *	_	
6	t8317_000	haben	VAINF	haben	_	(VX * ) ) )	_	
7	t8318_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t8319_000	-	$_	_	_	 * )	_	
9	t8320_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t8321_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t8322_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
12	t8323_000	in	APPR	in	_	(PPX *	_	
13	t8324_000	sînem	DPOSA	sîn	Neut.Dat.Sg.st	(NX *	_	
14	t8325_000	hûse	NA	hûs	Dat.Sg	 * ) ) ) )	_	
15	t8326_000	lâzen	VVINF	lâzen	_	(RB (VX * ) )	_	
16	t8327_000	bereiten	VVINF	be-rèiten	_	(PostF (VX * ) )	_	
17	t8328_000	-	$_	_	_	 * )	_	
18	t8329_000	und	KON	unte	_	(Cl (PrePreF * )	_	
19	t8330_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t8331_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) )	_	
21	t8332_000	schicken	VVINF	schicken	_	(RB (VX * ) )	_	
22	t8333_000	zuo	APPR	ze	_	(PostF (PPX *	_	
23	t8334_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
24	t8335_000	ovene	NA	oven	Dat.Sg	 * ) ) )	_	
25	t8336_000	-	$_	_	_	 * )	_	
26	t8337_000	und	KON	unte	_	(Cl (PrePreF * )	_	
27	t8338_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
28	t8339_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
29	t8340_000	oder	KON	oder	_	 *	_	
30	t8341_000	sîn	DPOSA	sîn	Masc.Nom.Sg.0	(NX *	_	
31	t8342_000	bote	NA	bote	Nom.Sg	 * )	_	
32	t8343_000	dâ	PAVD	dâr/+bî	_	(VX *	_	
33	t8344_000	bî	PAVAP	bî/dâr+	_	 *	_	
34	t8345_000	sîn	VAINF	sîn	_	 * ) )	_	
35	t8346_000	-	$_	_	_	 *	_	
36	t8347_000	biz	KOUS	biz	_	(PostF (Cl (LB * )	_	
37	t8348_000	daz	DDS	dër	Neut.Nom.Sg	(MF (NX * ) )	_	
38	t8349_000	gebecket	VVFIN	ge-bècken	Ind.Pres.Sg.3	(RB (VX * ) )	_	
39	t8350_000	-	$_	_	_	 *	_	
40	t8351_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
41	t8352_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
42	t8353_000	rehte	AVD	rëhte	_	 * )	_	
43	t8354_000	geschehe	VVFIN	ge-schëhen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
44	t8355_000	-	$_	_	_	 * ) ) ) )	_	
45	t8356_000	wanne	KO*	wante	_	(Frag *	_	
46	t8357_000	daz	DDS	dër	Neut.Nom.Sg	(PreF (NX * ) )	_	
47	t8358_000	belîbet	VVFIN	be-lîben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
48	t8359_000	âne	APPR	âne	_	(MF (PPX *	_	
49	t8360_000	gewihte	NA	ge-wihte	Akk.Sg	(NX * ) ) )	_	
50	t8361_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8362_000	durch	APPR	durh	_	(S (Frag (PPX *	_	
2	t8363_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
3	t8364_000	pfister	NA	pfister	Gen.Pl	 * ) )	_	
4	t8365_000	willen	NA	wille	Akk.Sg	(NX * )	_	
5	t8366_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8367_000	wizzet	VVIMP	wizzen	Pl.2	(S (Cl (LB (VX * ) )	_	
2	t8368_000	ouch	AVD	ouch	_	(MF * )	_	
3	t8369_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8370_000	ob	KOUS	obe	_	(S (Cl (LB * )	_	
2	t8371_000	iht	NA	iht	Nom.Sg	(MF (NX * ) )	_	
3	t8372_000	geschehen	VVPP	ge-schëhen	_	(RB (VX *	_	
4	t8373_000	wære	VAFIN	wësen	Subj.Past.Sg.3	 * ) )	_	
5	t8374_000	armen	ADJA	arm	Pos.*.Dat.Pl..%.*	(PostF *	_	
6	t8375_000	oder	KON	oder	_	 *	_	
7	t8376_000	rîchen	ADJA	rîche	Pos.*.Dat.Pl..%.*	 * )	_	
8	t8377_000	-	$_	_	_	 *	_	
9	t8378_000	von	APPR	von	_	(Frag (PPX *	_	
10	t8379_000	keineme	DIA	kèin	Masc.Dat.Sg.st	(NX *	_	
11	t8380_000	pfister	NA	pfister	Dat.Sg	 * ) )	_	
12	t8381_000	biz	AVD	biz/+hër(e)	_	 *	_	
13	t8382_000	her	PAVAP	hër(e)/biz+	_	 *	_	
14	t8383_000	-	$_	_	_	 * )	_	
15	t8384_000	von	APPR	von	_	(Frag (PPX *	_	
16	t8385_000	backennes	NA	backen	Gen.Sg	(NX * ) )	_	
17	t8386_000	wegen	NA	wëg	Dat.Pl	(NX * )	_	
18	t8387_000	-	$_	_	_	 * ) )	_	
19	t8388_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
20	t8389_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t8390_000	vürebaz	AVD	vür(e)-bazz	_	(MF *	_	
22	t8391_000	nieman	DIA	niè-mann	*.Nom.Sg.st	 * )	_	
23	t8392_000	rechen	VVINF	rëchen	_	(RB (VX * ) )	_	
24	t8393_000	-	$_	_	_	 *	_	
25	t8394_000	mit	APPR	mit	_	(Frag (PPX *	_	
26	t8395_000	gerihte	NA	ge-riht(e)	Dat.Sg	(NX * ) )	_	
27	t8396_000	oder	KON	oder	_	 *	_	
28	t8397_000	âne	APPR	âne	_	(PPX *	_	
29	t8398_000	gerihte	NA	ge-riht(e)	Akk.Sg	(NX * ) )	_	
30	t8399_000	-	$_	_	_	 * )	_	
31	t8400_000	mit	APPR	mit	_	(Frag (PPX *	_	
32	t8401_000	worten	NA	wort	Dat.Pl	(NX * ) )	_	
33	t8402_000	noch	KON	noh	_	 *	_	
34	t8403_000	mit	APPR	mit	_	(PPX *	_	
35	t8404_000	werken	NA	wërk	Dat.Pl	(NX * ) )	_	
36	t8405_000	-	$_	_	_	 * )	_	
37	t8406_000	âne	APPR	âne	_	(Frag (PPX *	_	
38	t8407_000	aller	DIA	all	*.Gen.Pl.st	(NX *	_	
39	t8407_001	slahte	NA	slaht	Gen.Pl	 * ) )	_	
40	t8408_000	geværde	NA	ge-vær(e)de	Akk.Sg	(NX * )	_	
41	t8409_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8410_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t8411_000	spile	NA	spil	Dat.Sg	(NX * ) )	_	
3	t8412_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8413_000	swenne	AVG	swanne	_	(S (Cl (LB * )	_	
2	t8414_000	ouch	AVD	ouch	_	(MF *	_	
3	t8415_000	nû	AVD	nû	_	 *	_	
4	t8416_000	vile	NA	vil(e)	Nom.Pl	(NX * )	_	
5	t8417_000	boeser	ADJA	boèse	Pos.*.Gen.Pl.st	 *	_	
6	t8418_000	-	$_	_	_	 *	_	
7	t8419_000	üppiger	ADJA	üppig	Pos.*.Gen.Pl.st	 *	_	
8	t8420_000	-	$_	_	_	 *	_	
9	t8421_000	verlâzener	ADJA	ver-lâzen	Pos.*.Gen.Pl.st	 *	_	
10	t8422_000	-	$_	_	_	 *	_	
11	t8423_000	schamelîcher	ADJA	scham(e)-lich	Pos.*.Gen.Pl.st	 *	_	
12	t8424_000	und	KON	unte	_	 *	_	
13	t8425_000	unredelîcher	ADJA	un-rède-lich	Pos.*.Gen.Pl.st	(NX *	_	
14	t8426_000	eide	NA	èid	Gen.Pl	 * ) )	_	
15	t8427_000	gesworen	VVPP	swèr(e)n	_	(RB (VX *	_	
16	t8428_000	werden	VAFIN	wërden	Ind.Pres.Pl.3	 * ) )	_	
17	t8429_000	-	$_	_	_	 *	_	
18	t8430_000	und	KON	unte	_	(Frag *	_	
19	t8431_000	besunderlîche	AVD	be-sunter-lîche	_	(PreF * )	_	
20	t8432_000	des	DDS	dër	Neut.Gen.Sg	(NX *	_	
21	t8433_000	von	APPR	von	_	(PPX *	_	
22	t8434_000	spiles	NA	spil	Gen.Sg	(NX * ) ) )	_	
23	t8435_000	wegen	NA	wëg	Dat.Pl	(NX * )	_	
24	t8436_000	vile	NA	vil(e)	Nom.Sg	(PreF (NX * ) )	_	
25	t8437_000	geschiet	VVFIN	ge-schëhen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
26	t8438_000	-	$_	_	_	 * )	_	
27	t8439_000	hier	AVD	hièr	_	(Frag *	_	
28	t8440_000	mêr	ADJA	mêr(e)	Comp.Neut.Nom.Sg.0	 *	_	
29	t8441_000	denne	KOKOM	danne	_	 *	_	
30	t8442_000	in	APPR	in	_	(PPX *	_	
31	t8443_000	andern	DIA	ander	*.Dat.Pl.st	(NX *	_	
32	t8444_000	steten	NA	stat	Dat.Pl	 * ) )	_	
33	t8445_000	-	$_	_	_	 * ) )	_	
34	t8446_000	sô	AVD	sô	_	(Cl (PreF * )	_	
35	t8447_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
36	t8448_000	zuo	APPR	ze	_	(MF (PPX *	_	
37	t8449_000	bedenkenne	NA	be-dènken	Dat.Sg	(NX * ) ) )	_	
38	t8450_000	-	$_	_	_	 *	_	
39	t8451_000	daz	KOUS	dazz	_	(PostF (Frag *	_	
40	t8452_000	unsers	DPOSA	unser	Masc.Gen.Sg.st	(NX *	_	
41	t8453_000	hêrren	NA	hêrre	Gen.Sg	 *	_	
42	t8453_001	gotes	NA	got	Gen.Sg	 * )	_	
43	t8454_000	plâge	NA	plâge	Nom.Sg	(NX * )	_	
44	t8455_000	-	$_	_	_	 *	_	
45	t8456_000	die	DRELS	dër	Fem.Nom.Sg	(NX (Cl (LB (NX * ) )	_	
46	t8457_000	uns	PPER	wir	Akk.Pl.1	(MF (NX * )	_	
47	t8458_000	und	KON	unte	_	 *	_	
48	t8459_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
49	t8460_000	lant	NA	lant	Akk.Sg	 * ) )	_	
50	t8461_000	übergangen	VVPP	über-gân	_	(RB (VX *	_	
51	t8462_000	hât	VAFIN	haben	Ind.Pres.Sg.3	 * ) )	_	
52	t8463_000	mit	APPR	mit	_	(PostF (PPX *	_	
53	t8464_000	wazzer	NA	wazzer	Dat.Sg	(NX * ) ) ) ) ) ) ) )	_	
54	t8465_000	daz	DDART	dër	Neut.Nom.Sg	(Frag (NX *	_	
55	t8466_000	mêrer	ADJA	mêr(e)	Comp.Neut.Nom.Sg.0	 *	_	
56	t8466_001	teil	NA	tèil	Nom.Sg	 * )	_	
57	t8467_000	dâ	PAVD	dâr/+von(e)	_	(VX *	_	
58	t8468_000	von	PAVAP	von(e)/dâr+	_	 * )	_	
59	t8469_000	geschehen	VVPP	ge-schëhen	_	(VX *	_	
60	t8470_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	 * )	_	
61	t8471_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8472_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t8473_000	wær	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
3	t8474_000	daz	DDART	dër	Neut.Nom.Sg	(MF *	_	
4	t8475_000	minneste	ADJA	minnest	Sup.Neut.Nom.Sg.wk	 * )	_	
5	t8476_000	wen daz	KOUS	wan~dazz	_	(PostF (Cl (LB * )	_	
6	t8477_000	unser	DPOSA	unser	Masc.Nom.Sg.0	(MF (NX *	_	
7	t8478_000	hêrre	NA	hêrre	Nom.Sg	 *	_	
8	t8478_001	got	NA	got	Nom.Sg	 *	_	
9	t8479_000	zuo	APPR	ze	_	(PPX *	_	
10	t8480_000	aller	DIA	all	Fem.Dat.Sg.st	(NX *	_	
11	t8481_000	zît	NA	zît	Dat.Sg	 *	_	
12	t8482_000	ze	APPR	ze	_	(PPX *	_	
13	t8482_001	vürhtenne	NA	vürhten	Dat.Sg	(NX * ) ) ) ) ) )	_	
14	t8483_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX * ) )	_	
15	t8484_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8485_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8486_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t8487_000	zuo	APPR	ze	_	(MF (PPX *	_	
4	t8488_000	besorgenne	NA	be-sorgen	Dat.Sg	(NX * ) ) )	_	
5	t8489_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
6	t8490_000	uns	PPER	wir	Dat.Pl.1	(MF (NX * )	_	
7	t8491_000	got	NA	got	Nom.Sg	(NX * )	_	
8	t8492_000	aber	AVD	aber	_	 *	_	
9	t8493_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
10	t8494_000	swærlîcher	ADJA	swær-lich	Pos.Fem.Gen.Sg.st	(NX *	_	
11	t8495_000	plâge	NA	plâge	Gen.Sg	 * ) )	_	
12	t8496_000	-	$_	_	_	 *	_	
13	t8497_000	dâ	PAVD	dâr/+von(e)	_	 *	_	
14	t8498_000	von	PAVAP	von(e)/dâr+	_	 *	_	
15	t8499_000	zuo	APPR	ze	_	(PPX *	_	
16	t8500_000	einere	CARDS	èin	Fem.Dat.Sg.st	(NX * ) ) )	_	
17	t8501_000	stüre	VVFIN	stür(e)n	Subj.Pres.Sg.3	(RB (VX * ) )	_	
18	t8502_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
19	t8503_000	uns	PPER	wir	Dat.Pl.1	(MF (NX * )	_	
20	t8504_000	got	NA	got	Nom.Sg	(NX * )	_	
21	t8505_000	allen	DIS	all	*.Dat.Pl..~.~.st	(NX * ) )	_	
22	t8506_000	helfe	VVFIN	hëlfen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
23	t8507_000	-	$_	_	_	 *	_	
24	t8508_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
25	t8509_000	wir	PPER	wir	Nom.Pl.1	(MF (NX * )	_	
26	t8510_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) )	_	
27	t8511_000	verkomen	VVFIN	ver-komen	*.Pres.Pl.1	(RB (VX * ) )	_	
28	t8512_000	-	$_	_	_	 *	_	
29	t8513_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
30	t8514_000	uns	PPER	wir	Dat.Pl.1	(MF (NX *	_	
31	t8515_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
32	t8516_000	niemer	AVD	nièmer	_	 *	_	
33	t8517_000	mêr	AVD	mêr(e)	Comp	 *	_	
34	t8518_000	kein	DIA	kèin	Fem.Nom.Sg.0	(NX *	_	
35	t8519_000	nôt	NA	nôt	Nom.Sg	 * ) )	_	
36	t8520_000	geschehe	VVFIN	ge-schëhen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
37	t8521_000	-	$_	_	_	 * ) ) ) ) ) ) ) ) )	_	
38	t8522_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8523_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t8524_000	verbiutet	VVFIN	ver-bièten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t8525_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
4	t8526_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
5	t8527_000	buoben	NA	buobe	Dat.Pl	 *	_	
6	t8528_000	aller	DIA	all	*.Gen.Pl.st	(NX *	_	
7	t8529_000	leie	NA	lèie	Gen.Pl	 * ) )	_	
8	t8530_000	würfelspil	NA	würfel-spil	Akk.Sg	(NX *	_	
9	t8531_000	in	APPR	in	_	(PPX *	_	
10	t8532_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
11	t8533_000	wînhoven	NA	wîn-hov	Dat.Pl	 * ) ) ) )	_	
12	t8534_000	-	$_	_	_	 *	_	
13	t8535_000	und	KON	unte	_	(Frag *	_	
14	t8536_000	an	APPR	ane	_	(PPX *	_	
15	t8537_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
16	t8538_000	steten	NA	stat	Dat.Pl	 * ) ) ) )	_	
17	t8539_000	dâ	AVD	dâr	_	(PreF * )	_	
18	t8540_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
19	t8541_000	wîn	NA	wîn	Akk.Sg	(PreF (NX * ) )	_	
20	t8542_000	schenket	VVFIN	schènken	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t8543_000	-	$_	_	_	 *	_	
22	t8544_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
23	t8545_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
24	t8546_000	in	APPR	in	_	(MF (PPX *	_	
25	t8547_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
26	t8548_000	stat	NA	stat	Dat.Sg	 * ) ) )	_	
27	t8549_000	-	$_	_	_	 *	_	
28	t8550_000	oder	KON	oder	_	(Frag *	_	
29	t8551_000	dâr	PAVD	dâr/+vor(e)	_	 *	_	
30	t8552_000	vore	PAVAP	vor(e)/dâr+	_	 *	_	
31	t8553_000	-	$_	_	_	 * )	_	
32	t8554_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
33	t8555_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
34	t8556_000	rennewege	NA	rènne-wëg	Dat.Sg	 * ) )	_	
35	t8557_000	-	$_	_	_	 * )	_	
36	t8558_000	ûf	APPR	ûf	_	(Frag *	_	
37	t8559_000	Sanderanger	_	Sander-anger	Dat.Sg	 *	_	
38	t8560_000	-	$_	_	_	 * )	_	
39	t8561_000	ûf	APPR	ûf	_	(Frag *	_	
40	t8562_000	dem	DDART	dër	Masc.Dat.Sg	 *	_	
41	t8563_000	Schottenanger	_	Schotten-anger	Dat.Sg	 *	_	
42	t8564_000	-	$_	_	_	 * )	_	
43	t8565_000	hinder	APPR	hinter	_	(Frag (PPX *	_	
44	t8566_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
45	t8567_000	münster	NA	münster	Dat.Sg	 * ) )	_	
46	t8568_000	-	$_	_	_	 * )	_	
47	t8569_000	in	APPR	in	_	(Frag (PPX *	_	
48	t8569_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
49	t8570_000	kriuzegange	NA	kriuze-gang	Dat.Sg	 * ) )	_	
50	t8571_000	-	$_	_	_	 * )	_	
51	t8572_000	an	APPR	ane	_	(Frag (PPX *	_	
52	t8573_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
53	t8574_000	grêden	NA	grêde	Dat.Pl	 * ) )	_	
54	t8575_000	überal	AVD	über-all	_	 *	_	
55	t8576_000	-	$_	_	_	 * )	_	
56	t8577_000	an	APPR	ane	_	(Frag (PPX *	_	
57	t8578_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
58	t8579_000	markete	NA	market	Dat.Sg	 * ) )	_	
59	t8580_000	-	$_	_	_	 * )	_	
60	t8581_000	in	APPR	in	_	(Frag (PPX *	_	
61	t8582_000	allen	DIA	all	*.Dat.Pl.st	(NX *	_	
62	t8583_000	gazzen	NA	gazze	Dat.Pl	 * ) )	_	
63	t8584_000	-	$_	_	_	 * )	_	
64	t8585_000	und	KON	unte	_	(Frag *	_	
65	t8586_000	ouch	AVD	ouch	_	 *	_	
66	t8587_000	allenthalben	AVD	allen-halb(en)	_	 *	_	
67	t8588_000	-	$_	_	_	 * )	_	
68	t8589_000	als	KO*	all-sô	_	(Frag *	_	
69	t8590_000	wît	ADJD	wît	Pos....0	 *	_	
70	t8591_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
71	t8592_000	vore	APPR	vor(e)	_	 *	_	
72	t8593_000	oder	KON	oder	_	 *	_	
73	t8594_000	in	APPR	in	_	(PreF (PPX *	_	
74	t8595_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
75	t8596_000	stat	NA	stat	Dat.Sg	 * ) ) )	_	
76	t8597_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
77	t8598_000	âne	APPR	âne	_	(MF (PPX *	_	
78	t8599_000	geværde	NA	ge-vær(e)de	Akk.Sg	(NX * ) ) )	_	
79	t8600_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8601_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t8602_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t8603_000	boesen	ADJA	boèse	Pos.*.Dat.Pl.*	 *	_	
4	t8604_000	eiden	NA	èid	Dat.Pl	 * ) )	_	
5	t8605_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8606_000	dâr	PAVD	dâr/+nâh	_	(S (Cl (LB (VX *	_	
2	t8607_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
3	t8608_000	verbiutet	VVFIN	ver-bièten	Ind.Pres.Sg.3	 * ) )	_	
4	t8609_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
5	t8610_000	ouch	AVD	ouch	_	 *	_	
6	t8611_000	allermannegelîch	PI	aller-manne-ge-lîch	0.Dat.Sg..m.f.n.%	(NX * ) )	_	
7	t8612_000	-	$_	_	_	 * )	_	
8	t8613_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
9	t8614_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
10	t8615_000	vrouwe	NA	vrouwe	Nom.Sg	(MF (NX * )	_	
11	t8616_000	oder	KON	oder	_	 *	_	
12	t8617_000	man	NA	mann	Nom.Sg	(NX * ) )	_	
13	t8618_000	-	$_	_	_	 *	_	
14	t8619_000	rîche	ADJD	rîche	Pos....0	(Frag *	_	
15	t8620_000	oder	KON	oder	_	 *	_	
16	t8621_000	arm	ADJD	arm	Pos....0	 *	_	
17	t8622_000	-	$_	_	_	 * )	_	
18	t8623_000	pfaffe	NA	pfaffe	Nom.Sg	(Frag (NX * )	_	
19	t8624_000	oder	KON	oder	_	 *	_	
20	t8625_000	leie	NA	lèie	Nom.Sg	(NX * )	_	
21	t8626_000	-	$_	_	_	 *	_	
22	t8627_000	swie	AVG	swiè	_	(Cl (LB * )	_	
23	t8628_000	sie	PPER	ër	*..Nom.Pl.3	(MF (NX * ) )	_	
24	t8629_000	genant	VVPP	nènnen	_	(RB (VX *	_	
25	t8630_000	sîn	VAFIN	sîn	(Subj).Pres.Pl.3	 * ) )	_	
26	t8631_000	-	$_	_	_	 * ) )	_	
27	t8632_000	geistlich	ADJD	gèist-lich	Pos....0	(Frag *	_	
28	t8633_000	oder	KON	oder	_	 *	_	
29	t8634_000	werltlich	ADJD	wër(e)lt-lich	Pos....0	 *	_	
30	t8635_000	-	$_	_	_	 * )	_	
31	t8636_000	alle	DIA	all	Masc.Akk.Pl.st	(Frag *	_	
32	t8637_000	boese	ADJA	boèse	Pos.Masc.Akk.Pl.st	 * )	_	
33	t8638_000	üppige	ADJA	üppig	Pos.Masc.Akk.Pl.st	(Frag *	_	
34	t8639_000	-	$_	_	_	 * )	_	
35	t8640_000	verlâzene	ADJA	ver-lâzen	Pos.Masc.Akk.Pl.st	(Frag *	_	
36	t8641_000	-	$_	_	_	 * )	_	
37	t8642_000	schamelîche	ADJA	scham(e)-lich	Pos.Masc.Akk.Pl.st	(Frag *	_	
38	t8643_000	-	$_	_	_	 * )	_	
39	t8644_000	und	KON	unte	_	(Frag *	_	
40	t8645_000	ouch	AVD	ouch	_	 *	_	
41	t8646_000	unredelîche	ADJA	un-rède-lich	Pos.Masc.Akk.Pl.st	(NX *	_	
42	t8647_000	eide	NA	èid	Akk.Pl	 * )	_	
43	t8648_000	-	$_	_	_	 * )	_	
44	t8649_000	und	KON	unte	_	(Frag *	_	
45	t8650_000	ouch	AVD	ouch	_	 *	_	
46	t8651_000	besunder	AVD	be-sunter	_	 *	_	
47	t8652_000	-	$_	_	_	 * )	_	
48	t8653_000	und	KON	unte	_	(Frag *	_	
49	t8654_000	mit	APPR	mit	_	(PPX *	_	
50	t8655_000	namen	NA	name	Dat.Sg	(NX * ) )	_	
51	t8656_000	-	$_	_	_	 * ) )	_	
52	t8657_000	alle	DIA	all	Masc.Akk.Pl.st	(NX *	_	
53	t8658_000	die	DDART	dër	Masc.Akk.Pl	 *	_	
54	t8659_000	eide	NA	èid	Akk.Pl	 * )	_	
55	t8660_000	die	DRELS	dër	Masc.Nom.Pl	(Frag (NX * )	_	
56	t8661_000	unsern	DPOSA	unser	Masc.Akk.Sg.st	(NX *	_	
57	t8662_000	lieben	ADJA	lièb	Pos.Masc.Akk.Sg.*	 *	_	
58	t8663_000	hêrren	NA	hêrre	Akk.Sg	 *	_	
59	t8663_001	got	NA	got	Akk.Sg	 * )	_	
60	t8664_000	-	$_	_	_	 * )	_	
61	t8665_000	an	APPR	ane	_	(Frag (PPX *	_	
62	t8666_000	kein	DIA	kèin	*.Dat.Pl.0	(NX *	_	
63	t8667_000	sîn	DPOSA	sîn	*.Dat.Pl.0	 *	_	
64	t8668_000	gelidern	NA	ge-lider	Dat.Pl	 * ) )	_	
65	t8669_000	-	$_	_	_	 * )	_	
66	t8670_000	oder	KON	oder	_	(Frag *	_	
67	t8671_000	ouch	AVD	ouch	_	(PreF *	_	
68	t8672_000	mit	APPR	mit	_	(PPX *	_	
69	t8673_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
70	t8674_000	minnesten	ADJA	minnest	Sup.Neut.Dat.Sg.wk	 *	_	
71	t8675_000	worte	NA	wort	Dat.Sg	 * ) ) )	_	
72	t8676_000	mohte	VMFIN	mügen	(Subj).Past.Sg.3	(LB (VX * ) )	_	
73	t8677_000	berüeren	VVINF	be-rüèren	_	(RB (VX * ) )	_	
74	t8678_000	-	$_	_	_	 *	_	
75	t8679_000	daz	KOUS	dazz	_	(Frag *	_	
76	t8680_000	ieman	DIA	iè-mann	*.Nom.Sg.st	(PreF * )	_	
77	t8681_000	kan	VMFIN	kunnen	Ind.Pres.Sg.3	(LB (VX (VX * )	_	
78	t8682_000	oder	KON	oder	_	 *	_	
79	t8683_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(VX * ) ) )	_	
80	t8684_000	gesprechen	VVINF	ge-sprëchen	_	(RB (VX * ) )	_	
81	t8685_000	ûf	APPR	ûf	_	(PostF (PPX *	_	
82	t8686_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) ) )	_	
83	t8687_000	daz	KOUS	dazz	_	(Frag *	_	
84	t8688_000	uns	PPER	wir	Dat.Pl.1	(NX * )	_	
85	t8689_000	got	NA	got	Nom.Sg	(NX * )	_	
86	t8690_000	alle	DIA	all	Neut.Akk.Pl.st	(NX *	_	
87	t8691_000	unser	DPOSA	unser	Neut.0.Akk.Pl.wk	 *	_	
88	t8692_000	dinc	NA	ding	Akk.Pl	 * )	_	
89	t8693_000	zuo	APPR	ze	_	 *	_	
90	t8694_000	dem	DDART	dër	Neut.Dat.Sg	 *	_	
91	t8695_000	bezzisten	ADJA	bè(zzi)st	Sup.Neut.Dat.Sg.wk	(PreF * )	_	
92	t8696_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
93	t8697_000	vüegen	VVINF	vüègen	_	(RB (VX * ) )	_	
94	t8698_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8699_000	unde	KON	unte	_	(S (Frag *	_	
2	t8700_000	ouch	AVD	ouch	_	(PreF * )	_	
3	t8701_000	swer	PG	swër	Masc.Nom.Sg.st	(NX *	_	
4	t8702_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
5	t8703_000	eide	NA	èid	Gen.Pl	 * ) )	_	
6	t8704_000	einen	CARDS	èin	Masc.Akk.Sg.st	(PreF (NX * ) )	_	
7	t8705_000	swert	VVFIN	swèr(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t8706_000	-	$_	_	_	 * )	_	
9	t8707_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
10	t8708_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
11	t8709_000	hêrre	NA	hêrre	Nom.Sg	(MF (NX * )	_	
12	t8710_000	oder	KON	oder	_	 *	_	
13	t8711_000	kneht	NA	knëht	Nom.Sg	(NX * ) )	_	
14	t8712_000	-	$_	_	_	 *	_	
15	t8713_000	man	NA	mann	Nom.Sg	(Frag (NX * )	_	
16	t8714_000	oder	KON	oder	_	 *	_	
17	t8715_000	wîp	NA	wîb	Nom.Sg	(NX * )	_	
18	t8716_000	-	$_	_	_	 * )	_	
19	t8717_000	maget	NA	maged	Nom.Sg	(Frag (NX * )	_	
20	t8718_000	oder	KON	oder	_	 *	_	
21	t8719_000	kint	NA	kind	Nom.Sg	(NX * )	_	
22	t8720_000	-	$_	_	_	 * ) )	_	
23	t8721_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
24	t8722_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
25	t8723_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	(MF (NX *	_	
26	t8724_000	haller	NA	haller(e)	Akk.Pl	 *	_	
27	t8725_000	zuo	APPR	ze	_	(PPX *	_	
28	t8726_000	buoze	NA	buoze	Dat.Sg	(NX * ) ) ) )	_	
29	t8727_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
30	t8728_000	-	$_	_	_	 *	_	
31	t8729_000	als	KO*	all-sô	_	(Frag *	_	
32	t8730_000	dicke	AVD	dicke	_	(PreF * )	_	
33	t8731_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
34	t8732_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
35	t8733_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
36	t8734_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8735_000	und	KON	unte	_	(S (Frag *	_	
2	t8736_000	swer	PG	swër	Masc.Nom.Sg.st	(PreF (NX *	_	
3	t8737_000	der	DDART	dër	Masc.Nom.Sg	 *	_	
4	t8738_000	nâhest	ADJA	nâh	Pos.Masc.Nom.Sg.0	 * ) )	_	
5	t8739_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t8740_000	-	$_	_	_	 *	_	
7	t8741_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
8	t8742_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
9	t8743_000	eit	NA	èid	Akk.Sg	 * ) )	_	
10	t8744_000	hoert	VVFIN	hoèren	Ind.Pres.Sg.3	(RB (VX * ) )	_	
11	t8745_000	-	$_	_	_	 * ) )	_	
12	t8746_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t8747_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t8748_000	die	DDART	dër	Masc.Akk.Pl	(MF (NX *	_	
15	t8749_000	zwêne	CARDA	zwêne	Masc.Akk.Pl.st	 *	_	
16	t8750_000	haller	NA	haller(e)	Akk.Pl	 * ) )	_	
17	t8751_000	eischen	VVINF	èischen	_	(RB (VX * ) )	_	
18	t8752_000	mit	APPR	mit	_	(PostF (PPX *	_	
19	t8753_000	guoten	ADJA	guot	Pos.*.Dat.Pl.*	(NX *	_	
20	t8754_000	zühten	NA	zuht	Dat.Pl	 * ) ) )	_	
21	t8755_000	-	$_	_	_	 *	_	
22	t8756_000	oder	KON	oder	_	(Frag *	_	
23	t8757_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
24	t8758_000	pfant	NA	pfant	Akk.Sg	 * )	_	
25	t8759_000	dâr	PAVD	dâr/+vür(e)	_	 *	_	
26	t8760_000	vüre	PAVAP	vür(e)/dâr+	_	 *	_	
27	t8761_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8762_000	widerredet	VVFIN	wider-rèden	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t8763_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t8764_000	daz	DDS	dër	Neut.Akk.Sg	(NX *	_	
4	t8765_000	zuo	APPR	ze	_	(PPX *	_	
5	t8766_000	gebenne	NA	gëben	Dat.Sg	(NX * ) ) ) )	_	
6	t8767_000	-	$_	_	_	 * )	_	
7	t8768_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
8	t8769_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t8770_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
10	t8771_000	bringen	VVINF	bringen	_	(RB (VX * ) )	_	
11	t8772_000	vüre	APPR	vür(e)	_	(PostF (PPX *	_	
12	t8773_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
13	t8774_000	rât	NA	rât	Akk.Sg	 * ) ) )	_	
14	t8775_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8776_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t8777_000	muoz	VMFIN	müèzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t8778_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
4	t8779_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
5	t8780_000	schillinc	NA	schilling	Akk.Sg	 *	_	
6	t8781_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
7	t8782_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
8	t8783_000	dâr	PAVD	dâr/+zuo	_	(PostF *	_	
9	t8784_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
10	t8785_000	-	$_	_	_	 *	_	
11	t8786_000	âne	APPR	âne	_	(Frag (PPX *	_	
12	t8787_000	genâde	NA	ge-nâde	Akk.Sg	(NX * ) )	_	
13	t8788_000	-	$_	_	_	 * )	_	
14	t8789_000	als	KO*	all-sô	_	(Frag *	_	
15	t8790_000	dicke	AVD	dicke	_	(PreF * )	_	
16	t8791_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
17	t8792_000	sich	PRF	sich	Akk	(PreF (NX *	_	
18	t8793_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
19	t8794_000	widersetzet	VVFIN	wider-sètzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t8795_000	-	$_	_	_	 * ) )	_	
21	t8796_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8797_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t8798_000	gebiutet	VVFIN	ge-bièten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t8799_000	ouch	AVD	ouch	_	(MF *	_	
4	t8800_000	allermannegelîch	PI	aller-manne-ge-lîch	0.Dat.Sg..m.f.n.%	(NX * ) )	_	
5	t8801_000	-	$_	_	_	 *	_	
6	t8802_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
7	t8803_000	ieweder	DIA	iè-wëder	Masc.Nom.Sg.0	(MF (NX *	_	
8	t8804_000	man	NA	mann	Nom.Sg	 *	_	
9	t8805_000	in	APPR	in	_	(PPX *	_	
10	t8806_000	sîneme	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
11	t8807_000	hove	NA	hov	Dat.Sg	 * ) ) )	_	
12	t8808_000	-	$_	_	_	 *	_	
13	t8809_000	oder	KON	oder	_	 *	_	
14	t8810_000	hûse	NA	hûs	Dat.Sg	(NX * )	_	
15	t8811_000	-	$_	_	_	 *	_	
16	t8812_000	mit	APPR	mit	_	(PPX *	_	
17	t8813_000	sîneme	DPOSA	sîn	Neut.Dat.Sg.st	(NX *	_	
18	t8814_000	gesinde	NA	ge-sinde	Dat.Sg	 * ) )	_	
19	t8815_000	und	KON	unte	_	 *	_	
20	t8816_000	hûsgenôzen	NA	hûs-ge-nôz(e)	Dat.Pl	(NX * )	_	
21	t8817_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) )	_	
22	t8818_000	halte	VVFIN	halten	Subj.Pres.Sg.3	(RB (VX * ) )	_	
23	t8819_000	-	$_	_	_	 * ) ) )	_	
24	t8820_000	und	KON	unte	_	(Frag *	_	
25	t8821_000	warnte	VVPS	war(e)n	_	(VX *	_	
26	t8822_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	 * )	_	
27	t8823_000	mit	APPR	mit	_	(PPX *	_	
28	t8824_000	guoten	ADJA	guot	Pos.*.Dat.Pl.*	(NX *	_	
29	t8825_000	triuwen	NA	triuwe	Dat.Pl	 *	_	
30	t8826_000	âne	APPR	âne	_	(PPX *	_	
31	t8827_000	geværde	NA	ge-vær(e)de	Akk.Sg	(NX * ) ) ) )	_	
32	t8828_000	-	$_	_	_	 * )	_	
33	t8829_000	sô	KO*	sô	_	(Frag *	_	
34	t8830_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
35	t8831_000	allerbezziste	AVD	aller-bèzzeste	Sup	(PreF * )	_	
36	t8832_000	müge	VMFIN	mügen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
37	t8833_000	-	$_	_	_	 * )	_	
38	t8834_000	und	KON	unte	_	(Frag *	_	
39	t8835_000	ouch	AVD	ouch	_	 *	_	
40	t8836_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
41	t8837_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
42	t8838_000	von	APPR	von	_	(PPX *	_	
43	t8839_000	sîneme	DPOSA	sîn	Neut.Dat.Sg.st	(NX *	_	
44	t8840_000	gesinde	NA	ge-sinde	Dat.Sg	 * ) ) )	_	
45	t8841_000	und	KON	unte	_	 *	_	
46	t8842_000	hûsgenôze	NA	hûs-ge-nôz(e)	Dat.Sg	(NX * )	_	
47	t8843_000	-	$_	_	_	 *	_	
48	t8844_000	die	DDART	dër	Masc.Akk.Pl	 *	_	
49	t8845_000	vore	AVD	vor(e)	_	 *	_	
50	t8846_000	geschriben	ADJA	schrîben	Pos.Masc.Akk.Pl.0	(NX *	_	
51	t8847_000	haller	NA	haller(e)	Akk.Pl	 * ) )	_	
52	t8848_000	vorder	VVFIN	vorder(e)n	Subj.Pres.Sg.3	(RB (VX * ) )	_	
53	t8849_000	-	$_	_	_	 * ) )	_	
54	t8850_000	und	KON	unte	_	(Cl (PrePreF * )	_	
55	t8851_000	neme	VVFIN	nëmen	Subj.Pres.Sg.3	(LB (VX * ) ) )	_	
56	t8852_000	swenne	AVG	swanne	_	(Cl (LB * )	_	
57	t8853_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
58	t8854_000	si	PPER	ër	Masc,Neut.Akk.Pl.3	(NX * ) )	_	
59	t8855_000	hoere	VVFIN	hoèren	Subj.Pres.Sg.3	(RB (VX * ) )	_	
60	t8856_000	swern	VVINF	swèr(e)n	_	(PostF (VX * ) )	_	
61	t8857_000	-	$_	_	_	 * )	_	
62	t8858_000	oder	KON	oder	_	(Frag *	_	
63	t8859_000	selber	DDS	sëlb	Masc.Nom.Sg.st	(NX * )	_	
64	t8860_000	geben	VVINF	gëben	_	(VX * )	_	
65	t8861_000	-	$_	_	_	 *	_	
66	t8862_000	ob	KOUS	obe	_	(Cl (LB * )	_	
67	t8863_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
68	t8864_000	swer	VVFIN	swèr(e)n	Subj.Pres.Sg.3	(RB (VX * ) )	_	
69	t8865_000	bî	APPR	bî	_	(PostF (PPX *	_	
70	t8866_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
71	t8867_000	pîne	NA	pîne	Dat.Sg	 * ) ) )	_	
72	t8868_000	-	$_	_	_	 * ) )	_	
73	t8869_000	als	KO*	all-sô	_	(Frag *	_	
74	t8870_000	vore	PTKVZ	vor(e)/+schrîben	_	(VX *	_	
75	t8871_000	stêt	VVFIN	stân	Ind.Pres.Sg.3	 *	_	
76	t8872_000	geschriben	VVPP	schrîben/vor(e)+	_	 * )	_	
77	t8873_000	-	$_	_	_	 * )	_	
78	t8874_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8875_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t8876_000	ouch	AVD	ouch	_	(PreF *	_	
3	t8877_000	ieman	DIA	iè-mann	*.Akk.Sg.st	 * )	_	
4	t8878_000	hoert	VVFIN	hoèren	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t8879_000	swern	VVINF	swèr(e)n	_	(MF (VX * ) )	_	
6	t8880_000	-	$_	_	_	 * )	_	
7	t8881_000	und	KON	unte	_	(Frag *	_	
8	t8882_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
9	t8883_000	niht	PTKNEG	niht	_	(LB (VX (VX *	_	
10	t8884_000	vordert	VVFIN	vorder(e)n	Ind.Pres.Sg.3	 * )	_	
11	t8885_000	oder	KON	oder	_	 *	_	
12	t8886_000	rüeget	VVFIN	rüègen	Ind.Pres.Sg.3	(VX * ) ) )	_	
13	t8887_000	-	$_	_	_	 * )	_	
14	t8888_000	als	KO*	all-sô	_	(Frag *	_	
15	t8889_000	vore	PTKVZ	vor(e)/+schrîben	_	(VX * )	_	
16	t8890_000	geschriben	VVPP	schrîben/vor(e)+	_	(VX *	_	
17	t8891_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
18	t8892_000	-	$_	_	_	 * )	_	
19	t8893_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
20	t8894_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
21	t8895_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
22	t8896_000	buoze	NA	buoze	Akk.Sg	 * )	_	
23	t8897_000	selber	DDS	sëlb	Masc.Nom.Sg.st	(NX * ) )	_	
24	t8898_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
25	t8899_000	-	$_	_	_	 * )	_	
26	t8900_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8901_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t8902_000	gebiutet	VVFIN	ge-bièten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t8903_000	ouch	AVD	ouch	_	(MF *	_	
4	t8904_000	allermannegelîch	PI	aller-manne-ge-lîch	0.Dat.Sg..m.f.n.%	(NX * ) )	_	
5	t8905_000	zuo	APPR	ze	_	(PostF (Cl (LB (PPX *	_	
6	t8906_000	dem	DRELS	dër	Masc.Dat.Sg	(NX * ) ) )	_	
7	t8907_000	ûzwartige	ADJA	ûz-wërtig	Pos.Masc,Neut.Nom.Pl.st	(MF (NX *	_	
8	t8908_000	liute	NA	liut	Nom.Pl	 * ) )	_	
9	t8909_000	kumen	VVFIN	komen	*.Pres.Pl.3	(RB (VX * ) )	_	
10	t8910_000	-	$_	_	_	 * ) ) )	_	
11	t8911_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
12	t8912_000	wandeln	VVFIN	wantel(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
13	t8913_000	-	$_	_	_	 *	_	
14	t8914_000	und	KON	unte	_	(Frag *	_	
15	t8915_000	bî	APPR	bî	_	(PreF (PPX *	_	
16	t8916_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX *	_	
17	t8917_000	zuo	APPR	ze	_	(PPX *	_	
18	t8918_000	herberge	NA	hèr(e)-bërge	Dat.Sg	(NX * ) ) ) ) )	_	
19	t8919_000	sîn	VAFIN	sîn	*.Pres.Pl.3	(LB (VX * ) )	_	
20	t8920_000	-	$_	_	_	 *	_	
21	t8921_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
22	t8922_000	sie	PPER	ër	*..Nom.Pl.3	(MF (NX * )	_	
23	t8923_000	die	DDS	dër	Masc,Neut.Akk.Pl	(NX * ) )	_	
24	t8924_000	underwîsen	VVFIN	unter-wîsen	*.Pres.Pl.3	(RB (VX * ) )	_	
25	t8925_000	-	$_	_	_	 *	_	
26	t8926_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
27	t8927_000	sie	PPER	ër	Masc,Neut.Nom.Pl.3	(MF (NX * )	_	
28	t8928_000	ire	DPOSA	ir(e)	Neut.Akk.Sg.0	(NX *	_	
29	t8929_000	swern	NA	swèr(e)n	Akk.Sg	 * ) )	_	
30	t8930_000	lâzen	VVFIN	lâzen	*.Pres.Pl.3	(RB (VX * ) )	_	
31	t8931_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8932_000	wolten	VMFIN	wèllen	(Subj).Past.Pl.3	(S (Cl (LB (VX * ) )	_	
2	t8933_000	sie	PPER	ër	Masc,Neut.Nom.Pl.3	(MF (NX *	_	
3	t8934_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
4	t8935_000	niht	NA	niht	Akk.Sg	(NX * ) )	_	
5	t8936_000	lâzen	VVINF	lâzen	_	(RB (VX * ) )	_	
6	t8937_000	-	$_	_	_	 * )	_	
7	t8938_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
8	t8939_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t8940_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
10	t8941_000	buoze	NA	buoze	Akk.Sg	 * )	_	
11	t8942_000	oder	KON	oder	_	 *	_	
12	t8943_000	pfant	NA	pfant	Akk.Sg	(NX *	_	
13	t8944_000	von	APPR	von	_	(PPX *	_	
14	t8945_000	in	PPER	ër	*.Dat.Pl.3	(NX * ) ) ) )	_	
15	t8946_000	vordern	VVINF	vorder(e)n	_	(RB (VX * ) )	_	
16	t8947_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8948_000	tæte	VVFIN	tuon	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t8949_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
3	t8950_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) )	_	
4	t8951_000	niht	NA	niht	Akk.Sg	(NX * ) )	_	
5	t8952_000	-	$_	_	_	 * )	_	
6	t8953_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
7	t8954_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t8955_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
9	t8956_000	buoze	NA	buoze	Akk.Sg	 * )	_	
10	t8957_000	selber	DDS	sëlb	Masc.Nom.Sg.st	(NX * ) )	_	
11	t8958_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
12	t8959_000	-	$_	_	_	 * )	_	
13	t8960_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8961_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t8962_000	aber	AVD	aber	_	(PreF * )	_	
3	t8963_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
4	t8964_000	eide	NA	èid	Gen.Pl	 * )	_	
5	t8965_000	einen	CARDS	èin	Masc.Akk.Sg.st	(PreF (NX * ) )	_	
6	t8966_000	swert	VVFIN	swèr(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t8967_000	-	$_	_	_	 *	_	
8	t8968_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
9	t8969_000	niht	NA	niht	Akk.Sg	(MF (NX *	_	
10	t8970_000	zuo	APPR	ze	_	(PPX *	_	
11	t8971_000	gebenne	NA	gëben	Dat.Sg	(NX * ) ) ) )	_	
12	t8972_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(RB (VX * ) )	_	
13	t8973_000	-	$_	_	_	 * ) )	_	
14	t8974_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
15	t8975_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t8976_000	man	PI	man	*.Nom.Sg.st	(MF (NX *	_	
17	t8977_000	in	APPR	in	_	(PPX *	_	
18	t8978_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
19	t8979_000	halsîsen	NA	hals-îsen	Akk.Sg	 * ) ) ) )	_	
20	t8980_000	vüeren	VVINF	vüèren	_	(RB (VX * ) )	_	
21	t8981_000	-	$_	_	_	 * )	_	
22	t8982_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
23	t8983_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
24	t8984_000	über	APPR	über	_	(MF (PPX *	_	
25	t8985_000	tac	NA	tag	Akk.Sg	(NX * ) ) )	_	
26	t8986_000	dâr	PAVD	dâr/+inne	_	(RB (VX *	_	
27	t8987_000	inne	PAVAP	inne/dâr+	_	 *	_	
28	t8988_000	stên	VVINF	stân	_	 * ) )	_	
29	t8989_000	-	$_	_	_	 *	_	
30	t8990_000	als	KO*	all-sô	_	(Frag *	_	
31	t8991_000	dicke	AVD	dicke	_	(PreF * )	_	
32	t8992_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
33	t8993_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
34	t8994_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
35	t8995_000	-	$_	_	_	 * ) )	_	
36	t8996_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8997_000	wolte	VMFIN	wèllen	(Subj).Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t8998_000	aber	AVD	aber	_	(MF *	_	
3	t8999_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
4	t9000_000	daz	DDS	dër	Neut.Akk.Sg	(NX * )	_	
5	t9001_000	zuo	PTKA	ze	_	 *	_	
6	t9002_000	dicke	AVD	dicke	_	 * )	_	
7	t9003_000	tuon	VVINF	tuon	_	(RB (VX * ) )	_	
8	t9004_000	-	$_	_	_	 * )	_	
9	t9005_000	dem	DDS	dër	Masc.Dat.Sg	(Cl (PreF (NX * ) )	_	
10	t9006_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t9007_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
12	t9008_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
13	t9009_000	zungen	NA	zunge	Akk.Sg	 * ) )	_	
14	t9010_000	-	$_	_	_	 * )	_	
15	t9011_000	oder	KON	oder	_	(Frag *	_	
16	t9012_000	ein	CARDA	èin	Neut.Akk.Sg.0	(NX *	_	
17	t9013_000	ôre	NA	ôre	Akk.Sg	 * )	_	
18	t9014_000	slitzen	VVINF	slitzen	_	(VX * )	_	
19	t9015_000	-	$_	_	_	 *	_	
20	t9016_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
21	t9017_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
22	t9017_001	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
23	t9018_000	doch	AVD	doh	_	 *	_	
24	t9019_000	von	APPR	von	_	(PPX *	_	
25	t9020_000	im	PPER	ër	Masc.Dat.Sg.3	(NX * ) ) )	_	
26	t9021_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(RB (VX * ) )	_	
27	t9022_000	über	PTKVZ	über(e)/+haben	_	(PostF (VX *	_	
28	t9022_001	haben	VAINF	haben/über(e)+	_	 * ) )	_	
29	t9023_000	-	$_	_	_	 * ) )	_	
30	t9024_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9025_000	wizzet	VVIMP	wizzen	Pl.2	(S (Cl (LB (VX * ) )	_	
2	t9026_000	ouch	AVD	ouch	_	(MF * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9027_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t9028_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t9029_000	sunderlîche	AVD	sunter-lîche	_	(MF *	_	
4	t9030_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
5	t9031_000	liute	NA	liut	Gen.Pl	(NX * ) ) )	_	
6	t9032_000	dâr	PAVD	dâr/+über(e)	_	(RB (VX *	_	
7	t9033_000	über	PAVAP	über(e)/dâr+	_	 *	_	
8	t9034_000	gesetzet	VVPP	sètzen	_	 * ) )	_	
9	t9035_000	-	$_	_	_	 *	_	
10	t9036_000	die	DRELS	dër	Masc,Neut.Nom.Pl	(PostF (Cl (LB (NX * ) )	_	
11	t9037_000	zuo	APPR	ze	_	(MF *	_	
12	t9038_000	den	DDART	dër	*.Dat.Pl	 *	_	
13	t9039_000	heiligen	ADJA	hèilig	Pos.*.Dat.Pl..%.*	 * )	_	
14	t9040_000	gesworen	VVPP	swèr(e)n	_	(RB (VX *	_	
15	t9041_000	haben	VAFIN	haben	*.Pres.Pl.3	 * ) )	_	
16	t9042_000	dâr	PAVD	dâr/+über(e)	_	(PostF *	_	
17	t9043_000	über	PAVAP	über(e)/dâr+	_	 * )	_	
18	t9044_000	-	$_	_	_	 * ) )	_	
19	t9045_000	vore	APPR	vor(e)	_	(Frag (PPX *	_	
20	t9046_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
21	t9047_000	râte	NA	rât	Dat.Sg	 * ) )	_	
22	t9048_000	-	$_	_	_	 *	_	
23	t9049_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
24	t9050_000	sie	PPER	ër	Masc,Neut.Nom.Pl.3	(MF (NX *	_	
25	t9051_000	des	DDS	dër	Neut.Gen.Sg	(NX * ) ) )	_	
26	t9052_000	wartente	VVPS	warten	_	(RB (VX *	_	
27	t9053_000	sîn	VAFIN	sîn	(Subj).Pres.Pl.3	 * ) )	_	
28	t9054_000	-	$_	_	_	 *	_	
29	t9055_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
30	t9056_000	sich	PRF	sich	Akk	(MF (NX * )	_	
31	t9057_000	ieweder	DIA	iè-wëder	Masc.Nom.Sg.0	(NX *	_	
32	t9058_000	man	NA	mann	Nom.Sg	 * )	_	
33	t9059_000	deste	AVD	dëste	_	 *	_	
34	t9060_000	baz	AVD	bazz	Comp	 * )	_	
35	t9061_000	dâ	PAVD	dâr/+vor(e)	_	(RB (VX *	_	
36	t9062_000	vore	PAVAP	vor(e)/dâr+	_	 *	_	
37	t9063_000	hüete	VVFIN	hüèten	Subj.Pres.Sg.3	 * ) ) ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9064_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t9065_000	wær	VAFIN	wësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
3	t9066_000	ouch	AVD	ouch	_	(MF * )	_	
4	t9067_000	daz	KOUS	dazz	_	(PostF (Cl (PreF * )	_	
5	t9068_000	die	DDS	dër	*.Nom.Pl	(LB (NX *	_	
6	t9069_000	die	DRELS	dër	*.Nom.Pl	 * ) )	_	
7	t9070_000	dâr	PAVD	dâr/+über(e)	_	(MF (VX *	_	
8	t9071_000	über	PAVAP	über(e)/dâr+	_	 * ) )	_	
9	t9072_000	gesetzet	VVPP	sètzen	_	(RB (VX *	_	
10	t9073_000	sîn	VAFIN	sîn	*.Pres.Pl.3	 * ) )	_	
11	t9074_000	-	$_	_	_	 *	_	
12	t9075_000	ieman	DIA	iè-mann	*.Akk.Sg.st	(PostF (Cl (PreF * )	_	
13	t9076_000	der	DRELS	dër	Masc.Nom.Sg	(LB (NX * ) )	_	
14	t9077_000	alsô	AVD	all-sô	_	(MF *	_	
15	t9078_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
16	t9079_000	boesen	ADJA	boèse	Pos.Masc.Akk.Sg.*	 *	_	
17	t9080_000	eit	NA	èid	Akk.Sg	 * ) )	_	
18	t9081_000	swüere	VVFIN	swèr(e)n	Subj.Past.Sg.3	(RB (VX * ) )	_	
19	t9082_000	oder	KON	oder	_	(PostF *	_	
20	t9083_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
21	t9084_000	andern	DIS	ander	Masc.Akk.Sg.st	 * ) )	_	
22	t9085_000	-	$_	_	_	 *	_	
23	t9086_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
24	t9087_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
25	t9088_000	gelt	NA	gëlt	Akk.Sg	 *	_	
26	t9089_000	mit	APPR	mit	_	(PPX *	_	
27	t9090_000	zühten	NA	zuht	Dat.Pl	(NX *	_	
28	t9091_000	an	APPR	ane	_	(PPX *	_	
29	t9092_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) ) ) ) ) )	_	
30	t9093_000	vorderte	VVFIN	vorder(e)n	(Subj).Past.Sg.3	(RB (VX * ) )	_	
31	t9094_000	-	$_	_	_	 * ) ) ) ) ) ) )	_	
32	t9095_000	übel	AVD	übel(e)	_	(Cl (PreF * )	_	
33	t9096_000	handelte	VVFIN	hantel(e)n	(Subj).Past.Sg.3	(LB (VX * ) )	_	
34	t9097_000	mit	APPR	mit	_	(MF (PPX *	_	
35	t9098_000	worten	NA	wort	Dat.Pl	(NX * ) ) )	_	
36	t9099_000	-	$_	_	_	 *	_	
37	t9100_000	oder	KON	oder	_	(Frag *	_	
38	t9101_000	mit	APPR	mit	_	(PPX *	_	
39	t9102_000	werken	NA	wërk	Dat.Pl	(NX * ) )	_	
40	t9103_000	-	$_	_	_	 * ) )	_	
41	t9104_000	wizzet	VVIMP	wizzen	Pl.2	(Cl (LB (VX * ) )	_	
42	t9105_000	-	$_	_	_	 * )	_	
43	t9106_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
44	t9107_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
45	t9108_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
46	t9109_000	rât	NA	rât	Nom.Sg	 * )	_	
47	t9110_000	swærlîche	AVD	swær-lîche	_	 * )	_	
48	t9111_000	dâr	PAVD	dâr/+umbe	_	(RB (VX *	_	
49	t9112_000	umbe	PAVAP	umbe/dâr+	_	 *	_	
50	t9113_000	büezen	VVINF	büèzen	_	 * ) )	_	
51	t9114_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9115_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t9116_000	wîn	NA	wîn	Akk.Sg	(NX * ) )	_	
3	t9117_000	machenne	NA	machen	Dat.Sg	(NX * )	_	
4	t9118_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9119_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t9120_000	verbiutet	VVFIN	ver-bièten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t9121_000	ouch	AVD	ouch	_	(MF *	_	
4	t9122_000	allermannegelîch	PI	aller-manne-ge-lîch	0.Dat.Sg..m.f.n.%	(NX * ) )	_	
5	t9123_000	-	$_	_	_	 * )	_	
6	t9124_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
7	t9125_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
8	t9126_000	pfaffe	NA	pfaffe	Nom.Sg	(MF (NX * )	_	
9	t9127_000	oder	KON	oder	_	 *	_	
10	t9128_000	leie	NA	lèie	Nom.Sg	(NX * ) )	_	
11	t9129_000	-	$_	_	_	 *	_	
12	t9130_000	hêrre	NA	hêrre	Nom.Sg	(Frag (NX * )	_	
13	t9131_000	oder	KON	oder	_	 *	_	
14	t9132_000	kneht	NA	knëht	Nom.Sg	(NX * )	_	
15	t9133_000	-	$_	_	_	 * )	_	
16	t9134_000	vrouwe	NA	vrouwe	Nom.Sg	(Frag (NX * )	_	
17	t9135_000	oder	KON	oder	_	 *	_	
18	t9136_000	maget	NA	maged	Nom.Sg	(NX * )	_	
19	t9137_000	-	$_	_	_	 * )	_	
20	t9138_000	rîche	ADJD	rîche	Pos....0	(Frag *	_	
21	t9139_000	oder	KON	oder	_	 *	_	
22	t9140_000	arm	ADJD	arm	Pos....0	 *	_	
23	t9141_000	-	$_	_	_	 *	_	
24	t9142_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
25	t9143_000	nieman	DIA	niè-mann	*.Nom.Sg.st	(MF *	_	
26	t9144_000	kein	DIA	kèin	Masc.Akk.Sg.0	(NX *	_	
27	t9145_000	wîn	NA	wîn	Akk.Sg	 * )	_	
28	t9146_000	machen	VVINF	machen	_	(VX * ) )	_	
29	t9147_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(RB (VX * ) )	_	
30	t9148_000	-	$_	_	_	 * ) )	_	
31	t9149_000	mit	APPR	mit	_	(Frag (PPX *	_	
32	t9150_000	keinem	DIA	kèin	Neut.Dat.Sg.st	(NX *	_	
33	t9151_000	gemechte	NA	ge-mèchte	Dat.Sg	 * ) )	_	
34	t9152_000	-	$_	_	_	 * )	_	
35	t9153_000	noch	KON	noh	_	(Frag *	_	
36	t9154_000	grôz	ADJD	grôz	Pos....0	 *	_	
37	t9155_000	-	$_	_	_	 * )	_	
38	t9156_000	noch	KON	noh	_	(Frag *	_	
39	t9157_000	kleine	ADJD	klèine	Pos....0	 *	_	
40	t9158_000	-	$_	_	_	 * )	_	
41	t9159_000	noch	KON	noh	_	(Frag *	_	
42	t9160_000	mit	APPR	mit	_	(PPX *	_	
43	t9161_000	namen	NA	name	Dat.Sg	(NX *	_	
44	t9162_000	mit	APPR	mit	_	(PPX *	_	
45	t9163_000	gebrantem	ADJA	brènnen	Pos.Masc.Dat.Sg.st	(NX *	_	
46	t9164_000	wîne	NA	wîn	Dat.Sg	 * ) ) ) )	_	
47	t9165_000	-	$_	_	_	 * )	_	
48	t9166_000	denne	KOKOM	danne	_	(Frag *	_	
49	t9167_000	alein	AVD	all-èin(e)	_	 *	_	
50	t9168_000	mit	APPR	mit	_	(PPX *	_	
51	t9169_000	kemben	NA	kamb	Dat.Pl	(NX * ) )	_	
52	t9170_000	-	$_	_	_	 * )	_	
53	t9171_000	und	KON	unte	_	(Frag *	_	
54	t9172_000	mit	APPR	mit	_	(PPX *	_	
55	t9173_000	bern	NA	bër(e)	Dat.Pl	(NX * ) )	_	
56	t9174_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9175_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t9176_000	aber	AVD	aber	_	(PreF *	_	
3	t9177_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) )	_	
4	t9178_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t9179_000	-	$_	_	_	 * )	_	
6	t9180_000	oder	KON	oder	_	(Cl (PrePreF * )	_	
7	t9181_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t9182_000	tuon	VVINF	tuon	_	(MF (VX * ) )	_	
9	t9183_000	-	$_	_	_	 * )	_	
10	t9184_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
11	t9185_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t9186_000	als	AVD	all-sô	_	(MF *	_	
13	t9187_000	dicke	AVD	dicke	_	 *	_	
14	t9188_000	von	APPR	von	_	(PPX *	_	
15	t9189_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
16	t9190_000	einber	NA	èin-ber	Dat.Sg	 * ) )	_	
17	t9191_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
18	t9192_000	schillinc	NA	schilling	Akk.Sg	 *	_	
19	t9193_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
20	t9194_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
21	t9195_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9196_000	die	DDART	dër	Fem.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t9197_000	buoze	NA	buoze	Nom.Sg	 * ) )	_	
3	t9198_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t9199_000	gevallen	VVINF	ge-vallen	_	(RB (VX * ) )	_	
5	t9200_000	den	DDS	dër	*.Dat.Pl	(PostF (NX * ) )	_	
6	t9201_000	-	$_	_	_	 *	_	
7	t9202_000	die	DRELS	dër	*.Nom.Pl	(PostF (Cl (LB (NX *	_	
8	t9203_000	des	DDS	dër	Masc.Gen.Sg	(NX * ) ) )	_	
9	t9204_000	wartente	VVPS	warten	_	(RB (VX *	_	
10	t9205_000	sîn	VAFIN	sîn	*.Pres.Pl.3	 * ) )	_	
11	t9206_000	-	$_	_	_	 * ) ) )	_	
12	t9207_000	und	KON	unte	_	(Cl (PrePreF * )	_	
13	t9208_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t9209_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
15	t9210_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
16	t9211_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
17	t9212_000	mânden	NA	mând(e)	Akk.Sg	 * )	_	
18	t9213_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
19	t9214_000	stat	NA	stat	Akk.Sg	 * ) )	_	
20	t9215_000	rûmen	VVINF	rûmen	_	(RB (VX * ) )	_	
21	t9216_000	-	$_	_	_	 *	_	
22	t9217_000	als	KO*	all-sô	_	(Frag *	_	
23	t9218_000	ofte	AVD	ofte	_	(PreF * )	_	
24	t9219_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
25	t9220_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
26	t9221_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
27	t9222_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9223_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t9224_000	aber	AVD	aber	_	(PreF * )	_	
3	t9225_000	sînen	DPOSA	sîn	Masc.Akk.Sg.st	(NX *	_	
4	t9226_000	wîn	NA	wîn	Akk.Sg	 *	_	
5	t9227_000	mit	APPR	mit	_	(PPX *	_	
6	t9228_000	kemben	NA	kamb	Dat.Pl	(NX * ) ) )	_	
7	t9229_000	alsô	AVD	all-sô	_	(PreF * )	_	
8	t9230_000	machet	VVFIN	machen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t9231_000	-	$_	_	_	 *	_	
10	t9232_000	den	DRELS	dër	Masc.Akk.Sg	(Cl (LB (NX * ) )	_	
11	t9233_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
12	t9234_000	verkoufet	VVFIN	ver-koufen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
13	t9235_000	-	$_	_	_	 * ) )	_	
14	t9236_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
15	t9237_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
16	t9238_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
17	t9239_000	dem	DDS	dër	Masc.Dat.Sg	(NX * )	_	
18	t9240_000	vore	AVD	vor(e)	_	 * )	_	
19	t9241_000	sagen	VVINF	sagen	_	(RB (VX * ) )	_	
20	t9242_000	-	$_	_	_	 *	_	
21	t9243_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
22	t9244_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
23	t9245_000	wîn	NA	wîn	Akk.Sg	 * )	_	
24	t9246_000	koufen	VVINF	koufen	_	(VX * ) )	_	
25	t9247_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
26	t9248_000	-	$_	_	_	 * ) )	_	
27	t9249_000	bî	APPR	bî	_	(Frag (PPX *	_	
28	t9250_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
29	t9251_000	selben	DDA	sëlb	Fem.Dat.Sg.wk	 *	_	
30	t9252_000	buoze	NA	buoze	Dat.Sg	 * ) )	_	
31	t9253_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9254_000	des	DDS	dër	Neut.Gen.Sg	(S (Cl (PreF (NX * ) )	_	
2	t9255_000	sulen	VMFIN	sol(e)n	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t9256_000	warten	VVINF	warten	_	(RB (VX * ) )	_	
4	t9257_000	Eugene	NE	Eugen	Nom.Sg	(PostF (NX * ) )	_	
5	t9258_000	-	$_	_	_	 *	_	
6	t9259_000	Blidenstein	NE	Bliden-stèin	Nom.Sg	(PostF (NX * ) )	_	
7	t9260_000	-	$_	_	_	 *	_	
8	t9261_000	Hans	NE	Hans	Nom.Sg	(Frag (NX *	_	
9	t9262_000	Roetermunt	NE	Roèter-mund	Nom.Sg	 * )	_	
10	t9263_000	-	$_	_	_	 * )	_	
11	t9264_000	die	DDART	dër	Masc.Nom.Pl	(Frag (NX *	_	
12	t9265_000	wînmezzær	NA	wîn-mëzzære	Nom.Pl	 * )	_	
13	t9266_000	-	$_	_	_	 * )	_	
14	t9267_000	Hennekîn	NE	Hennekîn	Nom.Sg	(Frag (NX *	_	
15	t9268_000	Visierær	NE	Visièrære	Nom.Sg	 * )	_	
16	t9269_000	-	$_	_	_	 * )	_	
17	t9270_000	Hans	NE	Hans	Nom.Sg	(Frag (NX *	_	
18	t9271_000	von	APPR	von	_	(PPX *	_	
19	t9271_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
20	t9272_000	Heller	NE	Heller	Dat.Sg	 * ) ) )	_	
21	t9273_000	-	$_	_	_	 * )	_	
22	t9274_000	und	KON	unte	_	(Frag *	_	
23	t9275_000	Götze	NE	Götze	Gen.Sg	(NX *	_	
24	t9276_000	Leinliten	NE	Lèinlit	Gen.Sg	 * )	_	
25	t9277_000	sun	NA	sun	Nom.Sg	(NX * )	_	
26	t9278_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9279_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t9280_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t9281_000	weizîn	ADJA	wèizîn	Pos.Neut.Dat.Sg.0	 *	_	
4	t9282_000	melwe	NA	mëlw	Dat.Sg	 * ) )	_	
5	t9283_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9284_000	ez	PPER	ër	Neut.Nom.Sg.3	(S (Cl (PreF (NX * ) )	_	
2	t9285_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t9286_000	ouch	AVD	ouch	_	(MF * )	_	
4	t9287_000	bedâht	VVPP	be-dènken	_	(RB (VX * ) )	_	
5	t9288_000	-	$_	_	_	 *	_	
6	t9289_000	umbe	APPR	umbe	_	(Frag (PPX *	_	
7	t9290_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
8	t9291_000	weizîn	ADJA	wèizîn	Pos.Neut.Akk.Sg.0	 *	_	
9	t9292_000	mel	NA	mëlw	Akk.Sg	 * ) )	_	
10	t9293_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9294_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t9295_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t9296_000	mâz	NA	mâz	Akk.Pl	(MF (NX * ) )	_	
4	t9297_000	gemachet	VVPP	machen	_	(RB (VX * ) ) )	_	
5	t9298_000	der	DDS	dër	*.Gen.Pl	(Cl (PreF (NX * ) )	_	
6	t9299_000	gên	VVFIN	gân	*.Pres.Pl.3	(LB (VX * ) )	_	
7	t9300_000	siben	CARDS	siben	Neut.Nom.Pl.0	(MF (NX * )	_	
8	t9301_000	bestrichen	VVPP	be-strîchen	_	(VX * )	_	
9	t9302_000	in	APPR	in	_	(PPX *	_	
10	t9303_000	ein	CARDA	èin	Masc.Akk.Sg.0	(NX *	_	
11	t9304_000	metzen	NA	mètze	Akk.Sg	 *	_	
12	t9305_000	bestrichen	ADJN	be-strîchen	Pos.Masc.Akk.Sg.0	 * ) ) )	_	
13	t9306_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9307_000	und	KON	unte	_	(S (Frag *	_	
2	t9308_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX *	_	
3	t9309_000	geaht	VVPP	ahten	_	 * )	_	
4	t9310_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9311_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t9312_000	ein	DIART	èin	Neut.Nom.Sg.0	(MF (NX *	_	
3	t9313_000	malter	NA	malter	Nom.Sg	 *	_	
4	t9314_000	weizes	NA	wèize	Gen.Sg	(NX * ) )	_	
5	t9315_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(NX *	_	
6	t9316_000	schillinge	NA	schilling	Akk.Pl	 *	_	
7	t9317_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
8	t9318_000	-	$_	_	_	 * )	_	
9	t9319_000	sô	AVD	sô	_	(Cl (PreF * )	_	
10	t9320_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t9321_000	der	DDART	dër	*.Gen.Pl	(MF (NX *	_	
12	t9322_000	mâze	NA	mâz	Gen.Pl	 * )	_	
13	t9323_000	einez	CARDS	èin	Neut.Nom.Sg.st	(NX * )	_	
14	t9324_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
15	t9325_000	pfenninc	NA	pfènning	Akk.Sg	 * ) )	_	
16	t9326_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9327_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t9328_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
3	t9329_000	weize	NA	wèize	Nom.Sg	 * )	_	
4	t9330_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(NX *	_	
5	t9331_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
6	t9332_000	-	$_	_	_	 * )	_	
7	t9333_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t9334_000	kumen	VVFIN	komen	*.Pres.Pl.3	(LB (VX * ) )	_	
9	t9335_000	zwei	CARDA	zwêne	Neut.Nom.Pl.st	(MF (NX *	_	
10	t9336_000	mâz	NA	mâz	Nom.Pl	 *	_	
11	t9337_000	umbe	APPR	umbe	_	(PPX *	_	
12	t9338_000	vünf	CARDA	vünv	Masc.Akk.Pl.0	(NX *	_	
13	t9339_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
14	t9340_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9341_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t9342_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t9343_000	sehs	CARDA	sëhs	Masc.Akk.Pl.0	(NX *	_	
4	t9344_000	schillinge	NA	schilling	Akk.Pl	 *	_	
5	t9345_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) ) )	_	
6	t9346_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t9347_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t9348_000	ein	CARDA	èin	Neut.Nom.Sg.0	(MF (NX *	_	
9	t9349_000	mâz	NA	mâz	Nom.Sg	 *	_	
10	t9350_000	umbe	APPR	umbe	_	(PPX *	_	
11	t9351_000	drî	CARDA	drî	Masc.Akk.Pl.0	(NX *	_	
12	t9352_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
13	t9353_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9354_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t9355_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t9356_000	siben	CARDA	siben	Masc.Akk.Pl.0	(NX *	_	
4	t9357_000	schillinge	NA	schilling	Akk.Pl	 * ) )	_	
5	t9358_000	-	$_	_	_	 * )	_	
6	t9359_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t9360_000	kumen	VVFIN	komen	*.Pres.Pl.3	(LB (VX * ) )	_	
8	t9361_000	zwô	CARDA	zwêne	Fem.Nom.Pl.st	(MF (NX *	_	
9	t9362_000	mâze	NA	mâze	Nom.Pl	 *	_	
10	t9363_000	umbe	APPR	umbe	_	(PPX *	_	
11	t9364_000	siben	CARDA	siben	Masc.Akk.Pl.0	(NX *	_	
12	t9365_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
13	t9366_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9367_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t9368_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
3	t9369_000	weize	NA	wèize	Nom.Sg	 * )	_	
4	t9370_000	ahte	CARDA	ahte	Masc.Akk.Pl.0	(NX *	_	
5	t9371_000	schillinge	NA	schilling	Akk.Pl	 *	_	
6	t9372_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
7	t9373_000	-	$_	_	_	 * )	_	
8	t9374_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t9375_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t9376_000	ein	CARDA	èin	Neut.Nom.Sg.0	(MF (NX *	_	
11	t9377_000	mâz	NA	mâz	Nom.Sg	 *	_	
12	t9378_000	umbe	APPR	umbe	_	(PPX *	_	
13	t9379_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(NX *	_	
14	t9380_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
15	t9381_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9382_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t9383_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
3	t9384_000	aber	AVD	aber	_	 *	_	
4	t9385_000	niun	CARDA	niun	Masc.Akk.Pl.0	(NX *	_	
5	t9386_000	schillinge	NA	schilling	Akk.Pl	 *	_	
6	t9387_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) ) )	_	
7	t9388_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t9389_000	kumen	VVFIN	komen	*.Pres.Pl.3	(LB (VX * ) )	_	
9	t9390_000	der	DDART	dër	*.Gen.Pl	(MF (NX *	_	
10	t9391_000	mâze	NA	mâz	Gen.Pl	 * )	_	
11	t9392_000	zwei	CARDS	zwêne	Neut.Nom.Pl.st	(NX *	_	
12	t9393_000	umbe	APPR	umbe	_	(PPX *	_	
13	t9394_000	niun	CARDA	niun	Masc.Akk.Pl.0	(NX *	_	
14	t9395_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
15	t9396_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9397_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t9398_000	aber	AVD	aber	_	(MF *	_	
3	t9399_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
4	t9400_000	weize	NA	wèize	Nom.Sg	 * )	_	
5	t9401_000	zehen	CARDA	zëhen	Masc.Akk.Pl.0	(NX *	_	
6	t9402_000	schillinge	NA	schilling	Akk.Pl	 *	_	
7	t9403_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
8	t9404_000	-	$_	_	_	 * )	_	
9	t9405_000	sô	AVD	sô	_	(Cl (PreF * )	_	
10	t9406_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t9407_000	ein	CARDA	èin	Neut.Nom.Sg.0	(MF (NX *	_	
12	t9408_000	mâz	NA	mâz	Nom.Sg	 *	_	
13	t9409_000	umbe	APPR	umbe	_	(PPX *	_	
14	t9410_000	vünf	CARDA	vünv	Masc.Akk.Pl.0	(NX *	_	
15	t9411_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
16	t9412_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9413_000	und	KON	unte	_	(S (Frag *	_	
2	t9414_000	dâr	PAVD	dâr/+nâh	_	 *	_	
3	t9415_000	nâch	PAVAP	nâh/dâr+	_	 * )	_	
4	t9416_000	swaz	PG	swër	Neut.Akk.Sg.st	(Frag (NX * )	_	
5	t9417_000	der	DDART	dër	Masc.Nom.Sg	(PreF (NX *	_	
6	t9418_000	weize	NA	wèize	Nom.Sg	 * ) )	_	
7	t9419_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t9420_000	-	$_	_	_	 * )	_	
9	t9421_000	er	PPER	ër	Masc.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
10	t9422_000	slahe	VVFIN	slahen/ûf+/abe+	Subj.Pres.Sg.3	(LB (VX * ) )	_	
11	t9423_000	ûf	PTKVZ	ûf/+slahen	_	(RB * )	_	
12	t9424_000	-	$_	_	_	 *	_	
13	t9425_000	oder	KON	oder	_	(Frag *	_	
14	t9426_000	abe	PTKVZ	abe/+slahen	_	 *	_	
15	t9427_000	-	$_	_	_	 * ) )	_	
16	t9428_000	sô	AVD	sô	_	(Cl (PreF * )	_	
17	t9429_000	vindet	VVFIN	vinden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
18	t9430_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
19	t9431_000	wole	AVD	wol(e)	_	 * )	_	
20	t9432_000	-	$_	_	_	 *	_	
21	t9433_000	wie	AVW	wiè	_	(Frag *	_	
22	t9434_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
23	t9435_000	daz	DDART	dër	Neut.Akk.Sg	(PreF (NX *	_	
24	t9436_000	mel	NA	mëlw	Akk.Sg	 * ) )	_	
25	t9437_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
26	t9438_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
27	t9439_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9440_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t9441_000	heberînem	ADJA	hèberîn	Pos.Neut.Dat.Sg.st	(NX *	_	
3	t9442_000	melwe	NA	mëlw	Dat.Sg	 * ) )	_	
4	t9443_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9444_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t9445_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t9446_000	ouch	AVD	ouch	_	(MF * )	_	
4	t9447_000	gesatzt	VVPP	sètzen	_	(RB (VX * ) )	_	
5	t9448_000	umbe	APPR	umbe	_	(PostF (PPX *	_	
6	t9449_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
7	t9450_000	heberîne	ADJA	hèberîn	Pos.Neut.Akk.Sg.wk	 *	_	
8	t9451_000	mel	NA	mëlw	Akk.Sg	 * ) ) )	_	
9	t9452_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9453_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t9454_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t9455_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
4	t9456_000	ouch	AVD	ouch	_	 * )	_	
5	t9457_000	verkoufen	VVINF	ver-koufen	_	(RB (VX * ) )	_	
6	t9458_000	mit	APPR	mit	_	(PostF (PPX *	_	
7	t9459_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
8	t9460_000	selben	DDA	sëlb	Neut.Dat.Sg.wk	 *	_	
9	t9461_000	mâze	NA	mâz	Dat.Sg	 * ) ) )	_	
10	t9462_000	-	$_	_	_	 * )	_	
11	t9463_000	und	KON	unte	_	(Cl (PrePreF * )	_	
12	t9464_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t9465_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) )	_	
14	t9466_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
15	t9467_000	-	$_	_	_	 * )	_	
16	t9468_000	nâch	APPR	nâh	_	(PPX *	_	
17	t9469_000	dem	DDS	dër	Masc.Dat.Sg	(NX * ) )	_	
18	t9470_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
19	t9471_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
20	t9472_000	haber	NA	haber(e)	Nom.Sg	 * )	_	
21	t9473_000	ûf	PTKVZ	ûf/+slahen	_	 *	_	
22	t9474_000	oder	KON	oder	_	 * )	_	
23	t9475_000	abe	PTKVZ	abe/+slahen	_	(RB (VX *	_	
24	t9476_000	slehet	VVFIN	slahen/ûf+/abe+	Ind.Pres.Sg.3	 * ) )	_	
25	t9477_000	-	$_	_	_	 *	_	
26	t9478_000	in	APPR	in	_	(Frag *	_	
27	t9479_000	aller	DIA	all	Fem.Dat.Sg.st	 *	_	
28	t9480_000	des	DDS	dër	Neut.Gen.Sg	(NX * )	_	
29	t9481_000	wîse	NA	wîs(e)	Dat.Sg	(NX * )	_	
30	t9482_000	-	$_	_	_	 * ) )	_	
31	t9483_000	als	KO*	all-sô	_	(Frag *	_	
32	t9484_000	iezunt	AVD	iè-zunt	_	 *	_	
33	t9485_000	geredet	VVPP	rèden	_	(VX *	_	
34	t9486_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
35	t9487_000	von	APPR	von	_	(PPX *	_	
36	t9488_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
37	t9489_000	weize	NA	wèize	Dat.Sg	 * ) )	_	
38	t9490_000	-	$_	_	_	 * )	_	
39	t9491_000	und	KON	unte	_	(Frag *	_	
40	t9492_000	ouch	AVD	ouch	_	 *	_	
41	t9493_000	als	KO*	all-sô	_	 *	_	
42	t9494_000	von	APPR	von	_	(PPX *	_	
43	t9495_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
44	t9496_000	weizîn	ADJA	wèizîn	Pos.Neut.Dat.Sg.0	 *	_	
45	t9497_000	melwe	NA	mëlw	Dat.Sg	 * ) )	_	
46	t9498_000	vore	PTKVZ	vor(e)/+schrîben	_	(VX *	_	
47	t9499_000	stêt	VVFIN	stân	Ind.Pres.Sg.3	 *	_	
48	t9500_000	geschriben	VVPP	schrîben/vor(e)+	_	 * )	_	
49	t9501_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9502_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t9503_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t9504_000	salze	NA	salz	Dat.Sg	 * ) )	_	
4	t9505_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9506_000	ouch	AVD	ouch	_	(S (Cl (PreF * )	_	
2	t9507_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t9508_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
4	t9509_000	gemachet	VVPP	machen	_	(RB (VX * ) )	_	
5	t9510_000	-	$_	_	_	 *	_	
6	t9511_000	mâz	NA	mâz	Akk.Pl	(Frag (NX *	_	
7	t9512_000	zuo	APPR	ze	_	(PPX *	_	
8	t9513_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
9	t9514_000	salze	NA	salz	Dat.Sg	 * ) ) )	_	
10	t9515_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9516_000	der	DDS	dër	*.Gen.Pl	(S (Cl (PreF (NX * ) )	_	
2	t9517_000	gên	VVFIN	gân	*.Pres.Pl.3	(LB (VX * ) )	_	
3	t9518_000	siben	CARDS	siben	Neut.Nom.Pl.0	(MF (NX * )	_	
4	t9519_000	bestrichen	VVPP	be-strîchen	_	(VX * )	_	
5	t9520_000	in	APPR	in	_	(PPX *	_	
6	t9521_000	die	DDART	dër	Masc.Akk.Pl	(NX *	_	
7	t9522_000	salzmetzen	NA	salz-mètze	Akk.Pl	 * ) ) )	_	
8	t9523_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9524_000	nû	AVD	nû	_	(S (Cl (PreF (PreF * ) )	_	
2	t9525_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t9526_000	man	PI	man	*.Nom.Sg.st	(PreF (MF (NX * )	_	
4	t9527_000	und	KON	unte	_	 * ) )	_	
5	t9528_000	gebiutet	VVFIN	ge-bièten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t9529_000	-	$_	_	_	 * )	_	
7	t9530_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
8	t9531_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
9	t9532_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
10	t9533_000	salz	NA	salz	Akk.Sg	 * )	_	
11	t9534_000	vürebaz	AVD	vür(e)-bazz	_	 * )	_	
12	t9535_000	verkoufe	VVFIN	ver-koufen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
13	t9536_000	mit	APPR	mit	_	(PostF (PPX *	_	
14	t9537_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
15	t9538_000	selben	DDA	sëlb	*.Dat.Pl.st	 *	_	
16	t9539_000	mâzen	NA	mâz	Dat.Pl	 * ) ) )	_	
17	t9540_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9541_000	und	KON	unte	_	(S (Frag *	_	
2	t9542_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(VX *	_	
3	t9543_000	vunden	VVPP	vinden	_	 * )	_	
4	t9544_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9545_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t9546_000	ein	CARDA	èin	Neut.Nom.Sg.0	(MF (NX *	_	
3	t9547_000	malter	NA	malter	Nom.Sg	 *	_	
4	t9548_000	salzes	NA	salz	Gen.Sg	(NX * ) )	_	
5	t9549_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(NX *	_	
6	t9550_000	schillinge	NA	schilling	Akk.Pl	 *	_	
7	t9551_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
8	t9552_000	-	$_	_	_	 * )	_	
9	t9553_000	sô	AVD	sô	_	(Cl (PreF * )	_	
10	t9554_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t9555_000	der	DDART	dër	*.Gen.Pl	(MF (NX *	_	
12	t9556_000	mâze	NA	mâz	Gen.Pl	 * )	_	
13	t9557_000	einez	CARDS	èin	Neut.Nom.Sg.st	(NX *	_	
14	t9558_000	umbe	APPR	umbe	_	(PPX *	_	
15	t9559_000	einen	CARDA	èin	Masc.Akk.Sg.st	(NX *	_	
16	t9560_000	pfenninc	NA	pfènning	Akk.Sg	 * ) ) ) )	_	
17	t9561_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9562_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t9563_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
3	t9564_000	sehtzic	CARDA	sëh-zig	Masc.Akk.Pl.0	(NX *	_	
4	t9565_000	pfenninge	NA	pfènning	Akk.Pl	 * ) )	_	
5	t9566_000	-	$_	_	_	 * )	_	
6	t9567_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t9568_000	kumen	VVFIN	komen	*.Pres.Pl.3	(LB (VX * ) )	_	
8	t9569_000	zwei	CARDA	zwêne	Neut.Nom.Pl.st	(MF (NX *	_	
9	t9570_000	mâz	NA	mâz	Nom.Pl	 *	_	
10	t9571_000	umbe	APPR	umbe	_	(PPX *	_	
11	t9572_000	vünf	CARDA	vünv	Masc.Akk.Pl.0	(NX *	_	
12	t9573_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
13	t9574_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9575_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t9576_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
3	t9577_000	salz	NA	salz	Nom.Sg	 * )	_	
4	t9578_000	sehs	CARDA	sëhs	Masc.Akk.Pl.0	(NX *	_	
5	t9579_000	schillinge	NA	schilling	Akk.Pl	 *	_	
6	t9580_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) ) )	_	
7	t9581_000	-	$_	_	_	 * )	_	
8	t9582_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t9583_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t9584_000	ein	CARDA	èin	Neut.Nom.Sg.0	(MF (NX *	_	
11	t9585_000	mâz	NA	mâz	Nom.Sg	 *	_	
12	t9586_000	umbe	APPR	umbe	_	(PPX *	_	
13	t9587_000	drî	CARDA	drî	Masc.Akk.Pl.0	(NX *	_	
14	t9588_000	haller	NA	haller(e)	Akk.Pl	 * ) ) ) )	_	
15	t9589_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9590_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t9591_000	dâr	PAVD	dâr/+nâh	_	(LB (VX *	_	
3	t9592_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
4	t9593_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	 * ) )	_	
5	t9594_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
6	t9595_000	salz	NA	salz	Nom.Sg	 * ) )	_	
7	t9596_000	-	$_	_	_	 *	_	
8	t9597_000	siben	CARDA	siben	Masc.Akk.Pl.0	(Frag (NX *	_	
9	t9598_000	schillinge	NA	schilling	Akk.Pl	 * )	_	
10	t9599_000	-	$_	_	_	 * ) )	_	
11	t9600_000	ahte	CARDA	ahte	Masc.Akk.Pl.0	(NX *	_	
12	t9601_000	schillinge	NA	schilling	Akk.Pl	 * )	_	
13	t9602_000	niun	CARDA	niun	Masc.Akk.Pl.0	(Frag (NX *	_	
14	t9603_000	schillinge	NA	schilling	Akk.Pl	 * )	_	
15	t9604_000	-	$_	_	_	 * )	_	
16	t9605_000	oder	KON	oder	_	(Frag *	_	
17	t9606_000	zehen	CARDA	zëhen	Masc.Akk.Pl.0	(NX *	_	
18	t9607_000	schillinge	NA	schilling	Akk.Pl	 *	_	
19	t9608_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
20	t9609_000	-	$_	_	_	 * )	_	
21	t9610_000	und	KON	unte	_	(Frag *	_	
22	t9611_000	swaz	PG	swër	Neut.Akk.Sg.st	(NX * )	_	
23	t9612_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
24	t9613_000	vürebaz	AVD	vür(e)-bazz	_	(PreF * )	_	
25	t9614_000	giltet	VVFIN	gëlten	Ind.Pres.Sg.3	(LB (VX * ) )	_	
26	t9615_000	-	$_	_	_	 * )	_	
27	t9616_000	ez	PPER	ër	Neut.Nom.Sg.3	(Cl (PreF (NX * ) )	_	
28	t9617_000	slahe	VVFIN	slahen/ûf+/abe+	Subj.Pres.Sg.3	(LB (VX * ) )	_	
29	t9618_000	ûf	PTKVZ	ûf/+slahen	_	(RB * )	_	
30	t9619_000	oder	KON	oder	_	(PostF *	_	
31	t9620_000	abe	PTKVZ	abe/+slahen	_	 * )	_	
32	t9621_000	-	$_	_	_	 * )	_	
33	t9622_000	sô	AVD	sô	_	(Cl (PreF * )	_	
34	t9623_000	vindet	VVFIN	vinden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
35	t9624_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
36	t9625_000	alle	DIA	all	Fem.Akk.Sg.st	(NX *	_	
37	t9626_000	zît	NA	zît	Akk.Sg	 * ) )	_	
38	t9627_000	-	$_	_	_	 *	_	
39	t9628_000	wie	AVW	wiè	_	(Frag *	_	
40	t9629_000	sich	PRF	sich	Akk	(NX *	_	
41	t9630_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
42	t9631_000	mâze	NA	mâz	Gen.Pl	 * ) )	_	
43	t9632_000	einez	CARDS	èin	Neut.Nom.Sg.st	(PreF (NX * ) )	_	
44	t9633_000	gebüret	VVFIN	ge-bür(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
45	t9634_000	-	$_	_	_	 * )	_	
46	t9635_000	und	KON	unte	_	(Frag *	_	
47	t9636_000	wie	AVW	wiè	_	 *	_	
48	t9637_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
49	t9638_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
50	t9639_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
51	t9640_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
52	t9641_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9642_000	und	KON	unte	_	(S (Frag *	_	
2	t9643_000	ouch	AVD	ouch	_	(PreF * )	_	
3	t9644_000	sweliche	DGA	swèl(i)ch	Fem.Akk.Sg.st	(NX *	_	
4	t9645_000	zît	NA	zît	Akk.Sg	 *	_	
5	t9646_000	ane	APPR	ane	_	(PPX *	_	
6	t9646_001	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
7	t9647_000	tage	NA	tag	Dat.Sg	 * ) ) )	_	
8	t9648_000	salz	NA	salz	Nom.Sg	(NX * )	_	
9	t9649_000	her	AVD	hër(e)	_	(PreF * )	_	
10	t9650_000	kumet	VVFIN	komen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t9651_000	-	$_	_	_	 * )	_	
12	t9652_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t9653_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t9654_000	stên	VVINF	stân	_	(RB (VX * ) )	_	
15	t9655_000	zuo	APPR	ze	_	(PostF (PPX *	_	
16	t9656_000	markete	NA	market	Dat.Sg	(NX *	_	
17	t9657_000	ûf	APPR	ûf	_	(PPX *	_	
18	t9658_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
19	t9659_000	andern	DIA	ander	Masc.Akk.Sg.st	 *	_	
20	t9660_000	tac	NA	tag	Akk.Sg	 * ) ) ) ) )	_	
21	t9661_000	-	$_	_	_	 *	_	
22	t9662_000	ze	APPR	ze	_	(Frag (PPX *	_	
23	t9662_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
24	t9663_000	glocken	NA	glocke	Dat.Sg	 *	_	
25	t9664_000	âne	APPR	âne	_	(PPX *	_	
26	t9665_000	vürekouf	NA	vür(e)-kouf	Akk.Sg	(NX *	_	
27	t9666_000	bî	APPR	bî	_	(PPX *	_	
28	t9667_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
29	t9668_000	buoze	NA	buoze	Dat.Sg	 * ) ) ) ) ) )	_	
30	t9669_000	-	$_	_	_	 * )	_	
31	t9670_000	von	APPR	von	_	(Frag (PPX *	_	
32	t9670_001	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
33	t9671_000	pfunde	NA	pfunt	Dat.Sg	 * ) )	_	
34	t9672_000	vier	CARDA	vièr	Masc.Akk.Pl.0	(NX *	_	
35	t9673_000	schillinge	NA	schilling	Akk.Pl	 *	_	
36	t9674_000	pfenninge	NA	pfènning	Gen.Pl	(NX * ) )	_	
37	t9675_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9676_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t9677_000	salze	NA	salz	Dat.Sg	(NX * ) )	_	
3	t9678_000	und	KON	unte	_	 *	_	
4	t9679_000	melwe	NA	mëlw	Dat.Sg	(NX * )	_	
5	t9680_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9681_000	swer	PG	swër	Masc.Nom.Sg.st	(S (Frag (NX * )	_	
2	t9682_000	ouch	AVD	ouch	_	 *	_	
3	t9683_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	(NX *	_	
4	t9684_000	salz	NA	salz	Akk.Sg	 * )	_	
5	t9685_000	oder	KON	oder	_	 *	_	
6	t9686_000	mel	NA	mëlw	Akk.Sg	(NX * )	_	
7	t9687_000	hôher	AVD	hôhe	_	(PreF * )	_	
8	t9688_000	gæbe	VVFIN	gëben	Subj.Past.Sg.3	(LB (VX * ) )	_	
9	t9689_000	-	$_	_	_	 * )	_	
10	t9690_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
11	t9691_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t9692_000	zuo	APPR	ze	_	(MF (PPX *	_	
13	t9693_000	bezzerunge	NA	bèzzerunge	Dat.Sg	(NX * ) ) )	_	
14	t9694_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
15	t9695_000	sehs	CARDA	sëhs	Masc.Akk.Pl.0	(PostF (NX *	_	
16	t9696_000	pfenninge	NA	pfènning	Akk.Pl	 * )	_	
17	t9697_000	ie	AVD	iè	_	 *	_	
18	t9698_000	von	APPR	von	_	(PPX *	_	
19	t9699_000	eineme	CARDA	èin	Neut.Dat.Sg.st	(NX *	_	
20	t9700_000	mâze	NA	mâz	Dat.Sg	 * ) ) )	_	
21	t9701_000	-	$_	_	_	 *	_	
22	t9702_000	als	KO*	all-sô	_	(Frag *	_	
23	t9703_000	dicke	AVD	dicke	_	(PreF * )	_	
24	t9704_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
25	t9705_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
26	t9706_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
27	t9707_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9708_000	bî	APPR	bî	_	(S (Frag (PPX *	_	
2	t9709_000	swem	PG	swër	Masc.Dat.Sg.st	(NX * ) )	_	
3	t9710_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
4	t9711_000	aber	AVD	aber	_	(PreF *	_	
5	t9712_000	andere	DIA	ander	Neut.Akk.Pl.st	(NX *	_	
6	t9713_000	mâz	NA	mâz	Akk.Pl	 * ) )	_	
7	t9714_000	vünte	VVFIN	vinden	Subj.Past.Sg.3	(LB (VX * ) )	_	
8	t9715_000	-	$_	_	_	 * )	_	
9	t9716_000	oder	KON	oder	_	(Frag *	_	
10	t9717_000	bî	APPR	bî	_	(PPX *	_	
11	t9718_000	swem	PG	swër	Masc.Dat.Sg.st	(NX * ) )	_	
12	t9719_000	die	DDS	dër	Neut.Nom.Pl	(NX * )	_	
13	t9720_000	wurden	VAFIN	wërden	(Subj).Past.Pl.3	(VX *	_	
14	t9721_000	begriffen	VVPP	be-grîfen	_	 * )	_	
15	t9722_000	-	$_	_	_	 * )	_	
16	t9723_000	wizzet	VVIMP	wizzen	Pl.2	(LB (VX * ) )	_	
17	t9724_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
18	t9725_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t9726_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
20	t9727_000	swærlîche	AVD	swær-lîche	_	 * )	_	
21	t9728_000	dâr	PAVD	dâr/+umbe	_	(RB (VX *	_	
22	t9729_000	umbe	PAVAP	umbe/dâr+	_	 *	_	
23	t9730_000	büezen	VVINF	büèzen	_	 * ) )	_	
24	t9731_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9732_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t9733_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
3	t9734_000	mâzen	NA	mâz	Dat.Pl	 *	_	
4	t9735_000	zuo	APPR	ze	_	(PPX *	_	
5	t9736_000	kolen	NA	kol(e)	Dat.Pl	(NX * ) ) ) )	_	
6	t9737_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9738_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t9739_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t9740_000	ouch	AVD	ouch	_	(MF * )	_	
4	t9741_000	gemachet	VVPP	machen	_	(RB (VX * ) )	_	
5	t9742_000	kuofelech	NA	kuofelach	Akk.Pl	(PostF (NX * )	_	
6	t9743_000	beslagen	VVPP	be-slahen	_	(VX * )	_	
7	t9744_000	mit	APPR	mit	_	(PPX *	_	
8	t9745_000	îsenînen	ADJA	îsenîn	Pos.*.Dat.Pl.*	(NX *	_	
9	t9746_000	reifen	NA	rèif	Dat.Pl	 * ) ) )	_	
10	t9747_000	-	$_	_	_	 *	_	
11	t9748_000	dâ	PAVD	dâr/+mit(e)	_	(Frag *	_	
12	t9749_000	mit	PAVAP	mit(e)/dâr+	_	 *	_	
13	t9750_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
14	t9751_000	vürebaz	AVD	vür(e)-bazz	_	(PreF * )	_	
15	t9752_000	kolen	NA	kol(e)	Akk.Pl	(NX * )	_	
16	t9753_000	ûz	PTKVZ	ûz/+mëzzen	_	(PreF (VX *	_	
17	t9754_000	mezzen	VVINF	mëzzen/ûz+	_	 * ) )	_	
18	t9755_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t9756_000	-	$_	_	_	 * )	_	
20	t9757_000	einen	DIART	èin	Masc.Akk.Sg.st	(Frag (NX *	_	
21	t9758_000	halben	ADJA	halb	Pos.Masc.Akk.Sg.*	 *	_	
22	t9759_000	korp	NA	korb	Akk.Sg	 * )	_	
23	t9760_000	oder	KON	oder	_	 *	_	
24	t9761_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
25	t9762_000	vierteil	NA	vièr-tèil	Akk.Sg	 *	_	
26	t9763_000	eines	DIART	èin	Masc.Gen.Sg.st	(NX *	_	
27	t9764_000	korbes	NA	korb	Gen.Sg	 * ) )	_	
28	t9765_000	-	$_	_	_	 *	_	
29	t9766_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
30	t9767_000	rîchen	ADJA	rîche	Pos.*.Dat.Pl..%.*	(MF *	_	
31	t9768_000	und	KON	unte	_	 *	_	
32	t9769_000	armen	ADJA	arm	Pos.*.Dat.Pl..%.*	 *	_	
33	t9770_000	deste	AVD	dëste	_	 *	_	
34	t9771_000	rehter	AVD	rëhte	_	 * )	_	
35	t9772_000	geschehe	VVFIN	ge-schëhen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
36	t9773_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9774_000	und	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t9775_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t9776_000	si	PPER	ër	Masc.Akk.Pl.3	(MF (NX * )	_	
4	t9777_000	ieweder	DIA	iè-wëder	Masc.Nom.Sg.0	(NX *	_	
5	t9777_001	man	NA	mann	Nom.Sg	 * )	_	
6	t9778_000	heim	AVD	hèim	_	 * )	_	
7	t9779_000	ziehen	VVINF	zièhen	_	(RB (VX * ) )	_	
8	t9780_000	-	$_	_	_	 * )	_	
9	t9781_000	oder	KON	oder	_	(Frag *	_	
10	t9782_000	schicken	VVINF	schicken	_	(VX * ) )	_	
11	t9783_000	wâr	PAVW	wâr/+inne	_	(Frag *	_	
12	t9784_000	inne	PAVAP	inne/wâr+	_	 *	_	
13	t9785_000	-	$_	_	_	 * )	_	
14	t9786_000	oder	KON	oder	_	(Frag *	_	
15	t9787_000	wâ	PAVW	wâr/+mit(e)	_	 *	_	
16	t9788_000	mit	PAVAP	mit(e)/wâr+	_	 *	_	
17	t9789_000	man	PI	man	*.Nom.Sg.st	(PreF (NX * ) )	_	
18	t9790_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t9791_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9792_000	dise	DDA	dise	Neut.Nom.Pl	(S (Frag (NX *	_	
2	t9793_000	gesetze	NA	ge-sètze	Nom.Pl	 * )	_	
3	t9794_000	sîn	VAFIN	sîn	(Ind).Pres.Pl.3	(VX *	_	
4	t9795_000	vollebrâht	VVPP	voll-bringen	_	 * )	_	
5	t9796_000	-	$_	_	_	 * )	_	
6	t9797_000	gesetzet	VVPP	sètzen	_	(Frag (VX (VX * )	_	
7	t9798_000	und	KON	unte	_	 *	_	
8	t9799_000	gemachet	VVPP	machen	_	(VX * ) )	_	
9	t9800_000	-	$_	_	_	 * )	_	
10	t9801_000	in	APPR	in	_	(Frag (PPX *	_	
11	t9802_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
12	t9803_000	jâre	NA	jâr	Dat.Sg	 * ) )	_	
13	t9804_000	-	$_	_	_	 * )	_	
14	t9805_000	dâ	AVD	dâr	_	(Cl (PreF *	_	
15	t9806_000	man	PI	man	*.Nom.Sg.st	(NX * ) )	_	
16	t9807_000	zalte	VVFIN	zèl(e)n	(Ind).Past.Sg.3	(LB (VX * ) )	_	
17	t9808_000	-	$_	_	_	 *	_	
18	t9809_000	von	APPR	von	_	(Frag (PPX *	_	
19	t9810_000	unsers	DPOSA	unser	Masc.Gen.Sg.st	(NX *	_	
20	t9811_000	hêrren	NA	hêrre	Gen.Sg	 * ) )	_	
21	t9812_000	gebürte	NA	ge-burt	Dat.Sg	(NX * )	_	
22	t9813_000	-	$_	_	_	 * )	_	
23	t9814_000	drîzehen	CARDA	drî-zëhen	Neut.Akk.Pl.0	(Frag (NX *	_	
24	t9815_000	hundert	ADJA	hundert	Pos.Neut.Akk.Pl.0	 *	_	
25	t9816_000	jâr	NA	jâr	Akk.Pl	 * )	_	
26	t9817_000	-	$_	_	_	 * )	_	
27	t9818_000	in	APPR	in	_	(Frag *	_	
28	t9819_000	dem	DDART	dër	Neut.Dat.Sg	 *	_	
29	t9820_000	driu	CARDA	drî	Neut.Nom..Akk.Pl.st	 *	_	
30	t9821_000	und	KON	unte	_	 *	_	
31	t9822_000	vierzigesten	ADJA	vièr-zigest	Pos.Neut.Dat.Sg.wk	(NX *	_	
32	t9823_000	jâre	NA	jâr	Dat.Sg	 * )	_	
33	t9824_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t9825_000	unte	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t9826_000	sîn	VAFIN	sîn	(Ind).Pres.Pl.3	(LB (VX * ) )	_	
3	t9827_000	unser	DPOSA	unser	Masc.Nom.Pl.0	(MF (NX *	_	
4	t9828_000	hêrren	NA	hêrre	Nom.Pl	 * )	_	
5	t9829_000	hêrr	NA	hêrre	Nom.Sg	(NX *	_	
6	t9830_000	Gotevrit	NE	Gote-vrid	Nom.Sg	 *	_	
7	t9831_000	von	APPR	von	_	(PPX *	_	
8	t9832_000	Nîtegge	NE	Nîd-ègge	Dat.Sg	(NX * ) ) ) )	_	
9	t9833_000	-	$_	_	_	 *	_	
10	t9834_000	und	KON	unte	_	(Frag *	_	
11	t9835_000	hêrr	NA	hêrre	Nom.Sg	(NX *	_	
12	t9836_000	Dietrîch	NE	Dièt(e)-rîch	Nom.Sg	 *	_	
13	t9837_000	von	APPR	von	_	(PPX *	_	
14	t9838_000	Masbach	NE	Mas-bach	Dat.Sg	(NX * ) ) )	_	
15	t9839_000	-	$_	_	_	 * )	_	
16	t9840_000	von	APPR	von	_	(Frag (PPX *	_	
17	t9841_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
18	t9842_000	kapitels	NA	kapitel	Gen.Sg	 * ) )	_	
19	t9843_000	wegen	NA	wëg	Dat.Pl	(NX *	_	
20	t9844_000	zuo	APPR	ze	_	(PPX *	_	
21	t9845_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
22	t9846_000	tuome	NA	tuom	Dat.Sg	 * ) ) )	_	
23	t9847_000	-	$_	_	_	 * ) )	_	
24	t9848_000	dâ	PAVD	dâr/+bî	_	(Frag (VX (VX *	_	
25	t9849_000	bî	PAVAP	bî/dâr+	_	 *	_	
26	t9850_000	gesezzen	VVPP	sitzen	_	 * )	_	
27	t9851_000	und	KON	unte	_	 *	_	
28	t9852_000	gewesen	VAPP	wësen	_	(VX * ) )	_	
29	t9853_000	-	$_	_	_	 * ) ) )	_
	

