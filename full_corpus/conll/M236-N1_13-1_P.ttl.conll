# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
#ID TID WORD LEMMA POS INFL SB file:///M236-N1_13-1_P.ttl/
1	t1_000	-	FM	[!]	_	(S (Frag *	_	
2	t2_000	-	FM	[!]	_	 *	_	
3	t3_000	-	FM	[!]	_	 *	_	
4	t4_000	-	FM	[!]	_	 *	_	
5	t5_000	-	FM	[!]	_	 *	_	
6	t6_000	-	FM	[!]	_	 *	_	
7	t7_000	-	FM	[!]	_	 *	_	
8	t8_000	-	FM	[!]	_	 *	_	
9	t9_000	-	FM	[!]	_	 *	_	
10	t10_000	-	$_	_	_	 * )	_	
11	t11_000	-	FM	[!]	_	(Frag *	_	
12	t12_000	-	FM	[!]	_	 *	_	
13	t13_000	-	FM	[!]	_	 *	_	
14	t14_000	-	FM	[!]	_	 *	_	
15	t15_000	-	FM	[!]	_	 *	_	
16	t16_000	-	$_	_	_	 * )	_	
17	t17_000	-	FM	[!]	_	(Frag *	_	
18	t18_000	-	FM	[!]	_	 *	_	
19	t18_001	-	FM	[!]	_	 *	_	
20	t19_000	-	$_	_	_	 * )	_	
21	t20_000	-	FM	[!]	_	(Frag *	_	
22	t21_000	-	$_	_	_	 * )	_	
23	t22_000	-	FM	[!]	_	(Frag *	_	
24	t23_000	-	FM	[!]	_	 *	_	
25	t24_000	-	FM	[!]	_	 *	_	
26	t25_000	-	$_	_	_	 * )	_	
27	t26_000	-	FM	[!]	_	(Frag *	_	
28	t27_000	-	$_	_	_	 * )	_	
29	t28_000	-	FM	[!]	_	(Frag *	_	
30	t29_000	-	FM	[!]	_	 *	_	
31	t30_000	-	$_	_	_	 * )	_	
32	t31_000	-	FM	[!]	_	(Frag *	_	
33	t31_001	-	FM	[!]	_	 *	_	
34	t32_000	-	FM	[!]	_	 *	_	
35	t33_000	-	$_	_	_	 * )	_	
36	t34_000	-	FM	[!]	_	(Frag *	_	
37	t35_000	-	FM	[!]	_	 *	_	
38	t36_000	-	FM	[!]	_	 *	_	
39	t37_000	-	FM	[!]	_	 *	_	
40	t38_000	-	FM	[!]	_	 *	_	
41	t39_000	-	$_	_	_	 * )	_	
42	t40_000	-	FM	[!]	_	(Frag *	_	
43	t41_000	-	FM	[!]	_	 *	_	
44	t41_001	-	FM	[!]	_	 *	_	
45	t42_000	-	FM	[!]	_	 *	_	
46	t43_000	-	$_	_	_	 * )	_	
47	t44_000	-	FM	[!]	_	(Frag *	_	
48	t45_000	-	$_	_	_	 * )	_	
49	t46_000	-	FM	[!]	_	(Frag *	_	
50	t47_000	-	$_	_	_	 * )	_	
51	t48_000	-	FM	[!]	_	(Frag *	_	
52	t49_000	-	FM	[!]	_	 *	_	
53	t50_000	-	$_	_	_	 * )	_	
54	t51_000	-	FM	[!]	_	(Frag *	_	
55	t52_000	-	$_	_	_	 * )	_	
56	t53_000	-	FM	[!]	_	(Frag *	_	
57	t54_000	-	FM	[!]	_	 *	_	
58	t55_000	-	$_	_	_	 * )	_	
59	t56_000	-	FM	[!]	_	(Frag *	_	
60	t57_000	-	$_	_	_	 * )	_	
61	t58_000	-	FM	[!]	_	(Frag *	_	
62	t59_000	-	FM	[!]	_	 *	_	
63	t60_000	-	$_	_	_	 * )	_	
64	t61_000	-	FM	[!]	_	(Frag *	_	
65	t62_000	-	FM	[!]	_	 *	_	
66	t63_000	-	FM	[!]	_	 *	_	
67	t64_000	-	$_	_	_	 * )	_	
68	t65_000	-	FM	[!]	_	(Frag *	_	
69	t66_000	-	FM	[!]	_	 *	_	
70	t67_000	-	FM	[!]	_	 *	_	
71	t68_000	-	FM	[!]	_	 *	_	
72	t69_000	-	FM	[!]	_	 *	_	
73	t70_000	-	FM	[!]	_	 *	_	
74	t71_000	-	$_	_	_	 * )	_	
75	t72_000	-	FM	[!]	_	(Frag *	_	
76	t73_000	-	FM	[!]	_	 *	_	
77	t74_000	-	FM	[!]	_	 *	_	
78	t75_000	-	FM	[!]	_	 *	_	
79	t76_000	-	FM	[!]	_	 *	_	
80	t77_000	-	FM	[!]	_	 *	_	
81	t78_000	-	FM	[!]	_	 *	_	
82	t79_000	-	FM	[!]	_	 *	_	
83	t80_000	-	FM	[!]	_	 *	_	
84	t81_000	-	$_	_	_	 * )	_	
85	t82_000	-	FM	[!]	_	(Frag *	_	
86	t83_000	-	$_	_	_	 * )	_	
87	t84_000	-	FM	[!]	_	(Frag *	_	
88	t84_001	-	FM	[!]	_	 *	_	
89	t85_000	-	$_	_	_	 * )	_	
90	t86_000	-	FM	[!]	_	(Frag *	_	
91	t87_000	-	$_	_	_	 * )	_	
92	t88_000	-	FM	[!]	_	(Frag *	_	
93	t89_000	-	FM	[!]	_	 *	_	
94	t90_000	-	FM	[!]	_	 *	_	
95	t91_000	-	FM	[!]	_	 *	_	
96	t92_000	-	$_	_	_	 * )	_	
97	t93_000	-	FM	[!]	_	(Frag *	_	
98	t94_000	-	$_	_	_	 * )	_	
99	t95_000	-	FM	[!]	_	(Frag *	_	
100	t96_000	-	FM	[!]	_	 *	_	
101	t97_000	-	FM	[!]	_	 *	_	
102	t98_000	-	$_	_	_	 * )	_	
103	t99_000	-	FM	[!]	_	(Frag *	_	
104	t100_000	-	FM	[!]	_	 *	_	
105	t101_000	-	$_	_	_	 * )	_	
106	t102_000	-	FM	[!]	_	(Frag *	_	
107	t103_000	-	FM	[!]	_	 *	_	
108	t104_000	-	$_	_	_	 * )	_	
109	t105_000	-	FM	[!]	_	(Frag *	_	
110	t106_000	-	FM	[!]	_	 *	_	
111	t107_000	-	FM	[!]	_	 *	_	
112	t108_000	-	FM	[!]	_	 *	_	
113	t109_000	-	FM	[!]	_	 *	_	
114	t110_000	-	FM	[!]	_	 *	_	
115	t110_001	-	FM	[!]	_	 *	_	
116	t111_000	-	FM	[!]	_	 *	_	
117	t112_000	-	FM	[!]	_	 *	_	
118	t113_000	-	$_	_	_	 * )	_	
119	t114_000	-	FM	[!]	_	(Frag *	_	
120	t114_001	-	FM	[!]	_	 *	_	
121	t115_000	-	FM	[!]	_	 *	_	
122	t116_000	-	FM	[!]	_	 *	_	
123	t116_001	-	FM	[!]	_	 *	_	
124	t117_000	-	FM	[!]	_	 *	_	
125	t118_000	-	FM	[!]	_	 *	_	
126	t119_000	-	FM	[!]	_	 *	_	
127	t119_001	-	FM	[!]	_	 *	_	
128	t120_000	-	FM	[!]	_	 *	_	
129	t120_001	-	FM	[!]	_	 *	_	
130	t121_000	-	FM	[!]	_	 *	_	
131	t122_000	-	FM	[!]	_	 *	_	
132	t123_000	-	FM	[!]	_	 *	_	
133	t124_000	-	FM	[!]	_	 *	_	
134	t125_000	-	FM	[!]	_	 *	_	
135	t126_000	-	FM	[!]	_	 *	_	
136	t127_000	-	$_	_	_	 * )	_	
137	t128_000	-	FM	[!]	_	(Frag *	_	
138	t129_000	-	FM	[!]	_	 *	_	
139	t130_000	-	FM	[!]	_	 *	_	
140	t131_000	-	FM	[!]	_	 *	_	
141	t132_000	-	FM	[!]	_	 *	_	
142	t133_000	-	FM	[!]	_	 *	_	
143	t134_000	-	FM	[!]	_	 *	_	
144	t135_000	sunnenstâp	NA	sunne(n)-stâb	Nom.Sg	(NX * )	_	
145	t136_000	-	$_	_	_	 * )	_	
146	t137_000	-	FM	[!]	_	(Frag *	_	
147	t138_000	-	FM	[!]	_	 *	_	
148	t139_000	-	FM	[!]	_	 *	_	
149	t140_000	-	FM	[!]	_	 *	_	
150	t141_000	-	FM	[!]	_	 *	_	
151	t141_001	-	FM	[!]	_	 *	_	
152	t142_000	-	FM	[!]	_	 *	_	
153	t143_000	-	FM	[!]	_	 *	_	
154	t144_000	-	$_	_	_	 *	_	
155	t145_000	Kuonrât	NE	Kuon-rât	Nom.Sg	(Frag (NX * )	_	
156	t146_000	oder	KON	oder	_	(PrePreF * )	_	
157	t147_000	swie	AVG	swiè	_	(LB * )	_	
158	t148_000	sô	PTK	sô	_	(MF *	_	
159	t149_000	dû	PPER	dû	Nom.Sg.2	(NX * ) )	_	
160	t150_000	heizest	VVFIN	hèizen	*.Pres.Sg.2	(RB (VX * ) ) ) )	_	
161	t151_000	ich	PPER	ich	Nom.Sg.1	(Cl (PreF (NX * ) )	_	
162	t152_000	spriche	VVFIN	sprëchen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
163	t153_000	dir	PPER	dû	Dat.Sg.2	(MF (NX * )	_	
164	t154_000	zuo	AVD	zuo	_	 *	_	
165	t155_000	umbe	APPR	umbe	_	(PPX *	_	
166	t156_000	mîn	DPOSA	mîn	Neut.Akk.Sg.0	(NX *	_	
167	t157_000	ros	NA	ross	Akk.Sg	 *	_	
168	t158_000	daz	DRELS	dër	Neut.Akk.Sg	(Cl (LB (NX * ) )	_	
169	t159_000	mir	PPER	ich	Dat.Sg.1	(MF (NX * ) )	_	
170	t160_000	verstolen	VVPP	ver-stël(e)n	_	(RB (VX *	_	
171	t160_001	wart	VAFIN	wërden	Ind.Past.Sg.3	 * ) )	_	
172	t161_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t162_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t163_000	zîhe	VVFIN	zîhen	*.Pres.Sg.1	(LB (VX * ) )	_	
3	t164_000	dich	PPER	dû	Akk.Sg.2	(MF (NX * ) )	_	
4	t165_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
5	t166_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
6	t167_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) )	_	
7	t168_000	stæl	VVFIN	stël(e)n	Subj.Past.Sg.2	(RB (VX * ) )	_	
8	t169_000	-	$_	_	_	 * ) ) )	_	
9	t170_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
10	t171_000	bite	VVFIN	biten	*.Pres.Sg.1	(LB (VX * ) )	_	
11	t172_000	dich	PPER	dû	Akk.Sg.2	(MF (NX *	_	
12	t173_000	durch	APPR	durh	_	(PPX *	_	
13	t174_000	got	NA	got	Akk.Sg	(NX * ) ) )	_	
14	t175_000	unde	KON	unte	_	 *	_	
15	t176_000	durch	APPR	durh	_	(PPX *	_	
16	t177_000	des	DDS	dër	Masc.Gen.Sg	(NX * ) )	_	
17	t178_000	reht	NA	rëht	Akk.Sg	(NX * ) )	_	
18	t179_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
19	t180_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
20	t181_000	mir	PPER	ich	Dat.Sg.1	(NX * )	_	
21	t182_000	wider	AVD	wider(e)	_	 * )	_	
22	t183_000	gebest	VVFIN	gëben	Subj.Pres.Sg.2	(RB (VX * ) )	_	
23	t184_000	-	$_	_	_	 * ) ) )	_	
24	t185_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
25	t186_000	zîhes	VVFIN	zîhen	*.Pres.Sg.2	(LB (VX * ) )	_	
26	t186_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
27	t187_000	mich	PPER	ich	Akk.Sg.1	(NX * )	_	
28	t188_000	dâr	PAVD	dâr/+über(e)	_	 *	_	
29	t189_000	übere	PAVAP	über(e)/dâr+	_	 * )	_	
30	t190_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
31	t191_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
32	t192_000	mînen	DPOSA	mîn	Masc.Akk.Sg.st	(NX *	_	
33	t193_000	muotwillen	NA	muot-wille	Akk.Sg	 *	_	
34	t194_000	an	APPR	ane	_	(PPX *	_	
35	t194_001	dich	PPER	dû	Akk.Sg.2	(NX * ) ) ) )	_	
36	t195_000	vordere	VVFIN	vorder(e)n	*.Pres.Sg.1	(RB (VX * ) )	_	
37	t196_000	-	$_	_	_	 * ) ) )	_	
38	t197_000	dâ	PAVD	dâr/.+umbe	_	(Cl (LB (VX *	_	
39	t198_000	büte	VVFIN	bièten	Subj.Past.Sg.1	 * ) )	_	
40	t199_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
41	t200_000	dir	PPER	dû	Dat.Sg.2	(NX *	_	
42	t201_000	umbe	APPR	umbe/dâr.+	_	(PPX *	_	
43	t202_000	mînen	DPOSA	mîn	Masc.Akk.Sg.st	(NX *	_	
44	t203_000	voreit	NA	vor-èit	Akk.Sg	 * ) ) ) )	_	
45	t204_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t205_000	-	FM	[!]	_	(S (Frag *	_	
2	t206_000	-	FM	[!]	_	 *	_	
3	t207_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t208_000	den	DDS	dër	Masc.Akk.Sg	(S (NX *	_	
2	t209_000	voreit	NA	vor-èit	Akk.Sg	 * )	_	
3	t210_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
4	t211_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
5	t212_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
6	t213_000	verkiesen	VVINF	ver-kièsen	_	(RB (VX * ) )	_	
7	t214_000	durch	APPR	durh	_	(PostF (PPX *	_	
8	t215_000	got	NA	got	Akk.Sg	(NX * ) ) )	_	
9	t216_000	-	$_	_	_	 *	_	
10	t217_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
11	t218_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
12	t219_000	mir	PPER	ich	Dat.Sg.1	(NX * )	_	
13	t220_000	deste	AVD	dëste	_	 *	_	
14	t221_000	genædiger	ADJD	ge-nædig	Pos....0	 * )	_	
15	t221_001	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) )	_	
16	t222_000	zuo	APPR	ze	_	(PostF (PPX *	_	
17	t223_000	diseme	DDA	dise	Neut.Dat.Sg	(NX *	_	
18	t224_000	mîneme	DPOSA	mîn	Neut.Dat.Sg.st	 *	_	
19	t225_000	rehte	NA	rëht	Dat.Sg	 * ) ) )	_	
20	t226_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t227_000	-	FM	[!]	_	(S (Frag *	_	
2	t227_001	-	FM	[!]	_	 *	_	
3	t228_000	-	FM	[!]	_	 *	_	
4	t229_000	-	FM	[!]	_	 *	_	
5	t230_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t231_000	alse	KO*	all-sô	_	(S (Frag *	_	
2	t232_000	mich	PPER	ich	Akk.Sg.1	(NX * )	_	
3	t233_000	Rudolf	NE	Rudolf	Nom.Sg	(NX *	_	
4	t234_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
5	t235_000	hier	AVD	hièr	_	(MF *	_	
6	t236_000	gegenwertic	ADJD	gègen-wèrtig	Pos....0	 * )	_	
7	t237_000	stât	VVFIN	stân	Ind.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
8	t238_000	ane	PTKVZ	ane/>+sprëchen	_	(Frag (VX * )	_	
9	t239_000	gesprochen	VVPP	sprëchen/ane>+	_	(VX *	_	
10	t240_000	hât	VAFIN	haben	Ind.Pres.Sg.3	 * )	_	
11	t241_000	umbe	APPR	umbe	_	(PPX *	_	
12	t242_000	sîn	DPOSA	sîn	Neut.Akk.Sg.0	(NX *	_	
13	t243_000	ros	NA	ross	Akk.Sg	 * ) )	_	
14	t244_000	-	$_	_	_	 *	_	
15	t245_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
16	t246_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
17	t247_000	ime	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
18	t248_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) )	_	
19	t249_000	stele	VVFIN	stël(e)n	Subj.Pres.Sg.1	(RB (VX * ) )	_	
20	t250_000	-	$_	_	_	 *	_	
21	t251_000	des	DRELS	dër	Neut.Gen.Sg	(PostF (Cl (PreF (NX * ) )	_	
22	t252_000	ne	PTKNEG	ne	_	(LB (VX *	_	
23	t253_000	hân	VAFIN	haben	Ind.Pres.Sg.1	 * ) )	_	
24	t254_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * ) )	_	
25	t255_000	niwet	PTKNEG	niht	_	(RB (VX *	_	
26	t256_000	getân	VVPP	tuon	_	 * ) )	_	
27	t257_000	-	$_	_	_	 * ) ) ) )	_	
28	t258_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
29	t259_000	büte	VVFIN	bièten	Subj.Past.Sg.1	(LB (VX * ) )	_	
30	t260_000	ime	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
31	t261_000	dâr	AVD	dâr	_	 *	_	
32	t262_000	ein	DIART	èin	Neut.Akk.Sg.0	(NX *	_	
33	t263_000	reht	ADJA	rëht	Pos.Neut.Akk.Sg.st	 *	_	
34	t264_000	lougenen	NA	lougen	Akk.Sg	 *	_	
35	t265_000	ze	APPR	ze	_	(PPX *	_	
36	t265_001	sîner	DPOSA	sîn	Fem.Dat.Sg.st	(NX *	_	
37	t266_000	gegenwarte	NA	gègen-wart	Dat.Sg	 *	_	
38	t267_000	ze	APPR	ze	_	(PPX *	_	
39	t267_001	diseme	DDA	dise	Masc.Dat.Sg	(NX *	_	
40	t268_000	gesegenet	ADJA	ge-sëgenen	Pos.Masc.Dat.Sg.st	 *	_	
41	t269_000	wâge	NA	wâg	Dat.Sg	 * ) ) ) ) ) )	_	
42	t270_000	ob	KOUS	obe	_	(PostF (Cl (LB * )	_	
43	t271_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
44	t272_000	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
45	t273_000	geloben	VVINF	ge-loben	_	(VX (VX * )	_	
46	t274_000	unde	KON	unte	_	 *	_	
47	t274_001	gelouben	VVINF	ge-louben	_	(VX * ) ) )	_	
48	t275_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
49	t276_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t277_000	-	FM	[!]	_	(S (Frag *	_	
2	t278_000	-	FM	[!]	_	 *	_	
3	t279_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t280_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t281_000	gelobe	VVFIN	ge-loben	*.Pres.Sg.1	(LB (VX (VX * )	_	
3	t282_000	unde	KON	unte	_	 *	_	
4	t283_000	geloube	VVFIN	ge-louben	*.Pres.Sg.1	(VX (VX * )	_	
5	t284_000	unde	KON	unte	_	 *	_	
6	t285_000	setze	VVFIN	sètzen	*.Pres.Sg.1	(VX * ) ) ) )	_	
7	t286_000	in	APPR	in	_	(MF (PPX *	_	
8	t286_001	dîne	DPOSA	dîn	Fem.Akk.Sg.st	(NX *	_	
9	t287_000	hant	NA	hant	Akk.Sg	 * ) ) )	_	
10	t288_000	-	$_	_	_	 *	_	
11	t289_000	mir	PRF	ich	*.Dat.Sg.st	(Frag (NX * )	_	
12	t290_000	alsô	AVD	all-sô	_	 *	_	
13	t291_000	ze	APPR	ze	_	(PPX *	_	
14	t291_001	leistenne	NA	lèisten	Dat.Sg	(NX * ) ) ) )	_	
15	t292_000	alsô	KO*	all-sô	_	(Frag *	_	
16	t293_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
17	t294_000	mir	PPER	ich	Dat.Sg.1	(NX * )	_	
18	t295_000	hier	AVD	hièr	_	 *	_	
19	t296_000	gewettet	VVPP	ge-wètten	_	(VX *	_	
20	t297_000	hâst	VAFIN	haben	*.Pres.Sg.2	 * )	_	
21	t298_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t299_000	-	FM	[!]	_	(S (Frag *	_	
2	t300_000	-	FM	[!]	_	 *	_	
3	t301_000	-	FM	[!]	_	 *	_	
4	t302_000	-	FM	[!]	_	 *	_	
5	t303_000	-	FM	[!]	_	 *	_	
6	t304_000	-	FM	[!]	_	 *	_	
7	t305_000	-	FM	[!]	_	 *	_	
8	t306_000	-	FM	[!]	_	 *	_	
9	t306_001	-	FM	[!]	_	 *	_	
10	t307_000	-	$_	_	_	 * )	_	
11	t308_000	-	FM	[!]	_	(Frag *	_	
12	t309_000	-	FM	[!]	_	 *	_	
13	t310_000	-	FM	[!]	_	 *	_	
14	t311_000	-	$_	_	_	 * )	_	
15	t312_000	-	FM	[!]	_	(Frag *	_	
16	t312_001	prinzipjo	_	prinzipjo	_	 *	_	
17	t312_002	êr	AVD	êr	_	 *	_	
18	t313_000	-	$_	_	_	 * )	_	
19	t314_000	-	FM	[!]	_	(Frag *	_	
20	t315_000	-	$_	_	_	 * )	_	
21	t316_000	-	FM	[!]	_	(Frag *	_	
22	t317_000	-	FM	[!]	_	 *	_	
23	t318_000	-	FM	[!]	_	 *	_	
24	t319_000	-	FM	[!]	_	 *	_	
25	t320_000	-	$_	_	_	 * )	_	
26	t321_000	-	FM	[!]	_	(Frag *	_	
27	t321_001	-	FM	[!]	_	 *	_	
28	t321_002	-	FM	[!]	_	 *	_	
29	t322_000	-	FM	[!]	_	 *	_	
30	t323_000	-	FM	[!]	_	 *	_	
31	t324_000	-	$_	_	_	 * )	_	
32	t325_000	disen	DDA	dise	Masc.Akk.Sg	(NX *	_	
33	t326_000	kristenen	ADJA	kristen	Pos.Masc.Akk.Sg.*	 *	_	
34	t327_000	mennischen	NA	mèn(ni)sche	Akk.Sg	 * )	_	
35	t328_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
36	t329_000	lîche	VVFIN	lîchen	*.Pres.Sg.1	(LB (VX * ) )	_	
37	t330_000	ich	PPER	ich	Nom.Sg.1	(MF (NX * )	_	
38	t331_000	dir	PPER	dû	Dat.Sg.2	(NX * ) )	_	
39	t332_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
40	t333_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
41	t333_001	dich	PPER	dû	Akk.Sg.2	(NX * ) )	_	
42	t334_000	verwese	VVFIN	ver-wësen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
43	t335_000	zuo	APPR	ze	_	(PostF (PPX *	_	
44	t335_001	diseme	DDA	dise	Neut.Dat.Sg	(NX *	_	
45	t336_000	gotesrehte	NA	gotes-rëht	Dat.Sg	 * ) ) )	_	
46	t337_000	-	$_	_	_	 * ) )	_	
47	t338_000	alsô	KO*	all-sô	_	(Frag *	_	
48	t339_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
49	t340_000	selbe	DDA	sëlb	Fem.Akk.Sg.st	(PreF * )	_	
50	t341_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
51	t342_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t343_000	alsô	AVD	all-sô	_	(S (Cl (PreF (PreF * ) )	_	
2	t344_000	tuon	VVFIN	tuon	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t344_001	ouch	KO*	ouch	_	(PreF (MF *	_	
4	t345_000	ich	PPER	ich	Nom.Sg.1	(NX * )	_	
5	t346_000	unde	KON	unte	_	 * ) )	_	
6	t347_000	eische	VVFIN	èischen	*.Pres.Sg.1	(LB (VX * ) )	_	
7	t348_000	ein	DIART	èin	Neut.Akk.Sg.0	(MF (NX *	_	
8	t349_000	pfant	NA	pfant	Akk.Sg	 * ) )	_	
9	t350_000	-	$_	_	_	 * ) ) )	_
	

