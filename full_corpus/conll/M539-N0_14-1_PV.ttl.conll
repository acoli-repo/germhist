# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
#ID TID WORD LEMMA POS INFL SB file:///M539-N0_14-1_PV.ttl/
1	t1_000	diz	DDA	dise	Neut.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t2_000	buoch	NA	buoch	Nom.Sg	 * ) )	_	
3	t3_000	saget	VVFIN	sagen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t4_000	-	$_	_	_	 * )	_	
5	t5_000	von	APPR	von	_	(PPX *	_	
6	t6_000	guoter	ADJA	guot	Pos.Fem.Dat.Sg.st	(NX *	_	
7	t7_000	spîse	NA	spîse	Dat.Sg	 * ) )	_	
8	t8_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t9_000	machet	VVFIN	machen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t10_000	-	$_	_	_	 *	_	
11	t11_000	die	DDART	dër	*.Akk.Pl	(Frag (NX *	_	
12	t12_000	unverrihtigen	ADJA	un-ver-rihtig	Pos.*.Akk.Pl.wk	 *	_	
13	t13_000	köche	NA	koch	Akk.Pl	 * )	_	
14	t14_000	wîse	ADJD	wîs(e)	Pos....0	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t15_000	ich	PPER	ich	Nom.Sg.1	(S (Cl (PreF (NX * ) )	_	
2	t16_000	wile	VMFIN	wèllen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t17_000	iuch	PPER	ir	Akk.Pl.2	(MF (NX * ) )	_	
4	t18_000	underwîsen	VVINF	unter-wîsen	_	(RB (VX * ) )	_	
5	t19_000	-	$_	_	_	 *	_	
6	t20_000	von	APPR	von	_	(Frag (PPX *	_	
7	t21_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
8	t22_000	küchenspîsen	NA	küchen-spîse	Dat.Pl	 * ) )	_	
9	t23_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t24_000	der	DRELS	dër	Masc.Nom.Sg	(S (Cl (LB (NX * ) )	_	
2	t25_000	sin	NA	sinn	Akk.Sg	(MF (NX * )	_	
3	t26_000	niht	PTKNEG	niht	_	 *	_	
4	t27_000	vürsten	NA	vürste	Dat.Pl	(NX * ) )	_	
5	t28_000	kan	VMFIN	kunnen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
6	t29_000	-	$_	_	_	 * )	_	
7	t30_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t31_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t32_000	diz	DDA	dise	Neut.Akk.Sg	(MF (NX *	_	
10	t33_000	buoch	NA	buoch	Akk.Sg	 * )	_	
11	t34_000	sehen	VVINF	sëhen/ane<+	_	(VX * ) )	_	
12	t35_000	an	PTKVZ	ane/<+sëhen	_	(RB * )	_	
13	t36_000	-	$_	_	_	 *	_	
14	t37_000	wie	AVW	wiè	_	(Frag *	_	
15	t38_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
16	t39_000	grôz	ADJA	grôz	Pos.*..0	 *	_	
17	t40_000	gerihte	NA	ge-riht(e)	Akk.Pl	(PreF (NX * ) )	_	
18	t41_000	künne	VMFIN	kunnen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
19	t42_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
20	t43_000	-	$_	_	_	 * )	_	
21	t44_000	von	APPR	von	_	(Frag *	_	
22	t45_000	vile	AVD	vil(e)	_	 *	_	
23	t46_000	kleinen	ADJA	klèine	Pos.*.Dat.Pl.*	(NX *	_	
24	t47_000	sachen	NA	sache	Dat.Pl	 * )	_	
25	t48_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t49_000	dise	DDA	dise	Fem.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t50_000	lêre	NA	lêre	Akk.Sg	 * ) )	_	
3	t51_000	merke	VVFIN	mèrken	Subj.Pres.Sg.3	(LB (VX * ) )	_	
4	t52_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
5	t53_000	vile	AVD	vil(e)	_	 *	_	
6	t54_000	eben	AVD	ëben(e)	_	 * )	_	
7	t55_000	-	$_	_	_	 *	_	
8	t56_000	die	DRELS	dër	Fem.Akk.Sg	(PostF (Frag (NX * )	_	
9	t57_000	im	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
10	t58_000	diz	DDA	dise	Neut.Nom.Sg	(PreF (NX *	_	
11	t59_000	buoch	NA	buoch	Nom.Sg	 * ) )	_	
12	t60_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t61_000	geben	VVINF	gëben	_	(RB (VX * ) )	_	
14	t62_000	-	$_	_	_	 * ) )	_	
15	t63_000	wande	KO*	wante	_	(Frag *	_	
16	t64_000	ez	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
17	t65_000	kan	VMFIN	kunnen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
18	t66_000	wole	AVD	wol(e)	_	(MF * )	_	
19	t67_000	berihten	VVINF	be-rihten	_	(RB (VX * ) )	_	
20	t68_000	-	$_	_	_	 * )	_	
21	t69_000	von	APPR	von	_	(Frag (PPX *	_	
22	t70_000	maniger	DIA	manig	Fem.Gen.Sg.st	(NX *	_	
23	t70_001	leie	NA	lèie	Gen.Sg	 * ) )	_	
24	t71_000	gerihten	NA	ge-riht(e)	Dat.Pl	(NX * )	_	
25	t72_000	-	$_	_	_	 * )	_	
26	t73_000	von	APPR	von	_	(Frag *	_	
27	t74_000	grôzen	ADJA	grôz	Pos.*.Dat.Pl..%.*	 *	_	
28	t75_000	unde	KON	unte	_	 *	_	
29	t76_000	von	APPR	von	_	 *	_	
30	t77_000	kleinen	ADJA	klèine	Pos.*.Dat.Pl..%.*	 *	_	
31	t78_000	-	$_	_	_	 * )	_	
32	t79_000	wie	AVW	wiè	_	(Frag *	_	
33	t80_000	sie	PPER	ër	*.Nom.Pl.3	(NX * )	_	
34	t81_000	sich	PRF	sich	Akk	(PreF (NX * ) )	_	
35	t82_000	vereinen	VVFIN	ver-èinen	*.Pres.Pl.3	(LB (VX * ) )	_	
36	t83_000	-	$_	_	_	 * )	_	
37	t84_000	unde	KON	unte	_	(Frag *	_	
38	t85_000	wie	AVW	wiè	_	 *	_	
39	t86_000	sie	PPER	ër	Fem.Akk.Sg.3	(NX * )	_	
40	t87_000	sich	PRF	sich	Akk	(PreF (NX * ) )	_	
41	t88_000	besachen	VVFIN	be-sachen	*.Pres.Pl.3	(LB (VX * ) )	_	
42	t89_000	-	$_	_	_	 *	_	
43	t90_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
44	t91_000	sie	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
45	t92_000	kleine	ADJA	klèine	Pos.*..0	 *	_	
46	t93_000	getrehte	NA	ge-trèhte	Akk.Sg	(NX * )	_	
47	t94_000	zuo	AVD	zuo	_	 *	_	
48	t95_000	hôher	ADJA	hôh	Pos.Fem.Dat.Sg.st	(NX *	_	
49	t96_000	spîse	NA	spîse	Dat.Sg	 * ) )	_	
50	t97_000	machen	VVFIN	machen	*.Pres.Pl.3	(RB (VX * ) )	_	
51	t98_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t99_000	der	DDS	dër	Masc.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t100_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t101_000	diz	DDA	dise	Neut.Akk.Sg	(MF (NX *	_	
4	t102_000	buoch	NA	buoch	Akk.Sg	 * ) )	_	
5	t103_000	vernemen	VVINF	ver-nëmen	_	(RB (VX * ) )	_	
6	t104_000	-	$_	_	_	 * )	_	
7	t105_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t106_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t107_000	sich	PRF	sich	Akk	(MF (NX * )	_	
10	t108_000	niht	PTKNEG	niht	_	 * )	_	
11	t109_000	en	PTKNEG	ne	_	(RB (VX *	_	
12	t109_001	schemen	VVINF	schèmen	_	 * ) )	_	
13	t110_000	-	$_	_	_	 *	_	
14	t111_000	ob	KOUS	obe	_	(PostF (Cl (LB * )	_	
15	t112_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
16	t113_000	vrâget	VVFIN	vrâgen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
17	t114_000	des	DRELS	dër	Neut.Gen.Sg	(PostF (Cl (LB (NX * ) )	_	
18	t115_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
19	t116_000	niht	PTKNEG	niht	_	 * )	_	
20	t117_000	en	PTKNEG	ne	_	(RB (VX *	_	
21	t117_001	kan	VMFIN	kunnen	Ind.Pres.Sg.3	 * ) )	_	
22	t118_000	-	$_	_	_	 * ) ) ) ) )	_	
23	t119_000	des	DDS	dër	Neut.Gen.Sg	(Cl (PreF (NX * ) )	_	
24	t120_000	bescheide	VVFIN	be-schèiden	*.Pres.Sg.3	(LB (VX * ) )	_	
25	t121_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
26	t122_000	schier	AVD	schière	_	 *	_	
27	t123_000	ein	DIART	èin	*.*.*.0	 *	_	
28	t124_000	wîser	ADJA	wîs(e)	Pos.Masc.Nom.Sg.st	(NX *	_	
29	t125_000	man	NA	mann	Nom.Sg	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t126_000	wer	PW	wër	Masc.Nom.Sg.st	(S (Frag *	_	
2	t127_000	denne	KOUS	danne	_	 *	_	
3	t128_000	kochen	NA	kochen	Akk.Sg	(PreF (NX * ) )	_	
4	t129_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
5	t130_000	lirnen	VVINF	lirnen	_	(RB (VX * ) )	_	
6	t131_000	-	$_	_	_	 * )	_	
7	t132_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t133_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t134_000	diz	DDA	dise	Neut.Akk.Sg	(MF (NX *	_	
10	t135_000	buoch	NA	buoch	Akk.Sg	 * ) )	_	
11	t136_000	merken	VVINF	mèrken	_	(RB (VX * ) )	_	
12	t137_000	gerne	AVD	gërne	_	(PostF * )	_	
13	t138_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t139_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t140_000	konkavelite	NA	konkavelite	Nom.Sg	(NX * )	_	
3	t141_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t142_000	zuo	APPR	ze	_	(S (Frag (PPX *	_	
2	t143_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
3	t144_000	schüzzeln	NA	schüzzel(e)	Dat.Sg	 *	_	
4	t145_000	ze	APPR	ze	_	(PPX *	_	
5	t146_000	machen	NA	machen	Dat.Sg	(NX * ) ) ) )	_	
6	t147_000	-	$_	_	_	 * )	_	
7	t148_000	man	PI	man	*.Nom.Sg.st	(Cl (PreF (NX * ) )	_	
8	t149_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t150_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
10	t151_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
11	t152_000	pfunt	NA	pfunt	Akk.Sg	(NX *	_	
12	t153_000	mandel	NA	mandel(e)	Gen.Sg	(NX * ) )	_	
13	t154_000	unde	KON	unte	_	(PrePreF * )	_	
14	t155_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t156_000	mit	APPR	mit	_	(MF (PPX *	_	
16	t157_000	wîne	NA	wîn	Dat.Sg	(NX * ) )	_	
17	t158_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
18	t159_000	milch	NA	milch	Akk.Sg	 * )	_	
19	t160_000	ûz	AVD	ûz	_	 *	_	
20	t161_000	stoezen	NA	stôz	Dat.Pl	(NX * ) ) )	_	
21	t162_000	-	$_	_	_	 *	_	
22	t163_000	unde	KON	unte	_	(Frag *	_	
23	t164_000	kersen	NA	kërse	Gen.Pl	(NX * )	_	
24	t165_000	ein	DIA	èin	*.*.*.0	 *	_	
25	t166_000	pfunt	NA	pfunt	Akk.Sg	(NX * )	_	
26	t167_000	-	$_	_	_	 * ) )	_	
27	t168_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
28	t169_000	slahe	VVFIN	slahen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
29	t170_000	die	DDS	dër	Fem.Akk.Sg	(MF (NX * )	_	
30	t171_000	durch	APPR	durh	_	 *	_	
31	t172_000	ein	DIA	èin	*.*.*.0	 *	_	
32	t173_000	sip	NA	sib	Akk.Sg	(NX * ) )	_	
33	t174_000	-	$_	_	_	 * )	_	
34	t175_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
35	t176_000	tuo	VVFIN	tuon	Subj.Pres.Sg.3	(LB (VX * ) )	_	
36	t177_000	die	DDS	dër	*.Akk.Pl	(MF (NX *	_	
37	t178_000	kersen	NA	kërse	Akk.Pl	 *	_	
38	t179_000	in	APPR	in	_	(PPX *	_	
39	t180_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
40	t181_000	milch	NA	milch	Akk.Sg	 * ) ) ) )	_	
41	t182_000	-	$_	_	_	 * )	_	
42	t183_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
43	t184_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
44	t185_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
45	t186_000	vierdinc	NA	vièrding	Akk.Sg	 *	_	
46	t187_000	rîses	NA	rîs	Gen.Sg	(NX * ) ) )	_	
47	t188_000	-	$_	_	_	 * )	_	
48	t189_000	den	DDS	dër	Masc.Akk.Sg	(Cl (PreF (NX * ) )	_	
49	t190_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
50	t191_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
51	t192_000	stôzen	VVINF	stôzen	_	(RB (VX * ) )	_	
52	t193_000	zuo	APPR	ze	_	(PostF (PPX *	_	
53	t194_000	mele	NA	mëlw	Dat.Sg	(NX * ) ) )	_	
54	t195_000	-	$_	_	_	 * )	_	
55	t196_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
56	t197_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
57	t198_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
58	t199_000	in	APPR	in	_	(PPX *	_	
59	t200_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
60	t201_000	milch	NA	milch	Akk.Sg	 * ) ) ) )	_	
61	t202_000	-	$_	_	_	 * )	_	
62	t203_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
63	t204_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
64	t205_000	denne	AVD	danne	_	(MF *	_	
65	t206_000	ein	DIART	èin	*.*.*.0	 *	_	
66	t207_000	rein	ADJA	rèin(e)	Pos.*..0	 *	_	
67	t208_000	smalz	NA	smalz	Akk.Sg	(NX * ) )	_	
68	t209_000	-	$_	_	_	 *	_	
69	t210_000	oder	KON	oder	_	(Frag *	_	
70	t211_000	spec	NA	spëck	Akk.Sg	(NX * )	_	
71	t212_000	unde	KON	unte	_	(PrePreF * )	_	
72	t213_000	smelze	VVIMP	smèlzen	Sg.2	(LB (VX * ) )	_	
73	t214_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
74	t215_000	in	APPR	in	_	(PPX *	_	
75	t216_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
76	t217_000	pfanne	NA	pfanne	Dat.Sg	 * ) ) ) )	_	
77	t218_000	-	$_	_	_	 * ) )	_	
78	t219_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
79	t220_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
80	t221_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
81	t222_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
82	t223_000	ein	DIART	èin	*.*.*.0	 *	_	
83	t224_000	halbe	ADJA	halb	Pos.Fem.Akk.Sg.st	(NX *	_	
84	t225_000	marc	NA	mark(e)	Akk.Sg	 *	_	
85	t226_000	wîzes	ADJA	wîz	Pos.Masc.Gen.Sg.st	(NX *	_	
86	t227_000	zuckers	NA	zucker	Gen.Sg	 * ) ) )	_	
87	t228_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t229_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t230_000	versalze	VVFIN	ver-salzen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t231_000	niht	PTKNEG	niht	_	(MF * )	_	
4	t232_000	-	$_	_	_	 * )	_	
5	t233_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
6	t234_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
7	t234_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
8	t235_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t236_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t237_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
3	t238_000	hirzlebern	NA	hirz-lëber(e)	Dat.Sg	 * ) )	_	
4	t239_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t240_000	ein	DIA	èin	*.*.*.0	(S (Frag *	_	
2	t241_000	hirzes	NA	hirz	Gen.Sg	(NX * )	_	
3	t242_000	lebern	NA	lëber(e)	Akk.Sg	(PreF (NX * ) )	_	
4	t243_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t244_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
6	t245_000	brâten	VVINF	brâten	_	(RB (VX * ) )	_	
7	t246_000	ûf	APPR	ûf	_	(PostF (PPX *	_	
8	t247_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
9	t248_000	rôste	NA	rôst	Dat.Sg	 * ) ) )	_	
10	t249_000	die	DRELS	dër	Fem.Akk.Sg	(Cl (LB (NX * ) )	_	
11	t250_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
12	t251_000	lange	AVD	lange	_	 *	_	
13	t252_000	behalten	VVINF	be-halten	_	(VX * ) )	_	
14	t253_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(RB (VX * ) )	_	
15	t254_000	-	$_	_	_	 * ) )	_	
16	t255_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
17	t256_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
18	t257_000	die	DDS	dër	Fem.Nom.Sg	(MF (NX * )	_	
19	t258_000	dünne	ADJD	dünne	Pos....0	 * )	_	
20	t259_000	snîden	VVINF	snîden	_	(RB (VX * ) )	_	
21	t260_000	zuo	APPR	ze	_	(PostF (PPX *	_	
22	t261_000	schîben	NA	schîbe	Dat.Pl	(NX * ) ) )	_	
23	t262_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t263_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t264_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t265_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
4	t266_000	reinen	ADJA	rèin(e)	Pos.Masc.Akk.Sg.*	 *	_	
5	t267_000	honicseim	NA	honig-sèim	Akk.Sg	 * ) ) )	_	
6	t268_000	den	DDS	dër	*.Dat.Pl	(Cl (PreF (NX * ) )	_	
7	t269_000	sude	VVFIN	suden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
8	t270_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t271_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t272_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t273_000	denne	KOUS	danne	_	(MF *	_	
4	t274_000	ingewer	NA	ingewër	Akk.Sg	(NX * ) )	_	
5	t275_000	-	$_	_	_	 *	_	
6	t276_000	unde	KON	unte	_	(Frag *	_	
7	t277_000	galgan	NA	galgan	Akk.Sg	(NX * )	_	
8	t278_000	unde	KON	unte	_	 *	_	
9	t279_000	negellîn	NA	nègellîn	Akk.Sg	(NX * )	_	
10	t280_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t281_000	die	DDS	dër	*.Akk.Pl	(S (Cl (PreF (NX * ) )	_	
2	t282_000	stôze	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
3	t283_000	under	APPR	unter	_	(MF *	_	
4	t284_000	einander	DIA	èin-ander	*.*.*.0	 * )	_	
5	t285_000	-	$_	_	_	 * )	_	
6	t286_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
7	t287_000	wirfe	VVIMP	wërfen	Sg.2	(LB (VX * ) )	_	
8	t288_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
9	t289_000	dâr	PAVD	dâr/+in	_	 *	_	
10	t290_000	in	PAVAP	in/dâr+	_	 * )	_	
11	t291_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t292_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t293_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t294_000	denne	AVD	danne	_	(MF *	_	
4	t295_000	ein	DIART	èin	*.*.*.0	 *	_	
5	t296_000	vaz	NA	vazz	Akk.Sg	(NX * ) )	_	
6	t297_000	-	$_	_	_	 *	_	
7	t298_000	oder	KON	oder	_	(Frag *	_	
8	t299_000	ein	DIART	èin	*.*.*.0	 *	_	
9	t300_000	schaf	NA	schaff	Akk.Sg	(NX * ) )	_	
10	t301_000	dâr	PAVD	dâr/+in	_	(Frag *	_	
11	t302_000	in	PAVAP	in/dâr+	_	 *	_	
12	t303_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
13	t304_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (NX * ) )	_	
14	t305_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
15	t306_000	tuon	VVINF	tuon	_	(RB (VX * ) )	_	
16	t307_000	-	$_	_	_	 * ) )	_	
17	t308_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
18	t309_000	wasch	VVIMP	waschen	Sg.2	(LB (VX * ) )	_	
19	t309_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
20	t310_000	gar	AVD	gar(e)	_	 *	_	
21	t311_000	rein	ADJD	rèin(e)	Pos....0	 * )	_	
22	t312_000	-	$_	_	_	 * )	_	
23	t313_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
24	t314_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
25	t315_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
26	t316_000	dâr	PAVD	dâr/+in	_	 *	_	
27	t317_000	in	PAVAP	in/dâr+	_	 *	_	
28	t318_000	ein	DIART	èin	*.*.*.0	 *	_	
29	t319_000	schiht	NA	schiht	Akk.Sg	(NX *	_	
30	t320_000	honiges	NA	honig	Gen.Sg	(NX * ) )	_	
31	t321_000	unde	KON	unte	_	 * ) )	_	
32	t322_000	lige	VVIMP	ligen	Sg.2	(LB (VX * ) )	_	
33	t323_000	denne	AVD	danne	_	(MF *	_	
34	t324_000	ein	DIART	èin	*.*.*.0	 *	_	
35	t325_000	schiht	NA	schiht	Akk.Sg	(NX *	_	
36	t326_000	lebern	NA	lëber(e)	Gen.Sg	(NX * ) ) )	_	
37	t327_000	-	$_	_	_	 *	_	
38	t328_000	unde	KON	unte	_	(Frag *	_	
39	t329_000	alsô	AVD	all-sô	_	 *	_	
40	t330_000	vürebaz	AVD	vür(e)-bazz	_	 *	_	
41	t331_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t332_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t333_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
3	t333_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
4	t334_000	vaste	AVD	vaste	_	 *	_	
5	t335_000	ûf	APPR	ûf	_	 *	_	
6	t336_000	einander	DIA	èin-ander	*.*.*.0	 *	_	
7	t337_000	unde	KON	unte	_	 * ) )	_	
8	t338_000	setze	VVIMP	sètzen	Sg.2	(LB (VX * ) )	_	
9	t339_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
10	t340_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t341_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t342_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t343_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t344_000	einen	DIART	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
5	t345_000	blâmensier	NA	blâmensièr	Akk.Sg	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t346_000	wie	AVW	wiè	_	(S (Frag *	_	
2	t347_000	man	PI	man	*.Nom.Sg.st	(PreF (NX * ) )	_	
3	t348_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t349_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
5	t350_000	einen	DIART	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
6	t351_000	blâmensier	NA	blâmensièr	Akk.Sg	 * ) )	_	
7	t352_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t353_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t354_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t355_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
4	t356_000	zigînen	ADJA	zigîn	Pos.Fem.Akk.Sg.wk	(PostF (NX *	_	
5	t357_000	milch	NA	milch	Akk.Sg	 * ) )	_	
6	t358_000	-	$_	_	_	 * )	_	
7	t359_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t360_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t361_000	mandel	NA	mandel(e)	Gen.Sg	(MF (NX * )	_	
10	t362_000	ein	DIA	èin	*.*.*.0	 *	_	
11	t363_000	halp	ADJA	halb	Pos.*..0	 *	_	
12	t364_000	pfunt	NA	pfunt	Akk.Sg	(NX * ) )	_	
13	t365_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t366_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Cl (PreF (NX *	_	
2	t367_000	vierdinc	NA	vièrding	Akk.Sg	 *	_	
3	t368_000	rîses	NA	rîs	Gen.Sg	(NX * ) ) )	_	
4	t369_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
5	t370_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
6	t371_000	stôzen	VVINF	stôzen	_	(RB (VX * ) )	_	
7	t372_000	zuo	APPR	ze	_	(PostF (PPX *	_	
8	t373_000	mele	NA	mëlw	Dat.Sg	(NX * ) ) )	_	
9	t374_000	-	$_	_	_	 *	_	
10	t375_000	unde	KON	unte	_	(Frag *	_	
11	t376_000	dû	PPER	dû	Nom.Sg.2	(NX *	_	
12	t377_000	daz	DDS	dër	Neut.Nom.Sg	 *	_	
13	t378_000	in	APPR	in	_	(PPX *	_	
14	t379_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
15	t380_000	milch	NA	milch	Akk.Sg	 * ) ) )	_	
16	t381_000	kalt	ADJD	kalt	Pos....0	 *	_	
17	t382_000	-	$_	_	_	 * ) )	_	
18	t383_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t384_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t385_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t386_000	eines	DIA	èin	Neut.Gen.Sg.st	(MF (NX *	_	
4	t387_000	huones	NA	huon	Gen.Sg	 * )	_	
5	t388_000	brust	NA	brust	Akk.Sg	(NX * ) ) )	_	
6	t389_000	die	DDS	dër	Fem.Akk.Sg	(Cl (PreF (NX * ) )	_	
7	t390_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t391_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
9	t392_000	zeisen	VVINF	zèisen	_	(RB (VX * ) )	_	
10	t393_000	-	$_	_	_	 * )	_	
11	t394_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
12	t395_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t396_000	die	DDS	dër	Fem.Akk.Sg	(MF (NX * ) )	_	
14	t397_000	hacken	VVINF	hacken	_	(RB (VX * ) )	_	
15	t398_000	dâr	PAVD	dâr/+in	_	(PostF *	_	
16	t399_000	in	PAVAP	in/dâr+	_	 * )	_	
17	t400_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t401_000	unde	KON	unte	_	(S (Frag *	_	
2	t402_000	ein	DIA	èin	*.*.*.0	 *	_	
3	t403_000	rein	ADJA	rèin(e)	Pos.*..0	 *	_	
4	t404_000	smalz	NA	smalz	Akk.Sg	(PreF (NX * ) )	_	
5	t405_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t406_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
7	t407_000	dâr	PAVD	dâr/+in	_	(RB (VX *	_	
8	t408_000	in	PAVAP	in/dâr+	_	 *	_	
9	t409_000	tuon	VVINF	tuon	_	 * ) )	_	
10	t410_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t411_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t412_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t413_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
4	t414_000	dâr	PAVD	dâr/+in	_	(RB (VX *	_	
5	t415_000	ine	PAVAP	in/dâr+	_	 *	_	
6	t416_000	sieden	VVINF	sièden	_	 * ) )	_	
7	t417_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t418_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t419_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
3	t419_001	es	PPER	ër	Masc.Gen.Sg.3	(MF (NX * )	_	
4	t420_000	im	PPER	ër	Masc.Dat.Sg.3	(NX * )	_	
5	t421_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * ) )	_	
6	t422_000	-	$_	_	_	 * )	_	
7	t423_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t424_000	nime	VVFIN	nëmen	Ind.Pres.Sg.1	(LB (VX * ) )	_	
9	t425_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
10	t426_000	denne	AVD	danne	_	 *	_	
11	t427_000	wider	AVD	wider(e)	_	 * )	_	
12	t428_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t429_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t430_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t431_000	gestôzen	ADJA	stôzen	Pos.*..0	(MF *	_	
4	t432_000	vîolen	NA	vîol	Dat.Pl	(NX * ) )	_	
5	t433_000	-	$_	_	_	 * )	_	
6	t434_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
7	t435_000	werfe	VVFIN	wërfen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
8	t436_000	den	DDS	dër	*.Dat.Pl	(MF (NX * )	_	
9	t437_000	dâr	PAVD	dâr/+in	_	 *	_	
10	t438_000	in	PAVAP	in/dâr+	_	 * )	_	
11	t439_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t440_000	unde	KON	unte	_	(S (Frag *	_	
2	t441_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
3	t442_000	vierdinc	NA	vièrding	Akk.Sg	 *	_	
4	t443_000	zuckers	NA	zucker	Gen.Sg	(NX * ) )	_	
5	t444_000	-	$_	_	_	 * )	_	
6	t445_000	tuo	VVIMP	tuon	Sg.2	(Cl (LB (VX * ) )	_	
7	t446_000	man	PI	man	*.Nom.Sg.st	(PreF (MF (NX * )	_	
8	t447_000	dâr	PAVD	dâr/+in	_	 *	_	
9	t448_000	in	PAVAP	in/dâr+	_	 *	_	
10	t449_000	unde	KON	unte	_	 * ) )	_	
11	t450_000	gebe	VVFIN	gëben	Subj.Pres.Sg.3	(LB (VX * ) )	_	
12	t450_001	es	PPER	ër	Masc.Gen.Sg.3	(MF (NX * )	_	
13	t451_000	hin	AVD	hin(e)	_	 * )	_	
14	t452_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t453_000	alsô	AVD	all-sô	_	(S (Cl (PreF * )	_	
2	t454_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t455_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
4	t456_000	ouch	AVD	ouch	_	 *	_	
5	t457_000	in	APPR	in	_	(PPX *	_	
6	t457_001	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
7	t458_000	vasten	NA	vaste	Dat.Sg	 * ) ) )	_	
8	t459_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
9	t460_000	einen	DIART	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
10	t461_000	blâmensier	NA	blâmensièr	Akk.Sg	 *	_	
11	t462_000	von	APPR	von	_	(PPX *	_	
12	t463_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
13	t464_000	hechete	NA	hèchet	Dat.Sg	 * ) ) ) )	_	
14	t465_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t466_000	hüenere	NA	huon	Nom.Pl	(S (Frag (NX *	_	
2	t467_000	von	APPR	von	_	(PPX *	_	
3	t468_000	Kriechen	NA	Krièche	Dat.Pl	(NX * ) ) )	_	
4	t469_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t470_000	diz	DDA	dise	Neut.Nom.Sg	(S (Cl (PreF * )	_	
2	t471_000	heizent	VVFIN	hèizen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t472_000	-	$_	_	_	 *	_	
4	t473_000	hüenere	NA	huon	Nom.Pl	(Frag (NX *	_	
5	t474_000	von	APPR	von	_	(PPX *	_	
6	t475_000	Kriechen	NA	Krièche	Dat.Pl	(NX * ) ) )	_	
7	t476_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t477_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t478_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t479_000	hüenere	NA	huon	Akk.Pl	(MF (NX * ) )	_	
4	t480_000	brâten	VVINF	brâten	_	(RB (VX * ) )	_	
5	t481_000	-	$_	_	_	 *	_	
6	t482_000	unde	KON	unte	_	(Frag *	_	
7	t483_000	ein	DIA	èin	*.*.*.0	 *	_	
8	t484_000	vleisch	NA	vlèisch	Akk.Sg	(NX *	_	
9	t485_000	eines	DIA	èin	Neut.Gen.Sg.st	(NX *	_	
10	t486_000	swînes	NA	swîn	Gen.Sg	 * ) ) )	_	
11	t487_000	weich	ADJD	wèich	Pos....0	(Frag *	_	
12	t488_000	gesoten	ADJN	sièden	Pos.*..0	 * )	_	
13	t489_000	unde	KON	unte	_	(Frag *	_	
14	t490_000	gehacket	ADJN	hacken	Pos.*..0	 *	_	
15	t491_000	-	$_	_	_	 * )	_	
16	t492_000	under	APPR	unter	_	(Frag *	_	
17	t493_000	einander	DIA	èin-ander	*.*.*.0	 *	_	
18	t494_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t495_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t496_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t497_000	einen	DIART	èin	Masc.Akk.Sg.st	(PreF (MF (NX *	_	
4	t498_000	vierdinc	NA	vièrding	Akk.Sg	 *	_	
5	t499_000	rôsen	NA	rôse	Gen.Sg	(NX * ) )	_	
6	t500_000	dâr	PAVD	dâr/+zuo	_	 *	_	
7	t501_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
8	t502_000	unde	KON	unte	_	 * ) )	_	
9	t503_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
10	t504_000	ingewer	NA	ingewër	Akk.Sg	(MF (NX * )	_	
11	t505_000	unde	KON	unte	_	 *	_	
12	t506_000	pfeffer	NA	pfëffer	Akk.Sg	(NX * ) )	_	
13	t507_000	-	$_	_	_	 *	_	
14	t508_000	unde	KON	unte	_	(Frag *	_	
15	t509_000	wîn	NA	wîn	Akk.Sg	(NX * )	_	
16	t510_000	oder	KON	oder	_	 *	_	
17	t511_000	ezzich	NA	èzzich	Akk.Sg	(NX * )	_	
18	t512_000	-	$_	_	_	 * )	_	
19	t513_000	unde	KON	unte	_	(Frag *	_	
20	t514_000	zucker	NA	zucker	Akk.Sg	(NX * )	_	
21	t515_000	oder	KON	oder	_	 *	_	
22	t516_000	honic	NA	honig	Akk.Sg	(NX * )	_	
23	t517_000	-	$_	_	_	 * ) )	_	
24	t518_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
25	t519_000	siude	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
26	t520_000	daz	DDS	dër	Neut.Nom.Sg	(PreF (MF (NX * )	_	
27	t521_000	zesamene	AVD	ze-samen(e)	_	 *	_	
28	t522_000	unde	KON	unte	_	 * ) )	_	
29	t523_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
30	t523_001	es	PPER	ër	Masc.Gen.Sg.3	(PreF (MF (NX * )	_	
31	t524_000	hin	AVD	hin(e)	_	 *	_	
32	t525_000	unde	KON	unte	_	 * ) )	_	
33	t526_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
34	t526_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
35	t527_000	niht	PTKNEG	niht	_	 * )	_	
36	t528_000	-	$_	_	_	 * )	_	
37	t529_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t530_000	diz	DDA	dise	Neut.Nom.Sg	(S (Cl (PreF * )	_	
2	t531_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t532_000	rîs	NA	rîs	Nom.Sg	(MF (NX *	_	
4	t533_000	von	APPR	von	_	(PPX *	_	
5	t534_000	Kriechen	NA	Krièche	Dat.Pl	(NX * ) ) ) )	_	
6	t535_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t536_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t537_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t538_000	rîs	NA	rîs	Nom.Sg	(MF (NX *	_	
4	t539_000	von	APPR	von	_	(PPX *	_	
5	t540_000	Kriechen	NA	Krièche	Dat.Pl	(NX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t541_000	dû	PPER	dû	Nom.Sg.2	(S (Cl (PreF (NX * ) )	_	
2	t542_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t543_000	rîs	NA	rîs	Akk.Sg	(MF (NX * ) )	_	
4	t544_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
5	t545_000	-	$_	_	_	 * )	_	
6	t546_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
7	t547_000	sude	VVIMP	suden	Sg.2	(LB (VX * ) )	_	
8	t548_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
9	t549_000	in	APPR	in	_	(PPX *	_	
10	t550_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
11	t551_000	brunnen	NA	brunne	Dat.Sg	 * ) ) ) )	_	
12	t552_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t553_000	zuo	APPR	ze	_	(S (Frag (PPX *	_	
2	t554_000	halben	ADJA	halb	Pos.Masc.Dat.Sg.wk	(NX *	_	
3	t555_000	wege	NA	wëg	Dat.Sg	 * ) )	_	
4	t556_000	sô	AVD	sô	_	(PreF * )	_	
5	t557_000	giuze	VVIMP	gièzen/abe<.+	Sg.2	(LB (VX * ) )	_	
6	t558_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
7	t559_000	wazzer	NA	wazzer	Akk.Sg	 * ) )	_	
8	t560_000	abe	PTKVZ	abe/<.+gièzen	_	(RB * )	_	
9	t561_000	unde	KON	unte	_	(PostF (PrePreF * )	_	
10	t562_000	sude	VVIMP	suden	Sg.2	(LB (VX * ) )	_	
11	t563_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
12	t564_000	denne	AVD	danne	_	 *	_	
13	t565_000	in	APPR	in	_	(PPX *	_	
14	t566_000	eineme	DIART	èin	Neut.Dat.Sg.st	(NX *	_	
15	t567_000	reinen	ADJA	rèin(e)	Pos.Neut.Dat.Sg.wk	 *	_	
16	t568_000	smalze	NA	smalz	Dat.Sg	 * ) ) ) )	_	
17	t569_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t570_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t571_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
3	t572_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
4	t573_000	smalz	NA	smalz	Akk.Sg	 * )	_	
5	t574_000	denne	AVD	danne	_	 *	_	
6	t575_000	her	PAVD	hër(e)/+abe	_	 *	_	
7	t576_000	abe	PAVAP	abe/hër(e)+	_	 * )	_	
8	t577_000	-	$_	_	_	 *	_	
9	t578_000	unde	KON	unte	_	(Frag *	_	
10	t579_000	ein	DIART	èin	*.*.*.0	 *	_	
11	t580_000	zucker	NA	zucker	Akk.Sg	(NX * )	_	
12	t581_000	dâr	PAVD	dâr/+ûf	_	 *	_	
13	t582_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
14	t583_000	unde	KON	unte	_	(PrePreF * )	_	
15	t584_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
16	t584_001	es	PPER	ër	Masc.Gen.Sg.3	(PreF (MF (NX * )	_	
17	t585_000	hin	AVD	hin(e)	_	 *	_	
18	t586_000	unde	KON	unte	_	 * ) )	_	
19	t587_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
20	t587_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
21	t588_000	niht	PTKNEG	niht	_	 * )	_	
22	t589_000	-	$_	_	_	 * ) )	_	
23	t590_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t591_000	heidenische	ADJA	hèidenisch	Pos.*.Nom.Pl.st	(S (Frag (NX *	_	
2	t592_000	küchene	NA	küchen(e)	Nom.Pl	 * )	_	
3	t593_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t594_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t595_000	heizent	VVFIN	hèizen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t596_000	heidene	ADJA	hèiden	Pos.*.Nom.Pl.st	(MF (NX *	_	
4	t597_000	kuochen	NA	kuoche	Nom.Pl	 * ) )	_	
5	t598_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t599_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t600_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t601_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
4	t602_000	einen	DIART	èin	*.Dat.Pl.st	(PostF *	_	
5	t603_000	teic	ADJD	tèig	Pos....0	 *	_	
6	t604_000	unde	KON	unte	_	(PrePreF * )	_	
7	t605_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
8	t606_000	dünne	ADJD	dünne	Pos....0	(MF * ) )	_	
9	t607_000	breiten	VVINF	brèiten	_	(RB (VX * ) )	_	
10	t608_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t609_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t610_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t611_000	ein	DIART	èin	*.*.*.0	(MF *	_	
4	t612_000	sieden	ADJA	sièden	Pos.*.Akk.Sg.st	(NX *	_	
5	t613_000	vleisch	NA	vlèisch	Akk.Sg	 * ) )	_	
6	t614_000	-	$_	_	_	 *	_	
7	t615_000	unde	KON	unte	_	(Frag *	_	
8	t616_000	spec	NA	spëck	Akk.Sg	(PreF (NX * ) )	_	
9	t617_000	gehacket	VVFIN	ge-hacken	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t618_000	-	$_	_	_	 * )	_	
11	t619_000	unde	KON	unte	_	(Frag *	_	
12	t620_000	epfele	NA	apfel	Akk.Pl	(NX * )	_	
13	t621_000	unde	KON	unte	_	 *	_	
14	t622_000	pfeffer	NA	pfëffer	Akk.Sg	(NX * )	_	
15	t623_000	unde	KON	unte	_	 *	_	
16	t624_000	eier	NA	èi	Akk.Pl	(NX * )	_	
17	t625_000	dâr	PAVD	dâr/+in	_	 *	_	
18	t626_000	in	PAVAP	in/dâr+	_	 *	_	
19	t627_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t628_000	unde	KON	unte	_	(S (Frag *	_	
2	t629_000	backe	NA	back	Dat.Sg	(NX * )	_	
3	t630_000	daz	DDS	dër	Neut.Nom.Sg	(NX * )	_	
4	t631_000	-	$_	_	_	 * )	_	
5	t632_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
6	t633_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
7	t633_001	es	PPER	ër	Masc.Gen.Sg.3	(PreF (MF (NX * )	_	
8	t634_000	hin	AVD	hin(e)	_	 *	_	
9	t635_000	unde	KON	unte	_	 * ) )	_	
10	t636_000	versêr	VVIMP	ver-sêren	Sg.2	(LB (VX * ) )	_	
11	t636_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
12	t637_000	niht	PTKNEG	niht	_	 * )	_	
13	t638_000	-	$_	_	_	 * )	_	
14	t639_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t640_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t641_000	kluoge	ADJA	kluog	Pos.Fem.Nom.Sg.wk	(PreF * )	_	
3	t642_000	spîse	VVIMP	spîsen	Sg.2	(LB (VX * ) )	_	
4	t643_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t644_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t645_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t646_000	ein	DIART	èin	*.*.*.0	(MF *	_	
4	t647_000	kluoge	ADJA	kluog	Pos.Fem.Nom.Sg.wk	(NX *	_	
5	t648_000	spîse	NA	spîse	Nom.Sg	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t649_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t650_000	hirn	NA	hirn(e)	Akk.Sg	(PreF (NX * ) )	_	
3	t651_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t652_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
5	t653_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
6	t654_000	unde	KON	unte	_	(PostF *	_	
7	t655_000	mel	NA	mëlw	Akk.Sg	(NX * )	_	
8	t656_000	unde	KON	unte	_	 *	_	
9	t657_000	epfele	NA	apfel	Akk.Pl	(NX * )	_	
10	t658_000	unde	KON	unte	_	 *	_	
11	t659_000	eier	NA	èi	Akk.Pl	(NX * )	_	
12	t660_000	unde	KON	unte	_	(PrePreF * )	_	
13	t661_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
14	t662_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
15	t663_000	mit	APPR	mit	_	(PPX *	_	
16	t664_000	würzen	NA	wurz(e)	Dat.Pl	(NX * ) ) ) ) )	_	
17	t665_000	-	$_	_	_	 * )	_	
18	t666_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
19	t667_000	strîche	VVIMP	strîchen	Sg.2	(LB (VX * ) )	_	
20	t668_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
21	t669_000	an	APPR	ane	_	(PPX *	_	
22	t670_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
23	t671_000	spiez	NA	spièz	Akk.Sg	 * ) ) )	_	
24	t672_000	unde	KON	unte	_	 * ) )	_	
25	t673_000	brât	VVIMP	brâten	Sg.2	(LB (VX * ) )	_	
26	t673_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
27	t674_000	schône	AVD	schône	_	 *	_	
28	t675_000	unde	KON	unte	_	 * ) )	_	
29	t676_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
30	t676_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
31	t677_000	hin	AVD	hin(e)	_	 * )	_	
32	t678_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t679_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t680_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t681_000	hirne	NA	hirn(e)	Nom.Sg	(MF (NX * )	_	
4	t682_000	gebrâten	VVPP	brâten	_	(VX * ) )	_	
5	t683_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t684_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t685_000	selbe	DDS	sëlb	Neut.Akk.Sg.wk	 * ) )	_	
3	t686_000	tuot	VVFIN	tuon	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t687_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
5	t688_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
6	t689_000	lungen	NA	lunge	Dat.Sg	 * ) )	_	
7	t690_000	die	DRELS	dër	Fem.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
8	t691_000	dâ	AVD	dâr	_	(MF * )	_	
9	t692_000	gesoten	VVPP	ge-sièden	_	(RB (VX *	_	
10	t693_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) )	_	
11	t694_000	-	$_	_	_	 * ) ) )	_	
12	t695_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t696_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t697_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t698_000	haselhüener	NA	hasel-huon	Nom.Pl	(MF (NX * ) )	_	
4	t699_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t700_000	haselhüenere	NA	hasel-huon	Akk.Pl	(S (Cl (PreF (NX *	_	
2	t701_000	von	APPR	von	_	(PPX *	_	
3	t702_000	vriesental	NE	vriesental	Dat.Sg	(NX * ) ) ) )	_	
4	t703_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
5	t704_000	alsô	AVD	all-sô	_	(MF * )	_	
6	t705_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t706_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t707_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t708_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
4	t709_000	reinvanen	NA	rèin-vane	Akk.Sg	(PostF (NX * )	_	
5	t710_000	unde	KON	unte	_	 *	_	
6	t711_000	pêterlîn	NA	pêterlîn	Akk.Sg	(NX * ) )	_	
7	t712_000	-	$_	_	_	 * )	_	
8	t713_000	unde	KON	unte	_	(Frag *	_	
9	t714_000	salvei	NA	salvèi(e)	Akk.Sg	(NX * )	_	
10	t715_000	under	APPR	unter	_	 *	_	
11	t716_000	einander	DIA	èin-ander	*.*.*.0	 *	_	
12	t717_000	unde	KON	unte	_	 *	_	
13	t718_000	ein	DIA	èin	*.*.*.0	 *	_	
14	t719_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
15	t720_000	brôtes	NA	brôt	Gen.Sg	(NX * ) )	_	
16	t721_000	gerîben	VVINF	ge-rîben	_	(VX * )	_	
17	t722_000	dâr	PAVD	dâr/+zuo	_	 *	_	
18	t723_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
19	t724_000	unde	KON	unte	_	 *	_	
20	t725_000	würze	NA	würze	Akk.Sg	(NX * )	_	
21	t726_000	unde	KON	unte	_	 *	_	
22	t727_000	eier	NA	èi	Akk.Pl	(NX * )	_	
23	t728_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t729_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t730_000	rîbe	VVIMP	rîben	Sg.2	(LB (VX * ) )	_	
3	t731_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
4	t732_000	mit	APPR	mit	_	(PPX *	_	
5	t733_000	wîne	NA	wîn	Dat.Sg	(NX * ) ) ) )	_	
6	t734_000	-	$_	_	_	 * )	_	
7	t735_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t736_000	sude	VVIMP	suden	Sg.2	(LB (VX * ) )	_	
9	t737_000	daz	DDS	dër	Neut.Nom.Sg	(PreF (MF (NX * )	_	
10	t738_000	wole	AVD	wol(e)	_	 *	_	
11	t739_000	under	APPR	unter	_	 *	_	
12	t739_001	einandere	DIA	èin-ander	*.*.*.0	 *	_	
13	t740_000	unde	KON	unte	_	 * ) )	_	
14	t741_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
15	t741_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
16	t742_000	hin	AVD	hin(e)	_	 * )	_	
17	t743_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t744_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t745_000	gebrâten	ADJA	brâten	Pos.*..0	 *	_	
3	t746_000	gevuoltez	ADJA	ge-vüèlen	Pos.Neut.Nom.Sg.st	(NX *	_	
4	t747_000	verhelîn	NA	vèrhelîn	Nom.Sg	 * )	_	
5	t748_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t749_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t750_000	gebrâten	ADJA	brâten	Pos.*..0	 *	_	
3	t751_000	gevuoltez	ADJA	ge-vüèlen	Pos.Neut.Akk.Sg.st	(PreF (NX *	_	
4	t752_000	verhelîn	NA	vèrhelîn	Akk.Sg	 * ) )	_	
5	t753_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
6	t754_000	alsô	AVD	all-sô	_	(MF * )	_	
7	t755_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t756_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t757_000	ein	DIA	èin	*.*.*.0	(MF *	_	
3	t758_000	verhelîn	NA	vèrhelîn	Akk.Sg	(NX *	_	
4	t759_000	daz	DRELS	dër	Neut.Akk.Sg	(Cl (LB (NX *	_	
5	t760_000	drîer	CARDA	drî	*.Gen.Pl.st	(NX *	_	
6	t761_000	wochen	NA	woche	Gen.Pl	 * ) ) )	_	
7	t762_000	alt	ADJD	alt	Pos....0	(MF * )	_	
8	t763_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) )	_	
9	t764_000	-	$_	_	_	 * ) ) ) )	_	
10	t765_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
11	t766_000	brüeje	VVIMP	brüèjen	Sg.2	(LB (VX * ) )	_	
12	t767_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
13	t768_000	küele	ADJD	küèle	Pos....0	 * )	_	
14	t769_000	-	$_	_	_	 * )	_	
15	t770_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
16	t771_000	ziuhe	VVIMP	zièhen/abe<.+	Sg.2	(LB (VX * ) )	_	
17	t772_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
18	t773_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
19	t774_000	hâr	NA	hâr	Akk.Sg	 * )	_	
20	t775_000	allez	AVD	allezz	_	 * )	_	
21	t776_000	abe	PTKVZ	abe/<.+zièhen	_	(RB * )	_	
22	t777_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
23	t778_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
24	t779_000	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
25	t780_000	iht	AVD	iht	_	 * )	_	
26	t781_000	vinde	VVFIN	vinden	Subj.Pres.Sg.3	(RB (VX * ) )	_	
27	t782_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t783_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t784_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t785_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
4	t786_000	im	PPER	ër	Masc.Dat.Sg.3	(NX *	_	
5	t787_000	vimme	NA	vimme	Dat.Sg	 * )	_	
6	t788_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
7	t789_000	rans	NA	rans	Akk.Sg	 * )	_	
8	t790_000	ûzene	AVD	ûzen(e)	_	 *	_	
9	t791_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
10	t792_000	hût	NA	hût	Akk.Sg	 * ) )	_	
11	t793_000	lâzen	VVINF	lâzen	_	(RB (VX * ) )	_	
12	t794_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t795_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t796_000	loese	VVIMP	loèsen/abe<.+	Sg.2	(LB (VX * ) )	_	
3	t797_000	beide	KON	bèide	_	(MF *	_	
4	t798_000	vleisch	NA	vlèisch	Akk.Sg	(NX * ) )	_	
5	t799_000	-	$_	_	_	 *	_	
6	t800_000	ünden	NA	ünde	Akk.Sg	(Frag (NX * )	_	
7	t801_000	gebeine	NA	ge-bèine	Nom.Sg	(NX * )	_	
8	t802_000	abe	PTKVZ	abe/<.+loèsen	_	 *	_	
9	t803_000	-	$_	_	_	 * )	_	
10	t804_000	unde	KON	unte	_	(Frag *	_	
11	t805_000	allez	DIS	all	Neut.Nom.Sg.st	(NX * )	_	
12	t806_000	daz	DRELS	dër	Neut.Akk.Sg	(Cl (LB (NX * ) )	_	
13	t807_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX *	_	
14	t808_000	in	APPR	in	_	(PPX *	_	
15	t809_000	dem	DDART	dër	Masc,Neut.Dat.Sg	(NX *	_	
16	t810_000	lîbe	NA	lîb	Dat.Sg	 * ) ) ) )	_	
17	t811_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(RB (VX * ) )	_	
18	t812_000	-	$_	_	_	 * ) ) )	_	
19	t813_000	-	$_	_	_	 *	_	
20	t814_000	an	APPR	ane	_	(PPX *	_	
21	t815_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
22	t816_000	klâwen	NA	klâ(we)	Akk.Pl	 * ) )	_	
23	t817_000	die	DRELS	dër	Fem.Akk.Sg	(Cl (LB (NX * ) )	_	
24	t818_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
25	t819_000	nidenân	AVD	nidenân	_	 * )	_	
26	t820_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(RB (VX * ) )	_	
27	t821_000	-	$_	_	_	 *	_	
28	t822_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
29	t823_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
30	t824_000	vüezen	NA	vuoz	Dat.Pl	 * ) )	_	
31	t825_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t826_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t827_000	nime	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t828_000	des	DDART	dër	Neut.Gen.Sg	(MF (NX *	_	
4	t829_000	vleisches	NA	vlèisch	Gen.Sg	 * ) )	_	
5	t830_000	-	$_	_	_	 *	_	
6	t831_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
7	t832_000	dâr	PAVD	dâr/+ûz	_	(MF (VX *	_	
8	t833_000	ûz	PAVAP	ûz/dâr+	_	 * ) )	_	
9	t834_000	gezogen	VVPP	zièhen	_	(RB (VX *	_	
10	t835_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * ) ) ) )	_	
11	t836_000	wole	AVD	wol(e)	_	(Frag *	_	
12	t837_000	als	AVD	all-sô	_	 *	_	
13	t838_000	zwei	CARDA	zwêne	Neut.Akk.Pl.st	(NX *	_	
14	t839_000	eier	NA	èi	Akk.Pl	 * )	_	
15	t840_000	unde	KON	unte	_	(PrePreF * )	_	
16	t841_000	sude	VVFIN	suden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
17	t842_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
18	t843_000	vile	AVD	vil(e)	_	 *	_	
19	t843_001	nâch	AVD	nâh	_	 *	_	
20	t844_000	gar	AVD	gar(e)	_	 * )	_	
21	t845_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t846_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t847_000	nime	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t848_000	danne	AVD	danne	_	(MF *	_	
4	t849_000	daz	DDS	dër	Neut.Akk.Sg	(NX * ) )	_	
5	t850_000	-	$_	_	_	 *	_	
6	t851_000	unde	KON	unte	_	(Frag *	_	
7	t852_000	spec	NA	spëck	Akk.Sg	(NX * )	_	
8	t853_000	unde	KON	unte	_	(PrePreF * )	_	
9	t854_000	hacke	VVFIN	hacken	Subj.Pres.Sg.3	(LB (VX * ) )	_	
10	t854_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * ) )	_	
11	t855_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t856_000	tuo	VVIMP	tuon	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t857_000	roue	ADJA	rou	Pos.*.Akk.Pl.st	(MF (NX *	_	
3	t858_000	eier	NA	èi	Akk.Pl	 * )	_	
4	t859_000	dâr	PAVD	dâr/+zuo	_	 *	_	
5	t860_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
6	t861_000	unde	KON	unte	_	 *	_	
7	t862_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
8	t863_000	snitn	NA	snit	Akk.Sg	 *	_	
9	t864_000	brôtes	NA	brôt	Gen.Sg	(NX * ) )	_	
10	t865_000	unde	KON	unte	_	 *	_	
11	t866_000	pêterlînkrût	NA	pêterlîn-krût	Akk.Sg	(NX * ) )	_	
12	t867_000	-	$_	_	_	 *	_	
13	t868_000	unde	KON	unte	_	(Frag *	_	
14	t869_000	salz	NA	salz	Akk.Sg	(NX *	_	
15	t870_000	zuo	APPR	ze	_	(PPX *	_	
16	t871_000	mâze	NA	mâze	Dat.Sg	(NX * ) ) )	_	
17	t872_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t873_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t874_000	vülle	VVIMP	vüllen	Sg.2	(LB (VX * ) )	_	
3	t875_000	dâ	PAVD	dâr/+mit(e)	_	(PreF (MF *	_	
4	t876_000	mit	PAVAP	mit(e)/dâr+	_	 *	_	
5	t877_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
6	t878_000	verhelîn	NA	vèrhelîn	Akk.Sg	 * )	_	
7	t879_000	niht	PTKNEG	niht	_	 *	_	
8	t880_000	alzuo	AVD	all-ze	_	 *	_	
9	t881_000	vol	ADJD	voll	Pos....0	 *	_	
10	t882_000	unde	KON	unte	_	 * ) )	_	
11	t883_000	forme	VVIMP	formen	Sg.2	(LB (VX * ) )	_	
12	t884_000	den	DDART	dër	Masc.Akk.Sg	(PreF (MF (NX *	_	
13	t885_000	munt	NA	mund	Akk.Sg	 * )	_	
14	t886_000	unde	KON	unte	_	 * ) )	_	
15	t887_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
16	t887_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
17	t888_000	samfte	AVD	samfte	_	 *	_	
18	t889_000	in	APPR	in	_	(PPX *	_	
19	t890_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
20	t891_000	kezzel	NA	kèzzel	Akk.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t892_000	lâz	VVIMP	lâzen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t893_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
3	t894_000	erwallen	VVINF	er-wallen	_	(VX * ) )	_	
4	t895_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
5	t896_000	die	DDART	dër	Fem.Nom.Sg	(MF (NX *	_	
6	t897_000	hût	NA	hût	Nom.Sg	 * )	_	
7	t898_000	iht	AVD	iht	_	 *	_	
8	t899_000	zuo	AVD	zuo	_	 * )	_	
9	t900_000	breche	VVFIN	brëchen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
10	t901_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t902_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t903_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t904_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t905_000	denne	AVD	danne	_	 * )	_	
5	t906_000	-	$_	_	_	 * )	_	
6	t907_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
7	t908_000	lige	VVIMP	ligen	Sg.2	(LB (VX * ) )	_	
8	t909_000	ez	PPER	ër	Neut.Nom.Sg.3	(PreF (MF (NX *	_	
9	t910_000	ûf	APPR	ûf	_	(PPX *	_	
10	t911_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
11	t912_000	hülzînen	ADJA	hülzîn	Pos.Masc.Akk.Sg.*	 *	_	
12	t913_000	rost	NA	rost	Akk.Sg	 * ) ) )	_	
13	t914_000	unde	KON	unte	_	 * ) )	_	
14	t915_000	brate	VVIMP	braten	Sg.2	(LB (VX * ) )	_	
15	t916_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
16	t917_000	samfte	AVD	samfte	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t918_000	als	KO*	all-sô	_	(S (Frag *	_	
2	t919_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
3	t920_000	denne	AVD	danne	_	 *	_	
4	t921_000	wole	AVD	wol(e)	_	 *	_	
5	t922_000	gerôst	VVPP	roèsten	_	(VX *	_	
6	t923_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	 * ) )	_	
7	t924_000	sô	AVD	sô	_	(Cl (PreF (PreF * ) )	_	
8	t925_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
9	t926_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
10	t927_000	bret	NA	brët	Akk.Sg	(NX * )	_	
11	t928_000	unde	KON	unte	_	 * ) )	_	
12	t929_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
13	t930_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
14	t931_000	ûf	APPR	ûf	_	(PPX *	_	
15	t932_000	eine	DIART	èin	Fem.Akk.Sg.st	(NX *	_	
16	t933_000	schüzzeln	NA	schüzzel	Akk.Sg	 * ) ) ) ) )	_	
17	t934_000	mache	VVIMP	machen	Sg.2	(Cl (LB (VX * ) )	_	
18	t935_000	ûf	APPR	ûf	_	(PreF (MF (PPX *	_	
19	t936_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
20	t937_000	bret	NA	brët	Akk.Sg	 * ) )	_	
21	t938_000	vier	CARDA	vièr	*.*.*.0	(NX *	_	
22	t939_000	steckelîn	NA	stèckelîn	Akk.Pl	 * )	_	
23	t940_000	und	KON	unte	_	 * ) )	_	
24	t941_000	kleide	VVIMP	klèiden	Sg.2	(LB (VX * ) )	_	
25	t942_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
26	t943_000	bret	NA	brët	Akk.Sg	 *	_	
27	t944_000	mit	APPR	mit	_	(PPX *	_	
28	t945_000	eineme	DIART	èin	Neut.Dat.Sg.st	(NX *	_	
29	t946_000	blate	NA	blat	Dat.Sg	 *	_	
30	t947_000	von	APPR	von	_	(PPX *	_	
31	t948_000	eiern	NA	èi	Dat.Pl	(NX * ) ) ) ) ) )	_	
32	t949_000	-	$_	_	_	 * )	_	
33	t950_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
34	t951_000	setze	VVIMP	sètzen	Sg.2	(LB (VX * ) )	_	
35	t952_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
36	t953_000	verhelîn	NA	vèrhelîn	Akk.Sg	 * )	_	
37	t954_000	dâr	PAVD	dâr/+ûf	_	 *	_	
38	t955_000	ûf	PAVAP	ûf/dâr+	_	 * )	_	
39	t956_000	-	$_	_	_	 * )	_	
40	t957_000	kleide	VVIMP	klèiden	Sg.2	(Cl (LB (VX * ) )	_	
41	t958_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
42	t959_000	ouch	AVD	ouch	_	 *	_	
43	t960_000	mit	APPR	mit	_	(PPX *	_	
44	t961_000	eineme	DIART	èin	Neut.Dat.Sg.st	(NX *	_	
45	t962_000	blate	NA	blat	Dat.Sg	 * ) )	_	
46	t963_000	unde	KON	unte	_	 * ) )	_	
47	t964_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
48	t965_000	im	PPER	ër	Neut.Dat.Sg.3	(PreF (MF (NX * )	_	
49	t966_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
50	t967_000	ôren	NA	ôre	Akk.Pl	 * )	_	
51	t968_000	dâr	PAVD	dâr/+ûz	_	(VX *	_	
52	t969_000	ûz	PAVAP	ûz/dâr+	_	 *	_	
53	t970_000	gên	VVINF	gân	_	 * )	_	
54	t971_000	unde	KON	unte	_	 *	_	
55	t972_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
56	t973_000	munt	NA	mund	Akk.Sg	 * )	_	
57	t974_000	unde	KON	unte	_	 * ) )	_	
58	t975_000	trage	VVIMP	tragen	Sg.2	(LB (VX * ) )	_	
59	t976_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
60	t977_000	hin	AVD	hin(e)	_	 * )	_	
61	t978_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t979_000	die	DDART	dër	Fem.Nom.Sg	(S (Frag (NX *	_	
2	t980_000	kluoge	ADJA	kluog	Pos.Fem.Nom.Sg.wk	 *	_	
3	t981_000	spîse	NA	spîse	Nom.Sg	 * )	_	
4	t982_000	-	$_	_	_	 * )	_	
5	t983_000	von	APPR	von	_	(Frag (PPX *	_	
6	t984_000	pflûmen	NA	pflûme	Dat.Pl	(NX * ) )	_	
7	t985_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t986_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t987_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t988_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
4	t989_000	kriechen	NA	krièche	Akk.Pl	(PostF (NX * ) )	_	
5	t990_000	-	$_	_	_	 *	_	
6	t991_000	alsô	AVD	all-sô	_	(Frag *	_	
7	t992_000	-	$_	_	_	 * )	_	
8	t993_000	sô	KO*	sô	_	(Frag *	_	
9	t994_000	sie	PPER	ër	*.Nom.Pl.3	(NX * )	_	
10	t995_000	zîtic	ADJD	zîtig	Pos....0	(PreF * )	_	
11	t996_000	sîn	VAFIN	sîn	*.Pres.Pl.3	(LB (VX * ) ) ) )	_	
12	t997_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t998_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
14	t999_000	die	DDS	dër	*.Akk.Pl	(MF (NX *	_	
15	t1000_000	in	APPR	in	_	(PPX *	_	
16	t1001_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
17	t1002_000	êrînen	ADJA	êrîn	Pos.Masc.Akk.Sg.*	 *	_	
18	t1003_000	haven	NA	haven	Akk.Sg	 * ) ) ) )	_	
19	t1004_000	-	$_	_	_	 * )	_	
20	t1005_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
21	t1006_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
22	t1007_000	dâr	PAVD	dâr/+ûf	_	(MF *	_	
23	t1008_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
24	t1009_000	wîn	NA	wîn	Akk.Sg	(NX * )	_	
25	t1010_000	oder	KON	oder	_	 *	_	
26	t1011_000	wazzer	NA	wazzer	Akk.Sg	(NX * ) )	_	
27	t1012_000	-	$_	_	_	 *	_	
28	t1013_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
29	t1014_000	sie	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
30	t1015_000	wole	AVD	wol(e)	_	 *	_	
31	t1016_000	zuokînen	VVINF	zuo-kînen	_	(VX * )	_	
32	t1017_000	-	$_	_	_	 *	_	
33	t1018_000	unde	KON	unte	_	 * )	_	
34	t1019_000	lâze	VVIMP	lâzen	Sg.2	(RB (VX * ) )	_	
35	t1020_000	sie	PPER	ër	*.Akk.Pl.3	(PostF (NX * )	_	
36	t1021_000	sieden	VVINF	sièden	_	(VX * )	_	
37	t1022_000	unde	KON	unte	_	(PrePreF * )	_	
38	t1023_000	zuostôze	VVIMP	zer-stôzen	Sg.2	(LB (VX * ) )	_	
39	t1024_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
40	t1025_000	denne	AVD	danne	_	 * ) )	_	
41	t1026_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
42	t1027_000	die	DDS	dër	*.Akk.Pl	(MF (NX *	_	
43	t1028_000	kern	NA	kërn(e)	Akk.Pl	 * )	_	
44	t1029_000	niht	PTKNEG	niht	_	(VX *	_	
45	t1030_000	brechen	VVINF	brëchen	_	 * )	_	
46	t1031_000	-	$_	_	_	 *	_	
47	t1032_000	unde	KON	unte	_	 * )	_	
48	t1033_000	slahe	VVIMP	slahen	Sg.2	(RB (VX * ) )	_	
49	t1034_000	die	DDS	dër	*.Akk.Pl	(PostF (NX * )	_	
50	t1035_000	durch	APPR	durh	_	 *	_	
51	t1036_000	ein	DIA	èin	*.*.*.0	 *	_	
52	t1037_000	sip	NA	sib	Akk.Sg	(NX * ) )	_	
53	t1038_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1039_000	unde	KON	unte	_	(S (Frag *	_	
2	t1040_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
3	t1041_000	eine	AVD	èine	_	 *	_	
4	t1042_000	sniten	NA	snite	Akk.Sg	(NX *	_	
5	t1043_000	schoenes	ADJA	schoène	Pos.Neut.Gen.Sg.st	(NX *	_	
6	t1044_000	brôtes	NA	brôt	Gen.Sg	 * ) )	_	
7	t1045_000	dâr	PAVD	dâr/+zuo	_	 *	_	
8	t1046_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
9	t1047_000	unde	KON	unte	_	 *	_	
10	t1048_000	honic	NA	honig	Akk.Sg	(NX * )	_	
11	t1049_000	unde	KON	unte	_	(PrePreF * )	_	
12	t1050_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
13	t1051_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
14	t1052_000	zogen	VVINF	zogen	_	(VX * ) )	_	
15	t1053_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1054_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t1055_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
3	t1056_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
4	t1057_000	dâr	PAVD	dâr/+zuo	_	 *	_	
5	t1058_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
6	t1059_000	unde	KON	unte	_	 *	_	
7	t1060_000	wîn	NA	wîn	Akk.Sg	(NX * )	_	
8	t1061_000	oder	KON	oder	_	 *	_	
9	t1062_000	wazzer	NA	wazzer	Akk.Sg	(NX * ) )	_	
10	t1063_000	-	$_	_	_	 * )	_	
11	t1064_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
12	t1065_000	giuze	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
13	t1066_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
14	t1067_000	zuo	APPR	ze	_	(PPX *	_	
15	t1068_000	dem	DDS	dër	Neut.Dat.Sg	(NX *	_	
16	t1069_000	muose	NA	muos	Dat.Sg	 *	_	
17	t1070_000	mit	APPR	mit	_	(PPX *	_	
18	t1071_000	truckem	ADJA	trucke	Pos.Neut.Dat.Sg.st	(NX *	_	
19	t1072_000	gestôzeneme	ADJA	stôzen	Pos.Neut.Dat.Sg.st	 *	_	
20	t1073_000	krûte	NA	krût	Dat.Sg	 * ) ) ) ) ) )	_	
21	t1074_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1075_000	alsô	AVD	all-sô	_	(S (Frag *	_	
2	t1076_000	-	$_	_	_	 * )	_	
3	t1077_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(Cl (LB (VX * ) )	_	
4	t1078_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
5	t1079_000	ouch	AVD	ouch	_	 *	_	
6	t1080_000	wole	AVD	wol(e)	_	 * )	_	
7	t1081_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
8	t1082_000	kirsenmuos	NA	kirsen-muos	Akk.Sg	(PostF (NX * )	_	
9	t1083_000	oder	KON	oder	_	 *	_	
10	t1084_000	spenelincmuos	NA	spëneling-muos	Akk.Sg	(NX * ) )	_	
11	t1085_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1086_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t1087_000	spîse	NA	spîse	Nom.Sg	(NX *	_	
3	t1088_000	von	APPR	von	_	(PPX *	_	
4	t1089_000	biren	NA	bir(e)	Dat.Pl	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1090_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t1091_000	gebrâtene	ADJA	ge-brâten	Pos.Masc.Nom.Sg.wk	(MF *	_	
3	t1092_000	biren	NA	bir(e)	Akk.Pl	(NX * ) )	_	
4	t1093_000	-	$_	_	_	 *	_	
5	t1094_000	unde	KON	unte	_	(Frag *	_	
6	t1095_000	sûre	ADJA	sûr	Pos.*.Akk.Pl.st	(NX *	_	
7	t1096_000	epfele	NA	apfel	Akk.Pl	 * )	_	
8	t1097_000	unde	KON	unte	_	(PrePreF * )	_	
9	t1098_000	hacke	VVIMP	hacken	Sg.2	(LB (VX * ) )	_	
10	t1099_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
11	t1100_000	kleine	ADJD	klèine	Pos....0	 * )	_	
12	t1101_000	-	$_	_	_	 * )	_	
13	t1102_000	unde	KON	unte	_	(Frag *	_	
14	t1103_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
15	t1104_000	dâr	PAVD	dâr/+zuo	_	 *	_	
16	t1105_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
17	t1106_000	pfeffer	NA	pfëffer	Akk.Sg	(NX * )	_	
18	t1107_000	-	$_	_	_	 * )	_	
19	t1108_000	unde	KON	unte	_	(Frag *	_	
20	t1109_000	anîz	NA	anîz	Akk.Sg	(NX * )	_	
21	t1110_000	-	$_	_	_	 * )	_	
22	t1111_000	unde	KON	unte	_	(Frag *	_	
23	t1112_000	roue	ADJA	rou	Pos.*..0	 *	_	
24	t1113_000	eier	NA	èi	Akk.Pl	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1114_000	snît	VVIMP	snîden	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t1115_000	zwô	CARDA	zwêne	Fem.Akk.Pl.st	(MF *	_	
3	t1116_000	dünne	ADJA	dünne	Pos.*..0	 *	_	
4	t1117_000	schîben	NA	schîbe	Akk.Pl	(NX *	_	
5	t1118_000	von	APPR	von	_	(PPX *	_	
6	t1119_000	schoenem	ADJA	schoène	Pos.Neut.Dat.Sg.st	(NX *	_	
7	t1120_000	brôte	NA	brôt	Dat.Sg	 * ) ) ) ) )	_	
8	t1121_000	vülle	VVIMP	vüllen	Sg.2	(Cl (LB (VX * ) )	_	
9	t1122_000	diz	DDS	dise	Neut.Akk.Sg	(MF (NX * )	_	
10	t1123_000	dâ	PAVD	dâr/+zwischen	_	 *	_	
11	t1124_000	zwischen	PAVAP	zwischen/dâr+	_	 *	_	
12	t1125_000	niht	PTKNEG	niht	_	 * )	_	
13	t1126_000	-	$_	_	_	 *	_	
14	t1127_000	vollen	AVD	vollen	_	(Frag *	_	
15	t1128_000	eines	DIA	èin	Masc.Gen.Sg.st	(NX *	_	
16	t1129_000	vingers	NA	vinger	Gen.Sg	 * )	_	
17	t1130_000	dicke	AVD	dicke	_	 * ) )	_	
18	t1131_000	mache	VVIMP	machen	Sg.2	(Cl (LB (VX * ) )	_	
19	t1132_000	ein	DIART	èin	*.*.*.0	(MF *	_	
20	t1133_000	dünnez	ADJA	dünne	Pos.Neut.Akk.Sg.st	(NX *	_	
21	t1134_000	blat	NA	blat	Akk.Sg	 *	_	
22	t1135_000	von	APPR	von	_	(PPX *	_	
23	t1136_000	eiern	NA	èi	Dat.Pl	(NX * ) ) ) )	_	
24	t1137_000	-	$_	_	_	 * )	_	
25	t1138_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
26	t1139_000	kêre	VVIMP	kêren	Sg.2	(LB (VX * ) )	_	
27	t1140_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (MF (NX * )	_	
28	t1141_000	einez	ADJD	èinezz	Pos....0	 *	_	
29	t1142_000	dâr	PAVD	dâr/+inne	_	 *	_	
30	t1143_000	inne	PAVAP	inne/dâr+	_	 *	_	
31	t1144_000	umbe	AVD	umbe	_	 *	_	
32	t1145_000	unde	KON	unte	_	 * ) )	_	
33	t1146_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
34	t1146_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
35	t1147_000	mit	APPR	mit	_	(PPX *	_	
36	t1148_000	butern	NA	buter	Dat.Sg	(NX *	_	
37	t1149_000	in	APPR	in	_	(PPX *	_	
38	t1150_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
39	t1151_000	pfanne	NA	pfanne	Dat.Sg	 * ) ) ) ) ) )	_	
40	t1152_000	biz daz	KOUS	biz~dazz	_	(PostF (Cl (LB * )	_	
41	t1153_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
42	t1154_000	rôt	ADJD	rôt	Pos....0	 * )	_	
43	t1155_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
44	t1156_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
45	t1157_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
46	t1157_001	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
47	t1158_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1159_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t1160_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t1161_000	spîse	NA	spîse	Nom.Sg	(NX *	_	
4	t1162_000	von	APPR	von	_	(PPX *	_	
5	t1163_000	hüenern	NA	huon	Dat.Pl	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1164_000	ein	DIA	èin	*.*.*.0	(S (Frag *	_	
2	t1165_000	gebrâten	VVPP	brâten	_	(VX * )	_	
3	t1166_000	huon	NA	huon	Akk.Sg	(PreF (NX * ) )	_	
4	t1167_000	zelide	VVIMP	zer-liden	Sg.2	(LB (VX * ) )	_	
5	t1168_000	kleine	ADJD	klèine	Pos....0	(MF * ) )	_	
6	t1169_000	nim	VVIMP	nëmen	Sg.2	(Cl (LB (VX * ) )	_	
7	t1170_000	wîzez	ADJA	wîz	Pos.Neut.Akk.Sg.st	(MF (NX *	_	
8	t1171_000	brôt	NA	brôt	Akk.Sg	 * ) ) )	_	
9	t1172_000	mache	VVIMP	machen	Sg.2	(Cl (LB (VX * ) )	_	
10	t1173_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
11	t1174_000	dünnen	ADJA	dünne	Pos.Masc.Akk.Sg.*	 *	_	
12	t1175_000	eierteic	NA	èier-tèig	Akk.Sg	 * ) )	_	
13	t1176_000	safrân	NA	safrân	Akk.Sg	(Frag (NX * )	_	
14	t1177_000	unde	KON	unte	_	 *	_	
15	t1178_000	pfeffer	NA	pfëffer	Akk.Sg	(PreF (NX * ) )	_	
16	t1179_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
17	t1180_000	unde	KON	unte	_	(PreF (MF * ) )	_	
18	t1181_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
19	t1182_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (MF (NX * )	_	
20	t1183_000	zesamene	AVD	ze-samen(e)	_	 *	_	
21	t1184_000	unde	KON	unte	_	 * ) )	_	
22	t1185_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
23	t1185_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
24	t1186_000	wole	AVD	wol(e)	_	 *	_	
25	t1187_000	in	APPR	in	_	(PPX *	_	
26	t1188_000	einem	DIA	èin	Neut.Dat.Sg.st	(NX *	_	
27	t1189_000	vazze	NA	vazz	Dat.Sg	 * ) ) )	_	
28	t1190_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1191_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t1192_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t1193_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
4	t1194_000	morsær	NA	morsære	Akk.Sg	 *	_	
5	t1195_000	mit	APPR	mit	_	(PPX *	_	
6	t1196_000	vrischem	ADJA	vrisch	Pos.Neut.Dat.Sg.st	(NX *	_	
7	t1197_000	smalze	NA	smalz	Dat.Sg	 * ) ) ) )	_	
8	t1198_000	-	$_	_	_	 * )	_	
9	t1199_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
10	t1200_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
11	t1201_000	diz	DDS	dise	Neut.Akk.Sg	(PreF (MF (NX * )	_	
12	t1202_000	alzemâle	AVD	al-ze-mâle	_	 *	_	
13	t1203_000	unde	KON	unte	_	 * ) )	_	
14	t1204_000	ebene	VVIMP	ëbenen	Sg.2	(LB (VX * ) )	_	
15	t1204_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
16	t1205_000	oben	AVD	oben(e)	_	 *	_	
17	t1206_000	mit	APPR	mit	_	(PPX *	_	
18	t1207_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
19	t1208_000	kellen	NA	kèlle	Dat.Sg	 * ) ) )	_	
20	t1209_000	-	$_	_	_	 * )	_	
21	t1210_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
22	t1211_000	decke	VVIMP	dècken	Sg.2	(LB (VX * ) )	_	
23	t1211_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
24	t1212_000	mit	APPR	mit	_	(PPX *	_	
25	t1213_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
26	t1214_000	schüzzeln	NA	schüzzel(e)	Dat.Sg	 * ) ) )	_	
27	t1215_000	unde	KON	unte	_	 * ) )	_	
28	t1216_000	kêre	VVIMP	kêren	Sg.2	(LB (VX * ) )	_	
29	t1217_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
30	t1218_000	morsær	NA	morsære	Akk.Sg	 * )	_	
31	t1219_000	dicke	AVD	dicke	_	 *	_	
32	t1220_000	umbe	AVD	umbe	_	 *	_	
33	t1221_000	gein	APPR	gègen	_	(PPX *	_	
34	t1222_000	dem	DDS	dër	Neut.Dat.Sg	(NX *	_	
35	t1223_000	viure	NA	viur	Dat.Sg	 * ) ) )	_	
36	t1224_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
37	t1225_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
38	t1226_000	gelîche	AVD	ge-lîche	_	 *	_	
39	t1227_000	heiz	ADJD	hèiz	Pos....0	 * )	_	
40	t1228_000	habe	VAFIN	haben	Subj.Pres.Sg.3	(RB (VX * ) )	_	
41	t1229_000	-	$_	_	_	 * ) )	_	
42	t1230_000	unde	KON	unte	_	(Frag *	_	
43	t1231_000	weich	ADJD	wèich	Pos....0	(PreF * )	_	
44	t1232_000	belîbe	VVFIN	be-lîben	Subj.Pres.Sg.3	(LB (VX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1233_000	als	KO*	all-sô	_	(S (Frag *	_	
2	t1234_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
3	t1235_000	harte	AVD	harte	_	(PreF * )	_	
4	t1236_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(LB (VX * ) ) )	_	
5	t1237_000	sô	AVD	sô	_	(Cl (PreF * )	_	
6	t1238_000	seihe	VVIMP	sèihen/abe<.+	Sg.2	(LB (VX * ) )	_	
7	t1239_000	denne	AVD	danne	_	(MF * )	_	
8	t1240_000	abe	PTKVZ	abe/<.+sèihen	_	(RB * )	_	
9	t1241_000	daz	DDART	dër	Neut.Akk.Sg	(PostF (NX *	_	
10	t1242_000	smalz	NA	smalz	Akk.Sg	 * ) )	_	
11	t1243_000	-	$_	_	_	 * )	_	
12	t1244_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t1245_000	schüte	VVIMP	schüten	Sg.2	(LB (VX * ) )	_	
14	t1246_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
15	t1247_000	huon	NA	huon	Akk.Sg	 * )	_	
16	t1248_000	in	APPR	in	_	 *	_	
17	t1249_000	ein	DIA	èin	*.*.*.0	 *	_	
18	t1250_000	schüzzeln	NA	schüzzel(e)	Dat.Sg	(NX * ) )	_	
19	t1251_000	-	$_	_	_	 * )	_	
20	t1252_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
21	t1253_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
22	t1253_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
23	t1254_000	hin	AVD	hin(e)	_	 * )	_	
24	t1255_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1256_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t1257_000	guote	ADJA	guot	Pos.Fem.Nom.Sg.wk	(NX *	_	
3	t1258_000	vülle	NA	vülle	Nom.Sg	 * )	_	
4	t1259_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1260_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t1260_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t1261_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t1262_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t1263_000	spîse	NA	spîse	Akk.Sg	(NX * ) ) )	_	
6	t1264_000	besnîde	VVFIN	be-snîden	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
7	t1265_000	biren	NA	bir(e)	Dat.Pl	(PreF (MF (NX * )	_	
8	t1266_000	schône	AVD	schône	_	 *	_	
9	t1267_000	unde	KON	unte	_	 * ) )	_	
10	t1268_000	spalt	VVIMP	spalten	Sg.2	(LB (VX * ) )	_	
11	t1269_000	-	$_	_	_	 *	_	
12	t1270_000	in	APPR	in	_	(Frag (PPX *	_	
13	t1271_000	viere	CARDS	vièr	*.Akk.Pl.st	(NX * ) )	_	
14	t1272_000	unde	KON	unte	_	(PrePreF * )	_	
15	t1273_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
16	t1274_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
17	t1275_000	in	APPR	in	_	(PPX *	_	
18	t1276_000	einen	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
19	t1277_000	havene	NA	haven	Dat.Sg	 * ) ) ) )	_	
20	t1278_000	-	$_	_	_	 * ) )	_	
21	t1279_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
22	t1280_000	bedecke	VVIMP	be-dècken	Sg.2	(LB (VX * ) )	_	
23	t1281_000	den	DDART	dër	Masc.Akk.Sg	(PreF (MF (NX *	_	
24	t1282_000	haven	NA	haven	Akk.Sg	 * )	_	
25	t1283_000	unde	KON	unte	_	 * ) )	_	
26	t1284_000	bekleibe	VVIMP	be-klèiben	Sg.2	(LB (VX * ) )	_	
27	t1285_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
28	t1286_000	mit	APPR	mit	_	(PPX *	_	
29	t1287_000	teige	NA	tèig	Dat.Sg	(NX * ) ) ) )	_	
30	t1288_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
31	t1289_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
32	t1290_000	brâdem	NA	brâdem	Nom.Sg	 * )	_	
33	t1291_000	iht	AVD	iht	_	 *	_	
34	t1292_000	ûz	AVD	ûz	_	 * )	_	
35	t1293_000	müge	VMFIN	mügen	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1294_000	denne	AVD	danne	_	(S (Cl (PreF * )	_	
2	t1295_000	bestürze	VVIMP	be-stürzen	Sg.2	(LB (VX * ) )	_	
3	t1296_000	-	$_	_	_	 *	_	
4	t1297_000	den	DDART	dër	Masc.Akk.Sg	(Frag (NX *	_	
5	t1298_000	haven	NA	haven	Akk.Sg	 * )	_	
6	t1299_000	mit	APPR	mit	_	 *	_	
7	t1300_000	einer	DIA	èin	Fem.Dat.Sg.st	 *	_	
8	t1301_000	wîten	AVD	wîten(e)	_	 *	_	
9	t1302_000	stürzen	NA	stürze	Dat.Sg	(NX * )	_	
10	t1303_000	-	$_	_	_	 * ) )	_	
11	t1304_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
12	t1305_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
13	t1306_000	dâr	PAVD	dâr/+umbe	_	(MF *	_	
14	t1307_000	umbe	PAVAP	umbe/dâr+	_	 *	_	
15	t1308_000	glindente	ADJA	glinden	Pos.*.Akk.Pl.st	(NX *	_	
16	t1309_000	kolen	NA	kol(e)	Akk.Pl	 * ) )	_	
17	t1310_000	-	$_	_	_	 * )	_	
18	t1311_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
19	t1312_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
20	t1313_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
21	t1314_000	lancsam	AVD	lang-sam	_	 *	_	
22	t1315_000	backen	VVINF	backen	_	(VX * ) )	_	
23	t1316_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1317_000	sô	AVD	sô	_	(S (Cl (PreF (PreF * ) )	_	
2	t1318_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t1319_000	denne	AVD	danne	_	(PreF (MF *	_	
4	t1320_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
5	t1321_000	biren	NA	bir(e)	Akk.Pl	 * )	_	
6	t1322_000	her	PAVD	hër(e)/+ûz	_	 *	_	
7	t1323_000	ûz	PAVAP	ûz/hër(e)+	_	 *	_	
8	t1324_000	unde	KON	unte	_	 * ) )	_	
9	t1325_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
10	t1326_000	reines	ADJA	rèin(e)	Pos.Neut.Gen.Sg.st	(MF (NX *	_	
11	t1327_000	honiges	NA	honig	Gen.Sg	 * )	_	
12	t1328_000	dâr	PAVD	dâr/+zuo	_	 *	_	
13	t1329_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
14	t1330_000	alsô	AVD	all-sô	_	 *	_	
15	t1331_000	vile	NA	vil(e)	Akk.Sg	(NX * ) )	_	
16	t1332_000	als	KO*	all-sô	_	(Frag *	_	
17	t1333_000	der	DDS	dër	Masc.Nom.Sg	(PreF (NX * ) )	_	
18	t1334_000	sîn	VAFIN	sîn	Ind.Pres.Pl.3	(PreF (LB (VX * ) ) )	_	
19	t1335_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t1336_000	-	$_	_	_	 * ) )	_	
21	t1337_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
22	t1338_000	sude	VVIMP	suden	Sg.2	(LB (VX * ) )	_	
23	t1339_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
24	t1340_000	mit	APPR	mit	_	 * )	_	
25	t1341_000	-	$_	_	_	 *	_	
26	t1342_000	-	$_	_	_	 *	_	
27	t1343_000	einander	DIA	èin-ander	*.*.*.0	(MF * )	_	
28	t1344_000	-	$_	_	_	 *	_	
29	t1345_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
30	t1346_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
31	t1347_000	dicke	AVD	dicke	_	 * )	_	
32	t1348_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) )	_	
33	t1349_000	-	$_	_	_	 * ) ) )	_	
34	t1350_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
35	t1351_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
36	t1351_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
37	t1352_000	hin	AVD	hin(e)	_	 * )	_	
38	t1353_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1354_000	alsô	AVD	all-sô	_	(S (Cl (PreF * )	_	
2	t1355_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t1355_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
4	t1356_000	ouch	AVD	ouch	_	 *	_	
5	t1357_000	von	APPR	von	_	(PPX *	_	
6	t1358_000	epfeln	NA	apfel	Dat.Pl	(NX * ) )	_	
7	t1359_000	unde	KON	unte	_	 *	_	
8	t1360_000	von	APPR	von	_	(PPX *	_	
9	t1361_000	quitenen	NA	quiten	Dat.Pl	(NX * ) ) )	_	
10	t1362_000	aber	KO*	aber	_	(Frag *	_	
11	t1363_000	man	PI	man	*.Nom.Sg.st	(PreF (NX * ) )	_	
12	t1364_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t1365_000	pfeffers	NA	pfëffer	Gen.Sg	(MF (NX * )	_	
14	t1366_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * ) )	_	
15	t1367_000	dâr	PAVD	dâr/+zuo	_	(RB (VX *	_	
16	t1368_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
17	t1369_000	tuon	VVINF	tuon	_	 * ) )	_	
18	t1370_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1371_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t1372_000	gevüelen	ADJA	ge-vüèlen	Pos.*.Akk.Sg.st	(NX *	_	
3	t1373_000	kuochen	NA	kuoche	Akk.Sg	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1374_000	zuo	APPR	ze	_	(S (Cl (PreF (PPX *	_	
2	t1375_000	gevuolten	ADJA	ge-vüèlen	Pos.*.Dat.Pl.*	(NX *	_	
3	t1376_000	küchenen	NA	küchen(e)	Dat.Pl	 * ) ) )	_	
4	t1377_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
5	t1378_000	des	DDART	dër	Masc.Gen.Sg	(PreF (MF (NX *	_	
6	t1379_000	dobritzes	NA	dobritz	Gen.Sg	 * )	_	
7	t1380_000	unde	KON	unte	_	 * ) )	_	
8	t1381_000	zuoslahe	VVIMP	zer-slahen	Sg.2	(LB (VX * ) )	_	
9	t1382_000	den	DDS	dër	*.Dat.Pl	(MF (NX *	_	
10	t1383_000	mit	APPR	mit	_	(PPX *	_	
11	t1384_000	eierne	NA	èiern	Dat.Sg	(NX * ) ) ) )	_	
12	t1385_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1386_000	unde	KON	unte	_	(S (Frag *	_	
2	t1387_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
3	t1388_000	dâr	PAVD	dâr/+zuo	_	 *	_	
4	t1389_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
5	t1390_000	ein	DIA	èin	*.*.*.0	 *	_	
6	t1391_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
7	t1392_000	brôtes	NA	brôt	Gen.Sg	(NX * ) )	_	
8	t1393_000	oder	KON	oder	_	 *	_	
9	t1394_000	gestôzene	ADJA	stôzen	Pos.*.Akk.Pl.st	(NX *	_	
10	t1395_000	vische	NA	visch	Akk.Pl	 * )	_	
11	t1396_000	oder	KON	oder	_	 *	_	
12	t1397_000	daz	DDS	dër	Neut.Akk.Sg	(NX *	_	
13	t1398_000	dicke	ADJA	dicke	Pos.Neut.Akk.Sg.wk	 *	_	
14	t1399_000	von	APPR	von	_	(PPX *	_	
15	t1400_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
16	t1401_000	mandelmilch	NA	mandel-milch	Dat.Sg	 * ) ) )	_	
17	t1402_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1403_000	hier	PAVD	hièr/+von(e)	_	(S (Cl (LB (VX *	_	
2	t1404_000	von	PAVAP	von(e)/hièr+	_	 *	_	
3	t1405_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	 * ) )	_	
4	t1406_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
5	t1407_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t1408_000	mit	APPR	mit	_	(PostF (PPX *	_	
7	t1409_000	guotem	ADJA	guot	Pos.Neut.Dat.Sg.st	(NX *	_	
8	t1410_000	krûte	NA	krût	Dat.Sg	 * ) )	_	
9	t1411_000	küchene	NA	küchen(e)	Akk.Pl	(NX * )	_	
10	t1412_000	oder	KON	oder	_	 *	_	
11	t1413_000	waz	PW	wër	Neut.Akk.Sg.st	 *	_	
12	t1414_000	man	PI	man	*.Nom.Sg.st	(PreF (NX * ) )	_	
13	t1415_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
14	t1416_000	von	APPR	von	_	(MF (PPX *	_	
15	t1417_000	muose	NA	muos	Dat.Sg	(NX * ) ) ) )	_	
16	t1418_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1419_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t1420_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
3	t1421_000	guoten	ADJA	guot	Pos.Masc.Akk.Sg.*	(NX *	_	
4	t1422_000	mete	NA	mëte	Akk.Sg	 * ) )	_	
5	t1423_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t1424_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1425_000	der	DRELS	dër	Masc.Nom.Sg	(S (Cl (LB (NX * ) )	_	
2	t1426_000	guoten	ADJA	guot	Pos.Masc.Akk.Sg.*	(MF (NX *	_	
3	t1427_000	mete	NA	mëte	Akk.Sg	 * )	_	
4	t1428_000	machen	VVINF	machen	_	(VX * ) )	_	
5	t1429_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(RB (VX * ) ) )	_	
6	t1430_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t1431_000	werme	VVFIN	wèrmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
8	t1432_000	reinen	ADJA	rèin(e)	Pos.Masc.Akk.Sg.*	(MF (NX *	_	
9	t1433_000	brunnen	NA	brunne	Akk.Sg	 * ) )	_	
10	t1434_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
11	t1435_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
12	t1436_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
13	t1437_000	hant	NA	hant	Akk.Sg	 * )	_	
14	t1438_000	dâr	PAVD	dâr/+inne	_	(VX *	_	
15	t1439_000	inne	PAVAP	inne/dâr+	_	 *	_	
16	t1440_000	lîden	VVINF	lîden	_	 * ) )	_	
17	t1441_000	künne	VMFIN	kunnen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
18	t1442_000	-	$_	_	_	 * ) ) )	_	
19	t1443_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
20	t1444_000	neme	VVFIN	nëmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
21	t1445_000	zwei	CARDA	zwêne	Neut.Akk.Pl.st	(MF (NX *	_	
22	t1446_000	maz	NA	mazz	Akk.Pl	 *	_	
23	t1447_000	wazzers	NA	wazzer	Gen.Sg	(NX * ) ) )	_	
24	t1448_000	-	$_	_	_	 *	_	
25	t1449_000	unde	KON	unte	_	(Frag *	_	
26	t1450_000	eine	DIART	èin	Fem.Akk.Sg.st	 *	_	
27	t1451_000	honiges	NA	honig	Gen.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1452_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t1453_000	rüere	VVFIN	rüèren	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t1454_000	man	PI	man	*.Nom.Sg.st	(PreF (MF (NX *	_	
4	t1455_000	mit	APPR	mit	_	(PPX *	_	
5	t1456_000	eineme	DIA	èin	Masc.Dat.Sg.st	(NX *	_	
6	t1457_000	stecken	NA	stëcke	Dat.Sg	 * ) ) )	_	
7	t1458_000	unde	KON	unte	_	 * ) )	_	
8	t1459_000	lâze	VVFIN	lâzen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t1460_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
10	t1461_000	ein	DIA	èin	*.*.*.0	 *	_	
11	t1462_000	wîle	NA	wîl(e)	Akk.Sg	(NX * )	_	
12	t1463_000	hangen	VVINF	hangen	_	(VX * )	_	
13	t1464_000	unde	KON	unte	_	 * ) )	_	
14	t1465_000	sîhe	VVFIN	sîhen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
15	t1466_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
16	t1467_000	denne	AVD	danne	_	 *	_	
17	t1468_000	durch	APPR	durh	_	 *	_	
18	t1469_000	ein	DIA	èin	*.*.*.0	 *	_	
19	t1470_000	rein	ADJA	rèin(e)	Pos.*..0	 *	_	
20	t1471_000	tuoch	NA	tuoch	Akk.Sg	(NX * )	_	
21	t1472_000	oder	KON	oder	_	 *	_	
22	t1473_000	durch	APPR	durh	_	 *	_	
23	t1474_000	ein	DIA	èin	*.*.*.0	 *	_	
24	t1475_000	hârsip	NA	hâr-sib	Akk.Sg	(NX * )	_	
25	t1476_000	in	APPR	in	_	 *	_	
26	t1477_000	ein	DIA	èin	*.*.*.0	 *	_	
27	t1478_000	rein	ADJA	rèin(e)	Pos.*..0	 *	_	
28	t1479_000	vaz	NA	vazz	Akk.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1480_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t1481_000	siede	VVFIN	sièden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t1482_000	denne	AVD	danne	_	(PreF (MF *	_	
4	t1483_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
5	t1484_000	selben	DDA	sëlb	Fem.Akk.Sg.wk	 *	_	
6	t1485_000	wirz	NA	wirz	Akk.Sg	 *	_	
7	t1486_000	gein	APPR	gègen	_	(PPX *	_	
8	t1487_000	eineme	DIART	èin	Masc,Neut.Dat.Sg.st	(NX *	_	
9	t1488_000	acker	NA	acker	Dat.Sg	 * ) ) )	_	
10	t1489_000	lange	AVD	lange	_	 *	_	
11	t1490_000	hin	AVD	hin(e)	_	 *	_	
12	t1491_000	unde	KON	unte	_	 *	_	
13	t1492_000	wider	AVD	wider(e)	_	 *	_	
14	t1493_000	unde	KON	unte	_	 * ) )	_	
15	t1494_000	schûme	VVFIN	schûmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
16	t1495_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
17	t1496_000	wirz	NA	wirz	Akk.Sg	 *	_	
18	t1497_000	mit	APPR	mit	_	(PPX *	_	
19	t1498_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
20	t1499_000	vensterehten	ADJA	vënsterëht	Pos.Fem.Dat.Sg.wk	 *	_	
21	t1500_000	schüzzeln	NA	schüzzel(e)	Dat.Sg	 * ) ) ) )	_	
22	t1501_000	dâ	PAVD	dâr/.+inne	_	(Frag *	_	
23	t1502_000	der	DDART	dër	Masc.Nom.Sg	(PreF (NX *	_	
24	t1503_000	schûme	NA	schûm	Nom.Sg	 * ) )	_	
25	t1504_000	inne	PAVAP	inne/dâr.+	_	(LB (VX *	_	
26	t1505_000	belîbe	VVFIN	be-lîben	Subj.Pres.Sg.3	 * ) )	_	
27	t1506_000	unde	KON	unte	_	(MF *	_	
28	t1507_000	niht	PTKNEG	niht	_	 *	_	
29	t1508_000	die	DDART	dër	Fem.Nom.Sg	(NX *	_	
30	t1509_000	wirz	NA	wirz	Nom.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1510_000	dâr	PAVD	dâr/+nâh	_	(S (Cl (LB (VX *	_	
2	t1511_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
3	t1512_000	giuz	VVIMP	gièzen	Sg.2	 * ) )	_	
4	t1513_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
5	t1514_000	mete	NA	mëte	Akk.Sg	 * )	_	
6	t1515_000	in	APPR	in	_	 *	_	
7	t1516_000	ein	DIA	èin	*.*.*.0	 *	_	
8	t1517_000	rein	ADJA	rèin(e)	Pos.*..0	 *	_	
9	t1518_000	vaz	NA	vazz	Akk.Sg	(NX * ) )	_	
10	t1519_000	-	$_	_	_	 * )	_	
11	t1520_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
12	t1521_000	bedecke	VVIMP	be-dècken	Sg.2	(LB (VX * ) )	_	
13	t1522_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * ) )	_	
14	t1523_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
15	t1524_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
16	t1525_000	brâdem	NA	brâdem	Nom.Sg	 * )	_	
17	t1526_000	iht	AVD	iht	_	 *	_	
18	t1527_000	ûz	AVD	ûz	_	 * )	_	
19	t1528_000	müge	VMFIN	mügen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
20	t1529_000	als	AVD	all-sô	_	(PostF *	_	
21	t1530_000	lange	AVD	lange	_	 * )	_	
22	t1531_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
23	t1532_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
24	t1533_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
25	t1534_000	hant	NA	hant	Akk.Sg	 * )	_	
26	t1535_000	dâr	PAVD	dâr/.+inne	_	(VX *	_	
27	t1536_000	inne	PAVAP	inne/dâr.+	_	 *	_	
28	t1537_000	geliden	VVINF	ge-liden	_	 * ) )	_	
29	t1538_000	müge	VMFIN	mügen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
30	t1539_000	-	$_	_	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1540_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t1541_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t1542_000	denne	AVD	danne	_	(MF *	_	
4	t1543_000	ein	DIART	èin	*.*.*.0	 *	_	
5	t1544_000	halp	ADJA	halb	Pos.*..0	 *	_	
6	t1545_000	mæzigen	ADJA	mæzig	Pos.Masc.Akk.Sg.*	(NX *	_	
7	t1546_000	haven	NA	haven	Akk.Sg	 * ) )	_	
8	t1547_000	-	$_	_	_	 * )	_	
9	t1548_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
10	t1549_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
11	t1550_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX * )	_	
12	t1551_000	halbe	AVD	halbe	_	 *	_	
13	t1552_000	vol	ADJD	voll	Pos....0	 *	_	
14	t1553_000	hopfen	NA	hopfe	Gen.Pl	(NX * )	_	
15	t1554_000	unde	KON	unte	_	 *	_	
16	t1555_000	ein	DIA	èin	*.*.*.0	 *	_	
17	t1556_000	hantvol	NA	hant-vol	Akk.Sg	(NX *	_	
18	t1557_000	salvei	NA	salvèi(e)	Gen.Sg	(NX * ) )	_	
19	t1558_000	unde	KON	unte	_	 * ) )	_	
20	t1559_000	siude	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
21	t1560_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
22	t1561_000	mit	APPR	mit	_	(PPX *	_	
23	t1562_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
24	t1563_000	wirz	NA	wirz	Dat.Sg	 *	_	
25	t1564_000	gein	APPR	gègen	_	(PPX *	_	
26	t1565_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
27	t1566_000	halben	ADJA	halb	Pos.Fem.Dat.Sg.wk	 *	_	
28	t1567_000	mîle	NA	mîle	Dat.Sg	 * ) ) ) ) ) )	_	
29	t1568_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1569_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t1570_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
3	t1571_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
4	t1572_000	denne	AVD	danne	_	 *	_	
5	t1573_000	in	APPR	in	_	(PPX *	_	
6	t1574_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
7	t1575_000	wirz	NA	wirz	Akk.Sg	 * ) )	_	
8	t1576_000	unde	KON	unte	_	 * ) )	_	
9	t1577_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
10	t1578_000	vrischer	ADJA	vrisch	Pos.Fem.Gen.Sg.st	(PreF (MF (NX *	_	
11	t1579_000	heben	NA	hèbe	Gen.Sg	 * )	_	
12	t1580_000	ein	DIA	èin	*.*.*.0	 *	_	
13	t1581_000	halp	ADJA	halb	Pos.*..0	 *	_	
14	t1582_000	nözzelîn	NA	nözzelîn	Akk.Sg	(NX * )	_	
15	t1583_000	unde	KON	unte	_	 * ) )	_	
16	t1584_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
17	t1585_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
18	t1586_000	dâr	PAVD	dâr/+in	_	 *	_	
19	t1587_000	in	PAVAP	in/dâr+	_	 * )	_	
20	t1588_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1589_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t1590_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
3	t1591_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t1592_000	under	APPR	unter	_	 *	_	
5	t1593_000	einander	DIA	èin-ander	*.*.*.0	 * )	_	
6	t1594_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
7	t1595_000	es	PPER	ër	Masc.Gen.Sg.3	(MF (NX * ) )	_	
8	t1596_000	geschant	VVPP	ge-schènten	_	(RB (VX *	_	
9	t1597_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1598_000	sô	KO*	sô	_	(S (Cl (PreF * )	_	
2	t1599_000	decke	VVIMP	dècken/zuo<+	Sg.2	(LB (VX * ) )	_	
3	t1600_000	zuo	PTKVZ	zuo/<+dècken	_	(RB * )	_	
4	t1601_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
5	t1602_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
6	t1603_000	brâdem	NA	brâdem	Nom.Sg	 * )	_	
7	t1604_000	iht	AVD	iht	_	 *	_	
8	t1605_000	ûz	AVD	ûz	_	 * )	_	
9	t1606_000	müge	VMFIN	mügen	Subj.Pres.Sg.3	(RB (VX * ) ) ) )	_	
10	t1607_000	einen	DIART	èin	Masc.Akk.Sg.st	(Frag (NX *	_	
11	t1608_000	tac	NA	tag	Akk.Sg	 * )	_	
12	t1609_000	-	$_	_	_	 * )	_	
13	t1610_000	unde	KON	unte	_	(Frag *	_	
14	t1611_000	ein	DIA	èin	*.*.*.0	 *	_	
15	t1612_000	naht	NA	naht	Akk.Sg	(NX * )	_	
16	t1613_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1614_000	sô	AVD	sô	_	(S (Cl (PreF (PreF * )	_	
2	t1615_000	seige	VVIMP	sèigen	Sg.2	(LB (VX * ) ) )	_	
3	t1616_000	denne	KOUS	danne	_	(LB * )	_	
4	t1617_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
5	t1618_000	mete	NA	mëte	Akk.Sg	 * )	_	
6	t1619_000	durch	APPR	durh	_	 *	_	
7	t1620_000	ein	DIA	èin	*.*.*.0	 *	_	
8	t1621_000	rein	ADJA	rèin(e)	Pos.*..0	 *	_	
9	t1622_000	tuoch	NA	tuoch	Akk.Sg	(NX * )	_	
10	t1623_000	oder	KON	oder	_	 *	_	
11	t1624_000	durch	APPR	durh	_	 *	_	
12	t1625_000	ein	DIA	èin	*.*.*.0	 *	_	
13	t1626_000	hârsip	NA	hâr-sib	Akk.Sg	(NX * )	_	
14	t1627_000	-	$_	_	_	 *	_	
15	t1628_000	unde	KON	unte	_	 * )	_	
16	t1629_000	vazze	VVIMP	vazzen	Sg.2	(RB (VX * ) )	_	
17	t1630_000	in	PPER	ër	Masc.Akk.Sg.3	(PostF (NX * )	_	
18	t1631_000	in	APPR	in	_	 *	_	
19	t1632_000	ein	DIA	èin	*.*.*.0	 *	_	
20	t1633_000	rein	ADJA	rèin(e)	Pos.*..0	 *	_	
21	t1634_000	vaz	NA	vazz	Akk.Sg	(NX * )	_	
22	t1635_000	unde	KON	unte	_	(PrePreF * )	_	
23	t1636_000	lazze	VVIMP	lazzen	Sg.2	(LB (VX * ) )	_	
24	t1637_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
25	t1638_000	gern	VVINF	gër(e)n	_	(VX * )	_	
26	t1639_000	drî	CARDA	drî	*.Akk.Pl.st	(NX *	_	
27	t1640_000	tage	NA	tag	Akk.Pl	 * )	_	
28	t1641_000	unde	KON	unte	_	 *	_	
29	t1642_000	drî	CARDA	drî	*.Akk.Pl.st	(NX *	_	
30	t1643_000	nahte	NA	naht	Akk.Pl	 * ) ) )	_	
31	t1644_000	-	$_	_	_	 * )	_	
32	t1645_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
33	t1646_000	vülle	VVIMP	vüllen	Sg.2	(LB (VX * ) )	_	
34	t1647_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
35	t1648_000	alle	DIA	all	*.Akk.Pl.st	(NX *	_	
36	t1649_000	âbende	NA	âbend	Akk.Pl	 * ) )	_	
37	t1650_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1651_000	dâr	PAVD	dâr/+nâh	_	(S (Cl (LB (VX *	_	
2	t1652_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
3	t1653_000	lâze	VVFIN	lâzen/abe<.+	Subj.Pres.Sg.3	 * ) )	_	
4	t1654_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
5	t1655_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
6	t1656_000	aber	AVD	aber	_	 * )	_	
7	t1657_000	abe	PTKVZ	abe/<.+lâzen	_	(RB * )	_	
8	t1658_000	unde	KON	unte	_	(PostF (PrePreF * )	_	
9	t1659_000	hüete	VVFIN	hüèten	Subj.Pres.Sg.3	(LB (VX * ) ) )	_	
10	t1660_000	daz	DDS	dër	Neut.Nom.Sg	(Frag (NX *	_	
11	t1661_000	iht	NA	iht	Nom.Sg	 *	_	
12	t1662_000	hewe	NA	hèwe	Nom.Sg	 *	_	
13	t1663_000	durch	APPR	durh	_	(PPX *	_	
14	t1664_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) ) )	_	
15	t1665_000	kumme	NA	kumme	Nom.Sg	(NX * ) ) )	_	
16	t1666_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
17	t1667_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
18	t1668_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
19	t1669_000	ahte	CARDA	ahte	Masc.Akk.Pl.0	(NX *	_	
20	t1670_000	tage	NA	tag	Akk.Pl	 * )	_	
21	t1671_000	ligen	VVINF	ligen	_	(VX * ) )	_	
22	t1672_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
23	t1673_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
24	t1674_000	valle	VVFIN	vallen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
25	t1675_000	-	$_	_	_	 * ) )	_	
26	t1676_000	unde	KON	unte	_	(Frag *	_	
27	t1677_000	vülle	NA	vülle	Nom.Sg	(NX *	_	
28	t1678_000	in	APPR	in	_	(PPX *	_	
29	t1679_000	alle	DIA	all	*.Akk.Pl.st	(NX *	_	
30	t1680_000	âbende	NA	âbend	Akk.Pl	 * ) ) )	_	
31	t1681_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1682_000	dâr	PAVD	dâr/.+nâh	_	(S (Cl (LB (VX *	_	
2	t1683_000	nâch	PAVAP	nâh/dâr.+	_	 *	_	
3	t1684_000	loese	VVIMP	loèsen/abe<.+	Sg.2	 * ) )	_	
4	t1685_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * ) )	_	
5	t1686_000	abe	PTKVZ	abe/<.+loèsen	_	(RB * )	_	
6	t1687_000	in	APPR	in	_	(PostF *	_	
7	t1688_000	ein	DIART	èin	*.*.*.0	 *	_	
8	t1689_000	herzen	ADJA	hèrzen	Pos.*.Akk.Sg.st	(NX *	_	
9	t1690_000	vaz	NA	vazz	Akk.Sg	 * )	_	
10	t1691_000	unde	KON	unte	_	(PrePreF * )	_	
11	t1692_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
12	t1693_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
13	t1694_000	ligen	VVINF	ligen	_	(VX * )	_	
14	t1695_000	ahte	CARDA	ahte	Masc.Akk.Pl.0	(NX *	_	
15	t1696_000	tage	NA	tag	Akk.Pl	 * )	_	
16	t1697_000	vol	AVD	vol	_	 * ) )	_	
17	t1698_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1699_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t1700_000	trinke	VVIMP	trinken	Sg.2	(LB (VX * ) )	_	
3	t1701_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
4	t1702_000	denne	AVD	danne	_	 *	_	
5	t1703_000	êrst	ADJD	êr(e)st	Sup....0	 *	_	
6	t1704_000	sehs	CARDA	sëhs	*.Akk.Pl.0	(NX *	_	
7	t1705_000	wochen	NA	woche	Akk.Pl	 * )	_	
8	t1706_000	oder	KON	oder	_	 *	_	
9	t1707_000	ahte	CARDS	ahte	Fem.Akk.Pl.0	(NX * ) ) )	_	
10	t1708_000	sô	AVD	sô	_	(Cl (PreF * )	_	
11	t1709_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t1710_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX *	_	
13	t1711_000	allerbezzeste	ADJA	aller-bèzzest	Sup.Masc.Nom.Sg.wk	 * ) )	_	
14	t1712_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1713_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1714_000	pastêten	NA	pastête	Dat.Pl	(NX * ) )	_	
3	t1715_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1716_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t1717_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t1718_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t1719_000	pastêten	NA	pastête	Akk.Pl	(PostF (NX *	_	
5	t1720_000	von	APPR	von	_	(PPX *	_	
6	t1721_000	vischen	NA	visch	Dat.Pl	(NX * ) ) ) ) )	_	
7	t1722_000	sô	KO*	sô	_	(Cl (PreF * )	_	
8	t1723_000	schuope	VVIMP	schuopen	Sg.2	(LB (VX * ) )	_	
9	t1724_000	die	DDART	dër	*.Akk.Pl	(PreF (MF (NX *	_	
10	t1725_000	vische	NA	visch	Akk.Pl	 * )	_	
11	t1726_000	unde	KON	unte	_	 * ) )	_	
12	t1727_000	ziuhe	VVIMP	zièhen/abe<.+	Sg.2	(LB (VX * ) )	_	
13	t1728_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
14	t1729_000	abe	PTKVZ	abe/<.+zièhen	_	(RB * )	_	
15	t1730_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
16	t1731_000	hût	NA	hût	Akk.Sg	 * ) )	_	
17	t1732_000	swenne	AVG	swanne	_	(PostF (Cl (LB * )	_	
18	t1733_000	sie	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
19	t1734_000	erwallen	VVFIN	er-wallen	*.Pres.Pl.3	(RB (VX * ) ) ) ) )	_	
20	t1735_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
21	t1736_000	houw	VVIMP	houwen	Sg.2	(LB (VX * ) )	_	
22	t1737_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX *	_	
23	t1738_000	zuo	APPR	ze	_	(PPX *	_	
24	t1739_000	kleinen	ADJA	klèine	Pos.*.Dat.Pl.*	(NX *	_	
25	t1740_000	stücken	NA	stück(e)	Dat.Pl	 * ) ) ) )	_	
26	t1741_000	-	$_	_	_	 * )	_	
27	t1742_000	hacke	VVIMP	hacken	Sg.2	(Cl (LB (VX * ) )	_	
28	t1743_000	pêterlîn	NA	pêterlîn	Akk.Sg	(PreF (MF (NX * )	_	
29	t1744_000	unde	KON	unte	_	 *	_	
30	t1745_000	salveie	NA	salvèi(e)	Akk.Sg	(NX * )	_	
31	t1746_000	dâr	PAVD	dâr/+in	_	 *	_	
32	t1747_000	in	PAVAP	in/dâr+	_	 *	_	
33	t1748_000	unde	KON	unte	_	 * ) )	_	
34	t1749_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
35	t1750_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
36	t1751_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
37	t1752_000	pfeffer	NA	pfëffer	Akk.Sg	(NX * )	_	
38	t1753_000	unde	KON	unte	_	 *	_	
39	t1754_000	ingewer	NA	ingewër	Akk.Sg	(NX * ) )	_	
40	t1755_000	zinemîn	NA	zinemîn	Akk.Sg	(Frag (NX * )	_	
41	t1756_000	unde	KON	unte	_	 *	_	
42	t1757_000	safrân	NA	safrân	Akk.Sg	(NX * )	_	
43	t1758_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1759_000	tempers	VVFIN	tèmper(e)n	*.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t1760_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
3	t1761_000	allez	DID	all	Neut.Akk.Sg.st	 *	_	
4	t1762_000	mit	APPR	mit	_	(PPX *	_	
5	t1763_000	wîne	NA	wîn	Dat.Sg	(NX * ) ) )	_	
6	t1764_000	unde	KON	unte	_	 * ) )	_	
7	t1765_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
8	t1766_000	einen	DIART	èin	Masc.Akk.Sg.st	(PreF (MF (NX *	_	
9	t1767_000	dünnen	ADJA	dünne	Pos.Masc.Akk.Sg.*	 *	_	
10	t1768_000	derben	ADJA	dèrb	Pos.Masc.Akk.Sg.*	 *	_	
11	t1769_000	teic	NA	tèig	Akk.Sg	 * )	_	
12	t1770_000	unde	KON	unte	_	 * ) )	_	
13	t1771_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
14	t1772_000	die	DDART	dër	*.Akk.Pl	(PreF (MF (NX *	_	
15	t1773_000	vische	NA	visch	Akk.Pl	 * )	_	
16	t1774_000	dâr	PAVD	dâr/+in	_	 *	_	
17	t1775_000	in	PAVAP	in/dâr+	_	 *	_	
18	t1776_000	unde	KON	unte	_	 * ) )	_	
19	t1777_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
20	t1778_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
21	t1779_000	wîn	NA	wîn	Akk.Sg	 * ) )	_	
22	t1780_000	-	$_	_	_	 *	_	
23	t1781_000	dâr	PAVD	dâr/+ûf	_	(Frag *	_	
24	t1782_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
25	t1783_000	unde	KON	unte	_	(PrePreF * )	_	
26	t1784_000	decke	VVIMP	dècken	Sg.2	(LB (VX * ) )	_	
27	t1785_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
28	t1786_000	mit	APPR	mit	_	(PPX *	_	
29	t1787_000	eineme	DIA	èin	Masc.Dat.Sg.st	(NX *	_	
30	t1788_000	dünnem	ADJA	dünne	Pos.Masc.Dat.Sg.st	 *	_	
31	t1789_000	teige	NA	tèig	Dat.Sg	 * ) ) )	_	
32	t1790_000	unde	KON	unte	_	 * ) )	_	
33	t1791_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
34	t1792_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
35	t1793_000	umbe	AVD	umbe	_	 *	_	
36	t1794_000	unde	KON	unte	_	 *	_	
37	t1795_000	umbe	AVD	umbe	_	 * )	_	
38	t1796_000	-	$_	_	_	 * )	_	
39	t1797_000	ganz	AVD	ganz	_	(Frag *	_	
40	t1798_000	unde	KON	unte	_	(PrePreF * )	_	
41	t1799_000	brich	VVIMP	brëchen	Sg.2	(LB (VX * ) )	_	
42	t1800_000	oben	AVD	oben(e)	_	(PreF (MF *	_	
43	t1801_000	ein	DIA	èin	*.*.*.0	 *	_	
44	t1802_000	loch	NA	loch	Akk.Sg	(NX * )	_	
45	t1803_000	dâr	PAVD	dâr/.+in	_	 *	_	
46	t1804_000	in	PAVAP	in/dâr.+	_	 *	_	
47	t1805_000	unde	KON	unte	_	 * ) )	_	
48	t1806_000	lige	VVIMP	ligen	Sg.2	(LB (VX * ) )	_	
49	t1807_000	dâ	PAVD	dâr/+vür(e)	_	(PreF (MF *	_	
50	t1808_000	vüre	PAVAP	vür(e)/dâr+	_	 *	_	
51	t1809_000	ein	DIA	èin	*.*.*.0	 *	_	
52	t1810_000	klüsterlîn	NA	klüsterlîn	Akk.Sg	(NX *	_	
53	t1811_000	von	APPR	von	_	(PPX *	_	
54	t1812_000	teige	NA	tèig	Dat.Sg	(NX * ) ) )	_	
55	t1813_000	unde	KON	unte	_	 * ) )	_	
56	t1814_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
57	t1815_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
58	t1816_000	backen	VVINF	backen	_	(VX * ) )	_	
59	t1817_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1818_000	alsô	AVD	all-sô	_	(S (Cl (PreF * )	_	
2	t1819_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t1820_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
4	t1821_000	ouch	AVD	ouch	_	 *	_	
5	t1822_000	hüener	NA	huon	Akk.Pl	(NX * ) )	_	
6	t1823_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
7	t1824_000	ouch	KO*	ouch	_	(Frag *	_	
8	t1825_000	vleisch	NA	vlèisch	Akk.Sg	(NX * )	_	
9	t1826_000	oder	KON	oder	_	 *	_	
10	t1827_000	wiltbrâte	NA	wild-brât	Akk.Sg	(NX * )	_	
11	t1828_000	oder	KON	oder	_	 *	_	
12	t1829_000	-	$_	_	_	 * )	_	
13	t1830_000	âle	NA	âl	Akk.Sg	(Frag (NX * )	_	
14	t1831_000	oder	KON	oder	_	 *	_	
15	t1832_000	vogele	NA	vogel	Akk.Sg	(NX * )	_	
16	t1833_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1834_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1835_000	eineme	DIART	èin	Neut.Dat.Sg.st	(NX *	_	
3	t1836_000	gerihte	NA	ge-riht(e)	Dat.Sg	 *	_	
4	t1837_000	von	APPR	von	_	(PPX *	_	
5	t1838_000	lebern	NA	lëber(e)	Dat.Sg	(NX * ) ) ) )	_	
6	t1839_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1840_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t1841_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t1842_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
4	t1843_000	ein	CARDA	èin	*.*.*.0	(PostF (NX *	_	
5	t1844_000	lebern	NA	lëber(e)	Akk.Sg	 * )	_	
6	t1845_000	unde	KON	unte	_	 *	_	
7	t1846_000	herte	ADJA	hèrte	Pos.*..0	 *	_	
8	t1847_000	eier	NA	èi	Akk.Pl	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1848_000	die	DDS	dër	*.Akk.Pl	(S (Cl (PreF (NX * ) )	_	
2	t1849_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t1850_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
4	t1851_000	stôzen	VVINF	stôzen	_	(RB (VX * ) )	_	
5	t1852_000	in	APPR	in	_	(PostF (PPX *	_	
6	t1853_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
7	t1854_000	morsær	NA	morsære	Dat.Sg	 * ) ) )	_	
8	t1855_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1856_000	unde	KON	unte	_	(S (Frag *	_	
2	t1857_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t1858_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t1859_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
5	t1860_000	mengen	VVINF	mèngen	_	(RB (VX * ) )	_	
6	t1861_000	mit	APPR	mit	_	(PostF (PPX *	_	
7	t1862_000	lûterm	ADJA	lûter	Pos.Masc,Neut.Dat.Sg.st	(NX *	_	
8	t1863_000	tranke	NA	trank	Dat.Sg	 * ) )	_	
9	t1864_000	oder	KON	oder	_	 *	_	
10	t1865_000	mit	APPR	mit	_	(PPX *	_	
11	t1866_000	wîne	NA	wîn	Dat.Sg	(NX * ) )	_	
12	t1867_000	oder	KON	oder	_	 *	_	
13	t1868_000	mit	APPR	mit	_	(PPX *	_	
14	t1869_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) )	_	
15	t1870_000	unde	KON	unte	_	(PrePreF * )	_	
16	t1871_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
17	t1872_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * ) ) )	_	
18	t1873_000	mâlen	VVINF	mâlen	_	(RB (VX * ) )	_	
19	t1874_000	in	APPR	in	_	(PostF (PPX *	_	
20	t1875_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
21	t1876_000	senefmülen	NA	sëneff-mül(e)	Dat.Sg	 * ) ) )	_	
22	t1877_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1878_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t1879_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t1880_000	zwibollen	NA	zwibolle	Dat.Pl	(MF (NX * ) ) )	_	
4	t1881_000	die	DDS	dër	*.Akk.Pl	(Cl (PreF (NX * ) )	_	
5	t1882_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
6	t1883_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
7	t1884_000	sieden	VVINF	sièden	_	(RB (VX * ) )	_	
8	t1885_000	mit	APPR	mit	_	(PostF (PPX *	_	
9	t1886_000	smalze	NA	smalz	Dat.Sg	(NX * ) )	_	
10	t1887_000	oder	KON	oder	_	 *	_	
11	t1888_000	mit	APPR	mit	_	(PPX *	_	
12	t1889_000	öle	NA	öl(e)	Dat.Sg	(NX * ) ) ) )	_	
13	t1890_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
14	t1891_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t1891_001	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
16	t1892_000	giezen	VVINF	gièzen	_	(RB (VX * ) )	_	
17	t1893_000	über	APPR	über	_	(PostF (PPX *	_	
18	t1894_000	vische	NA	visch	Akk.Sg	(NX * ) )	_	
19	t1895_000	oder	KON	oder	_	 *	_	
20	t1896_000	über	APPR	über	_	(PPX *	_	
21	t1897_000	wiltbrât	NA	wild-brât	Akk.Sg	(NX * ) ) )	_	
22	t1898_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1899_000	nâch	APPR	nâh	_	(S (Cl (PreF (PPX *	_	
2	t1900_000	dirre	DDA	dise	Fem.Dat.Sg	(NX *	_	
3	t1901_000	wîse	NA	wîs(e)	Dat.Sg	 * ) ) )	_	
4	t1902_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
5	t1902_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
6	t1903_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
7	t1904_000	anders	DIA	ander	Neut.Gen.Sg.st	(NX *	_	
8	t1905_000	dinges	NA	ding	Gen.Sg	 * ) ) )	_	
9	t1906_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
10	t1907_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1908_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t1909_000	gevulten	ADJA	vüllen	Pos.*.Dat.Pl.*	(NX *	_	
3	t1910_000	hecheten	NA	hèchet	Dat.Pl	 * ) )	_	
4	t1911_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1912_000	vulte	VVFIN	vüllen	*.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t1913_000	hechete	NA	hèchet	Nom.Sg	(PreF (MF (NX * ) ) )	_	
3	t1914_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t1915_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
5	t1916_000	alsô	AVD	all-sô	_	 * )	_	
6	t1917_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
7	t1918_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1919_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t1920_000	neme	VVFIN	nëmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t1921_000	gevüege	ADJA	ge-vüège	Pos.*.Akk.Pl.st	(PreF (MF (NX *	_	
4	t1922_000	hechete	NA	hèchet	Akk.Pl	 * )	_	
5	t1923_000	unde	KON	unte	_	 * ) )	_	
6	t1924_000	schuope	VVFIN	schuopen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
7	t1925_000	die	DDS	dër	*.Akk.Pl	(PreF (MF (NX * )	_	
8	t1926_000	unde	KON	unte	_	 * ) )	_	
9	t1927_000	loese	VVFIN	loèsen/abe<.+	Subj.Pres.Sg.3	(LB (VX * ) )	_	
10	t1928_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
11	t1929_000	abe	PTKVZ	abe/<.+loèsen	_	(RB * )	_	
12	t1930_000	den	DDART	dër	Masc.Akk.Sg	(PostF (NX *	_	
13	t1931_000	darm	NA	darm	Akk.Sg	 *	_	
14	t1932_000	zuo	APPR	ze	_	(PPX *	_	
15	t1933_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
16	t1934_000	ôren	NA	ôre	Dat.Pl	 * ) ) )	_	
17	t1935_000	ûz	AVD	ûz	_	 * )	_	
18	t1936_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1937_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t1938_000	vische	NA	visch	Akk.Pl	(MF (NX * ) )	_	
3	t1939_000	welicher	DWA	wèl(i)ch	*.Gen.Pl.st	(Frag (NX *	_	
4	t1940_000	künne	NA	künne	Gen.Pl	 * )	_	
5	t1941_000	sie	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
6	t1942_000	sîn	VAFIN	sîn	*.Pres.Pl.3	(LB (VX * ) )	_	
7	t1943_000	-	$_	_	_	 * ) )	_	
8	t1944_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t1945_000	sude	VVFIN	suden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
10	t1946_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
11	t1947_000	unde	KON	unte	_	 * ) )	_	
12	t1948_000	lâze	VVFIN	lâzen/ûz<+	Subj.Pres.Sg.3	(LB (VX * ) )	_	
13	t1949_000	ûz	PTKVZ	ûz/<+lâzen	_	(RB * )	_	
14	t1950_000	daz	DDART	dër	Neut.Akk.Sg	(PostF (NX *	_	
15	t1951_000	geræte	NA	ge-ræte	Akk.Sg	 * ) )	_	
16	t1952_000	-	$_	_	_	 * )	_	
17	t1953_000	stôze	VVFIN	stôzen	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
18	t1954_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
19	t1955_000	in	APPR	in	_	(PPX *	_	
20	t1956_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
21	t1957_000	morsær	NA	morsære	Dat.Sg	 * ) ) ) ) )	_	
22	t1958_000	hacke	VVFIN	hacken	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
23	t1959_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
24	t1960_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
25	t1961_000	salveie	NA	salvèi(e)	Akk.Sg	(NX * ) ) )	_	
26	t1962_000	pfeffer	NA	pfëffer	Akk.Sg	(NX * )	_	
27	t1963_000	kumel	NA	kumel	Akk.Sg	(Frag (NX * )	_	
28	t1964_000	unde	KON	unte	_	 *	_	
29	t1965_000	safrân	NA	safrân	Akk.Sg	(NX *	_	
30	t1966_000	gestôzen	ADJN	stôzen	Pos.*..0	 * )	_	
31	t1967_000	-	$_	_	_	 * )	_	
32	t1968_000	salze	VVFIN	salzen	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
33	t1969_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
34	t1970_000	zuo	APPR	ze	_	(PPX *	_	
35	t1971_000	mâzen	NA	mâze	Dat.Pl	(NX * ) ) ) ) )	_	
36	t1972_000	dâ	PAVD	dâr/+mit(e)	_	(Cl (LB (VX *	_	
37	t1973_000	mit	PAVAP	mit(e)/dâr+	_	 *	_	
38	t1974_000	vülle	VVFIN	vüllen	Subj.Pres.Sg.3	 * ) )	_	
39	t1975_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
40	t1976_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
41	t1977_000	hechete	NA	hèchet	Akk.Pl	 * ) )	_	
42	t1978_000	-	$_	_	_	 * )	_	
43	t1979_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
44	t1980_000	besprenge	VVFIN	be-sprèngen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
45	t1981_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
46	t1982_000	ûzen	AVD	ûzen(e)	_	 *	_	
47	t1983_000	mit	APPR	mit	_	(PPX *	_	
48	t1984_000	salze	NA	salz	Dat.Sg	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1985_000	backe	VVFIN	backen	Subj.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t1986_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX *	_	
3	t1987_000	ûf	APPR	ûf	_	(PPX *	_	
4	t1988_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
5	t1989_000	hülzînen	ADJA	hülzîn	Pos.Masc.Dat.Sg.wk	 *	_	
6	t1990_000	rôste	NA	rôst	Dat.Sg	 * ) ) )	_	
7	t1991_000	unde	KON	unte	_	 * ) )	_	
8	t1992_000	brâte	VVFIN	brâten	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t1993_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
10	t1994_000	gar	AVD	gar(e)	_	 *	_	
11	t1995_000	schône	AVD	schône	_	 * )	_	
12	t1996_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t1997_000	alsô	AVD	all-sô	_	(S (Cl (PreF * )	_	
2	t1998_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t1998_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
4	t1999_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * )	_	
5	t2000_000	ouch	AVD	ouch	_	 * )	_	
6	t2001_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
7	t2002_000	mit	APPR	mit	_	(PostF (PPX *	_	
8	t2003_000	eierne	NA	èiern	Dat.Sg	(NX * ) ) )	_	
9	t2004_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2005_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t2006_000	vrischen	ADJA	vrisch	Pos.*.Dat.Pl.*	(NX *	_	
3	t2007_000	ælen	NA	âl	Dat.Pl	 * ) )	_	
4	t2008_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2009_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2010_000	vrische	ADJA	vrisch	Pos.*.Akk.Pl.st	(PreF (MF (NX *	_	
3	t2011_000	æle	NA	âl	Akk.Pl	 * )	_	
4	t2012_000	unde	KON	unte	_	 * ) )	_	
5	t2013_000	wasche	VVIMP	waschen/abe<.+	Sg.2	(LB (VX * ) )	_	
6	t2014_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
7	t2015_000	abe	PTKVZ	abe/<.+waschen	_	(RB * )	_	
8	t2016_000	den	DDART	dër	Masc.Akk.Sg	(PostF (NX *	_	
9	t2017_000	slîm	NA	slîm	Akk.Sg	 *	_	
10	t2018_000	mit	APPR	mit	_	(PPX *	_	
11	t2019_000	kalter	ADJA	kalt	Pos.Fem.Dat.Sg.st	(NX *	_	
12	t2020_000	aschen	NA	asche	Dat.Sg	 * ) ) ) ) )	_	
13	t2021_000	loese	VVIMP	loèsen/abe<.+	Sg.2	(Cl (LB (VX * ) )	_	
14	t2022_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
15	t2023_000	abe	PTKVZ	abe/<.+loèsen	_	(RB * )	_	
16	t2024_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
17	t2025_000	hût	NA	hût	Akk.Sg	 *	_	
18	t2026_000	bî	APPR	bî	_	(PPX *	_	
19	t2027_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
20	t2028_000	houbete	NA	houbet	Dat.Sg	 * ) ) )	_	
21	t2029_000	unde	KON	unte	_	(PrePreF * )	_	
22	t2030_000	zücke	VVIMP	zücken/nider(e)<.+	Sg.2	(LB (VX * ) )	_	
23	t2031_000	die	DDS	dër	Fem.Nom.Sg	(MF (NX * ) ) )	_	
24	t2032_000	nider	PTKVZ	nider(e)/<.+zücken	_	(RB * )	_	
25	t2033_000	biz	AVD	biz	_	(PostF *	_	
26	t2034_000	an	APPR	ane	_	(PPX *	_	
27	t2035_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
28	t2036_000	zagel	NA	zagel	Akk.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2037_000	hacke	VVIMP	hacken	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2038_000	salvein	NA	salvèi(e)	Akk.Sg	(MF (NX * )	_	
3	t2039_000	unde	KON	unte	_	 *	_	
4	t2040_000	pêtersiln	NA	pêtersil	Akk.Sg	(NX * ) )	_	
5	t2041_000	-	$_	_	_	 * )	_	
6	t2042_000	unde	KON	unte	_	(Frag *	_	
7	t2043_000	tuo	VVIMP	tuon	Sg.2	(VX * )	_	
8	t2044_000	dâr	PAVD	dâr/+zuo	_	(VX *	_	
9	t2045_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
10	t2046_000	gestôzen	VVPP	stôzen	_	(VX * )	_	
11	t2047_000	ingewer	NA	ingewër	Akk.Sg	(NX * ) )	_	
12	t2048_000	pfeffer	NA	pfëffer	Akk.Sg	(Frag (NX * )	_	
13	t2049_000	-	$_	_	_	 * )	_	
14	t2050_000	anîz	NA	anîz	Akk.Sg	(Frag (NX * )	_	
15	t2051_000	unde	KON	unte	_	 *	_	
16	t2052_000	salz	NA	salz	Akk.Sg	(NX *	_	
17	t2053_000	zuo	APPR	ze	_	(PPX *	_	
18	t2054_000	mâzen	NA	mâze	Dat.Pl	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2055_000	wirf	VVIMP	wërfen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2056_000	ûf	APPR	ûf	_	(MF (PPX *	_	
3	t2057_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
4	t2058_000	æle	NA	âl	Akk.Pl	 * ) ) )	_	
5	t2059_000	-	$_	_	_	 * )	_	
6	t2060_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
7	t2061_000	ziehe	VVFIN	zièhen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
8	t2062_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
9	t2063_000	hût	NA	hût	Akk.Sg	 * )	_	
10	t2064_000	wider	AVD	wider(e)	_	 *	_	
11	t2065_000	über	AVD	über(e)	_	 * )	_	
12	t2066_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2067_000	besprenge	VVFIN	be-sprèngen	Subj.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t2068_000	die	DDART	dër	*.Akk.Pl	(MF (NX *	_	
3	t2069_000	æle	NA	âl	Akk.Pl	 * ) )	_	
4	t2070_000	-	$_	_	_	 *	_	
5	t2071_000	ûzene	AVD	ûzen(e)	_	(Frag *	_	
6	t2072_000	mit	APPR	mit	_	(PPX *	_	
7	t2073_000	salze	NA	salz	Dat.Sg	(NX * ) )	_	
8	t2074_000	unde	KON	unte	_	(PrePreF * )	_	
9	t2075_000	brât	VVIMP	brâten	Sg.2	(LB (VX * ) )	_	
10	t2076_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
11	t2077_000	gar	AVD	gar(e)	_	 *	_	
12	t2078_000	ûf	APPR	ûf	_	(PPX *	_	
13	t2079_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
14	t2080_000	hülzînen	ADJA	hülzîn	Pos.Masc.Dat.Sg.wk	 *	_	
15	t2081_000	rôste	NA	rôst	Dat.Sg	 * ) )	_	
16	t2082_000	unde	KON	unte	_	 * ) )	_	
17	t2083_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
18	t2084_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
19	t2085_000	hin	AVD	hin(e)	_	 * )	_	
20	t2086_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2087_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2088_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2089_000	ein	DIART	èin	*.*.*.0	(MF *	_	
4	t2090_000	guot	ADJA	guot	Pos.*..0	 *	_	
5	t2091_000	spîse	NA	spîse	Nom.Sg	(NX *	_	
6	t2092_000	von	APPR	von	_	(PPX *	_	
7	t2093_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
8	t2094_000	lahse	NA	lahs	Dat.Sg	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2095_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2096_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
3	t2097_000	lahs	NA	lahs	Akk.Sg	 * ) ) )	_	
4	t2098_000	schabe	VVIMP	schaben	Sg.2	(Cl (LB (VX * ) )	_	
5	t2099_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
6	t2100_000	abe	AVD	abe	_	 *	_	
7	t2101_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
8	t2102_000	schuopen	NA	schuope	Akk.Pl	 * ) ) )	_	
9	t2103_000	spalte	VVIMP	spalten	Sg.2	(Cl (LB (VX * ) )	_	
10	t2104_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX * )	_	
11	t2105_000	unde	KON	unte	_	 * ) )	_	
12	t2106_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
13	t2107_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
14	t2108_000	an	APPR	ane	_	(PPX *	_	
15	t2109_000	stücke	NA	stück(e)	Akk.Sg	(NX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2110_000	hacke	VVIMP	hacken	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2111_000	pêterlîn	NA	pêterlîn	Akk.Sg	(MF (NX * ) ) )	_	
3	t2112_000	salveie	NA	salvèi(e)	Akk.Sg	(NX * )	_	
4	t2113_000	nim	VVIMP	nëmen	Sg.2	(Cl (LB (VX * ) )	_	
5	t2114_000	gestôzen	ADJA	stôzen	Pos.*..0	(MF *	_	
6	t2115_000	ingewer	NA	ingewër	Akk.Sg	(NX * ) )	_	
7	t2116_000	pfeffer	NA	pfëffer	Akk.Sg	(Frag (NX * )	_	
8	t2117_000	-	$_	_	_	 * ) )	_	
9	t2118_000	anîz	NA	anîz	Akk.Sg	(NX * )	_	
10	t2119_000	salz	NA	salz	Akk.Sg	(Frag (NX *	_	
11	t2120_000	zuo	APPR	ze	_	(PPX *	_	
12	t2121_000	mâzen	NA	mâze	Dat.Pl	(NX * ) ) )	_	
13	t2122_000	-	$_	_	_	 * )	_	
14	t2123_000	mache	VVIMP	machen	Sg.2	(Cl (LB (VX * ) )	_	
15	t2124_000	einen	DIART	èin	Masc.Akk.Sg.st	(PreF (MF (NX *	_	
16	t2125_000	derben	ADJA	dèrb	Pos.Masc.Akk.Sg.*	 *	_	
17	t2126_000	teic	NA	tèig	Akk.Sg	 * )	_	
18	t2127_000	noch	KON	noh	_	 *	_	
19	t2128_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
20	t2129_000	groeze	NA	groèze	Dat.Sg	 *	_	
21	t2130_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
22	t2131_000	stücke	NA	stück(e)	Gen.Pl	 * ) )	_	
23	t2132_000	unde	KON	unte	_	 * ) )	_	
24	t2133_000	wirf	VVIMP	wërfen	Sg.2	(LB (VX * ) )	_	
25	t2134_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
26	t2135_000	krût	NA	krût	Akk.Sg	 *	_	
27	t2136_000	ûf	APPR	ûf	_	(PPX *	_	
28	t2137_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
29	t2138_000	stücke	NA	stück(e)	Akk.Pl	 * ) ) ) )	_	
30	t2139_000	-	$_	_	_	 * )	_	
31	t2140_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
32	t2141_000	bewirke	VVIMP	be-wirken	Sg.2	(LB (VX * ) )	_	
33	t2142_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX *	_	
34	t2143_000	mit	APPR	mit	_	(PPX *	_	
35	t2144_000	dem	DDS	dër	Masc.Dat.Sg	(NX *	_	
36	t2145_000	teige	NA	tèig	Dat.Sg	 * ) ) ) )	_	
37	t2146_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2147_000	kanst	VMFIN	kunnen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2148_000	dû	PPER	dû	Nom.Sg.2	(MF (NX *	_	
3	t2149_000	sie	PPER	ër	Fem.Nom.Sg.3	 * ) )	_	
4	t2150_000	gestempfen	VVINF	ge-stèmpfen	_	(RB (VX * ) )	_	
5	t2151_000	in	APPR	in	_	(PostF *	_	
6	t2152_000	ein	DIA	èin	*.*.*.0	 *	_	
7	t2153_000	forme	NA	form(e)	Akk.Sg	(NX * ) ) )	_	
8	t2154_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
9	t2155_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
10	t2156_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2157_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t2158_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t2158_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
4	t2159_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
5	t2160_000	hechete	NA	hèchet	Akk.Sg	(PostF (NX * ) ) )	_	
6	t2161_000	vorellen	NA	vorelle	Akk.Sg	(NX * )	_	
7	t2162_000	brahsemen	NA	brahsem	Dat.Pl	(NX * )	_	
8	t2163_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t2164_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
10	t2165_000	iegelîchez	DIS	iè-ge-lich	Neut.Akk.Sg.st	(MF (NX * )	_	
11	t2166_000	besunder	AVD	be-sunter	_	 *	_	
12	t2167_000	in	APPR	in	_	(PPX *	_	
13	t2168_000	sîneme	DPOSA	sîn	Masc.Dat.Sg.st	(NX *	_	
14	t2169_000	teige	NA	tèig	Dat.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2170_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t2171_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
3	t2172_000	aber	KO*	aber	_	 *	_	
4	t2173_000	eines	DIA	èin	Masc.Gen.Sg.st	(NX *	_	
5	t2174_000	vleischtages	NA	vlèisch-tag	Gen.Sg	 * ) ) )	_	
6	t2175_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t2176_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
8	t2176_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
9	t2177_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
10	t2178_000	hüenere	NA	huon	Akk.Pl	(PostF (NX * ) ) )	_	
11	t2179_000	rephüenere	NA	rëb-huon	Akk.Pl	(NX * )	_	
12	t2180_000	tûben	NA	tûbe	Akk.Pl	(Frag (NX * )	_	
13	t2181_000	unde	KON	unte	_	 *	_	
14	t2182_000	fasâne	NA	fasân	Akk.Pl	(PreF (NX * ) )	_	
15	t2183_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
16	t2183_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
17	t2184_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
18	t2185_000	ob	KOUS	obe	_	(Cl (LB * )	_	
19	t2186_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
20	t2187_000	hâst	VAFIN	haben	*.Pres.Sg.2	(RB (VX * ) )	_	
21	t2188_000	die	DDART	dër	*.Akk.Pl	(PostF (NX *	_	
22	t2189_000	firmen	NA	firme	Akk.Pl	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2190_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t2191_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
3	t2192_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX *	_	
4	t2193_000	in	APPR	in	_	(PPX *	_	
5	t2194_000	smalze	NA	smalz	Dat.Sg	(NX * ) ) )	_	
6	t2195_000	oder	KON	oder	_	 * ) )	_	
7	t2196_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
8	t2197_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
9	t2198_000	in	APPR	in	_	(PPX *	_	
10	t2199_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
11	t2200_000	firmen	NA	firme	Dat.Pl	 * ) ) ) )	_	
12	t2201_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2202_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2203_000	von	APPR	von	_	(MF (PPX *	_	
3	t2204_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
4	t2205_000	brüsten	NA	brust	Dat.Pl	 *	_	
5	t2206_000	der	DDART	dër	*.Gen.Pl	(NX *	_	
6	t2207_000	hüenere	NA	huon	Gen.Pl	 * ) ) )	_	
7	t2208_000	unde	KON	unte	_	 *	_	
8	t2209_000	ander	DIA	ander	*.*.*.0	 *	_	
9	t2210_000	guot	ADJA	guot	Pos.*..0	 *	_	
10	t2211_000	vleischær	NA	vlèischære	Akk.Sg	(NX * ) ) )	_	
11	t2212_000	sô	AVD	sô	_	(Cl (PreF (PreF * ) )	_	
12	t2213_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t2214_000	die	DDART	dër	Fem.Nom.Sg	(PreF (MF (NX *	_	
14	t2215_000	kunst	NA	kunst	Nom.Sg	 * )	_	
15	t2216_000	deste	AVD	dëste	_	 *	_	
16	t2217_000	bezzer	ADJD	bèzzer	Comp....0	 *	_	
17	t2218_000	unde	KON	unte	_	 * ) )	_	
18	t2219_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
19	t2219_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
20	t2220_000	niht	PTKNEG	niht	_	 * )	_	
21	t2221_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2222_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2223_000	saget	VVFIN	sagen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2224_000	von	APPR	von	_	(MF (PPX *	_	
4	t2225_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
5	t2226_000	stokvische	NA	stock-visch	Dat.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2227_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2228_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
3	t2229_000	stokvisch	NA	stock-visch	Akk.Sg	 * ) )	_	
4	t2230_000	dâ	AVD	dâr	_	(Frag *	_	
5	t2231_000	niht	PTKNEG	niht	_	 *	_	
6	t2232_000	garst	ADJD	garst	Pos....0	(PreF * )	_	
7	t2233_000	en	PTKNEG	ne	_	(LB (VX *	_	
8	t2233_001	wese	VAFIN	wësen	Subj.Pres.Sg.3	 * ) ) ) )	_	
9	t2234_000	tuo	VVIMP	tuon/abe<.+	Sg.2	(Cl (LB (VX * ) )	_	
10	t2235_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
11	t2236_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
12	t2237_000	hût	NA	hût	Akk.Sg	 * ) )	_	
13	t2238_000	abe	PTKVZ	abe/<.+tuon	_	(RB * ) )	_	
14	t2239_000	weiche	VVIMP	wèichen	Sg.2	(Cl (LB (VX * ) )	_	
15	t2240_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
16	t2241_000	in	APPR	in	_	(PPX *	_	
17	t2242_000	kaltem	ADJA	kalt	Pos.Neut.Dat.Sg.st	(NX *	_	
18	t2243_000	wazzer	NA	wazzer	Dat.Sg	 * ) ) )	_	
19	t2244_000	eine	DIART	èin	Fem.Akk.Sg.st	(NX *	_	
20	t2245_000	naht	NA	naht	Akk.Sg	 * ) )	_	
21	t2246_000	-	$_	_	_	 * )	_	
22	t2247_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
23	t2248_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
24	t2249_000	denne	AVD	danne	_	(PreF (MF *	_	
25	t2250_000	her	PAVD	hër(e)/+ûz	_	 *	_	
26	t2250_001	ûz	PAVAP	ûz/hër(e)+	_	 *	_	
27	t2251_000	unde	KON	unte	_	 * ) )	_	
28	t2252_000	drücke	VVIMP	drücken	Sg.2	(LB (VX * ) )	_	
29	t2253_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
30	t2254_000	in	APPR	in	_	(PPX *	_	
31	t2255_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) ) )	_	
32	t2256_000	alsô	AVD	all-sô	_	 * )	_	
33	t2257_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
34	t2258_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
35	t2259_000	belîbe	VVFIN	be-lîben	Subj.Pres.Sg.3	(RB (VX * ) )	_	
36	t2260_000	ganz	ADJD	ganz	Pos....0	(PostF * ) ) ) )	_	
37	t2261_000	bint	VVIMP	binten	Sg.2	(Cl (LB (VX * ) )	_	
38	t2261_001	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX *	_	
39	t2262_000	ûf	APPR	ûf	_	(PPX *	_	
40	t2263_000	zwô	CARDA	zwêne	Fem.Akk.Pl.st	(NX *	_	
41	t2264_000	schine	NA	schin(e)	Akk.Pl	 * ) ) )	_	
42	t2265_000	unde	KON	unte	_	 * ) )	_	
43	t2266_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
44	t2267_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
45	t2268_000	ûf	APPR	ûf	_	 *	_	
46	t2269_000	einen	DIART	èin	Masc.Akk.Sg.st	 *	_	
47	t2270_000	hülzînen	ADJA	hülzîn	Pos.Masc.Akk.Sg.*	 * )	_	
48	t2271_000	-	$_	_	_	 *	_	
49	t2272_000	rost	NA	rost	Akk.Sg	(MF (NX * ) ) )	_	
50	t2273_000	strîch	VVIMP	strîchen	Sg.2	(Cl (LB (VX * ) )	_	
51	t2274_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
52	t2275_000	viur	NA	viur	Akk.Sg	 * )	_	
53	t2276_000	dâr	PAVD	dâr/+unter	_	 *	_	
54	t2277_000	under	PAVAP	unter/dâr+	_	 *	_	
55	t2278_000	allenhalben	AVD	allen-halb(en)	_	 * )	_	
56	t2279_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
57	t2280_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * ) )	_	
58	t2281_000	erwarme	VVFIN	er-warmen	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
59	t2282_000	lâze	VVIMP	lâzen	Sg.2	(Cl (LB (VX * ) )	_	
60	t2283_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
61	t2284_000	wole	AVD	wol(e)	_	 *	_	
62	t2285_000	beloufen	VVINF	be-loufen	_	(VX * )	_	
63	t2286_000	mit	APPR	mit	_	(PPX *	_	
64	t2287_000	butern	NA	buter	Dat.Sg	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2288_000	dâr	PAVD	dâr/+nâh	_	(S (Cl (LB (VX *	_	
2	t2289_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
3	t2290_000	mache	VVIMP	machen	Sg.2	 * ) )	_	
4	t2291_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
5	t2292_000	schoenen	ADJA	schoène	Pos.Masc.Akk.Sg.*	 *	_	
6	t2293_000	teic	NA	tèig	Akk.Sg	 *	_	
7	t2294_000	mit	APPR	mit	_	(PPX *	_	
8	t2295_000	wîzem	ADJA	wîz	Pos.Neut.Dat.Sg.st	(NX *	_	
9	t2296_000	melwe	NA	mëlw	Dat.Sg	 * ) ) ) )	_	
10	t2297_000	-	$_	_	_	 *	_	
11	t2298_000	unde	KON	unte	_	(Frag *	_	
12	t2299_000	mit	APPR	mit	_	(PPX *	_	
13	t2300_000	eiernen	NA	èiern	Dat.Pl	(NX * ) ) ) )	_	
14	t2301_000	dâr	PAVD	dâr/+zuo	_	(Cl (LB (VX *	_	
15	t2302_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
16	t2303_000	tuo	VVIMP	tuon	Sg.2	 * ) )	_	
17	t2304_000	stôzen	ADJA	stôzen	Pos.*.Akk.Sg.st	(MF (NX *	_	
18	t2305_000	pfeffer	NA	pfëffer	Akk.Sg	 * )	_	
19	t2306_000	oder	KON	oder	_	 *	_	
20	t2307_000	ingewer	NA	ingewër	Akk.Sg	(NX * )	_	
21	t2308_000	unde	KON	unte	_	 *	_	
22	t2309_000	ein	DIA	èin	*.*.*.0	 *	_	
23	t2310_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
24	t2311_000	safrânes	NA	safrân	Gen.Sg	(NX * ) ) ) )	_	
25	t2312_000	salz	NA	salz	Akk.Sg	(NX *	_	
26	t2313_000	zuo	APPR	ze	_	(PPX *	_	
27	t2314_000	mâze	NA	mâze	Dat.Sg	(NX * ) ) )	_	
28	t2315_000	sprenge	VVIMP	sprèngen	Sg.2	(Cl (LB (VX * ) )	_	
29	t2315_001	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX *	_	
30	t2316_000	ûf	APPR	ûf	_	(PPX *	_	
31	t2317_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
32	t2318_000	visch	NA	visch	Akk.Sg	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2319_000	als	KO*	all-sô	_	(S (Frag *	_	
2	t2320_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
3	t2321_000	visch	NA	visch	Nom.Sg	 * )	_	
4	t2322_000	gar	AVD	gar(e)	_	(PreF *	_	
5	t2323_000	heiz	ADJD	hèiz	Pos....0	 * )	_	
6	t2324_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) ) )	_	
7	t2325_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t2326_000	slahe	VVIMP	slahen	Sg.2	(LB (VX * ) )	_	
9	t2327_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
10	t2328_000	teic	NA	tèig	Akk.Sg	 * )	_	
11	t2329_000	dâr	PAVD	dâr/+ûf	_	 *	_	
12	t2330_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
13	t2331_000	mit	APPR	mit	_	(PPX *	_	
14	t2332_000	eineme	DIA	èin	Masc.Dat.Sg.st	(NX *	_	
15	t2333_000	swange	NA	swang	Dat.Sg	 * ) ) )	_	
16	t2334_000	-	$_	_	_	 * )	_	
17	t2335_000	rîche	VVIMP	rîchen	Sg.2	(Cl (LB (VX * ) )	_	
18	t2336_000	vaste	AVD	vaste	_	(MF *	_	
19	t2337_000	kolen	NA	kol(e)	Akk.Pl	(NX * )	_	
20	t2338_000	dâr	PAVD	dâr/+unter	_	 *	_	
21	t2339_000	under	PAVAP	unter/dâr+	_	 * )	_	
22	t2340_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
23	t2341_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
24	t2342_000	rôt	ADJD	rôt	Pos....0	 * )	_	
25	t2343_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
26	t2344_000	alsô	AVD	all-sô	_	(Cl (PreF * )	_	
27	t2345_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
28	t2346_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) )	_	
29	t2347_000	êr	KOUS	êr	_	(PostF (Cl (LB * )	_	
30	t2348_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
31	t2349_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) )	_	
32	t2350_000	abe	PTKVZ	abe/>+nëmen	_	(RB (VX *	_	
33	t2351_000	nemest	VVFIN	nëmen/abe>+	Subj.Pres.Sg.2	 * ) )	_	
34	t2352_000	-	$_	_	_	 * ) ) )	_	
35	t2353_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
36	t2354_000	betriuf	VVIMP	be-trièfen	Sg.2	(LB (VX * ) )	_	
37	t2355_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
38	t2356_000	veizet	ADJD	vèiz(e)t	Pos....0	 *	_	
39	t2357_000	mit	APPR	mit	_	(PPX *	_	
40	t2358_000	butern	NA	buter	Dat.Pl	(NX * ) ) )	_	
41	t2359_000	-	$_	_	_	 * )	_	
42	t2360_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
43	t2361_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
44	t2362_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
45	t2363_000	hin	AVD	hin(e)	_	 * )	_	
46	t2364_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2365_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t2366_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t2367_000	spîse	NA	spîse	Nom.Sg	(NX * )	_	
4	t2368_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2369_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2370_000	gesotene	ADJA	sièden	Pos.*.Akk.Pl.st	(MF *	_	
3	t2371_000	swînes	NA	swîn	Gen.Sg	(NX * )	_	
4	t2372_000	darme	NA	darm	Akk.Pl	(NX * )	_	
5	t2373_000	unde	KON	unte	_	 *	_	
6	t2374_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
7	t2375_000	magen	NA	mag(e)	Akk.Sg	 * ) ) )	_	
8	t2376_000	snît	VVIMP	snîden	Sg.2	(Cl (LB (VX * ) )	_	
9	t2377_000	die	DDART	dër	*.Akk.Pl	(MF (NX *	_	
10	t2378_000	gesotene	ADJA	sièden	Pos.*.Akk.Pl.st	 *	_	
11	t2379_000	darme	NA	darm	Akk.Pl	 *	_	
12	t2380_000	in	APPR	in	_	(PPX *	_	
13	t2381_000	viere	CARDS	vièr	*.Akk.Pl.st	(NX *	_	
14	t2382_000	die	DDART	dër	*.Akk.Pl	 *	_	
15	t2383_000	lange	ADJA	lang	Pos.*.Akk.Pl..%.st	 * ) ) )	_	
16	t2384_000	unde	KON	unte	_	 *	_	
17	t2385_000	die	DDART	dër	*.Akk.Pl	 *	_	
18	t2386_000	kleine	ADJA	klèine	Pos.*.Akk.Pl..%.st	 * )	_	
19	t2387_000	dâr	PAVD	dâr/+nâh	_	(Frag *	_	
20	t2388_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
21	t2389_000	snite	NA	snit	Dat.Sg	(NX * )	_	
22	t2389_001	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
23	t2390_000	gevuoge	AVD	ge-vuoge	_	 *	_	
24	t2391_000	als	KO*	all-sô	_	 *	_	
25	t2392_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
26	t2393_000	riemen	NA	rième	Akk.Pl	 * ) )	_	
27	t2394_000	unde	KON	unte	_	(Frag *	_	
28	t2395_000	den	DDART	dër	Masc.Akk.Sg	(PreF (NX *	_	
29	t2396_000	magen	NA	mag(e)	Akk.Sg	 * ) )	_	
30	t2397_000	snîde	VVFIN	snîden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
31	t2398_000	ouch	AVD	ouch	_	(MF *	_	
32	t2399_000	smal	ADJD	smal	Pos....0	 * ) )	_	
33	t2400_000	unde	KON	unte	_	(Frag *	_	
34	t2401_000	snit	NA	snit	Nom.Sg	(NX * )	_	
35	t2402_000	denne	AVD	danne	_	 *	_	
36	t2403_000	beide	KON	bèide	_	 *	_	
37	t2404_000	mâgen	NA	mâg(e)	Dat.Pl	(NX * )	_	
38	t2405_000	unde	KON	unte	_	 *	_	
39	t2406_000	darm	NA	darm	Akk.Sg	(NX * )	_	
40	t2407_000	den	DDS	dër	*.Dat.Pl	(NX * )	_	
41	t2408_000	ietweders	DIA	ièd-wëder	Masc.Gen.Sg.st	 *	_	
42	t2409_000	über	AVD	über(e)	_	 * )	_	
43	t2410_000	sô	KO*	sô	_	(Frag *	_	
44	t2411_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
45	t2412_000	kleine	ADJD	klèine	Pos....0	(PreF * )	_	
46	t2413_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
47	t2414_000	-	$_	_	_	 * ) )	_	
48	t2415_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2416_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2417_000	pêtersiln	NA	pêtersil	Akk.Sg	(MF (NX * ) )	_	
3	t2418_000	polei	NA	polèi	Akk.Sg	(Frag (NX * )	_	
4	t2419_000	unde	KON	unte	_	 *	_	
5	t2420_000	minzen	NA	minze	Akk.Sg	(NX * )	_	
6	t2421_000	-	$_	_	_	 * ) )	_	
7	t2422_000	salvei	NA	salvèi(e)	Akk.Sg	(NX * )	_	
8	t2423_000	gesotene	ADJA	sièden	Pos.*.Akk.Pl.st	(Frag *	_	
9	t2424_000	herte	ADJA	hèrte	Pos.*.Akk.Pl.st	 * )	_	
10	t2425_000	eier	NA	èi	Akk.Pl	(Frag (NX * )	_	
11	t2426_000	unde	KON	unte	_	 *	_	
12	t2427_000	schoene	ADJA	schoène	Pos.*.Akk.Pl.st	(NX *	_	
13	t2428_000	brôt	NA	brôt	Akk.Pl	 * )	_	
14	t2429_000	-	$_	_	_	 * )	_	
15	t2430_000	kumels	NA	kumel	Gen.Sg	(Frag (NX * )	_	
16	t2431_000	aller	DIA	all	*.Gen.Pl.st	 *	_	
17	t2432_000	meist	ADJD	mèist	Sup....0	 *	_	
18	t2433_000	unde	KON	unte	_	 *	_	
19	t2434_000	ein	DIA	èin	*.*.*.0	 *	_	
20	t2435_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
21	t2436_000	pfeffers	NA	pfëffer	Gen.Sg	(NX * ) )	_	
22	t2437_000	unde	KON	unte	_	 *	_	
23	t2438_000	ein	DIA	èin	*.*.*.0	 *	_	
24	t2439_000	ei	NA	èi	Akk.Sg	(NX *	_	
25	t2440_000	zuo	APPR	ze	_	(PPX *	_	
26	t2441_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
27	t2442_000	schüzzeln	NA	schüzzel(e)	Dat.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2443_000	diz	DDS	dise	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2444_000	male	VVIMP	mal(e)n	Sg.2	(LB (VX * ) )	_	
3	t2445_000	mit	APPR	mit	_	(MF (PPX *	_	
4	t2446_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) )	_	
5	t2447_000	unde	KON	unte	_	 *	_	
6	t2448_000	mit	APPR	mit	_	(PPX *	_	
7	t2449_000	guoteme	ADJA	guot	Pos.Masc.Dat.Sg.st	(NX *	_	
8	t2450_000	sôde	NA	sôd	Dat.Sg	 * ) )	_	
9	t2451_000	alsô	AVD	all-sô	_	 * )	_	
10	t2452_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
11	t2453_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
12	t2454_000	niht	PTKNEG	niht	_	 *	_	
13	t2455_000	ze	PTKA	ze	_	 *	_	
14	t2455_001	sûr	ADJD	sûr	Pos....0	 * )	_	
15	t2456_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
16	t2457_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
17	t2458_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
18	t2459_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
19	t2460_000	ûf	APPR	ûf	_	(PPX *	_	
20	t2461_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
21	t2462_000	kaldiment	NA	kaldiment	Akk.Pl	 * ) ) )	_	
22	t2463_000	unde	KON	unte	_	 * ) )	_	
23	t2464_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
24	t2465_000	smalz	NA	smalz	Akk.Sg	(MF (NX * )	_	
25	t2466_000	dâr	PAVD	dâr/+zuo	_	 *	_	
26	t2467_000	zuo	PAVAP	zuo/dâr+	_	 * ) )	_	
27	t2468_000	lâz	VVIMP	lâzen	Sg.2	(Cl (LB (VX * ) )	_	
28	t2469_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
29	t2470_000	erwarmen	VVINF	er-warmen	_	(VX * ) )	_	
30	t2471_000	unz	KOUS	unz(e)	_	(PostF (Cl (LB * )	_	
31	t2472_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
32	t2473_000	dicke	AVD	dicke	_	 * )	_	
33	t2474_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
34	t2475_000	gip	VVIMP	gëben	Sg.2	(Cl (LB (VX * ) )	_	
35	t2475_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
36	t2476_000	hin	AVD	hin(e)	_	 *	_	
37	t2477_000	unde	KON	unte	_	 * ) )	_	
38	t2478_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
39	t2478_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
40	t2479_000	niht	PTKNEG	niht	_	 * )	_	
41	t2480_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2481_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t2482_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t2483_000	geriht	NA	ge-riht(e)	Nom.Sg	(NX * )	_	
4	t2484_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2485_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2486_000	drî	CARDA	drî	*.Akk.Pl.st	(MF *	_	
3	t2487_000	gesotene	ADJA	sièden	Pos.*.Akk.Pl.st	 *	_	
4	t2488_000	smale	ADJA	smal	Pos.*.Akk.Pl.st	 *	_	
5	t2489_000	swînes	NA	swîn	Gen.Sg	(NX * )	_	
6	t2490_000	darme	NA	darm	Akk.Pl	(NX * ) ) )	_	
7	t2491_000	nim	VVIMP	nëmen	Sg.2	(Cl (LB (VX * ) )	_	
8	t2492_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
9	t2493_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
10	t2494_000	smalzes	NA	smalz	Gen.Sg	(NX *	_	
11	t2495_000	von	APPR	von	_	(PPX *	_	
12	t2496_000	pflûmen	NA	pflûme	Dat.Pl	(NX * ) ) ) )	_	
13	t2497_000	daz	DDS	dër	Neut.Akk.Sg	(Frag (NX * )	_	
14	t2498_000	dû	PPER	dû	Nom.Sg.2	(NX * ) )	_	
15	t2499_000	die	DDART	dër	Fem.Akk.Sg	(Frag (NX *	_	
16	t2500_000	wîle	NA	wîl(e)	Akk.Sg	 * )	_	
17	t2501_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
18	t2502_000	ungesoten	ADJD	un-ge-soten	Pos....0	(PreF * )	_	
19	t2503_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t2504_000	-	$_	_	_	 * )	_	
21	t2505_000	als	AVD	all-sô	_	(Frag *	_	
22	t2506_000	lanc	ADJD	lang	Pos....0	 *	_	
23	t2507_000	unde	KON	unte	_	 *	_	
24	t2508_000	grôz	ADJD	grôz	Pos....0	 * )	_	
25	t2509_000	als	KO*	all-sô	_	(Frag *	_	
26	t2510_000	die	DDART	dër	*.Nom.Pl	(PreF (NX *	_	
27	t2511_000	darme	NA	darm	Nom.Pl	 * ) )	_	
28	t2512_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) ) ) )	_	
29	t2513_000	bint	VVIMP	binten	Sg.2	(Cl (LB (VX * ) )	_	
30	t2514_000	daz	DDS	dër	Neut.Nom.Sg	(MF (NX * )	_	
31	t2515_000	zesamene	AVD	ze-samen(e)	_	 * ) )	_	
32	t2516_000	slahe	VVIMP	slahen	Sg.2	(Cl (LB (VX * ) )	_	
33	t2517_000	zwei	CARDA	zwêne	Neut.Akk.Pl.st	(PreF (MF (NX *	_	
34	t2518_000	eier	NA	èi	Akk.Pl	 * )	_	
35	t2519_000	dâr	PAVD	dâr/+zuo	_	 *	_	
36	t2520_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
37	t2521_000	unde	KON	unte	_	 * ) )	_	
38	t2522_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
39	t2523_000	ein	DIART	èin	*.*.*.0	(MF *	_	
40	t2524_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
41	t2525_000	schoenes	ADJA	schoène	Pos.Neut.Gen.Sg.st	(NX *	_	
42	t2526_000	brôtes	NA	brôt	Gen.Sg	 * ) )	_	
43	t2527_000	unde	KON	unte	_	 *	_	
44	t2528_000	pfeffer	NA	pfëffer	Akk.Sg	(NX * )	_	
45	t2529_000	unde	KON	unte	_	 *	_	
46	t2530_000	salz	NA	salz	Akk.Sg	(NX *	_	
47	t2531_000	zuo	APPR	ze	_	(PPX *	_	
48	t2532_000	mâze	NA	mâze	Dat.Sg	(NX * ) ) ) )	_	
49	t2533_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2534_000	in	APPR	in	_	(S (Cl (PreF (PPX *	_	
2	t2535_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
3	t2536_000	condimende	NA	condiment	Dat.Sg	 * ) ) )	_	
4	t2537_000	erwelle	VVFIN	er-wëllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
5	t2538_000	die	DDART	dër	*.Akk.Pl	(PreF (MF (NX *	_	
6	t2539_000	darme	NA	darm	Akk.Pl	 * )	_	
7	t2540_000	unde	KON	unte	_	 * ) )	_	
8	t2541_000	vülle	VVIMP	vüllen	Sg.2	(LB (VX * ) )	_	
9	t2542_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX *	_	
10	t2543_000	mit	APPR	mit	_	(PPX *	_	
11	t2544_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
12	t2545_000	condimende	NA	condiment	Dat.Sg	 * ) ) )	_	
13	t2546_000	unde	KON	unte	_	 * ) )	_	
14	t2547_000	stecke	VVIMP	stècken	Sg.2	(LB (VX * ) )	_	
15	t2548_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
16	t2549_000	in	APPR	in	_	(PPX *	_	
17	t2550_000	einen	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
18	t2551_000	grôzen	ADJA	grôz	Pos.Masc.Dat.Sg.wk	 *	_	
19	t2552_000	darme	NA	darm	Dat.Sg	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2553_000	swaz	PG	swër	Neut.Nom.Sg.st	(S (Frag (NX *	_	
2	t2554_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
3	t2555_000	condimendes	NA	condiment	Gen.Sg	 * ) )	_	
4	t2556_000	über	AVD	über(e)	_	(PreF * )	_	
5	t2557_000	belîbe	VVFIN	be-lîben	Subj.Pres.Sg.3	(LB (VX * ) )	_	
6	t2558_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
7	t2559_000	giuz	VVIMP	gièzen	Sg.2	(RB (VX * ) )	_	
8	t2560_000	in	APPR	in	_	(PostF (PPX *	_	
9	t2561_000	den	DDART	dër	Masc.Dat.Sg	(NX *	_	
10	t2562_000	grôzen	ADJA	grôz	Pos.Masc.Dat.Sg.wk	 *	_	
11	t2563_000	darme	NA	darm	Dat.Sg	 * ) )	_	
12	t2564_000	unde	KON	unte	_	(PrePreF * )	_	
13	t2565_000	vergip	VVIMP	ver-gëben	Sg.2	(LB (VX * ) )	_	
14	t2566_000	beide	KON	bèide	_	(MF *	_	
15	t2567_000	die	DDART	dër	*.Akk.Pl	 *	_	
16	t2568_000	innern	ADJA	inner	Pos.*.Akk.Pl..%.wk	 *	_	
17	t2569_000	unde	KON	unte	_	 *	_	
18	t2570_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
19	t2571_000	grôzen	ADJA	grôz	Pos.Masc.Akk.Sg.*	 *	_	
20	t2572_000	darm	NA	darm	Akk.Sg	 *	_	
21	t2573_000	an	APPR	ane	_	(PPX *	_	
22	t2574_000	beiden	DIA	bèide	*.Dat.Pl.st	(NX *	_	
23	t2575_000	enden	NA	ènte	Dat.Pl	 * ) ) )	_	
24	t2576_000	besunder	AVD	be-sunter	_	 * ) )	_	
25	t2577_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2578_000	teile	VVIMP	tèilen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2579_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
3	t2580_000	condiment	NA	condiment	Akk.Sg	 * )	_	
4	t2581_000	gelîch	ADJD	ge-lîch	Pos....0	 *	_	
5	t2582_000	in	APPR	in	_	(PPX *	_	
6	t2583_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
7	t2584_000	darme	NA	darm	Akk.Pl	 * ) ) ) )	_	
8	t2585_000	siut	VVIMP	sièden	Sg.2	(Cl (LB (VX * ) )	_	
9	t2586_000	sie	PPER	ër	Fem.Nom.Sg.3	(PreF (MF (NX * )	_	
10	t2587_000	gar	AVD	gar(e)	_	 *	_	
11	t2588_000	unde	KON	unte	_	 * ) )	_	
12	t2589_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
13	t2590_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
14	t2591_000	heiz	ADJD	hèiz	Pos....0	 *	_	
15	t2592_000	hin	AVD	hin(e)	_	 * )	_	
16	t2593_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2594_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t2595_000	guot	ADJA	guot	Pos.*..0	(PreF * )	_	
3	t2596_000	spîse	VVIMP	spîsen	Sg.2	(LB (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2597_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2598_000	von	APPR	von	_	(MF (PPX *	_	
3	t2599_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
4	t2600_000	brust	NA	brust	Dat.Sg	 * ) ) )	_	
5	t2601_000	-	$_	_	_	 *	_	
6	t2602_000	des	DDART	dër	Neut.Gen.Sg	(Frag (NX *	_	
7	t2603_000	huones	NA	huon	Gen.Sg	 * )	_	
8	t2604_000	unde	KON	unte	_	(PrePreF * )	_	
9	t2605_000	hacke	VVIMP	hacken	Sg.2	(LB (VX * ) )	_	
10	t2606_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
11	t2607_000	kleine	ADJD	klèine	Pos....0	 *	_	
12	t2608_000	unde	KON	unte	_	 * ) )	_	
13	t2609_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
14	t2610_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
15	t2611_000	in	APPR	in	_	(PPX *	_	
16	t2612_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
17	t2613_000	morsær	NA	morsære	Dat.Sg	 * ) ) ) )	_	
18	t2614_000	-	$_	_	_	 * ) )	_	
19	t2615_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
20	t2616_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
21	t2617_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
22	t2618_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
23	t2619_000	ein	DIART	èin	*.*.*.0	 *	_	
24	t2620_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
25	t2621_000	melwes	NA	mëlw	Gen.Sg	(NX * ) )	_	
26	t2622_000	unde	KON	unte	_	 *	_	
27	t2623_000	grobes	ADJA	grob	Pos.Neut.Gen.Sg.st	(NX *	_	
28	t2624_000	brôtes	NA	brôt	Gen.Sg	 * ) )	_	
29	t2625_000	pfeffer	NA	pfëffer	Akk.Sg	(Frag (NX * )	_	
30	t2626_000	oder	KON	oder	_	 *	_	
31	t2627_000	ingewer	NA	ingewër	Akk.Sg	(NX * ) ) )	_	
32	t2628_000	salz	NA	salz	Akk.Sg	(NX *	_	
33	t2629_000	zuo	APPR	ze	_	(PPX *	_	
34	t2630_000	mâze	NA	mâze	Dat.Sg	(NX * ) ) )	_	
35	t2631_000	ein	CARDA	èin	*.*.*.0	(Frag (NX *	_	
36	t2632_000	ei	NA	èi	Akk.Sg	 * )	_	
37	t2633_000	oder	KON	oder	_	 *	_	
38	t2634_000	zwei	CARDS	zwêne	Neut.Akk.Pl.st	(NX *	_	
39	t2635_000	nâch	APPR	nâh	_	(PPX *	_	
40	t2636_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
41	t2637_000	menige	NA	mènige	Dat.Sg	 * ) ) ) )	_	
42	t2638_000	roeste	VVIMP	roèsten	Sg.2	(Cl (LB (VX * ) )	_	
43	t2639_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
44	t2640_000	wole	AVD	wol(e)	_	 *	_	
45	t2641_000	zesamene	AVD	ze-samen(e)	_	 * ) )	_	
46	t2642_000	snît	VVIMP	snîden	Sg.2	(Cl (LB (VX * ) )	_	
47	t2643_000	zwei	CARDA	zwêne	Neut.Akk.Pl.st	(MF (NX *	_	
48	t2644_000	klüppelîn	NA	klüppelîn	Akk.Pl	 *	_	
49	t2645_000	eines	DIART	èin	Masc.Gen.Sg.st	(NX *	_	
50	t2646_000	vingers	NA	vinger	Gen.Sg	 * ) )	_	
51	t2647_000	lanc	ADJD	lang	Pos....0	 * )	_	
52	t2648_000	als	KO*	all-sô	_	(Frag *	_	
53	t2649_000	ein	DIA	èin	*.*.*.0	 *	_	
54	t2650_000	ellnschaft	NA	èllen-schaft	Akk.Sg	(NX * )	_	
55	t2651_000	vorn	AVD	vorn(e)	_	 *	_	
56	t2652_000	sleht	ADJD	slëht	Pos....0	 *	_	
57	t2653_000	-	$_	_	_	 *	_	
58	t2654_000	sinewel	ADJD	sin(e)-wëll	Pos....0	 * ) )	_	
59	t2655_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
60	t2656_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
61	t2657_000	des	DDART	dër	Neut.Gen.Sg	(MF (NX *	_	
62	t2658_000	gesoten	ADJS	sièden	Pos.Neut.Gen.Sg.0	 * )	_	
63	t2659_000	als	AVD	all-sô	_	 *	_	
64	t2660_000	grôz	ADJD	grôz	Pos....0	 *	_	
65	t2661_000	als	KO*	all-sô	_	 *	_	
66	t2662_000	ein	DIART	èin	*.*.*.0	 *	_	
67	t2663_000	morhe	NA	morhe	Akk.Sg	(NX * ) ) )	_	
68	t2664_000	wilc	VVIMP	wëlgen	Sg.2	(Cl (LB (VX * ) )	_	
69	t2664_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
70	t2665_000	sinewel	ADJD	sin(e)-wëll	Pos....0	 *	_	
71	t2666_000	in	APPR	in	_	(PPX *	_	
72	t2667_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
73	t2668_000	hant	NA	hant	Dat.Sg	 * ) ) )	_	
74	t2669_000	-	$_	_	_	 * )	_	
75	t2670_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
76	t2671_000	vüege	VVIMP	vüègen	Sg.2	(LB (VX * ) )	_	
77	t2672_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
78	t2673_000	umbe	APPR	umbe	_	(PPX *	_	
79	t2674_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
80	t2675_000	spiez	NA	spièz	Akk.Sg	 * ) ) )	_	
81	t2676_000	als	KO*	all-sô	_	 *	_	
82	t2677_000	ein	DIA	èin	*.*.*.0	 *	_	
83	t2678_000	morhe	NA	morhe	Akk.Sg	(NX * )	_	
84	t2679_000	unde	KON	unte	_	 * ) )	_	
85	t2680_000	dwinc	VVIMP	dwingen	Sg.2	(LB (VX * ) )	_	
86	t2680_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
87	t2681_000	ûzene	AVD	ûzen(e)	_	 * )	_	
88	t2682_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
89	t2683_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
90	t2684_000	krûsp	ADJD	krûsp	Pos....0	 * )	_	
91	t2685_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
92	t2686_000	lege	VVIMP	lègen	Sg.2	(Cl (LB (VX * ) )	_	
93	t2686_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
94	t2687_000	in	APPR	in	_	 *	_	
95	t2688_000	ein	DIA	èin	*.*.*.0	 *	_	
96	t2689_000	pfanne	NA	pfanne	Akk.Sg	(NX * ) ) )	_	
97	t2690_000	lâze	VVFIN	lâzen	*.Pres.Sg.1	(Cl (LB (VX * ) )	_	
98	t2691_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
99	t2692_000	sieden	VVINF	sièden	_	(VX * )	_	
100	t2693_000	mit	APPR	mit	_	(PPX *	_	
101	t2694_000	dem	DDS	dër	Neut.Dat.Sg	(NX *	_	
102	t2695_000	stecken	NA	stëcke	Dat.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2696_000	die	DDART	dër	Fem.Akk.Sg	(S (Frag (NX *	_	
2	t2697_000	wîle	NA	wîl(e)	Akk.Sg	 * )	_	
3	t2698_000	daz	DDS	dër	Neut.Nom.Sg	(PreF (NX * ) )	_	
4	t2699_000	siede	VVFIN	sièden	Subj.Pres.Sg.3	(LB (VX * ) ) )	_	
5	t2700_000	sô	AVD	sô	_	(Cl (PreF * )	_	
6	t2701_000	bewirke	VVIMP	be-wirken	Sg.2	(LB (VX * ) )	_	
7	t2702_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
8	t2703_000	andern	DIA	ander	Masc.Akk.Sg.st	 *	_	
9	t2704_000	stecken	NA	stëcke	Akk.Sg	 * ) ) )	_	
10	t2705_000	als	KO*	all-sô	_	(Frag *	_	
11	t2706_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
12	t2707_000	den	DDS	dër	Masc.Akk.Sg	(NX *	_	
13	t2708_000	einen	DIS	èin	Masc.Akk.Sg.st	 * )	_	
14	t2709_000	ûz	PTKVZ	ûz/>+nëmen	_	(VX *	_	
15	t2710_000	nemest	VVFIN	nëmen/ûz>+	Subj.Pres.Sg.2	 * ) )	_	
16	t2711_000	sô	AVD	sô	_	(Cl (PreF * )	_	
17	t2712_000	læge	VVFIN	ligen/in<.+	Subj.Past.Sg.3	(LB (VX * ) )	_	
18	t2713_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
19	t2714_000	andern	DIS	ander	Masc.Akk.Sg.st	 * ) )	_	
20	t2715_000	in	PTKVZ	in/<.+ligen	_	(RB * )	_	
21	t2716_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2717_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t2718_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
3	t2719_000	ir	PPER	ir	Nom.Pl.2	(MF (NX * )	_	
4	t2720_000	als	AVD	all-sô	_	 *	_	
5	t2721_000	vile	AVD	vil(e)	_	 * )	_	
6	t2722_000	als	KO*	all-sô	_	(Frag *	_	
7	t2723_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
8	t2724_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2725_000	swanne	AVG	swanne	_	(S (Cl (LB * )	_	
2	t2726_000	sie	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
3	t2727_000	gar	AVD	gar(e)	_	 * )	_	
4	t2728_000	sîn	VAFIN	sîn	*.Pres.Pl.3	(RB (VX *	_	
5	t2729_000	gesoten	VVPP	sièden	_	 * ) ) )	_	
6	t2730_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t2731_000	nim	VVIMP	nëmen/ûz<.+	Sg.2	(LB (VX * ) )	_	
8	t2732_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * ) )	_	
9	t2733_000	ûz	PTKVZ	ûz/<.+nëmen	_	(RB * ) )	_	
10	t2734_000	rüere	VVIMP	rüèren	Sg.2	(Cl (LB (VX * ) )	_	
11	t2735_000	ein	DIART	èin	*.*.*.0	(MF *	_	
12	t2736_000	hacken	ADJA	hacken	Pos.*.Akk.Sg.st	(NX *	_	
13	t2737_000	muos	NA	muos	Akk.Sg	 *	_	
14	t2738_000	mit	APPR	mit	_	(PPX *	_	
15	t2739_000	butern	NA	buter	Dat.Sg	(NX * ) ) ) ) )	_	
16	t2740_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
17	t2741_000	vülle	VVIMP	vüllen	Sg.2	(LB (VX * ) )	_	
18	t2742_000	in	APPR	in	_	(PreF (MF (PPX *	_	
19	t2743_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
20	t2744_000	morhen	NA	morhe	Akk.Pl	 * ) )	_	
21	t2745_000	unde	KON	unte	_	 * ) )	_	
22	t2746_000	sticke	VVIMP	stëcken	Sg.2	(LB (VX * ) )	_	
23	t2747_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
24	t2748_000	endwerh	AVD	en-dwër(h)	_	 *	_	
25	t2749_000	an	APPR	ane	_	(PPX *	_	
26	t2750_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
27	t2751_000	spitz	NA	spitz	Akk.Sg	 * ) ) ) )	_	
28	t2752_000	mache	VVIMP	machen	Sg.2	(Cl (LB (VX * ) )	_	
29	t2753_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
30	t2754_000	heiz	ADJD	hèiz	Pos....0	 *	_	
31	t2755_000	unde	KON	unte	_	 * ) )	_	
32	t2756_000	betroufe	VVIMP	be-troufen	Sg.2	(LB (VX * ) )	_	
33	t2757_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX *	_	
34	t2758_000	mit	APPR	mit	_	(PPX *	_	
35	t2759_000	butern	NA	buter	Dat.Sg	(NX * ) ) )	_	
36	t2760_000	unde	KON	unte	_	 * ) )	_	
37	t2761_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
38	t2762_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
39	t2763_000	hin	AVD	hin(e)	_	 * )	_	
40	t2764_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2765_000	alsô	AVD	all-sô	_	(S (Cl (PreF * )	_	
2	t2766_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t2766_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
4	t2767_000	ouch	AVD	ouch	_	 * )	_	
5	t2768_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t2769_000	morhen	NA	morhe	Akk.Pl	(PostF (NX *	_	
7	t2770_000	von	APPR	von	_	(PPX *	_	
8	t2771_000	hecheten	NA	hèchet	Dat.Pl	(NX * ) ) )	_	
9	t2772_000	unde	KON	unte	_	 *	_	
10	t2773_000	von	APPR	von	_	(PPX *	_	
11	t2774_000	lehsen	NA	lahs	Dat.Pl	(NX * ) ) )	_	
12	t2775_000	unde	KON	unte	_	(Frag *	_	
13	t2776_000	wâ	PAVW	wâr/+von(e)	_	 *	_	
14	t2777_000	von	PAVAP	von(e)/wâr+	_	 *	_	
15	t2778_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
16	t2779_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
17	t2780_000	-	$_	_	_	 * ) )	_	
18	t2781_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2782_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2783_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2784_000	ouch	AVD	ouch	_	(MF *	_	
4	t2785_000	guot	ADJD	guot	Pos....0	 * )	_	
5	t2786_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2787_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2788_000	mandelkern	NA	mandel-kërn(e)	Akk.Pl	(MF (NX * ) ) )	_	
3	t2789_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
4	t2790_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
5	t2791_000	in	APPR	in	_	(PPX *	_	
6	t2792_000	siedenteme	ADJA	sièden	Pos.Neut.Dat.Sg.st	(NX *	_	
7	t2793_000	wazzer	NA	wazzer	Dat.Sg	 * ) ) ) ) )	_	
8	t2794_000	stôz	VVIMP	stôzen	Sg.2	(Cl (LB (VX * ) )	_	
9	t2795_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
10	t2796_000	unde	KON	unte	_	 * ) )	_	
11	t2797_000	dwinge	VVIMP	dwingen	Sg.2	(LB (VX * ) )	_	
12	t2798_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
13	t2799_000	durch	APPR	durh	_	 *	_	
14	t2800_000	ein	DIA	èin	*.*.*.0	 *	_	
15	t2801_000	tuoch	NA	tuoch	Akk.Sg	(NX * )	_	
16	t2802_000	oder	KON	oder	_	 * ) )	_	
17	t2803_000	mal	VVIMP	mal(e)n	Sg.2	(LB (VX * ) )	_	
18	t2804_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * ) )	_	
19	t2805_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2806_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2807_000	schoene	ADJD	schoène	Pos....0	(MF *	_	
3	t2808_000	herte	ADJA	hèrte	Pos.*..0	 *	_	
4	t2809_000	brôt	NA	brôt	Akk.Sg	(NX * ) )	_	
5	t2810_000	-	$_	_	_	 * )	_	
6	t2811_000	snît	VVIMP	snîden/abe<.+	Sg.2	(Cl (LB (VX * ) )	_	
7	t2812_000	die	DDART	dër	*.Akk.Pl	(MF (NX *	_	
8	t2813_000	obersten	ADJA	ober	Pos.*.Akk.Pl.wk	 *	_	
9	t2814_000	rinden	NA	rinte	Akk.Pl	 * ) )	_	
10	t2815_000	abe	PTKVZ	abe/<.+snîden	_	(RB * )	_	
11	t2816_000	schoene	ADJD	schoène	Pos....0	(PostF *	_	
12	t2817_000	unde	KON	unte	_	 *	_	
13	t2818_000	dünne	ADJD	dünne	Pos....0	 * ) )	_	
14	t2819_000	snît	VVIMP	snîden	Sg.2	(Cl (LB (VX * ) )	_	
15	t2820_000	dâr	PAVD	dâr/+nâh	_	(MF *	_	
16	t2821_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
17	t2822_000	schîben	NA	schîbe	Akk.Pl	(NX * ) )	_	
18	t2823_000	sô	KO*	sô	_	(Frag *	_	
19	t2824_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
20	t2825_000	dünne	ADJD	dünne	Pos....0	(PreF * )	_	
21	t2826_000	mügest	VMFIN	mügen	Subj.Pres.Sg.2	(LB (VX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2827_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2828_000	beginne	VVIMP	be-ginnen	Sg.2	(LB (VX * ) )	_	
3	t2829_000	under	APPR	unter	_	(MF (PPX *	_	
4	t2830_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
5	t2831_000	obersten	ADJA	ober	Pos.Fem.Dat.Sg.wk	 *	_	
6	t2832_000	rinden	NA	rinte	Dat.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2833_000	iegelich	DIA	iè-ge-lich	Fem.Nom.Sg.0	(S (Cl (PreF (NX *	_	
2	t2834_000	schîbe	NA	schîbe	Nom.Sg	 * ) )	_	
3	t2835_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t2836_000	sîn	DPOSA	sîn	*.*.*.0	(MF *	_	
5	t2837_000	sinewel	ADJD	sin(e)-wëll	Pos....0	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2838_000	vüege	VVIMP	vüègen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2839_000	der	DDART	dër	*.Gen.Pl	(PreF (MF (NX *	_	
3	t2840_000	schîben	NA	schîbe	Gen.Pl	 * )	_	
4	t2841_000	viere	CARDS	vièr	*.Akk.Pl.st	(NX * )	_	
5	t2842_000	zesamene	AVD	ze-samen(e)	_	 *	_	
6	t2843_000	unde	KON	unte	_	 * ) )	_	
7	t2844_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
8	t2845_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
9	t2846_000	smal	ADJD	smal	Pos....0	 *	_	
10	t2847_000	als	KO*	all-sô	_	 *	_	
11	t2848_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
12	t2849_000	riemen	NA	rième	Akk.Sg	 * )	_	
13	t2850_000	unde	KON	unte	_	 * ) )	_	
14	t2851_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
15	t2852_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
16	t2853_000	denne	AVD	danne	_	 *	_	
17	t2854_000	dwerhes	AVD	dwërhes	_	 *	_	
18	t2855_000	über	AVD	über(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2856_000	sô	KO*	sô	_	(S (Frag *	_	
2	t2857_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
3	t2858_000	kleinez	ADJA	klèine	Pos.Neut.Akk.Sg.st	(PreF * )	_	
4	t2859_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) ) )	_	
5	t2860_000	halt	VVIMP	halten	Sg.2	(Cl (LB (VX * ) )	_	
6	t2861_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
7	t2862_000	mandelmilch	NA	mandel-milch	Akk.Sg	 *	_	
8	t2863_000	über	APPR	über	_	(PPX *	_	
9	t2864_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
10	t2865_000	viur	NA	viur	Akk.Sg	 * ) ) ) ) )	_	
11	t2866_000	lâze	VVFIN	lâzen	*.Pres.Sg.1	(Cl (LB (VX * ) )	_	
12	t2867_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
13	t2868_000	warm	ADJD	warm	Pos....0	 *	_	
14	t2869_000	werden	VAINF	wërden	_	(VX * ) ) )	_	
15	t2870_000	wirf	VVIMP	wërfen	Sg.2	(Cl (LB (VX * ) )	_	
16	t2871_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
17	t2872_000	brôt	NA	brôt	Akk.Sg	 * )	_	
18	t2873_000	dâr	PAVD	dâr/+in	_	 *	_	
19	t2874_000	in	PAVAP	in/dâr+	_	 * )	_	
20	t2875_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
21	t2876_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
22	t2877_000	dicke	AVD	dicke	_	 * )	_	
23	t2878_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2879_000	halt	VVIMP	halten	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2880_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX *	_	
3	t2881_000	über	APPR	über	_	(PPX *	_	
4	t2882_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
5	t2883_000	viur	NA	viur	Akk.Sg	 * ) ) ) ) )	_	
6	t2884_000	lâze	VVFIN	lâzen	*.Pres.Sg.1	(Cl (LB (VX * ) )	_	
7	t2885_000	sie	PPER	ër	Fem.Nom.Sg.3	(PreF (MF (NX * )	_	
8	t2886_000	sieden	VVINF	sièden	_	(VX * )	_	
9	t2887_000	unde	KON	unte	_	 * ) )	_	
10	t2888_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
11	t2888_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
12	t2889_000	in	APPR	in	_	(PPX *	_	
13	t2890_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
14	t2891_000	schüzzeln	NA	schüzzel	Akk.Pl	 * ) ) )	_	
15	t2892_000	unde	KON	unte	_	 * ) )	_	
16	t2893_000	ströuwe	VVIMP	ströuwen	Sg.2	(LB (VX * ) )	_	
17	t2894_000	ein	DIA	èin	*.*.*.0	(MF *	_	
18	t2895_000	zucker	NA	zucker	Akk.Sg	(NX * )	_	
19	t2896_000	dâr	PAVD	dâr/+ûf	_	 *	_	
20	t2897_000	ûf	PAVAP	ûf/dâr+	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2898_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t2899_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t2900_000	caleus	NA	caleus	Nom.Sg	(MF (NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2901_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t2902_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
3	t2902_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t2903_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2904_000	alsô	AVD	all-sô	_	(S (Cl (PreF * )	_	
2	t2905_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t2906_000	ouch	KO*	ouch	_	(MF *	_	
4	t2907_000	ander	DIA	ander	*.*.*.0	 *	_	
5	t2908_000	milch	NA	milch	Akk.Sg	(NX * ) )	_	
6	t2909_000	ob	KOUS	obe	_	(PostF (Cl (LB * )	_	
7	t2910_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
8	t2911_000	totern	NA	toter(e)	Akk.Pl	(NX * )	_	
9	t2912_000	dâr	PAVD	dâr/+ze	_	 *	_	
10	t2913_000	zuo	PTKA	ze/dâr+	_	 *	_	
11	t2914_000	tuon	NA	tuon	Akk.Sg	(NX * ) )	_	
12	t2915_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(RB (VX * ) )	_	
13	t2916_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2917_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2918_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t2919_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t2920_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t2921_000	brât?f	ADJA	brâten	Pos.*..0	 *	_	
6	t2922_000	milch	NA	milch	Akk.Sg	(NX * ) )	_	
7	t2923_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2924_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t2925_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t2926_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t2927_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t2928_000	brât?f	ADJA	brâten	Pos.*..0	 *	_	
6	t2929_000	milch	NA	milch	Akk.Sg	(NX * ) ) )	_	
7	t2930_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t2931_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
9	t2932_000	die	DDS	dër	Fem.Akk.Sg	(Frag (NX * )	_	
10	t2933_000	dô	AVD	dô	_	(PreF * )	_	
11	t2934_000	niht	NA	niht	Nom.Sg	(NX *	_	
12	t2935_000	veiztes	NA	vèizt	Gen.Sg	(NX * ) )	_	
13	t2936_000	zuo	PTKA	ze	_	(PreF * )	_	
14	t2937_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
15	t2938_000	kumen	VVINF	komen	_	(MF (VX * ) ) )	_	
16	t2939_000	unde	KON	unte	_	(Frag *	_	
17	t2940_000	die	DDS	dër	Fem.Nom.Sg	(NX * )	_	
18	t2941_000	gelebet	ADJD	ge-lëbet	Pos....0	 *	_	
19	t2942_000	-	$_	_	_	(PreF * )	_	
20	t2943_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) ) )	_	
21	t2944_000	den	DDART	dër	Masc.Akk.Sg	(Frag (NX *	_	
22	t2945_000	haven	NA	haven	Akk.Sg	 * )	_	
23	t2946_000	zuo	AVD	zuo	_	(PreF * )	_	
24	t2947_000	slahe	VVFIN	slahen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
25	t2948_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
26	t2949_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
27	t2950_000	samfte	AVD	samfte	_	 * )	_	
28	t2951_000	her	PAVD	hër(e)/+ûz	_	(RB (VX *	_	
29	t2952_000	ûz	PAVAP	ûz/hër(e)+	_	 *	_	
30	t2953_000	glîte	VVFIN	glîten	Subj.Pres.Sg.3	 * ) )	_	
31	t2954_000	ûf	APPR	ûf	_	(PostF *	_	
32	t2955_000	ein	DIA	èin	*.*.*.0	 *	_	
33	t2956_000	biuteltuoch	NA	biutel-tuoch	Akk.Sg	(NX * ) ) ) ) )	_	
34	t2957_000	dâr	PAVD	dâr/+in	_	(Cl (LB (VX *	_	
35	t2958_000	in	PAVAP	in/dâr+	_	 *	_	
36	t2959_000	bewint	VVIMP	be-winten	Sg.2	 * ) )	_	
37	t2960_000	sie	PPER	ër	Fem.Akk.Sg.3	(PreF (MF (NX * )	_	
38	t2961_000	unde	KON	unte	_	 * ) )	_	
39	t2962_000	beswer	VVIMP	be-swër(e)n	Sg.2	(LB (VX * ) )	_	
40	t2963_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
41	t2964_000	samfte	AVD	samfte	_	 *	_	
42	t2965_000	von	AVD	von	_	 *	_	
43	t2966_000	êrste	AVD	êr(e)ste	Sup	 * )	_	
44	t2967_000	-	$_	_	_	 *	_	
45	t2968_000	unde	KON	unte	_	(Frag *	_	
46	t2969_000	dâr	PAVD	dâr/+nâh	_	 *	_	
47	t2970_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
48	t2971_000	baz	AVD	bazz	Comp	 * ) )	_	
49	t2972_000	lâz	VVIMP	lâzen	Sg.2	(Cl (LB (VX * ) )	_	
50	t2973_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
51	t2974_000	ligen	VVINF	ligen	_	(VX * )	_	
52	t2975_000	von	APPR	von	_	(PPX *	_	
53	t2976_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
54	t2977_000	morgene	NA	morgen	Dat.Sg	 * ) )	_	
55	t2978_000	biz	AVD	biz	_	 *	_	
56	t2979_000	hin	AVD	hin(e)	_	 *	_	
57	t2980_000	zuo	APPR	ze	_	(PPX *	_	
58	t2981_000	âbende	NA	âbend	Dat.Sg	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t2982_000	sô	KO*	sô	_	(S (Cl (PreF * )	_	
2	t2983_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
3	t2984_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
4	t2985_000	dünne	ADJD	dünne	Pos....0	 *	_	
5	t2986_000	unde	KON	unte	_	 * ) )	_	
6	t2987_000	spizze	VVIMP	spizzen	Sg.2	(LB (VX * ) )	_	
7	t2988_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * ) ) )	_	
8	t2989_000	besprenge	VVIMP	be-sprèngen	Sg.2	(Cl (LB (VX * ) )	_	
9	t2990_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
10	t2991_000	mit	APPR	mit	_	(PPX *	_	
11	t2992_000	salze	NA	salz	Dat.Sg	(NX * ) ) ) )	_	
12	t2993_000	-	$_	_	_	 * )	_	
13	t2994_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
14	t2995_000	lige	VVIMP	ligen	Sg.2	(LB (VX * ) )	_	
15	t2996_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
16	t2997_000	ûf	APPR	ûf	_	(PPX *	_	
17	t2998_000	einen	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
18	t2999_000	hülzînen	ADJA	hülzîn	Pos.Masc.Dat.Sg.wk	 *	_	
19	t3000_000	roste	NA	rost	Dat.Sg	 * ) ) ) )	_	
20	t3001_000	-	$_	_	_	 *	_	
21	t3002_000	-	$_	_	_	 * )	_	
22	t3003_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
23	t3004_000	lâ	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
24	t3005_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
25	t3006_000	wole	KO*	wol(e)	_	 *	_	
26	t3007_000	roesten	VVINF	roèsten	_	(VX * ) )	_	
27	t3008_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3009_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t3010_000	wirf	VVIMP	wërfen	Sg.2	(LB (VX * ) )	_	
3	t3011_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
4	t3012_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
5	t3013_000	pfeffers	NA	pfëffer	Gen.Sg	(NX * ) )	_	
6	t3014_000	dâr	PAVD	dâr/+ûf	_	 *	_	
7	t3015_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
8	t3016_000	unde	KON	unte	_	 * ) )	_	
9	t3017_000	betroufe	VVIMP	be-troufen	Sg.2	(LB (VX * ) )	_	
10	t3018_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX *	_	
11	t3019_000	mit	APPR	mit	_	(PPX *	_	
12	t3020_000	butern	NA	buter	Dat.Sg	(NX * ) ) ) )	_	
13	t3021_000	-	$_	_	_	 *	_	
14	t3022_000	oder	KON	oder	_	(Frag *	_	
15	t3023_000	mit	APPR	mit	_	(PPX *	_	
16	t3024_000	smalze	NA	smalz	Dat.Sg	(NX * ) )	_	
17	t3025_000	ob	KOUS	obe	_	(Cl (LB * )	_	
18	t3026_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX *	_	
19	t3027_000	vleischtac	NA	vlèisch-tag	Nom.Sg	 * ) )	_	
20	t3028_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) )	_	
21	t3029_000	-	$_	_	_	 * ) ) )	_	
22	t3030_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
23	t3031_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
24	t3032_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
25	t3033_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3034_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3035_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t3036_000	ein	DIART	èin	*.*.*.0	(MF *	_	
4	t3037_000	guot	ADJA	guot	Pos.*..0	 *	_	
5	t3038_000	vülle	NA	vülle	Nom.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3039_000	stôz	VVIMP	stôzen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3040_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
3	t3041_000	gân	NA	gân	Akk.Sg	(NX *	_	
4	t3042_000	an	APPR	ane	_	(PPX *	_	
5	t3043_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
6	t3044_000	spiez	NA	spièz	Akk.Sg	 * ) ) )	_	
7	t3045_000	unde	KON	unte	_	 * ) )	_	
8	t3046_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
9	t3047_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
10	t3048_000	gekroese	NA	ge-kroèse	Akk.Sg	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3049_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3050_000	vier	CARDA	vièr	*.*.*.0	(MF (NX *	_	
3	t3051_000	eier	NA	èi	Akk.Pl	 * )	_	
4	t3052_000	gesoten	VVPP	sièden	_	(VX * )	_	
5	t3053_000	herte	ADJD	hèrte	Pos....0	 * )	_	
6	t3054_000	-	$_	_	_	 * )	_	
7	t3055_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t3056_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
9	t3057_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
10	t3058_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
11	t3059_000	eine	DIART	èin	Fem.Akk.Sg.st	(NX *	_	
12	t3060_000	brosemen	NA	bros(e)m(e)	Akk.Sg	 *	_	
13	t3061_000	schoenes	ADJA	schoène	Pos.Neut.Gen.Sg.st	(NX *	_	
14	t3062_000	brôtes	NA	brôt	Gen.Sg	 * ) )	_	
15	t3063_000	und	KO*	unde	_	 *	_	
16	t3064_000	kumel	NA	kumel	Akk.Sg	(NX * )	_	
17	t3065_000	dâr	PAVD	dâr/+zuo	_	 *	_	
18	t3066_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
19	t3067_000	unde	KON	unte	_	 *	_	
20	t3068_000	ein	DIART	èin	*.*.*.0	 *	_	
21	t3069_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
22	t3070_000	pfeffers	NA	pfëffer	Gen.Sg	(NX * ) )	_	
23	t3071_000	unde	KON	unte	_	 *	_	
24	t3072_000	safrânes	NA	safrân	Gen.Sg	(NX * ) ) )	_	
25	t3073_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
26	t3074_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
27	t3075_000	drî	CARDA	drî	*.Akk.Pl.st	(MF *	_	
28	t3076_000	gesoten	ADJA	sièden	Pos.*..0	 *	_	
29	t3077_000	huones	NA	huon	Gen.Sg	(NX * )	_	
30	t3078_000	lebern	NA	lëber(e)	Akk.Pl	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3079_000	mâl	VVIMP	mâlen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3079_001	!?	PPER	ër	*.Akk.Sg.3	(MF (NX * )	_	
3	t3080_000	zesamene	AVD	ze-samen(e)	_	 *	_	
4	t3081_000	mit	APPR	mit	_	(PPX *	_	
5	t3082_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) )	_	
6	t3083_000	unde	KON	unte	_	 *	_	
7	t3084_000	mit	APPR	mit	_	(PPX *	_	
8	t3085_000	hüenersôte	NA	hüèner-sôt	Dat.Sg	(NX * ) ) )	_	
9	t3086_000	zuo	APPR	ze	_	(Frag (PPX *	_	
10	t3087_000	mâzen	NA	mâze	Dat.Pl	(NX * ) )	_	
11	t3088_000	sûr	ADJD	sûr	Pos....0	 * ) )	_	
12	t3089_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t3090_000	schele	VVIMP	schèl(e)n	Sg.2	(LB (VX * ) )	_	
14	t3091_000	zwibollen	NA	zwibolle	Akk.Pl	(PreF (MF (NX * )	_	
15	t3092_000	unde	KON	unte	_	 * ) )	_	
16	t3093_000	snîdes	VVFIN	snîden	Subj.Pres.Sg.2	(LB (VX * ) )	_	
17	t3094_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
18	t3095_000	dünne	ADJD	dünne	Pos....0	 *	_	
19	t3096_000	unde	KON	unte	_	 * ) )	_	
20	t3097_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
21	t3098_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
22	t3099_000	denne	AVD	danne	_	 *	_	
23	t3100_000	in	APPR	in	_	(PPX *	_	
24	t3101_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
25	t3102_000	haven	NA	haven	Akk.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3103_000	tuo	VVIMP	tuon	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3104_000	dâr	PAVD	dâr/+ze	_	(MF *	_	
3	t3105_000	zuo	PTKA	ze/dâr+	_	 *	_	
4	t3106_000	smalz	NA	smalz	Akk.Sg	(NX * )	_	
5	t3107_000	oder	KON	oder	_	 *	_	
6	t3108_000	wazzer	NA	wazzer	Akk.Sg	(NX * ) )	_	
7	t3109_000	-	$_	_	_	 * )	_	
8	t3110_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t3111_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
10	t3112_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
11	t3113_000	sieden	VVINF	sièden	_	(VX * ) )	_	
12	t3114_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
13	t3115_000	sie	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
14	t3116_000	weich	ADJD	wèich	Pos....0	 * )	_	
15	t3117_000	werden	VAFIN	wërden	*.Pres.Pl.3	(RB (VX * ) )	_	
16	t3118_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3119_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t3120_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t3121_000	denne	AVD	danne	_	(MF *	_	
4	t3122_000	sûr	ADJA	sûr	Pos.*..0	 *	_	
5	t3123_000	epfele	NA	apfel	Akk.Pl	(NX * ) ) )	_	
6	t3124_000	snît	VVIMP	snîden	Sg.2	(Cl (LB (VX * ) )	_	
7	t3125_000	die	DDS	dër	*.Akk.Pl	(MF (NX *	_	
8	t3126_000	kern	NA	kërn(e)	Akk.Pl	 * )	_	
9	t3127_000	her	PAVD	hër(e)/+ûz	_	 *	_	
10	t3128_000	ûz	PAVAP	ûz/hër(e)+	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3129_000	als	KO*	all-sô	_	(S (Frag *	_	
2	t3130_000	die	DDART	dër	*.Nom.Pl	(NX *	_	
3	t3131_000	zwibollen	NA	zwibolle	Nom.Pl	 * )	_	
4	t3132_000	gar	AVD	gar(e)	_	(PreF *	_	
5	t3133_000	sîn	VAINF	sîn	_	(VX * ) )	_	
6	t3134_000	gesuten	VVFIN	ge-sièden	*.Past.Pl.3	(LB (VX * ) ) )	_	
7	t3135_000	wirf	VVIMP	wërfen	Sg.2	(Cl (LB (VX * ) )	_	
8	t3136_000	die	DDART	dër	*.Akk.Pl	(MF (NX *	_	
9	t3137_000	epfele	NA	apfel	Akk.Pl	 * )	_	
10	t3138_000	dâr	PAVD	dâr/+zuo	_	 *	_	
11	t3139_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
12	t3140_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
13	t3141_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
14	t3142_000	weich	ADJD	wèich	Pos....0	 * )	_	
15	t3143_000	belîbe	VVFIN	be-lîben	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
16	t3144_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
17	t3145_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
18	t3146_000	denne	AVD	danne	_	(MF *	_	
19	t3147_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
20	t3148_000	gemalne	ADJS	ge-mal(e)n	Pos.Neut.Akk.Sg.wk	 * )	_	
21	t3149_000	unde	KON	unte	_	 *	_	
22	t3150_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
23	t3151_000	epfele	NA	apfel	Akk.Pl	 * )	_	
24	t3152_000	unde	KON	unte	_	 *	_	
25	t3153_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
26	t3154_000	zwibollen	NA	zwibolle	Akk.Pl	 *	_	
27	t3155_000	alle	DIN	all	*.Akk.Pl.st	 * )	_	
28	t3156_000	in	APPR	in	_	 *	_	
29	t3157_000	ein	DIART	èin	*.*.*.0	 *	_	
30	t3158_000	pfanne	NA	pfanne	Akk.Sg	(NX * ) ) )	_	
31	t3159_000	unde	KON	unte	_	(Frag *	_	
32	t3160_000	als	KO*	all-sô	_	 *	_	
33	t3161_000	die	DDS	dër	Fem.Nom.Sg	(NX *	_	
34	t3162_000	gans	NA	gans	Nom.Sg	 * )	_	
35	t3163_000	gebrâten	VVPP	brâten	_	(VX *	_	
36	t3164_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	 * )	_	
37	t3165_000	-	$_	_	_	 * )	_	
38	t3166_000	sô	AVD	sô	_	(Cl (PreF * )	_	
39	t3167_000	zuolide	VVIMP	zer-liden	Sg.2	(LB (VX * ) )	_	
40	t3168_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * ) ) )	_	
41	t3169_000	lige	VVIMP	ligen	Sg.2	(Cl (LB (VX * ) )	_	
42	t3170_000	sie	PPER	ër	Fem.Akk.Sg.3	(PreF (MF (NX * )	_	
43	t3171_000	in	APPR	in	_	 *	_	
44	t3172_000	ein	DIART	èin	*.*.*.0	 *	_	
45	t3173_000	schoene	ADJA	schoène	Pos.*..0	 *	_	
46	t3174_000	vaz	NA	vazz	Akk.Sg	(NX * )	_	
47	t3175_000	unde	KON	unte	_	 * ) )	_	
48	t3176_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
49	t3177_000	daz	DDART	dër	Neut.Akk.Sg	(MF * )	_	
50	t3178_000	-	$_	_	_	 *	_	
51	t3179_000	condimende	NA	condiment	Akk.Sg	(Frag (NX * )	_	
52	t3180_000	dâr	PAVD	dâr/+über(e)	_	 *	_	
53	t3181_000	über	PAVAP	über(e)/dâr+	_	 *	_	
54	t3182_000	unde	KON	unte	_	(PrePreF * )	_	
55	t3183_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
56	t3184_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
57	t3185_000	hin	AVD	hin(e)	_	 * )	_	
58	t3186_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3187_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t3188_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t3189_000	getrehte	NA	ge-trèhte	Nom.Sg	(NX * )	_	
4	t3190_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3191_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3192_000	gebrâtene	ADJA	ge-brâten	Pos.*.Akk.Pl.st	(PreF (MF (NX *	_	
3	t3193_000	biren	NA	bir(e)	Akk.Pl	 * )	_	
4	t3194_000	unde	KON	unte	_	 * ) )	_	
5	t3195_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
6	t3196_000	sûr	ADJA	sûr	Pos.*..0	(PreF (MF *	_	
7	t3197_000	epfele	NA	apfel	Akk.Pl	(NX * )	_	
8	t3198_000	unde	KON	unte	_	 * ) )	_	
9	t3199_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
10	t3200_000	underwahsen	ADJA	unter-wahsen	Pos.*..0	(PreF (MF *	_	
11	t3201_000	vleisch	NA	vlèisch	Akk.Sg	(NX *	_	
12	t3202_000	gesoten	ADJN	sièden	Pos.*..0	 * )	_	
13	t3203_000	unde	KON	unte	_	 * ) )	_	
14	t3204_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
15	t3205_000	pfeffer	NA	pfëffer	Akk.Sg	(MF (NX * )	_	
16	t3206_000	unde	KON	unte	_	 *	_	
17	t3207_000	safrân	NA	safrân	Akk.Sg	(NX * ) ) )	_	
18	t3208_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
19	t3209_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
20	t3210_000	zesamene	AVD	ze-samen(e)	_	(PreF (MF *	_	
21	t3211_000	unde	KON	unte	_	 * ) )	_	
22	t3212_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
23	t3213_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
24	t3214_000	weich	ADJD	wèich	Pos....0	 * )	_	
25	t3215_000	-	$_	_	_	 *	_	
26	t3216_000	mit	APPR	mit	_	(Frag (PPX *	_	
27	t3217_000	rouen	ADJA	rou	Pos.*.Dat.Pl.*	(NX *	_	
28	t3218_000	eiernen	NA	èiern	Dat.Pl	 * ) )	_	
29	t3219_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3220_000	sô	AVD	sô	_	(S (Cl (PreF (PreF * ) )	_	
2	t3221_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
3	t3222_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
4	t3223_000	blat	NA	blat	Akk.Sg	(NX *	_	
5	t3224_000	von	APPR	von	_	(PPX *	_	
6	t3225_000	eiernen	NA	èiern	Dat.Pl	(NX * ) ) )	_	
7	t3226_000	unde	KON	unte	_	 * ) )	_	
8	t3227_000	zuoteile	VVIMP	zer-tèilen	Sg.2	(LB (VX * ) )	_	
9	t3228_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) ) )	_	
10	t3229_000	vülle	VVIMP	vüllen	Sg.2	(Cl (LB (VX * ) )	_	
11	t3230_000	dâr	PAVD	dâr/+ûf	_	(MF *	_	
12	t3231_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
13	t3232_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
14	t3233_000	materjen	NA	matërje	Akk.Pl	 * ) )	_	
15	t3234_000	daz	DDS	dër	Neut.Nom.Sg	(Frag (NX * )	_	
16	t3235_000	gelîch	ADJD	ge-lîch	Pos....0	(PreF * )	_	
17	t3236_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
18	t3237_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3238_000	sô	KO*	sô	_	(S (Cl (PreF * )	_	
2	t3239_000	wint	VVIMP	winten	Sg.2	(LB (VX * ) )	_	
3	t3240_000	daz	DDART	dër	Neut.Akk.Sg	(PreF (MF (NX *	_	
4	t3241_000	blat	NA	blat	Akk.Sg	 * )	_	
5	t3242_000	zesamene	AVD	ze-samen(e)	_	 *	_	
6	t3243_000	unde	KON	unte	_	 * ) )	_	
7	t3244_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
8	t3244_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
9	t3245_000	naz	ADJD	nazz	Pos....0	 *	_	
10	t3246_000	von	APPR	von	_	(PPX *	_	
11	t3247_000	eierteige	NA	èier-tèig	Dat.Sg	(NX * ) )	_	
12	t3248_000	unde	KON	unte	_	 * ) )	_	
13	t3249_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
14	t3249_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
15	t3250_000	in	APPR	in	_	(PPX *	_	
16	t3251_000	sieden	ADJA	sièden	Pos.*.Akk.Sg.st	(NX *	_	
17	t3252_000	smalz	NA	smalz	Akk.Sg	 * ) ) )	_	
18	t3253_000	unde	AVD	unte	_	 * ) )	_	
19	t3254_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
20	t3254_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
21	t3255_000	harte	AVD	harte	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3256_000	sô	AVD	sô	_	(S (Cl (PreF (PreF (PreF * ) ) )	_	
2	t3257_000	sticke	VVIMP	stëcken	Sg.2	(LB (VX * ) )	_	
3	t3258_000	dô	AVD	dô	_	(PreF (MF *	_	
4	t3259_000	durch	APPR	durh	_	(PPX *	_	
5	t3260_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
6	t3261_000	spiez	NA	spièz	Akk.Sg	 * ) )	_	
7	t3262_000	unde	KON	unte	_	 * ) )	_	
8	t3263_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
9	t3263_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
10	t3264_000	zuo	APPR	ze	_	(PPX *	_	
11	t3265_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
12	t3266_000	viure	NA	viur	Dat.Sg	 * ) ) )	_	
13	t3267_000	unde	KON	unte	_	 * ) )	_	
14	t3268_000	beslach	VVIMP	be-slahen	Sg.2	(LB (VX * ) )	_	
15	t3268_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
16	t3269_000	einez	CARDS	èin	Neut.Akk.Sg.st	 *	_	
17	t3270_000	mit	APPR	mit	_	(PPX *	_	
18	t3271_000	eiernen	NA	èiern	Dat.Pl	(NX * ) ) )	_	
19	t3272_000	unde	KON	unte	_	 *	_	
20	t3273_000	einez	CARDS	èin	Neut.Akk.Sg.st	(NX *	_	
21	t3274_000	mit	APPR	mit	_	(PPX *	_	
22	t3275_000	smalze	NA	smalz	Dat.Sg	(NX *	_	
23	t3276_000	mit	APPR	mit	_	(PPX *	_	
24	t3277_000	zwein	CARDA	zwêne	*.Dat.Pl.st	(NX *	_	
25	t3278_000	swammen	NA	swamm(e)	Dat.Pl	 * ) ) ) ) )	_	
26	t3279_000	alsô	AVD	all-sô	_	 *	_	
27	t3280_000	lange	AVD	lange	_	 * )	_	
28	t3281_000	biz daz	KOUS	biz~dazz	_	(PostF (Cl (LB * )	_	
29	t3282_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
30	t3283_000	singe	VVFIN	singen	Subj.Pres.Sg.3	(RB (VX * ) )	_	
31	t3284_000	unde	KON	unte	_	(PostF *	_	
32	t3285_000	rôt	ADJD	rôt	Pos....0	(PreF * )	_	
33	t3286_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(LB (VX * ) ) ) ) ) )	_	
34	t3287_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
35	t3288_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
36	t3288_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
37	t3289_000	hin	AVD	hin(e)	_	 * )	_	
38	t3290_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3291_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t3292_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t3293_000	vülle	NA	vülle	Nom.Sg	(NX * )	_	
4	t3294_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3295_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3296_000	lamprîden	NA	lamprîde	Akk.Pl	(PreF (MF (NX * )	_	
3	t3297_000	unde	KON	unte	_	 * ) )	_	
4	t3298_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
5	t3299_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
6	t3300_000	an	APPR	ane	_	(PPX *	_	
7	t3301_000	sehs	CARDA	sëhs	*.*.*.0	(NX *	_	
8	t3302_000	stücke	NA	stück(e)	Akk.Pl	 * ) ) ) )	_	
9	t3303_000	daz	DDS	dër	Neut.Nom.Sg	(Frag (NX * )	_	
10	t3304_000	mittelez	ADJA	mittel	Pos.Neut.Akk.Sg.st	(NX *	_	
11	t3305_000	stücke	NA	stück(e)	Akk.Sg	 * )	_	
12	t3306_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t3307_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
14	t3308_000	minner	AVD	minner	Comp	(MF *	_	
15	t3309_000	danne	KOUS	danne	_	 *	_	
16	t3310_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
17	t3311_000	andern	DIA	ander	*.Akk.Pl.wk	 *	_	
18	t3312_000	stücke	NA	stück(e)	Akk.Pl	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3313_000	besprenge	VVIMP	be-sprèngen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3314_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
3	t3315_000	mit	APPR	mit	_	(PPX *	_	
4	t3316_000	salze	NA	salz	Dat.Sg	(NX * ) ) )	_	
5	t3317_000	unde	KON	unte	_	 * ) )	_	
6	t3318_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
7	t3318_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
8	t3319_000	ûf	APPR	ûf	_	(PPX *	_	
9	t3320_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
10	t3321_000	hülzînen	ADJA	hülzîn	Pos.Masc.Akk.Sg.*	 *	_	
11	t3322_000	rost	NA	rost	Akk.Sg	 * ) ) ) )	_	
12	t3323_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3324_000	brât	VVIMP	brâten	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3325_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
3	t3326_000	gar	AVD	gar(e)	_	 * )	_	
4	t3327_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3328_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3329_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
3	t3330_000	mittelez	ADJA	mittel	Pos.Neut.Akk.Sg.st	(NX *	_	
4	t3331_000	stücke	NA	stück(e)	Akk.Sg	 * ) )	_	
5	t3332_000	-	$_	_	_	 *	_	
6	t3333_000	als	KO*	all-sô	_	(Frag *	_	
7	t3334_000	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
8	t3335_000	gar	AVD	gar(e)	_	(PreF (PreF * )	_	
9	t3336_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) ) )	_	
10	t3337_000	gerest	VVFIN	gër(e)n	*.Pres.Sg.2	(LB (VX * ) ) ) )	_	
11	t3338_000	stôz	VVIMP	stôzen	Sg.2	(Cl (LB (VX * ) )	_	
12	t3339_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
13	t3340_000	in	APPR	in	_	(PPX *	_	
14	t3341_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
15	t3342_000	morsær	NA	morsære	Dat.Sg	 * ) ) ) )	_	
16	t3343_000	-	$_	_	_	 * )	_	
17	t3344_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
18	t3345_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
19	t3346_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
20	t3347_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
21	t3348_000	eine	DIART	èin	Fem.Akk.Sg.st	(NX *	_	
22	t3349_000	swarzen	ADJA	swarz	Pos.Fem.Akk.Sg.wk	 *	_	
23	t3350_000	rinden	NA	rinte	Akk.Sg	 *	_	
24	t3351_000	brôtes	NA	brôt	Gen.Sg	(NX * ) ) ) )	_	
25	t3352_000	die	DDS	dër	*.Nom.Pl	(Cl (PreF (NX * ) )	_	
26	t3353_000	weiche	VVFIN	wèichen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
27	t3354_000	in	APPR	in	_	(MF (PPX *	_	
28	t3355_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) ) )	_	
29	t3356_000	-	$_	_	_	 * )	_	
30	t3357_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
31	t3358_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
32	t3359_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
33	t3360_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
34	t3361_000	gestôzen	ADJA	stôzen	Pos.*..0	 *	_	
35	t3362_000	galgan	NA	galgan	Akk.Sg	(NX * )	_	
36	t3363_000	unde	KON	unte	_	 *	_	
37	t3364_000	pfeffer	NA	pfëffer	Akk.Sg	(NX * )	_	
38	t3365_000	unde	KON	unte	_	 *	_	
39	t3366_000	ingewer	NA	ingewër	Akk.Sg	(NX * )	_	
40	t3367_000	unde	KON	unte	_	 *	_	
41	t3368_000	kumel	NA	kumel	Akk.Sg	(NX * )	_	
42	t3369_000	unde	KON	unte	_	 *	_	
43	t3370_000	muscâtbluomen	NA	muscât-bluome	Akk.Pl	(NX * )	_	
44	t3371_000	unde	KON	unte	_	 *	_	
45	t3372_000	nageln	NA	nagel	Akk.Pl	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3373_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3374_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
3	t3374_001	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
4	t3375_000	aber	AVD	aber	_	 *	_	
5	t3376_000	lange	AVD	lange	_	 * )	_	
6	t3377_000	behalten	VVINF	be-halten	_	(RB (VX * ) ) )	_	
7	t3378_000	sô	AVD	sô	_	(Cl (PreF (PreF (PreF * ) ) )	_	
8	t3379_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
9	t3380_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
10	t3381_000	scharpf	ADJD	scharpf	Pos....0	 *	_	
11	t3382_000	mit	APPR	mit	_	(PPX *	_	
12	t3383_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) )	_	
13	t3384_000	unde	KON	unte	_	 *	_	
14	t3385_000	ein	DIART	èin	*.*.*.0	 *	_	
15	t3386_000	wênige	NA	wênig	Dat.Sg	(NX *	_	
16	t3387_000	honiges	NA	honig	Gen.Sg	(NX * ) )	_	
17	t3388_000	unde	KON	unte	_	 * ) )	_	
18	t3389_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
19	t3389_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
20	t3390_000	unde	KON	unte	_	 * ) )	_	
21	t3391_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
22	t3391_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
23	t3392_000	kalt	ADJD	kalt	Pos....0	 *	_	
24	t3393_000	dâr	PAVD	dâr/+in	_	 *	_	
25	t3394_000	in	PAVAP	in/dâr+	_	 * )	_	
26	t3395_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3396_000	nâch	APPR	nâh	_	(S (Cl (PreF (PPX *	_	
2	t3397_000	dirre	DDA	dise	Fem.Dat.Sg	(NX *	_	
3	t3398_000	wise	NA	wise	Dat.Sg	 * ) ) )	_	
4	t3399_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
5	t3400_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
6	t3401_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
7	t3402_000	-	$_	_	_	 *	_	
8	t3403_000	gebrâtene	ADJA	ge-brâten	Pos.*.Akk.Pl.st	(Frag (NX *	_	
9	t3404_000	niunougen	NA	niun-ouge	Akk.Pl	 * )	_	
10	t3405_000	oder	KON	oder	_	 *	_	
11	t3406_000	waz	PW	wër	Neut.Akk.Sg.st	 *	_	
12	t3407_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
13	t3408_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
14	t3409_000	-	$_	_	_	 * ) )	_	
15	t3410_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3411_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3412_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t3413_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t3414_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t3415_000	spîse	NA	spîse	Akk.Sg	(NX *	_	
6	t3416_000	von	APPR	von	_	(PPX *	_	
7	t3417_000	hüenern	NA	huon	Dat.Pl	(NX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3418_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3419_000	heizent	VVFIN	hèizen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t3420_000	küninges	NA	küni(n)g	Gen.Sg	(MF (NX * )	_	
4	t3421_000	hüenere	NA	huon	Nom.Pl	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3422_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3423_000	junge	ADJA	jung	Pos.*.Akk.Pl.st	(MF (NX *	_	
3	t3424_000	gebrâtene	ADJA	ge-brâten	Pos.*.Akk.Pl.st	 *	_	
4	t3425_000	hüenere	NA	huon	Akk.Pl	 * ) ) )	_	
5	t3426_000	houw	VVIMP	houwen	Sg.2	(Cl (LB (VX * ) )	_	
6	t3427_000	die	DDS	dër	*.Akk.Pl	(MF (NX * )	_	
7	t3428_000	an	APPR	ane	_	 *	_	
8	t3429_000	kleine	ADJA	klèine	Pos.*..0	 *	_	
9	t3430_000	mursel	NA	mursël(e)	Akk.Sg	(NX * ) )	_	
10	t3431_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3432_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3433_000	vrische	ADJA	vrisch	Pos.*.Akk.Pl.st	(PreF (MF (NX *	_	
3	t3434_000	eier	NA	èi	Akk.Pl	 * )	_	
4	t3435_000	unde	KON	unte	_	 * ) )	_	
5	t3436_000	zuoslahe	VVIMP	zer-slahen	Sg.2	(LB (VX * ) )	_	
6	t3437_000	die	DDS	dër	*.Akk.Pl	(MF (NX * ) ) )	_	
7	t3438_000	menge	VVIMP	mèngen	Sg.2	(Frag (VX * )	_	
8	t3439_000	dâr	PAVD	dâr/+zuo	_	(VX *	_	
9	t3440_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
10	t3441_000	gestôzen	VVPP	stôzen	_	(VX * )	_	
11	t3442_000	ingewer	NA	ingewër	Akk.Sg	(NX * )	_	
12	t3443_000	-	$_	_	_	 * )	_	
13	t3444_000	unde	KON	unte	_	(Frag *	_	
14	t3445_000	ein	DIA	èin	*.*.*.0	 *	_	
15	t3446_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
16	t3447_000	anîzes	NA	anîz	Gen.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3448_000	giuz	VVIMP	gièzen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3449_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
3	t3450_000	in	APPR	in	_	(PPX *	_	
4	t3451_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
5	t3452_000	vesten	ADJA	vèste	Pos.Masc.Akk.Sg.*	 *	_	
6	t3453_000	morsær	NA	morsære	Akk.Sg	 * ) ) ) )	_	
7	t3454_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
8	t3455_000	heiz	ADJD	hèiz	Pos....0	(MF * )	_	
9	t3456_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
10	t3457_000	mit	APPR	mit	_	(PPX *	_	
11	t3458_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
12	t3459_000	selben	DDA	sëlb	Neut.Dat.Sg.wk	 *	_	
13	t3460_000	krûte	NA	krût	Dat.Sg	 * ) )	_	
14	t3461_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
15	t3462_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
16	t3463_000	dû	PPER	dû	Nom.Sg.2	(MF (NX *	_	
17	t3464_000	zuo	APPR	ze	_	(PPX *	_	
18	t3465_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
19	t3466_000	eiernen	NA	èiern	Dat.Pl	 * ) ) ) ) )	_	
20	t3467_000	dâ	PAVD	dâr/+mit(e)	_	(Cl (LB (VX *	_	
21	t3468_000	mit	PAVAP	mit(e)/dâr+	_	 *	_	
22	t3469_000	bewirf	VVIMP	be-wërfen	Sg.2	 * ) )	_	
23	t3470_000	die	DDS	dër	*.Akk.Pl	(MF (NX *	_	
24	t3471_000	hüenere	NA	huon	Akk.Pl	 * ) )	_	
25	t3472_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3473_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t3474_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
3	t3475_000	die	DDS	dër	*.Akk.Pl	(PreF (MF (NX *	_	
4	t3476_000	hüenere	NA	huon	Akk.Pl	 *	_	
5	t3477_000	in	APPR	in	_	(PPX *	_	
6	t3478_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
7	t3479_000	morsær	NA	morsære	Akk.Sg	 * ) ) )	_	
8	t3480_000	unde	KON	unte	_	 * ) )	_	
9	t3481_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
10	t3482_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
11	t3483_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
12	t3484_000	safrân	NA	safrân	Akk.Sg	(NX * )	_	
13	t3485_000	unde	KON	unte	_	 *	_	
14	t3486_000	salz	NA	salz	Akk.Sg	(NX *	_	
15	t3487_000	zuo	APPR	ze	_	(PPX *	_	
16	t3488_000	mâzen	NA	mâze	Dat.Pl	(NX * ) ) ) )	_	
17	t3489_000	-	$_	_	_	 * )	_	
18	t3490_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
19	t3491_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
20	t3492_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
21	t3493_000	zuo	APPR	ze	_	(PPX *	_	
22	t3494_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
23	t3495_000	viure	NA	viur	Dat.Pl	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3496_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t3497_000	lâzes	VVFIN	lâzen	Subj.Pres.Sg.2	(LB (VX * ) )	_	
3	t3498_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
4	t3499_000	backen	VVINF	backen	_	(VX * )	_	
5	t3500_000	gelîch	ADJD	ge-lîch	Pos....0	 *	_	
6	t3501_000	heiz	ADJD	hèiz	Pos....0	 *	_	
7	t3502_000	mit	APPR	mit	_	 *	_	
8	t3503_000	ein	DIA	èin	*.*.*.0	 *	_	
9	t3504_000	wênige	NA	wênig	Dat.Sg	(NX *	_	
10	t3505_000	smalzes	NA	smalz	Gen.Sg	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3506_000	gip	VVIMP	gëben	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3507_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
3	t3508_000	ganz	ADJD	ganz	Pos....0	 *	_	
4	t3509_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3510_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3511_000	heizent	VVFIN	hèizen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t3512_000	küninges	NA	küni(n)g	Gen.Sg	(MF (NX * )	_	
4	t3513_000	hüenere	NA	huon	Nom.Pl	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3514_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3515_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t3516_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t3517_000	ein	DIA	èin	*.*.*.0	(PostF *	_	
5	t3518_000	guot	ADJA	guot	Pos.*..0	 *	_	
6	t3519_000	lebern	NA	lëber(e)	Akk.Sg	(NX * ) )	_	
7	t3520_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3521_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3522_000	ein	DIA	èin	*.*.*.0	(MF *	_	
3	t3523_000	rindes	NA	rind	Gen.Sg	(NX * )	_	
4	t3524_000	lebern	NA	lëber(e)	Akk.Sg	(NX * ) )	_	
5	t3525_000	die	DRELS	dër	Fem.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
6	t3526_000	niht	PTKNEG	niht	_	(MF *	_	
7	t3527_000	steineht	ADJD	stèinëht	Pos....0	 * )	_	
8	t3528_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
9	t3529_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
10	t3530_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
11	t3531_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX *	_	
12	t3532_000	an	APPR	ane	_	(PPX *	_	
13	t3533_000	vünv	CARDA	vünv	*.*.*.0	(NX *	_	
14	t3534_000	stücke	NA	stück(e)	Akk.Pl	 * ) ) )	_	
15	t3535_000	unde	KON	unte	_	 * ) )	_	
16	t3536_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
17	t3537_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
18	t3538_000	ûf	APPR	ûf	_	(PPX *	_	
19	t3539_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
20	t3540_000	rost	NA	rost	Akk.Sg	 * ) ) ) )	_	
21	t3541_000	-	$_	_	_	 * )	_	
22	t3542_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
23	t3543_000	brât	VVIMP	brâten	Sg.2	(LB (VX * ) )	_	
24	t3544_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3545_000	alsô	KO*	all-sô	_	(S (Frag *	_	
2	t3546_000	sie	PPER	ër	Fem.Nom.Sg.3	(NX * )	_	
3	t3547_000	sich	PRF	sich	Akk	(NX * )	_	
4	t3548_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(VX *	_	
5	t3549_000	gesûbert	VVPP	ge-sûber(e)n	_	 * ) )	_	
6	t3550_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t3551_000	wasche	VVFIN	waschen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
8	t3552_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX *	_	
9	t3553_000	in	APPR	in	_	(PPX *	_	
10	t3554_000	warmen	ADJA	warm	Pos.Neut.Dat.Sg.wk	(NX *	_	
11	t3555_000	wazzer	NA	wazzer	Dat.Sg	 * ) ) )	_	
12	t3556_000	oder	KON	oder	_	 *	_	
13	t3557_000	in	APPR	in	_	(PPX *	_	
14	t3558_000	sôde	NA	sôd	Dat.Sg	(NX * ) )	_	
15	t3559_000	alsô	AVD	all-sô	_	 *	_	
16	t3560_000	veizet	ADJD	vèiz(e)t	Pos....0	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3561_000	siude	VVIMP	sièden	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3562_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (MF (NX * )	_	
3	t3563_000	unde	KON	unte	_	 * ) )	_	
4	t3564_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
5	t3565_000	sie	PPER	ër	Fem.Akk.Sg.3	(PreF (MF (NX * )	_	
6	t3566_000	brâten	VVINF	brâten	_	(VX * )	_	
7	t3567_000	gar	AVD	gar(e)	_	 *	_	
8	t3568_000	unde	KON	unte	_	 * ) )	_	
9	t3569_000	nim	VVIMP	nëmen/abe<.+	Sg.2	(LB (VX * ) )	_	
10	t3570_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
11	t3571_000	denne	AVD	danne	_	 * )	_	
12	t3572_000	abe	PTKVZ	abe/<.+nëmen	_	(RB * )	_	
13	t3573_000	unde	KON	unte	_	(PostF (PrePreF * )	_	
14	t3574_000	lâze	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
15	t3575_000	sie	PPER	ër	Fem.Akk.Sg.3	(PreF (MF (NX * )	_	
16	t3576_000	kalten	VVINF	kalten	_	(VX * )	_	
17	t3577_000	unde	KON	unte	_	 * ) )	_	
18	t3578_000	besnît	VVIMP	be-snîden	Sg.2	(LB (VX * ) )	_	
19	t3579_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
20	t3580_000	schoene	ADJD	schoène	Pos....0	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3581_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t3582_000	nim	VVIMP	nëmen	Sg.2	(PreF (LB (VX * ) ) )	_	
3	t3583_000	denne	KOUS	danne	_	(LB * )	_	
4	t3584_000	ein	DIA	èin	*.*.*.0	(MF *	_	
5	t3585_000	halp	ADJA	halb	Pos.*..0	 *	_	
6	t3586_000	stücke	NA	stück(e)	Akk.Sg	(NX * )	_	
7	t3587_000	unde	KON	unte	_	 * )	_	
8	t3588_000	stôz	VVIMP	stôzen	Sg.2	(RB (VX * ) )	_	
9	t3589_000	ez	PPER	ër	Neut.Akk.Sg.3	(PostF (NX *	_	
10	t3590_000	in	APPR	in	_	(PPX *	_	
11	t3591_000	einem	DIA	èin	Masc.Dat.Sg.st	(NX *	_	
12	t3592_000	morsær	NA	morsære	Dat.Sg	 * ) ) )	_	
13	t3593_000	unde	KON	unte	_	(PrePreF * )	_	
14	t3594_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
15	t3595_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
16	t3596_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
17	t3597_000	ein	DIA	èin	*.*.*.0	 *	_	
18	t3598_000	rinden	NA	rinte	Akk.Sg	(NX *	_	
19	t3599_000	roesten	ADJA	roèsten	Pos.*.Gen.Sg.st	(NX *	_	
20	t3600_000	brôtes	NA	brôt	Gen.Sg	 * ) ) ) )	_	
21	t3601_000	dû	PPER	dû	Nom.Sg.2	(Frag (NX * )	_	
22	t3602_000	pfeffer	NA	pfëffer	Akk.Sg	(NX * )	_	
23	t3603_000	dâr	PAVD	dâr/+zuo	_	 *	_	
24	t3604_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
25	t3605_000	unde	KON	unte	_	 *	_	
26	t3606_000	ingewer	NA	ingewër	Akk.Sg	(NX * )	_	
27	t3607_000	daz	KOUS	dazz	_	(Cl (LB * )	_	
28	t3608_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
29	t3609_000	scharpf	ADJD	scharpf	Pos....0	 * )	_	
30	t3610_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
31	t3611_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
32	t3612_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
33	t3613_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
34	t3614_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
35	t3615_000	anîzes	NA	anîz	Gen.Sg	(NX * ) )	_	
36	t3616_000	unde	KON	unte	_	 * ) )	_	
37	t3617_000	mal	VVIMP	mal(e)n	Sg.2	(LB (VX * ) )	_	
38	t3618_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (MF (NX *	_	
39	t3619_000	mit	APPR	mit	_	(PPX *	_	
40	t3620_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) ) )	_	
41	t3621_000	unde	KON	unte	_	 *	_	
42	t3622_000	mit	APPR	mit	_	(PPX *	_	
43	t3623_000	honicseime	NA	honig-sèim	Dat.Sg	(NX * ) )	_	
44	t3624_000	unde	KON	unte	_	 * ) )	_	
45	t3625_000	erwelle	VVIMP	er-wèllen	Sg.2	(LB (VX * ) )	_	
46	t3626_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * ) )	_	
47	t3627_000	biz	KOUS	biz	_	(PostF (Cl (LB * )	_	
48	t3628_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
49	t3629_000	dicke	AVD	dicke	_	 * )	_	
50	t3630_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
51	t3631_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
52	t3632_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
53	t3633_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
54	t3634_000	kalt	ADJD	kalt	Pos....0	 *	_	
55	t3635_000	belîben	VVINF	be-lîben	_	(VX * )	_	
56	t3636_000	unde	KON	unte	_	 * ) )	_	
57	t3637_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
58	t3638_000	dâr	PAVD	dâr/+in	_	(MF *	_	
59	t3639_000	in	PAVAP	in/dâr+	_	 *	_	
60	t3640_000	der	DDART	dër	Fem.Gen.Sg	(NX *	_	
61	t3641_000	lebern	NA	lëber(e)	Gen.Sg	 * ) )	_	
62	t3642_000	als	KO*	all-sô	_	(Frag *	_	
63	t3643_000	vile	NA	vil(e)	Akk.Sg	(NX * )	_	
64	t3644_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
65	t3645_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) ) )	_	
66	t3646_000	unde	KON	unte	_	(Frag *	_	
67	t3647_000	zuo	APPR	ze	_	(PreF (PPX *	_	
68	t3648_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
69	t3649_000	hôchzît	NA	hôh-zît	Dat.Sg	 * ) ) )	_	
70	t3650_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
71	t3650_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
72	t3651_000	vüre	APPR	vür(e)	_	(PPX *	_	
73	t3652_000	hirzlebern	NA	hirz-lëber(e)	Akk.Sg	(NX * ) ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3653_000	unde	KON	unte	_	(S (Frag *	_	
2	t3654_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
3	t3655_000	wilden	ADJA	wilde	Pos.Neut.Gen.Sg.wk	 *	_	
4	t3656_000	swînes	NA	swîn	Gen.Sg	 * )	_	
5	t3657_000	lebern	NA	lëber(e)	Akk.Sg	(PreF (NX * ) )	_	
6	t3658_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
7	t3659_000	ouch	AVD	ouch	_	(MF *	_	
8	t3660_000	alsô	AVD	all-sô	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3661_000	unde	KON	unte	_	(S (Frag *	_	
2	t3662_000	nâch	APPR	nâh	_	(PreF (PPX *	_	
3	t3663_000	dirre	DDA	dise	Fem.Dat.Sg	(NX *	_	
4	t3664_000	manunge	NA	manunge	Dat.Sg	 * ) ) )	_	
5	t3665_000	erdenke	VVIMP	er-dènken	Sg.2	(LB (VX * ) )	_	
6	t3666_000	ouch	KO*	ouch	_	(MF *	_	
7	t3667_000	ander	DIA	ander	*.*.*.0	 *	_	
8	t3668_000	spîse	NA	spîse	Akk.Sg	(NX * ) )	_	
9	t3669_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3670_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t3671_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t3672_000	spîse	NA	spîse	Nom.Sg	(NX * )	_	
4	t3673_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3674_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3675_000	hüenere	NA	huon	Akk.Pl	(MF (NX * ) ) )	_	
3	t3676_000	die	DDS	dër	*.Akk.Pl	(Cl (PreF (NX * ) )	_	
4	t3677_000	brât	VVIMP	brâten	Sg.2	(LB (VX * ) )	_	
5	t3678_000	niht	PTKNEG	niht	_	(MF *	_	
6	t3679_000	volle	AVD	volle	_	 *	_	
7	t3680_000	gar	AVD	gar(e)	_	 * ) )	_	
8	t3681_000	entlide	VVIMP	ent-liden	Sg.2	(Cl (LB (VX * ) )	_	
9	t3682_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX *	_	
10	t3683_000	zuo	APPR	ze	_	(PPX *	_	
11	t3684_000	morseln	NA	morsel	Dat.Pl	(NX * ) ) )	_	
12	t3685_000	unde	KON	unte	_	 * ) )	_	
13	t3686_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
14	t3687_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
15	t3688_000	sieden	VVINF	sièden	_	(VX * )	_	
16	t3689_000	niur	AVD	niur	_	 *	_	
17	t3690_000	in	PPER	ër	*.Dat.Pl.3	(NX * )	_	
18	t3691_000	smalze	NA	smalz	Dat.Sg	(NX * )	_	
19	t3692_000	unde	KON	unte	_	 *	_	
20	t3693_000	wazzere	NA	wazzer	Dat.Sg	(NX * ) ) )	_	
21	t3694_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
22	t3695_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
23	t3696_000	eine	AVD	èine	_	(MF *	_	
24	t3697_000	rinden	NA	rinte	Akk.Sg	(NX *	_	
25	t3698_000	brôtes	NA	brôt	Gen.Sg	(NX * ) )	_	
26	t3699_000	unde	KON	unte	_	 *	_	
27	t3700_000	ingewer	NA	ingewër	Akk.Sg	(NX * )	_	
28	t3701_000	unde	KON	unte	_	 *	_	
29	t3702_000	ein	DIA	èin	*.*.*.0	 *	_	
30	t3703_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
31	t3704_000	pfeffers	NA	pfëffer	Gen.Sg	(NX * ) )	_	
32	t3705_000	unde	KON	unte	_	 *	_	
33	t3706_000	anîz	NA	anîz	Akk.Sg	(NX * ) ) )	_	
34	t3707_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
35	t3708_000	mal	VVIMP	mal(e)n	Sg.2	(LB (VX * ) )	_	
36	t3709_000	mit	APPR	mit	_	(MF (PPX *	_	
37	t3710_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) ) )	_	
38	t3711_000	-	$_	_	_	 *	_	
39	t3712_000	unde	KON	unte	_	(Frag *	_	
40	t3713_000	mit	APPR	mit	_	(PPX *	_	
41	t3714_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
42	t3715_000	selben	DDA	sëlb	Neut.Dat.Sg.wk	 *	_	
43	t3716_000	soedichîne	NA	soèdichîn	Dat.Sg	 * ) ) ) )	_	
44	t3717_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
45	t3718_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
46	t3719_000	vier	CARDA	vièr	*.*.*.0	(PreF (MF *	_	
47	t3720_000	gebrâten	ADJA	brâten	Pos.*..0	 *	_	
48	t3721_000	kuten	NA	kute	Akk.Pl	(NX * )	_	
49	t3722_000	unde	KON	unte	_	 *	_	
50	t3723_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
51	t3724_000	condiment	NA	condiment	Akk.Sg	 * ) ) )	_	
52	t3725_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
53	t3726_000	zuo	APPR	ze	_	(MF (PPX *	_	
54	t3727_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
55	t3728_000	hüeneren	NA	huon	Dat.Pl	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3729_000	lâz	VVIMP	lâzen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3730_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
3	t3731_000	wole	AVD	wol(e)	_	 *	_	
4	t3732_000	dâ	PAVD	dâr/+mit(e)	_	(VX *	_	
5	t3733_000	mit	PAVAP	mit(e)/dâr+	_	 *	_	
6	t3734_000	sieden	VVINF	sièden	_	 * ) )	_	
7	t3735_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
8	t3736_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
9	t3737_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) )	_	
10	t3738_000	eben	AVD	ëben(e)	_	(PostF *	_	
11	t3739_000	dicke	AVD	dicke	_	 * )	_	
12	t3740_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3741_000	hâst	VAFIN	haben	*.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3741_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
3	t3742_000	niht	PTKNEG	niht	_	 *	_	
4	t3743_000	kuten	NA	kute	Akk.Pl	(NX * ) ) )	_	
5	t3744_000	sô	AVD	sô	_	(Cl (PreF (PreF (PreF (PreF * ) ) ) )	_	
6	t3745_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
7	t3746_000	gebrâten	ADJA	brâten	Pos.*..0	(PreF (MF *	_	
8	t3747_000	biren	NA	bir(e)	Akk.Pl	(NX * )	_	
9	t3748_000	unde	KON	unte	_	 * ) )	_	
10	t3749_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
11	t3750_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
12	t3751_000	dâ	PAVD	dâr/+mit(e)	_	 *	_	
13	t3752_000	mite	PAVAP	mit(e)/dâr+	_	 *	_	
14	t3753_000	unde	KON	unte	_	 * ) )	_	
15	t3754_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
16	t3754_001	ez	PPER	ër	Neut.Nom.Sg.3	(PreF (MF (NX * )	_	
17	t3755_000	hin	AVD	hin(e)	_	 *	_	
18	t3756_000	unde	KON	unte	_	 * ) )	_	
19	t3757_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
20	t3758_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
21	t3759_000	niht	PTKNEG	niht	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3760_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t3761_000	spîse	NA	spîse	Nom.Sg	(NX *	_	
3	t3762_000	von	APPR	von	_	(PPX *	_	
4	t3763_000	bônen	NA	bône	Dat.Pl	(NX * ) ) )	_	
5	t3764_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3765_000	siude	VVIMP	sièden	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3766_000	grüene	ADJA	grüène	Pos.*..0	(MF *	_	
3	t3767_000	bône	NA	bône	Akk.Pl	(NX * ) )	_	
4	t3768_000	-	$_	_	_	 *	_	
5	t3769_000	biz daz	KOUS	biz~dazz	_	(PostF (Cl (LB * )	_	
6	t3770_000	sie	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
7	t3771_000	weich	ADJD	wèich	Pos....0	 * )	_	
8	t3772_000	werden	VAFIN	wërden	*.Pres.Pl.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3773_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t3774_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t3775_000	denne	AVD	danne	_	(MF *	_	
4	t3776_000	schoene	ADJA	schoène	Pos.*..0	 *	_	
5	t3777_000	brôt	NA	brôt	Akk.Sg	(NX * ) )	_	
6	t3778_000	-	$_	_	_	 *	_	
7	t3779_000	unde	KON	unte	_	(Frag *	_	
8	t3780_000	ein	DIART	èin	*.*.*.0	 *	_	
9	t3781_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
10	t3782_000	pfeffers	NA	pfëffer	Gen.Sg	(NX * ) ) )	_	
11	t3783_000	drî	CARDA	drî	*.Akk.Pl.st	(Frag (NX *	_	
12	t3783_001	stunte	NA	stunt(e)	Akk.Pl	 * )	_	
13	t3784_000	als	AVD	all-sô	_	 *	_	
14	t3785_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
15	t3786_000	kumels	NA	kumel	Gen.Sg	(NX * ) ) )	_	
16	t3787_000	mit	APPR	mit	_	(Frag (PPX *	_	
17	t3788_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) )	_	
18	t3789_000	unde	KON	unte	_	 *	_	
19	t3790_000	mit	APPR	mit	_	(PPX *	_	
20	t3791_000	bire	NA	bir(e)	Dat.Sg	(NX * ) )	_	
21	t3792_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3793_000	mal	VVIMP	mal(e)n	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3794_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (MF (NX * )	_	
3	t3795_000	zesamen	AVD	ze-samen(e)	_	 *	_	
4	t3796_000	unde	KON	unte	_	 * ) )	_	
5	t3797_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
6	t3798_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
7	t3799_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
8	t3800_000	safrân	NA	safrân	Akk.Sg	(NX * ) ) )	_	
9	t3801_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
10	t3802_000	seige	VVIMP	sèigen/abe<+	Sg.2	(LB (VX * ) )	_	
11	t3803_000	abe	PTKVZ	abe/<+sèigen	_	(RB * )	_	
12	t3804_000	daz	DDS	dër	Neut.Akk.Sg	(PostF (NX *	_	
13	t3805_000	sôde	NA	sôd	Akk.Sg	 * )	_	
14	t3806_000	unde	KON	unte	_	(PrePreF * )	_	
15	t3807_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
16	t3808_000	dâr	PAVD	dâr/+ûf	_	(PreF (MF *	_	
17	t3809_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
18	t3810_000	daz	DDS	dër	Neut.Akk.Sg	(NX *	_	
19	t3811_000	gemalne	ADJS	ge-mal(e)n	Pos.Neut.Akk.Sg.wk	 * )	_	
20	t3812_000	unde	KON	unte	_	 * ) )	_	
21	t3813_000	salz	VVIMP	salzen	Sg.2	(LB (VX * ) )	_	
22	t3814_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
23	t3815_000	zuo	APPR	ze	_	(PPX *	_	
24	t3816_000	mâzen	NA	mâze	Dat.Pl	(NX * ) ) )	_	
25	t3817_000	unde	KON	unte	_	 * ) )	_	
26	t3818_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
27	t3819_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
28	t3820_000	erwallen	VVINF	er-wallen	_	(VX * )	_	
29	t3821_000	in	APPR	in	_	(PPX *	_	
30	t3822_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
31	t3823_000	condimende	NA	condiment	Dat.Sg	 * ) )	_	
32	t3824_000	unde	KON	unte	_	 * ) )	_	
33	t3825_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
34	t3825_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
35	t3826_000	hin	AVD	hin(e)	_	 * ) )	_	
36	t3827_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3828_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t3829_000	geriht	NA	ge-riht(e)	Nom.Sg	(NX * )	_	
3	t3830_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3831_000	rîp	VVIMP	rîben	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3832_000	klobelouch	NA	klobe-louch	Akk.Sg	(MF (NX *	_	
3	t3833_000	mit	APPR	mit	_	(PPX *	_	
4	t3834_000	salze	NA	salz	Dat.Sg	(NX * ) ) ) )	_	
5	t3835_000	die	DDART	dër	*.Akk.Pl	(Frag (NX *	_	
6	t3836_000	houbet	NA	houbet	Akk.Pl	 * )	_	
7	t3837_000	-	$_	_	_	 * ) )	_	
8	t3838_000	schile	VVIMP	schël(e)n	Sg.2	(Cl (LB (VX * ) )	_	
9	t3839_000	schoene	ADJD	schoène	Pos....0	(PreF (MF *	_	
10	t3840_000	unde	KON	unte	_	 * ) )	_	
11	t3841_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
12	t3842_000	sehs	CARDA	sëhs	*.*.*.0	(PreF (MF (NX *	_	
13	t3843_000	eier	NA	èi	Akk.Pl	 * )	_	
14	t3844_000	dâr	PAVD	dâr/+zuo	_	 *	_	
15	t3845_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
16	t3846_000	âne	APPR	âne	_	(PPX *	_	
17	t3847_000	daz	DDS	dër	Neut.Akk.Sg	(NX *	_	
18	t3848_000	wîze	NA	wîze	Akk.Sg	 * ) )	_	
19	t3849_000	unde	KON	unte	_	 * ) )	_	
20	t3850_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
21	t3851_000	ezzich	NA	èzzich	Akk.Sg	(MF (NX * )	_	
22	t3852_000	unde	KON	unte	_	 *	_	
23	t3853_000	ein	DIA	èin	*.*.*.0	 *	_	
24	t3854_000	wênic	NA	wênig	Akk.Sg	(NX * ) )	_	
25	t3855_000	-	$_	_	_	 *	_	
26	t3856_000	wazzers	NA	wazzer	Gen.Sg	(Frag (NX * )	_	
27	t3857_000	dâr	PAVD	dâr/+zuo	_	 *	_	
28	t3858_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
29	t3859_000	niht	PTKNEG	niht	_	(Frag *	_	
30	t3860_000	zuo	APPR	ze	_	 *	_	
31	t3861_000	sûr	ADJD	sûr	Pos....0	 * ) )	_	
32	t3862_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
33	t3863_000	lâ	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
34	t3864_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
35	t3865_000	erwallen	VVINF	er-wallen	_	(VX * ) )	_	
36	t3866_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
37	t3867_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
38	t3868_000	dicke	AVD	dicke	_	 * )	_	
39	t3869_000	belîbe	VVFIN	be-lîben	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3870_000	dâ	PAVD	dâr/+mit(e)	_	(S (Cl (LB (VX *	_	
2	t3871_000	mit	PAVAP	mit(e)/dâr+	_	 *	_	
3	t3872_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	 * ) )	_	
4	t3873_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
5	t3874_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t3875_000	gebrâtene	ADJA	ge-brâten	Pos.*.Akk.Pl.st	(PostF (NX *	_	
7	t3876_000	hüener	NA	huon	Akk.Pl	 * ) )	_	
8	t3877_000	morhen	NA	morhe	Akk.Pl	(Frag (NX * )	_	
9	t3878_000	-	$_	_	_	 * )	_	
10	t3879_000	oder	KON	oder	_	(Frag *	_	
11	t3880_000	swemme	NA	swèmme	Akk.Pl	(NX * ) )	_	
12	t3881_000	oder	KON	oder	_	(Frag *	_	
13	t3882_000	waz	PW	wër	Neut.Akk.Sg.st	 *	_	
14	t3883_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
15	t3884_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
16	t3885_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3886_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3887_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t3888_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t3889_000	einen	DIART	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
5	t3890_000	agraz	NA	agrazz	Akk.Sg	 * ) )	_	
6	t3891_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3892_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3893_000	wîntrûbele	NA	wîn-trûbel(e)	Nom.Pl	(MF (NX * ) )	_	
3	t3894_000	-	$_	_	_	 * )	_	
4	t3895_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
5	t3896_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
6	t3897_000	sûr	ADJA	sûr	Pos.*..0	(MF *	_	
7	t3898_000	epfele	NA	apfel	Akk.Pl	(NX * ) )	_	
8	t3899_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3900_000	diz	DDS	dise	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t3901_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
3	t3902_000	zesamene	AVD	ze-samen(e)	_	(MF * )	_	
4	t3903_000	-	$_	_	_	 * )	_	
5	t3904_000	menge	VVIMP	mèngen	Sg.2	(Cl (LB (VX * ) )	_	
6	t3905_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
7	t3906_000	mit	APPR	mit	_	(PPX *	_	
8	t3907_000	wîne	NA	wîn	Dat.Sg	(NX * ) ) ) )	_	
9	t3908_000	-	$_	_	_	 * )	_	
10	t3909_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
11	t3910_000	drücke	VVIMP	drücken	Sg.2	(LB (VX * ) )	_	
12	t3910_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
13	t3911_000	ûz	AVD	ûz	_	 * )	_	
14	t3912_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3913_000	dise	DDA	dise	Fem.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t3914_000	salse	NA	salse	Nom.Sg	 * ) )	_	
3	t3915_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t3916_000	guot	ADJD	guot	Pos....0	(MF *	_	
5	t3917_000	zuo	APPR	ze	_	(PPX *	_	
6	t3918_000	schæfînem	ADJA	schæfîn	Pos.Neut.Dat.Sg.st	(NX *	_	
7	t3919_000	brâtene	NA	brâten	Dat.Sg	 * ) ) )	_	
8	t3920_000	-	$_	_	_	 *	_	
9	t3921_000	unde	KON	unte	_	(Frag *	_	
10	t3922_000	zuo	APPR	ze	_	(PPX *	_	
11	t3923_000	hüeneren	NA	huon	Dat.Pl	(NX * ) )	_	
12	t3924_000	-	$_	_	_	 * )	_	
13	t3925_000	unde	KON	unte	_	(Frag *	_	
14	t3926_000	zuo	APPR	ze	_	(PPX *	_	
15	t3927_000	vischen	NA	visch	Dat.Pl	(NX * ) )	_	
16	t3928_000	-	$_	_	_	 *	_	
17	t3929_000	-	$_	_	_	 * ) )	_	
18	t3930_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
19	t3931_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
20	t3932_000	agraz	NA	agrazz	Nom.Sg	(MF (NX * ) )	_	
21	t3933_000	-	$_	_	_	 * )	_	
22	t3934_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3935_000	aber	KO*	aber	_	(S (Frag *	_	
2	t3936_000	ein	DIART	èin	*.*.*.0	 *	_	
3	t3937_000	condiment	NA	condiment	Nom.Sg	(NX * )	_	
4	t3938_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3939_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3940_000	aschlouch	NA	aschlouch	Akk.Sg	(PreF (MF (NX * )	_	
3	t3941_000	unde	KON	unte	_	 * ) )	_	
4	t3942_000	schil	VVIMP	schël(e)n	Sg.2	(LB (VX * ) )	_	
5	t3942_001	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * ) ) )	_	
6	t3943_000	rip	VVIMP	rëben	Sg.2	(Cl (LB (VX * ) )	_	
7	t3943_001	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * ) )	_	
8	t3944_000	-	$_	_	_	 * )	_	
9	t3945_000	mit	APPR	mit	_	(PPX *	_	
10	t3946_000	salze	NA	salz	Dat.Sg	(NX * ) )	_	
11	t3947_000	menge	VVFIN	mèngen	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
12	t3947_001	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX *	_	
13	t3948_000	mit	APPR	mit	_	(PPX *	_	
14	t3949_000	wîne	NA	wîn	Dat.Sg	(NX * ) ) )	_	
15	t3950_000	oder	KON	oder	_	 *	_	
16	t3951_000	mit	APPR	mit	_	(PPX *	_	
17	t3952_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) )	_	
18	t3953_000	unde	KON	unte	_	 * ) )	_	
19	t3954_000	drücke	VVIMP	drücken	Sg.2	(LB (VX * ) )	_	
20	t3954_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
21	t3955_000	ûz	AVD	ûz	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3956_000	dise	DDA	dise	Fem.Nom.Sg	(S (Cl (PreF (NX *	_	
2	t3957_000	salse	NA	salse	Nom.Sg	 * ) )	_	
3	t3958_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t3959_000	guot	ADJD	guot	Pos....0	(MF *	_	
5	t3960_000	zuo	APPR	ze	_	 *	_	
6	t3961_000	rinderînen	ADJA	rinderîn	Pos.*.Dat.Pl.*	 *	_	
7	t3962_000	brâten	VVINF	brâten	_	(VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3963_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t3964_000	salse	NA	salse	Nom.Sg	(NX * )	_	
3	t3965_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3966_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3967_000	sûre	ADJA	sûr	Pos.*.Akk.Pl.st	(MF (NX *	_	
3	t3968_000	wînber	NA	wîn-bèr(e)	Akk.Pl	 * ) )	_	
4	t3969_000	-	$_	_	_	 * )	_	
5	t3970_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
6	t3971_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
7	t3972_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
8	t3973_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
9	t3974_000	salvei	NA	salvèi(e)	Akk.Sg	(NX * )	_	
10	t3975_000	unde	KON	unte	_	 *	_	
11	t3976_000	zwei	CARDA	zwêne	Neut.Akk.Pl.st	(NX *	_	
12	t3977_000	klobelouches	NA	klobe-louch	Gen.Sg	 * )	_	
13	t3978_000	houbet	NA	houbet	Akk.Pl	(NX * ) )	_	
14	t3979_000	-	$_	_	_	 *	_	
15	t3980_000	unde	KON	unte	_	(Frag *	_	
16	t3981_000	spec	NA	spëck	Akk.Sg	(NX * )	_	
17	t3982_000	unde	KON	unte	_	(PrePreF * )	_	
18	t3983_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
19	t3984_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
20	t3985_000	zesamene	AVD	ze-samen(e)	_	 * ) ) )	_	
21	t3986_000	drücke	VVIMP	drücken	Sg.2	(Cl (LB (VX * ) )	_	
22	t3986_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
23	t3987_000	ûz	AVD	ûz	_	 *	_	
24	t3988_000	unde	KON	unte	_	 * ) )	_	
25	t3989_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
26	t3989_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
27	t3990_000	vüre	APPR	vür(e)	_	(PPX *	_	
28	t3991_000	eine	DIART	èin	Fem.Akk.Sg.st	(NX *	_	
29	t3992_000	guoten	ADJA	guot	Pos.Fem.Akk.Sg.wk	 *	_	
30	t3993_000	salse	NA	salse	Akk.Sg	 * ) ) ) )	_	
31	t3994_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3995_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t3996_000	agraz	NA	agrazz	Nom.Sg	(NX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t3997_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t3998_000	holzepfele	NA	holz-apfel	Akk.Pl	(PreF (MF (NX * )	_	
3	t3999_000	unde	KON	unte	_	 *	_	
4	t4000_000	pêterlîn	NA	pêterlîn	Akk.Sg	(NX * )	_	
5	t4001_000	unde	KON	unte	_	 *	_	
6	t4002_000	biezen	NA	bièze	Akk.Sg	(NX * )	_	
7	t4003_000	unde	KON	unte	_	 * ) )	_	
8	t4004_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
9	t4005_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (MF (NX * )	_	
10	t4006_000	zesamene	AVD	ze-samen(e)	_	 *	_	
11	t4007_000	unde	KON	unte	_	 * ) )	_	
12	t4008_000	drücke	VVIMP	drücken	Sg.2	(LB (VX * ) )	_	
13	t4008_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
14	t4009_000	ûz	AVD	ûz	_	 * )	_	
15	t4010_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
16	t4011_000	die	DDART	dër	Fem.Nom.Sg	(MF (NX *	_	
17	t4012_000	pêtersilie	NA	pêtersilie	Nom.Sg	 * )	_	
18	t4013_000	ein	DIART	èin	*.*.*.0	 *	_	
19	t4014_000	wênic	NA	wênig	Akk.Sg	(NX * )	_	
20	t4015_000	zuo	AVD	zuo	_	 * )	_	
21	t4016_000	var	VVFIN	var(e)n	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4017_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t4018_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t4019_000	ouch	AVD	ouch	_	(MF *	_	
4	t4020_000	agraz	NA	agrazz	Nom.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4021_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4022_000	geriht	NA	ge-riht(e)	Nom.Sg	(NX *	_	
3	t4023_000	von	APPR	von	_	(PPX *	_	
4	t4024_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
5	t4025_000	hechete	NA	hèchet	Dat.Sg	 * ) ) )	_	
6	t4026_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4027_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4028_000	einen	DIART	èin	Masc.Akk.Sg.st	(PreF (MF (NX *	_	
3	t4029_000	vrischen	ADJA	vrisch	Pos.Masc.Akk.Sg.*	 *	_	
4	t4030_000	hechete	NA	hèchet	Akk.Sg	 * )	_	
5	t4031_000	unde	KON	unte	_	 * ) )	_	
6	t4032_000	loese	VVFIN	loèsen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
7	t4033_000	abe	AVD	abe	_	(PreF (MF *	_	
8	t4034_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
9	t4035_000	hût	NA	hût	Akk.Sg	 * )	_	
10	t4036_000	als	AVD	all-sô	_	 *	_	
11	t4037_000	ganz	ADJD	ganz	Pos....0	 *	_	
12	t4038_000	unde	KON	unte	_	 * ) )	_	
13	t4039_000	siude	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
14	t4040_000	in	PPER	ër	*.Dat.Pl.3	(PreF (MF (NX * )	_	
15	t4041_000	gar	AVD	gar(e)	_	 *	_	
16	t4042_000	unde	KON	unte	_	 * ) )	_	
17	t4043_000	loese	VVIMP	loèsen	Sg.2	(LB (VX * ) )	_	
18	t4044_000	ûz	AVD	ûz	_	(MF *	_	
19	t4045_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
20	t4046_000	græde	NA	grâd	Akk.Pl	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4047_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4048_000	krût	NA	krût	Akk.Sg	(PreF (MF (NX * )	_	
3	t4049_000	unde	KON	unte	_	 * ) )	_	
4	t4050_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
5	t4051_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
6	t4052_000	mit	APPR	mit	_	(PPX *	_	
7	t4053_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
8	t4054_000	vische	NA	visch	Dat.Sg	 * ) ) ) )	_	
9	t4055_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4056_000	tuo	VVIMP	tuon	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4057_000	dâr	PAVD	dâr/+zuo	_	(PreF (MF *	_	
3	t4058_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
4	t4059_000	rou	ADJA	rou	Pos.*..0	 *	_	
5	t4060_000	eier	NA	èi	Akk.Pl	(NX * )	_	
6	t4061_000	unde	KON	unte	_	 *	_	
7	t4062_000	safrân	NA	safrân	Akk.Sg	(NX * )	_	
8	t4063_000	unde	KON	unte	_	 * ) )	_	
9	t4064_000	vülle	VVIMP	vüllen	Sg.2	(LB (VX * ) )	_	
10	t4065_000	die	DDART	dër	Fem.Akk.Sg	(PreF (MF (NX *	_	
11	t4066_000	hût	NA	hût	Akk.Sg	 *	_	
12	t4067_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
13	t4068_000	hechetes	NA	hèchet	Gen.Sg	 * ) )	_	
14	t4069_000	unde	KON	unte	_	 * ) )	_	
15	t4070_000	roste	VVIMP	rosten	Sg.2	(LB (VX * ) )	_	
16	t4071_000	in	APPR	in	_	(PreF (MF *	_	
17	t4072_000	ein	DIART	èin	*.*.*.0	 *	_	
18	t4073_000	wênic	NA	wênig	Akk.Sg	(NX * )	_	
19	t4074_000	unde	KON	unte	_	 * ) )	_	
20	t4075_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
21	t4075_001	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
22	t4076_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4077_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4078_000	geriht	NA	ge-riht(e)	Nom.Sg	(NX *	_	
3	t4079_000	von	APPR	von	_	(PPX *	_	
4	t4080_000	vrischen	ADJA	vrisch	Pos.*.Dat.Pl.*	(NX *	_	
5	t4081_000	ælen	NA	âl	Dat.Pl	 * ) ) )	_	
6	t4082_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4083_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4084_000	vrische	ADJA	vrisch	Pos.*.Akk.Pl.st	(MF (NX *	_	
3	t4085_000	æle	NA	âl	Akk.Pl	 * ) ) )	_	
4	t4086_000	zücke	VVIMP	zücken/abe<.+	Sg.2	(Cl (LB (VX * ) )	_	
5	t4087_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * ) )	_	
6	t4088_000	abe	PTKVZ	abe/<.+zücken	_	(RB * )	_	
7	t4089_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
8	t4090_000	hût	NA	hût	Akk.Sg	 * ) )	_	
9	t4091_000	-	$_	_	_	 * )	_	
10	t4092_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
11	t4093_000	snît	VVIMP	snîden/abe<+	Sg.2	(LB (VX * ) )	_	
12	t4094_000	abe	PTKVZ	abe/<+snîden	_	(RB * )	_	
13	t4095_000	daz	DDART	dër	Neut.Akk.Sg	(PostF (NX *	_	
14	t4096_000	houbet	NA	houbet	Akk.Sg	 * ) )	_	
15	t4097_000	-	$_	_	_	 * )	_	
16	t4098_000	lâz	VVIMP	lâzen	Sg.2	(Cl (LB (VX * ) )	_	
17	t4099_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
18	t4100_000	gar	AVD	gar(e)	_	 *	_	
19	t4101_000	sieden	VVINF	sièden	_	(VX * )	_	
20	t4102_000	unde	KON	unte	_	 * ) )	_	
21	t4103_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
22	t4104_000	her	PAVD	hër(e)/+ûz	_	(MF *	_	
23	t4105_000	ûz	PAVAP	ûz/hër(e)+	_	 *	_	
24	t4106_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
25	t4107_000	græde	NA	grâd	Akk.Pl	 * ) ) )	_	
26	t4108_000	stôz	VVIMP	stôzen	Sg.2	(Cl (LB (VX * ) )	_	
27	t4109_000	krût	NA	krût	Akk.Sg	(MF (NX * ) )	_	
28	t4110_000	eier	NA	èi	Akk.Pl	(Frag (NX * )	_	
29	t4111_000	unde	KON	unte	_	 *	_	
30	t4112_000	schoene	ADJA	schoène	Pos.*..0	 *	_	
31	t4113_000	brôt	NA	brôt	Akk.Pl	(NX * )	_	
32	t4114_000	-	$_	_	_	 * )	_	
33	t4115_000	unde	KON	unte	_	(Frag *	_	
34	t4116_000	mit	APPR	mit	_	(PreF (PPX *	_	
35	t4117_000	dem	DDS	dër	Masc.Dat.Sg	(NX *	_	
36	t4118_000	âle	NA	âle	Dat.Sg	 * ) ) )	_	
37	t4119_000	hacke	VVIMP	hacken	Sg.2	(LB (VX * ) )	_	
38	t4120_000	salvei	NA	salvèi(e)	Akk.Sg	(MF (NX * ) )	_	
39	t4121_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4122_000	dâr	PAVD	dâr/+zuo	_	(S (Cl (LB (VX *	_	
2	t4123_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
3	t4124_000	vülle	VVIMP	vüllen	Sg.2	 * ) )	_	
4	t4125_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
5	t4126_000	hût	NA	hût	Akk.Sg	 * ) )	_	
6	t4127_000	-	$_	_	_	 * )	_	
7	t4128_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t4129_000	brât	VVIMP	brâten	Sg.2	(LB (VX * ) )	_	
9	t4130_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX * )	_	
10	t4131_000	unde	KON	unte	_	 * ) )	_	
11	t4132_000	wüege	VVIMP	wüègen	Sg.2	(LB (VX * ) )	_	
12	t4133_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
13	t4134_000	houbet	NA	houbet	Akk.Sg	 * ) )	_	
14	t4135_000	-	$_	_	_	 * )	_	
15	t4136_000	zuo	APPR	ze	_	(PPX *	_	
16	t4137_000	dem	DDS	dër	Masc.Dat.Sg	(NX *	_	
17	t4138_000	âle	NA	âle	Dat.Sg	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4139_000	kleide	VVIMP	klèiden	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4140_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX *	_	
3	t4141_000	mit	APPR	mit	_	(PPX *	_	
4	t4142_000	einen	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
5	t4143_000	dünnen	ADJA	dünne	Pos.Masc.Dat.Sg.wk	 *	_	
6	t4144_000	teige	NA	tèig	Dat.Sg	 * ) ) )	_	
7	t4145_000	unde	KON	unte	_	 *	_	
8	t4146_000	ein	DIART	èin	*.*.*.0	 *	_	
9	t4147_000	blate	NA	blat	Dat.Sg	(NX *	_	
10	t4148_000	von	APPR	von	_	(PPX *	_	
11	t4149_000	eiernen	NA	èiern	Dat.Pl	(NX * ) ) )	_	
12	t4150_000	unde	KON	unte	_	 * ) )	_	
13	t4151_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
14	t4151_001	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
15	t4152_000	dâr	PAVD	dâr/+ûf	_	 *	_	
16	t4152_001	ûf	PAVAP	ûf/dâr+	_	 * )	_	
17	t4153_000	-	$_	_	_	 * )	_	
18	t4154_000	roeste	VVIMP	roèsten	Sg.2	(Cl (LB (VX * ) )	_	
19	t4154_001	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX * )	_	
20	t4155_000	unde	KON	unte	_	 * ) )	_	
21	t4156_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
22	t4157_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
23	t4158_000	hin	AVD	hin(e)	_	 * )	_	
24	t4159_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4160_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4161_000	geriht	NA	ge-riht(e)	Nom.Sg	(NX *	_	
3	t4162_000	von	APPR	von	_	(PPX *	_	
4	t4163_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
5	t4164_000	stokvische	NA	stock-visch	Dat.Sg	 * ) ) )	_	
6	t4165_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4166_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4167_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
3	t4168_000	stokvisch	NA	stock-visch	Akk.Sg	 * ) )	_	
4	t4169_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
5	t4170_000	niht	PTKNEG	niht	_	(MF *	_	
6	t4171_000	dürre	ADJD	dürre	Pos....0	 * )	_	
7	t4172_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
8	t4173_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t4174_000	tuo	VVIMP	tuon/abe<.+	Sg.2	(LB (VX * ) )	_	
10	t4175_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
11	t4176_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
12	t4177_000	hût	NA	hût	Akk.Sg	 * ) )	_	
13	t4178_000	abe	PTKVZ	abe/<.+tuon	_	(RB * ) )	_	
14	t4179_000	weiche	VVIMP	wèichen	Sg.2	(Cl (LB (VX * ) )	_	
15	t4180_000	in	APPR	in	_	(MF (PPX *	_	
16	t4181_000	kaltem	ADJA	kalt	Pos.Neut.Dat.Sg.st	(NX *	_	
17	t4182_000	wazzere	NA	wazzer	Dat.Sg	 * ) )	_	
18	t4183_000	ein	DIA	èin	*.*.*.0	 *	_	
19	t4184_000	naht	NA	naht	Akk.Sg	(NX * ) )	_	
20	t4185_000	-	$_	_	_	 * )	_	
21	t4186_000	drücke	VVIMP	drücken	Sg.2	(Cl (LB (VX * ) )	_	
22	t4187_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
23	t4188_000	in	APPR	in	_	(PPX *	_	
24	t4189_000	ezzich	NA	èzzich	Akk.Sg	(NX * ) ) ) )	_	
25	t4190_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
26	t4191_000	er	PPER	ër	Masc.Nom.Sg.3	(MF (NX * )	_	
27	t4192_000	ganz	ADJD	ganz	Pos....0	 * )	_	
28	t4193_000	belîbe	VVFIN	be-lîben	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
29	t4194_000	bint	VVIMP	binten	Sg.2	(Cl (LB (VX * ) )	_	
30	t4195_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX * )	_	
31	t4196_000	langes	AVD	langes	_	 *	_	
32	t4197_000	unde	KON	unte	_	 *	_	
33	t4198_000	zwô	CARDA	zwêne	Fem.Akk.Pl.st	(NX *	_	
34	t4199_000	schine	NA	schin(e)	Akk.Pl	 * )	_	
35	t4200_000	dâr	PAVD	dâr/+über(e)	_	 *	_	
36	t4201_000	über	PAVAP	über(e)/dâr+	_	 *	_	
37	t4202_000	unde	KON	unte	_	 * ) )	_	
38	t4203_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
39	t4204_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
40	t4205_000	ûf	APPR	ûf	_	(PPX *	_	
41	t4206_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
42	t4207_000	hülzînen	ADJA	hülzîn	Pos.Masc.Akk.Sg.*	 *	_	
43	t4208_000	rost	NA	rost	Akk.Sg	 * ) ) ) )	_	
44	t4209_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4210_000	mache	VVIMP	machen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4211_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX * )	_	
3	t4212_000	warm	ADJD	warm	Pos....0	 *	_	
4	t4213_000	unde	KON	unte	_	 * ) )	_	
5	t4214_000	besprenge	VVIMP	be-sprèngen	Sg.2	(LB (VX * ) )	_	
6	t4215_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
7	t4216_000	mit	APPR	mit	_	(PPX *	_	
8	t4217_000	butern	NA	buter	Dat.Sg	(NX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4218_000	mache	VVIMP	machen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4219_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
3	t4220_000	teic	NA	tèig	Akk.Sg	 *	_	
4	t4221_000	von	APPR	von	_	(PPX *	_	
5	t4222_000	mele	NA	mëlw	Dat.Sg	(NX * ) ) )	_	
6	t4223_000	unde	KON	unte	_	 *	_	
7	t4224_000	von	APPR	von	_	(PPX *	_	
8	t4225_000	eiernen	NA	èiern	Dat.Pl	(NX * ) ) )	_	
9	t4226_000	dâr	PAVD	dâr/+ze	_	(Frag *	_	
10	t4227_000	zuo	PTKA	ze/dâr+	_	(PreF * )	_	
11	t4228_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
12	t4229_000	gestôzen	ADJA	stôzen	Pos.*..0	(MF *	_	
13	t4230_000	pfeffer	NA	pfëffer	Akk.Sg	(NX * )	_	
14	t4231_000	unde	KON	unte	_	 *	_	
15	t4232_000	safrân	NA	safrân	Akk.Sg	(NX * )	_	
16	t4233_000	unde	KON	unte	_	 *	_	
17	t4234_000	salz	NA	salz	Akk.Sg	(NX *	_	
18	t4235_000	zuo	APPR	ze	_	(PPX *	_	
19	t4236_000	mâzen	NA	mâze	Dat.Pl	(NX * ) ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4237_000	als	KO*	all-sô	_	(S (Frag *	_	
2	t4238_000	der	DDART	dër	Masc.Nom.Sg	(NX *	_	
3	t4239_000	visch	NA	visch	Nom.Sg	 * )	_	
4	t4240_000	gar	AVD	gar(e)	_	(PreF (PreF * )	_	
5	t4241_000	heize	VVFIN	hèizen	*.Pres.Sg.1	(LB (VX * ) ) )	_	
6	t4242_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
7	t4243_000	-	$_	_	_	 * )	_	
8	t4244_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t4245_000	slahe	VVIMP	slahen	Sg.2	(LB (VX * ) )	_	
10	t4246_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
11	t4247_000	teic	NA	tèig	Akk.Sg	 * )	_	
12	t4248_000	dâr	PAVD	dâr/+ûf	_	 *	_	
13	t4249_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
14	t4250_000	mit	APPR	mit	_	(PPX *	_	
15	t4251_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
16	t4252_000	swange	NA	swang	Dat.Sg	 * ) ) ) )	_	
17	t4253_000	rîche	VVIMP	rîchen	Sg.2	(Cl (LB (VX * ) )	_	
18	t4254_000	vaste	AVD	vaste	_	(PreF (MF *	_	
19	t4255_000	viur	NA	viur	Akk.Sg	(NX * )	_	
20	t4256_000	dâr	PAVD	dâr/+unter	_	 *	_	
21	t4257_000	under	PAVAP	unter/dâr+	_	 *	_	
22	t4258_000	unde	KON	unte	_	 * ) )	_	
23	t4259_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
24	t4260_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
25	t4261_000	werden	VAINF	wërden	_	(VX * )	_	
26	t4262_000	rôt	ADJD	rôt	Pos....0	 * )	_	
27	t4263_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4264_000	sô	KO*	sô	_	(S (Cl (PreF * )	_	
2	t4265_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
3	t4266_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) )	_	
4	t4267_000	êr	KOUS	êr	_	(PostF (Cl (LB * )	_	
5	t4268_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
6	t4269_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) )	_	
7	t4270_000	abe	PTKVZ	abe/>+nëmen	_	(RB (VX *	_	
8	t4271_000	nemest	VVFIN	nëmen/abe>+	Subj.Pres.Sg.2	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4272_000	betroufe	VVIMP	be-troufen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4273_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX *	_	
3	t4274_000	mit	APPR	mit	_	(PPX *	_	
4	t4275_000	butern	NA	buter	Dat.Pl	(NX * ) ) )	_	
5	t4276_000	vaste	AVD	vaste	_	 *	_	
6	t4277_000	unde	KON	unte	_	 * ) )	_	
7	t4278_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
8	t4279_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
9	t4280_000	hin	AVD	hin(e)	_	 * )	_	
10	t4281_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4282_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4283_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t4284_000	vülle	NA	vülle	Nom.Sg	(NX * )	_	
4	t4285_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4286_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4287_000	mandelkern	NA	mandel-kërn(e)	Akk.Sg	(MF (NX * ) ) )	_	
3	t4288_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
4	t4289_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX * )	_	
5	t4290_000	schoene	ADJD	schoène	Pos....0	 *	_	
6	t4291_000	in	PPER	ër	*.Dat.Pl.3	(NX * )	_	
7	t4292_000	sieden	ADJA	sièden	Pos.*.Dat.Sg.st	(NX *	_	
8	t4293_000	wazzer	NA	wazzer	Dat.Sg	 * )	_	
9	t4294_000	unde	KON	unte	_	 * ) )	_	
10	t4295_000	wirf	VVIMP	wërfen	Sg.2	(LB (VX * ) )	_	
11	t4296_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
12	t4297_000	in	APPR	in	_	 *	_	
13	t4298_000	kalt	ADJA	kalt	Pos.*..0	 *	_	
14	t4299_000	wazzer	NA	wazzer	Akk.Sg	(NX * ) ) )	_	
15	t4300_000	loese	VVIMP	loèsen	Sg.2	(Cl (LB (VX * ) )	_	
16	t4301_000	die	DDART	dër	*.Akk.Pl	(PreF (MF *	_	
17	t4302_000	garsten	ADJA	garst	Pos.*.Akk.Pl..%.wk	 *	_	
18	t4303_000	ûz	AVD	ûz	_	 *	_	
19	t4304_000	unde	KON	unte	_	 * ) )	_	
20	t4305_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
21	t4306_000	die	DDART	dër	*.Akk.Pl	(MF *	_	
22	t4307_000	bezzisten	ADJA	bè(zzi)st	Sup.*.Akk.Pl..%.wk	 *	_	
23	t4308_000	in	APPR	in	_	(PPX *	_	
24	t4309_000	einem	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
25	t4310_000	morsær	NA	morsære	Dat.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4311_000	alse	KO*	all-sô	_	(S (Frag *	_	
2	t4312_000	sie	PPER	ër	*.Nom.Pl.3	(NX * )	_	
3	t4313_000	veisten	VVINF	vèisten	_	(PreF (VX * ) )	_	
4	t4314_000	beginnen	VVFIN	be-ginnen	*.Pres.Pl.3	(LB (VX * ) ) )	_	
5	t4315_000	sô	AVD	sô	_	(Cl (PreF (PreF (PreF (PreF (PreF * ) ) ) ) )	_	
6	t4316_000	sprenge	VVIMP	sprèngen	Sg.2	(LB (VX * ) )	_	
7	t4317_000	dâr	PAVD	dâr/+^	_	(PreF (MF *	_	
8	t4318_000	^	PAVAP	^/dâr+	_	 *	_	
9	t4319_000	ein	DIART	èin	*.*.*.0	 *	_	
10	t4320_000	kalt	ADJA	kalt	Pos.*..0	 *	_	
11	t4321_000	wazzer	NA	wazzer	Akk.Sg	(NX * )	_	
12	t4322_000	unde	KON	unte	_	 * ) )	_	
13	t4323_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
14	t4324_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
15	t4325_000	vaste	AVD	vaste	_	 *	_	
16	t4326_000	unde	KON	unte	_	 * ) )	_	
17	t4327_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
18	t4328_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX *	_	
19	t4329_000	mit	APPR	mit	_	(PPX *	_	
20	t4330_000	kaltem	ADJA	kalt	Pos.Neut.Dat.Sg.st	(NX *	_	
21	t4331_000	wazzere	NA	wazzer	Dat.Sg	 * ) ) )	_	
22	t4332_000	eben	AVD	ëben(e)	_	 *	_	
23	t4333_000	dicke	AVD	dicke	_	 *	_	
24	t4334_000	unde	KON	unte	_	 * ) )	_	
25	t4335_000	rinc	VVIMP	ringen	Sg.2	(LB (VX * ) )	_	
26	t4336_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
27	t4337_000	durch	APPR	durh	_	 *	_	
28	t4338_000	ein	DIART	èin	*.*.*.0	 *	_	
29	t4339_000	schoene	ADJA	schoène	Pos.*..0	 *	_	
30	t4340_000	tuoch	NA	tuoch	Akk.Sg	(NX * )	_	
31	t4341_000	unde	KON	unte	_	 * ) )	_	
32	t4342_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
33	t4343_000	die	DDART	dër	*.Akk.Pl	(MF (NX *	_	
34	t4344_000	kafn	NA	kaf	Akk.Pl	 * )	_	
35	t4345_000	wider	AVD	wider(e)	_	 *	_	
36	t4346_000	in	APPR	in	_	(PPX *	_	
37	t4347_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
38	t4348_000	morsær	NA	morsære	Akk.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4349_000	stôz	NA	stôz	Nom.Sg	(S (Frag (NX * )	_	
2	t4350_000	sie	PPER	ër	*.Akk.Pl.3	(NX * )	_	
3	t4351_000	unde	KON	unte	_	(PrePreF * )	_	
4	t4352_000	rinc	VVIMP	ringen	Sg.2	(LB (VX * ) )	_	
5	t4353_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
6	t4354_000	ûz	AVD	ûz	_	 * )	_	
7	t4355_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4356_000	schüte	VVIMP	schüten	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4356_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
3	t4357_000	allez	DID	all	Neut.Akk.Sg.st	 * )	_	
4	t4358_000	in	APPR	in	_	 *	_	
5	t4359_000	ein	DIART	èin	*.*.*.0	 *	_	
6	t4360_000	pfanne	NA	pfanne	Akk.Sg	(NX * )	_	
7	t4361_000	unde	KON	unte	_	 * ) )	_	
8	t4362_000	halt	VVIMP	halten	Sg.2	(LB (VX * ) )	_	
9	t4363_000	sie	PPER	ër	Fem.Akk.Sg.3	(PreF (MF (NX *	_	
10	t4364_000	über	APPR	über	_	(PPX *	_	
11	t4365_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
12	t4366_000	viur	NA	viur	Akk.Sg	 * ) ) )	_	
13	t4367_000	unde	KON	unte	_	 * ) )	_	
14	t4368_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
15	t4369_000	dâr	PAVD	dâr/+zuo	_	(PreF (MF *	_	
16	t4369_001	zuo	PAVAP	zuo/dâr+	_	 *	_	
17	t4370_000	ein	DIART	èin	*.*.*.0	 *	_	
18	t4371_000	eierschaln	NA	èier-schal(e)	Akk.Sg	(NX * )	_	
19	t4372_000	vol	ADJD	voll	Pos....0	 *	_	
20	t4373_000	wînes	NA	wîn	Gen.Sg	(NX * )	_	
21	t4374_000	unde	KON	unte	_	 * ) )	_	
22	t4375_000	rüer	VVIMP	rüèren	Sg.2	(LB (VX * ) )	_	
23	t4375_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
24	t4376_000	wole	AVD	wol(e)	_	 * )	_	
25	t4377_000	unze daz	KOUS	unz(e)~dazz	_	(PostF (Cl (LB * )	_	
26	t4378_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
27	t4379_000	gesiede	VVFIN	ge-sièden	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4380_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4381_000	-	$_	_	_	 *	_	
3	t4382_000	ein	DIA	èin	*.*.*.0	(Frag *	_	
4	t4383_000	schoene	ADJA	schoène	Pos.*..0	 *	_	
5	t4384_000	bütel	NA	bütel	Akk.Sg	(NX *	_	
6	t4384_001	tuoch	NA	tuoch	Akk.Sg	 * )	_	
7	t4385_000	unde	KON	unte	_	(PrePreF * )	_	
8	t4386_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
9	t4387_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
10	t4388_000	ûf	APPR	ûf	_	 *	_	
11	t4389_000	reine	ADJA	rèin(e)	Pos.*..0	 *	_	
12	t4390_000	strô	NA	strôw	Akk.Sg	(NX * )	_	
13	t4391_000	unde	KON	unte	_	 * ) )	_	
14	t4392_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
15	t4393_000	dâr	PAVD	dâr/+ûf	_	(MF *	_	
16	t4394_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
17	t4395_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
18	t4396_000	milch	NA	milch	Akk.Sg	 * ) )	_	
19	t4397_000	biz daz	KOUS	biz~dazz	_	(Cl (LB * )	_	
20	t4398_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
21	t4399_000	wole	AVD	wol(e)	_	 *	_	
22	t4400_000	über	AVD	über	_	 * )	_	
23	t4401_000	sîge	VVFIN	sîgen	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4402_000	swaz	PG	swër	Neut.Nom.Sg.st	(S (Frag (NX * )	_	
2	t4403_000	denne	AVD	danne	_	(PreF *	_	
3	t4404_000	ûf	APPR	ûf	_	(PPX *	_	
4	t4405_000	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
5	t4406_000	tuoche	NA	tuoch	Dat.Sg	 * ) ) )	_	
6	t4407_000	belîbe	VVFIN	be-lîben	Subj.Pres.Sg.3	(LB (VX * ) ) )	_	
7	t4408_000	dâ	PAVD	dâr/+von(e)	_	(Cl (LB (VX *	_	
8	t4409_000	von	PAVAP	von(e)/dâr+	_	 *	_	
9	t4410_000	mache	VVIMP	machen	Sg.2	 * ) )	_	
10	t4411_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
11	t4412_000	kæse	NA	kæse	Akk.Sg	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4413_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4414_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
3	t4415_000	butern	NA	buter	Akk.Sg	(NX * ) )	_	
4	t4416_000	dâr	PAVD	dâr/+ûz	_	(RB (VX *	_	
5	t4417_000	ûz	PAVAP	ûz/dâr+	_	 *	_	
6	t4418_000	machen	VVINF	machen	_	 * ) ) )	_	
7	t4419_000	sô	AVD	sô	_	(Cl (PreF (PreF * ) )	_	
8	t4420_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
9	t4421_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
10	t4422_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
11	t4423_000	safrânes	NA	safrân	Gen.Sg	(NX * ) )	_	
12	t4424_000	dô	AVD	dô	_	 *	_	
13	t4425_000	mit	AVD	mit(e)	_	 *	_	
14	t4426_000	erwallen	VVINF	er-wallen	_	(VX * )	_	
15	t4427_000	unde	KON	unte	_	 * ) )	_	
16	t4428_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
17	t4428_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
18	t4429_000	hin	AVD	hin(e)	_	 *	_	
19	t4430_000	als	KO*	all-sô	_	 *	_	
20	t4431_000	butern	NA	buter	Akk.Sg	(NX * )	_	
21	t4432_000	oder	KON	oder	_	 *	_	
22	t4433_000	kæse	NA	kæse	Akk.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4434_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4435_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t4436_000	trahte	NA	traht(e)	Nom.Sg	(NX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4437_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4438_000	hüenere	NA	huon	Gen.Pl	(MF (NX * )	_	
3	t4439_000	magen	NA	mag(e)	Akk.Sg	(NX * )	_	
4	t4440_000	unde	KON	unte	_	 *	_	
5	t4441_000	lebern	NA	lëber(e)	Akk.Pl	(NX * ) ) )	_	
6	t4442_000	snît	VVIMP	snîden/abe<+	Sg.2	(Cl (LB (VX * ) )	_	
7	t4443_000	abe	PTKVZ	abe/<+snîden	_	(RB * )	_	
8	t4444_000	daz	DDS	dër	Neut.Akk.Sg	(PostF (NX *	_	
9	t4445_000	herte	ADJA	hèrte	Pos.Neut.Akk.Sg.wk	 * ) ) )	_	
10	t4446_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX *	_	
11	t4447_000	guote	ADJA	guot	Pos.Neut.Akk.Sg.wk	 * ) )	_	
12	t4448_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
13	t4449_000	dünne	ADJD	dünne	Pos....0	(MF * ) )	_	
14	t4450_000	mache	VVIMP	machen	Sg.2	(Cl (LB (VX * ) )	_	
15	t4450_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
16	t4451_000	gar	AVD	gar(e)	_	 *	_	
17	t4452_000	in	APPR	in	_	(PPX *	_	
18	t4453_000	smalze	NA	smalz	Dat.Sg	(NX * ) ) ) )	_	
19	t4454_000	zeslahe	VVIMP	zer-slahen	Sg.2	(Cl (LB (VX * ) )	_	
20	t4455_000	eier	NA	èi	Akk.Pl	(PreF (MF (NX * )	_	
21	t4456_000	unde	KON	unte	_	 * ) )	_	
22	t4457_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
23	t4458_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
24	t4459_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
25	t4460_000	pfeffer	NA	pfëffer	Akk.Sg	(NX * )	_	
26	t4461_000	unde	KON	unte	_	 *	_	
27	t4462_000	kumel	NA	kumel	Akk.Sg	(NX * ) ) )	_	
28	t4463_000	salz	NA	salz	Akk.Sg	(NX *	_	
29	t4464_000	zuo	APPR	ze	_	(PPX *	_	
30	t4465_000	mâzen	NA	mâze	Dat.Pl	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4466_000	mache	VVIMP	machen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4467_000	ein	DIA	èin	*.*.*.0	(MF *	_	
3	t4468_000	pfanne	NA	pfanne	Akk.Sg	(NX * )	_	
4	t4469_000	heiz	ADJD	hèiz	Pos....0	 *	_	
5	t4470_000	unde	KON	unte	_	 *	_	
6	t4471_000	veiz	ADJD	vèiz	Pos....0	 * )	_	
7	t4472_000	als	KO*	all-sô	_	(Frag *	_	
8	t4473_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
9	t4474_000	ein	DIA	èin	*.*.*.0	 *	_	
10	t4475_000	küchene	NA	küchen(e)	Akk.Sg	(PreF (NX * ) )	_	
11	t4476_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
12	t4477_000	bachen	VVINF	bachen	_	(RB (VX * ) )	_	
13	t4478_000	-	$_	_	_	 * ) )	_	
14	t4479_000	wirf	VVIMP	wërfen	Sg.2	(Cl (LB (VX * ) )	_	
15	t4480_000	durch	APPR	durh	_	(MF (PPX *	_	
16	t4481_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) )	_	
17	t4482_000	eier	NA	èi	Akk.Pl	(NX * )	_	
18	t4483_000	unde	KON	unte	_	 *	_	
19	t4484_000	lebern	NA	lëber(e)	Akk.Pl	(NX * ) ) )	_	
20	t4485_000	rüere	VVIMP	rüèren	Sg.2	(Cl (LB (VX * ) )	_	
21	t4486_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
22	t4487_000	zesamene	AVD	ze-samen(e)	_	 * )	_	
23	t4488_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
24	t4489_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
25	t4490_000	belîbe	VVFIN	be-lîben	Subj.Pres.Sg.3	(RB (VX * ) )	_	
26	t4491_000	weich	ADJD	wèich	Pos....0	(PostF * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4492_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t4493_000	nim	VVIMP	nëmen/abe<+	Sg.2	(LB (VX * ) )	_	
3	t4494_000	abe	PTKVZ	abe/<+nëmen	_	(RB * )	_	
4	t4495_000	die	DDART	dër	Fem.Akk.Sg	(PostF (NX *	_	
5	t4496_000	pfanne	NA	pfanne	Akk.Sg	 * ) ) )	_	
6	t4497_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(Cl (LB (VX * ) )	_	
7	t4497_001	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
8	t4498_000	schoene	ADJD	schoène	Pos....0	 *	_	
9	t4499_000	mit	APPR	mit	_	(PPX *	_	
10	t4500_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
11	t4501_000	schine	NA	schin(e)	Dat.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4502_000	halt	VVIMP	halten	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4502_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
3	t4503_000	wider	AVD	wider(e)	_	 *	_	
4	t4504_000	über	APPR	über	_	(PPX *	_	
5	t4505_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
6	t4506_000	viur	NA	viur	Akk.Sg	 * ) )	_	
7	t4507_000	unde	KON	unte	_	 * ) )	_	
8	t4508_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
9	t4508_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
10	t4509_000	veizet	ADJD	vèiz(e)t	Pos....0	 *	_	
11	t4510_000	unde	KON	unte	_	 * ) )	_	
12	t4511_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
13	t4512_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
14	t4513_000	muos	NA	muos	Akk.Sg	 * )	_	
15	t4514_000	ganz	ADJD	ganz	Pos....0	 *	_	
16	t4515_000	in	APPR	in	_	(PPX *	_	
17	t4516_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
18	t4517_000	pfanne	NA	pfanne	Akk.Sg	 * ) ) ) )	_	
19	t4518_000	drücke	VVIMP	drücken	Sg.2	(Cl (LB (VX * ) )	_	
20	t4519_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
21	t4520_000	wole	AVD	wol(e)	_	 * )	_	
22	t4521_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
23	t4522_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
24	t4523_000	ganz	ADJD	ganz	Pos....0	 * )	_	
25	t4524_000	belîbe	VVFIN	be-lîben	Subj.Pres.Sg.3	(RB (VX * ) )	_	
26	t4525_000	an	APPR	ane	_	(PostF (PPX *	_	
27	t4526_000	eineme	DIART	èin	Neut.Dat.Sg.st	(NX *	_	
28	t4527_000	stücke	NA	stück(e)	Dat.Sg	 * ) ) ) ) ) )	_	
29	t4528_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
30	t4529_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
31	t4530_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
32	t4531_000	backen	VVINF	backen	_	(VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4532_000	als	KO*	all-sô	_	(S (Frag *	_	
2	t4533_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
3	t4534_000	gar	AVD	gar(e)	_	 *	_	
4	t4535_000	si	PPER	ër	Fem.Nom.Sg.3	(NX * )	_	
5	t4536_000	gebacket	VVPP	backen	_	(VX * ) )	_	
6	t4537_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t4538_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
8	t4538_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
9	t4539_000	hin	AVD	hin(e)	_	 * )	_	
10	t4540_000	unde	KON	unte	_	(Frag *	_	
11	t4541_000	daz	DDS	dër	Neut.Nom.Sg	(PreF (NX * ) )	_	
12	t4542_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
13	t4543_000	laxis	NA	laxis	Nom.Sg	(MF (NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4544_000	alsô	AVD	all-sô	_	(S (Cl (PreF * )	_	
2	t4545_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t4546_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
4	t4547_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
5	t4548_000	junge	ADJA	jung	Pos.*.Akk.Pl.st	(PostF (NX *	_	
6	t4549_000	hüenere	NA	huon	Akk.Pl	 *	_	
7	t4550_000	von	APPR	von	_	(PPX *	_	
8	t4551_000	lampvleische	NA	lamb-vlèisch	Dat.Sg	(NX * ) ) ) )	_	
9	t4552_000	sô	KO*	sô	_	(Frag *	_	
10	t4553_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
11	t4553_001	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
12	t4554_000	kleine	ADJA	klèine	Pos.*..0	(PreF * )	_	
13	t4555_000	snîde	VVFIN	snîden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
14	t4556_000	-	$_	_	_	 * ) )	_	
15	t4557_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4558_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4559_000	condiment	NA	condiment	Nom.Sg	(NX * )	_	
3	t4560_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4561_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4562_000	rintvleisch	NA	rind-vlèisch	Akk.Sg	(MF (NX * ) ) )	_	
3	t4563_000	als	KO*	all-sô	_	(Frag *	_	
4	t4564_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
5	t4565_000	êrst	ADJD	êr(e)st	Sup....0	 *	_	
6	t4566_000	zuo	PTKVZ	zuo/>+komen	_	(VX *	_	
7	t4567_000	kumet	VVFIN	komen/zuo>+	Ind.Pres.Sg.3	 * ) )	_	
8	t4568_000	siut	VVIMP	sièden	Sg.2	(Cl (LB (VX * ) )	_	
9	t4568_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
10	t4569_000	mot	NA	mot	Nom.Sg	(NX * ) )	_	
11	t4570_000	-	$_	_	_	 *	_	
12	t4571_000	salz	NA	salz	Nom.Sg	(Frag (NX *	_	
13	t4571_001	ez	PPER	ër	Neut.Nom.Sg.3	 * )	_	
14	t4572_000	wole	AVD	wol(e)	_	 * ) )	_	
15	t4573_000	nim	VVIMP	nëmen	Sg.2	(Cl (LB (VX * ) )	_	
16	t4574_000	aschlouch	NA	aschlouch	Akk.Sg	(MF (NX * )	_	
17	t4575_000	unde	KON	unte	_	 *	_	
18	t4576_000	minzen	NA	minze	Akk.Sg	(NX * )	_	
19	t4577_000	dâr	PAVD	dâr/+zuo	_	 *	_	
20	t4578_000	zuo	PAVAP	zuo/dâr+	_	 * ) )	_	
21	t4579_000	des	DDART	dër	Neut.Gen.Sg	(Cl (PreF (NX *	_	
22	t4580_000	krûtes	NA	krût	Gen.Sg	 * ) )	_	
23	t4581_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
24	t4582_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(MF (NX * ) ) )	_	
25	t4583_000	lâzes	VVFIN	lâzen	*.Pres.Sg.2	(Cl (LB (VX * ) )	_	
26	t4584_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
27	t4585_000	wole	AVD	wol(e)	_	 *	_	
28	t4586_000	sieden	VVINF	sièden	_	(VX * )	_	
29	t4587_000	in	APPR	in	_	 *	_	
30	t4588_000	eineme	DIA	èin	Masc.Dat.Sg.st	 *	_	
31	t4589_000	veizeten	ADJA	vèiz(e)t	Pos.Masc.Dat.Sg.wk	 * ) )	_	
32	t4590_000	soede	VVFIN	soèden	Subj.Pres.Sg.3	(LB (VX (VX * )	_	
33	t4591_000	unde	KON	unte	_	 *	_	
34	t4592_000	reiz	VVFIN	rîzen	Ind.Past.Sg.3	(VX * ) ) ) )	_	
35	t4593_000	swie	AVG	swiè	_	(Cl (LB * )	_	
36	t4594_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
37	t4595_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(RB (VX * ) )	_	
38	t4596_000	-	$_	_	_	 * )	_	
39	t4597_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
40	t4598_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
41	t4598_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
42	t4599_000	hin	AVD	hin(e)	_	 * )	_	
43	t4600_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4601_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4602_000	geriht	NA	ge-riht(e)	Nom.Sg	(NX *	_	
3	t4603_000	von	APPR	von	_	(PPX *	_	
4	t4604_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
5	t4605_000	gense	NA	gans	Dat.Sg	 * ) ) )	_	
6	t4606_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4607_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4608_000	ein	DIA	èin	*.*.*.0	(MF *	_	
3	t4609_000	gans	NA	gans	Akk.Sg	(NX * ) )	_	
4	t4610_000	die	DRELS	dër	Fem.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
5	t4611_000	niht	PTKNEG	niht	_	(MF *	_	
6	t4612_000	alt	ADJD	alt	Pos....0	 * )	_	
7	t4613_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4614_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4615_000	ûz	AVD	ûz	_	(MF *	_	
3	t4616_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
4	t4617_000	gekroese	NA	ge-kroèse	Akk.Sg	 * ) ) )	_	
5	t4618_000	snît	VVIMP	snîden/abe<+	Sg.2	(Cl (LB (VX * ) )	_	
6	t4619_000	abe	PTKVZ	abe/<+snîden	_	(RB * )	_	
7	t4620_000	die	DDART	dër	*.Akk.Pl	(PostF (NX *	_	
8	t4621_000	vlügele	NA	vlügel	Akk.Pl	 * )	_	
9	t4622_000	unde	KON	unte	_	 *	_	
10	t4623_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
11	t4624_000	diech	NA	dièh	Akk.Pl	 * ) ) )	_	
12	t4625_000	stecke	VVIMP	stècken	Sg.2	(Cl (LB (VX * ) )	_	
13	t4626_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
14	t4627_000	in	APPR	in	_	(PPX *	_	
15	t4628_000	einen	DIA	èin	Masc.Akk.Sg.st	(NX *	_	
16	t4629_000	irdînen	ADJA	irdîn	Pos.Masc.Akk.Sg.*	 *	_	
17	t4630_000	haven	NA	haven	Akk.Sg	 * ) ) ) )	_	
18	t4631_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
19	t4632_000	enge	ADJD	ènge	Pos....0	(MF * )	_	
20	t4633_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4634_000	giuz	VVIMP	gièzen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4635_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
3	t4636_000	wazzer	NA	wazzer	Akk.Sg	 * )	_	
4	t4637_000	ûf	AVD	ûf	_	 * )	_	
5	t4638_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
6	t4639_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * ) )	_	
7	t4640_000	betûche	VVFIN	be-tûchen	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
8	t4641_000	setze	VVIMP	sètzen	Sg.2	(Cl (LB (VX * ) )	_	
9	t4642_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX *	_	
10	t4643_000	ûf	APPR	ûf	_	(PPX *	_	
11	t4644_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
12	t4645_000	drîvuoz	NA	drî-vuoz	Akk.Sg	 * ) ) ) )	_	
13	t4646_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
14	t4647_000	unden	AVD	unten(e)	_	(MF *	_	
15	t4648_000	offen	ADJD	offen	Pos....0	 * )	_	
16	t4649_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
17	t4650_000	bedecke	VVFIN	be-dècken	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
18	t4651_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
19	t4652_000	haven	NA	haven	Akk.Sg	 * ) )	_	
20	t4653_000	-	$_	_	_	 *	_	
21	t4654_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
22	t4655_000	der	DDART	dër	Masc.Nom.Sg	(MF (NX *	_	
23	t4656_000	brâdem	NA	brâdem	Nom.Sg	 * )	_	
24	t4657_000	iht	AVD	iht	_	 * )	_	
25	t4658_000	ûz	PTKVZ	ûz/>+gân	_	(RB (VX *	_	
26	t4659_000	gê	VVFIN	gân/ûz>+	Subj.Pres.Sg.3	 * ) ) ) ) )	_	
27	t4660_000	siut	VVIMP	sièden	Sg.2	(Cl (LB (VX * ) )	_	
28	t4661_000	daz	DDART	dër	Neut.Akk.Sg	(PreF (MF (NX *	_	
29	t4662_000	gekroese	NA	ge-kroèse	Akk.Sg	 * )	_	
30	t4663_000	sunder	AVD	sunter	_	 *	_	
31	t4664_000	unde	KON	unte	_	 * ) )	_	
32	t4665_000	salz	VVIMP	salzen	Sg.2	(LB (VX * ) )	_	
33	t4666_000	die	DDS	dër	Fem.Akk.Sg	(MF (NX *	_	
34	t4667_000	gans	NA	gans	Akk.Sg	 * ) )	_	
35	t4668_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4669_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t4670_000	siude	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
3	t4671_000	die	DDS	dër	Fem.Akk.Sg	(MF (NX *	_	
4	t4672_000	gans	NA	gans	Akk.Sg	 *	_	
5	t4673_000	in	APPR	in	_	(PPX *	_	
6	t4674_000	dem	DDS	dër	Neut.Dat.Sg	(NX *	_	
7	t4675_000	sôde	NA	sôd	Dat.Sg	 * ) ) ) )	_	
8	t4676_000	biz	KOUS	biz	_	(PostF (Cl (LB * )	_	
9	t4677_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
10	t4678_000	vile	AVD	vil(e)	_	 *	_	
11	t4678_001	nâch	AVD	nâh	_	 *	_	
12	t4679_000	trucken	ADJD	trucken	Pos....0	 * )	_	
13	t4680_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) )	_	
14	t4681_000	unde	KON	unte	_	(PostF *	_	
15	t4682_000	gar	ADJD	garw	Pos....0	 *	_	
16	t4683_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(VX *	_	
17	t4684_000	gesoten	VVPP	sièden	_	 * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4685_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t4686_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t4687_000	denne	AVD	danne	_	(MF *	_	
4	t4688_000	süeze	ADJA	süèze	Pos.*..0	 *	_	
5	t4689_000	milch	NA	milch	Akk.Sg	(NX * )	_	
6	t4690_000	unde	KON	unte	_	 *	_	
7	t4691_000	sehs	CARDA	sëhs	*.*.*.0	(NX *	_	
8	t4692_000	totern	NA	toter(e)	Akk.Pl	 * ) )	_	
9	t4693_000	-	$_	_	_	 *	_	
10	t4694_000	unde	KON	unte	_	(Frag *	_	
11	t4695_000	zwei	CARDA	zwêne	Neut.Akk.Pl.st	(NX *	_	
12	t4696_000	houbet	NA	houbet	Akk.Pl	 *	_	
13	t4697_000	klobelouches	NA	klobe-louch	Gen.Sg	(NX * ) )	_	
14	t4698_000	die	DRELS	dër	*.Nom.Pl	(Cl (LB (NX * ) )	_	
15	t4699_000	grôz	ADJD	grôz	Pos....0	(MF * )	_	
16	t4700_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(RB (VX * ) ) ) ) )	_	
17	t4701_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
18	t4702_000	schele	VVIMP	schèl(e)n	Sg.2	(LB (VX * ) )	_	
19	t4703_000	die	DDS	dër	*.Akk.Pl	(PreF (MF (NX * )	_	
20	t4704_000	schoene	ADJD	schoène	Pos....0	 *	_	
21	t4705_000	unde	KON	unte	_	 * ) )	_	
22	t4706_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
23	t4707_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
24	t4708_000	mit	APPR	mit	_	 *	_	
25	t4709_000	ein	DIA	èin	*.*.*.0	 *	_	
26	t4710_000	wênige	NA	wênig	Dat.Sg	(NX *	_	
27	t4711_000	salzes	NA	salz	Gen.Sg	(NX * ) )	_	
28	t4712_000	unde	KON	unte	_	 * ) )	_	
29	t4713_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
30	t4714_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
31	t4715_000	mit	APPR	mit	_	(PPX *	_	
32	t4716_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
33	t4717_000	milch	NA	milch	Dat.Sg	 * ) ) )	_	
34	t4718_000	unde	KON	unte	_	 *	_	
35	t4719_000	mit	APPR	mit	_	(PPX *	_	
36	t4720_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
37	t4721_000	totern	NA	toter(e)	Dat.Pl	 * ) ) )	_	
38	t4722_000	unde	KON	unte	_	(Frag *	_	
39	t4723_000	safrân	NA	safrân	Akk.Sg	(PreF (NX * ) )	_	
40	t4724_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
41	t4725_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
42	t4726_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
43	t4727_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4728_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t4729_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
3	t4730_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
4	t4731_000	condiment	NA	condiment	Akk.Sg	 *	_	
5	t4732_000	ûf	APPR	ûf	_	(PPX *	_	
6	t4733_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
7	t4734_000	gân	NA	gân	Akk.Sg	 * ) ) ) )	_	
8	t4735_000	-	$_	_	_	 * )	_	
9	t4736_000	lâz	VVIMP	lâzen	Sg.2	(Cl (LB (VX * ) )	_	
10	t4737_000	sie	PPER	ër	Fem.Akk.Sg.3	(PreF (MF (NX * )	_	
11	t4738_000	erwallen	VVINF	er-wallen	_	(VX * )	_	
12	t4739_000	unde	KON	unte	_	 * ) )	_	
13	t4740_000	gibe	VVFIN	gëben	Ind.Pres.Sg.1	(LB (VX * ) )	_	
14	t4741_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
15	t4742_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4743_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4744_000	kluoge	ADJA	kluog	Pos.Fem.Nom.Sg.wk	(NX *	_	
3	t4745_000	spîse	NA	spîse	Nom.Sg	 * )	_	
4	t4746_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4747_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4748_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
3	t4749_000	ein	DIA	èin	*.*.*.0	 *	_	
4	t4750_000	kluoge	ADJA	kluog	Pos.Fem.Akk.Sg.st	(NX *	_	
5	t4751_000	spîse	NA	spîse	Akk.Sg	 * ) )	_	
6	t4752_000	machen	VVINF	machen	_	(RB (VX * ) ) )	_	
7	t4753_000	slahe	VVFIN	slahen	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
8	t4754_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF *	_	
9	t4755_000	dünnen	ADJA	dünne	Pos.Masc.Akk.Sg.*	 *	_	
10	t4756_000	teic	ADJD	tèig	Pos....0	 *	_	
11	t4757_000	von	APPR	von	_	(PPX *	_	
12	t4758_000	eiernen	NA	èiern	Dat.Pl	(NX * ) )	_	
13	t4759_000	unde	KON	unte	_	 *	_	
14	t4760_000	von	APPR	von	_	(PPX *	_	
15	t4761_000	schoenem	ADJA	schoène	Pos.Neut.Dat.Sg.st	(NX *	_	
16	t4762_000	melwe	NA	mëlw	Dat.Sg	 * ) ) ) )	_	
17	t4763_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(Cl (LB (VX * ) )	_	
18	t4764_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (MF (NX * )	_	
19	t4765_000	dicke	AVD	dicke	_	 *	_	
20	t4766_000	mit	APPR	mit	_	(PPX *	_	
21	t4767_000	schoenem	ADJA	schoène	Pos.Neut.Dat.Sg.st	(NX *	_	
22	t4768_000	brôte	NA	brôt	Dat.Sg	 * ) )	_	
23	t4769_000	unde	KON	unte	_	 * ) )	_	
24	t4770_000	ribe	VVFIN	rëben	Ind.Pres.Sg.1	(LB (VX * ) )	_	
25	t4771_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) ) )	_	
26	t4772_000	schele	VVIMP	schèl(e)n	Sg.2	(Cl (LB (VX * ) )	_	
27	t4773_000	sûr	ADJA	sûr	Pos.*..0	(MF *	_	
28	t4774_000	epfele	NA	apfel	Akk.Pl	(NX * ) )	_	
29	t4775_000	scharbe	VVIMP	scharben	Sg.2	(PostF (Cl (LB (VX * ) )	_	
30	t4776_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
31	t4777_000	grober	ADJA	grob	Pos.Masc.Nom.Sg.st	 * ) )	_	
32	t4778_000	denne	KOUS	danne	_	(LB * )	_	
33	t4779_000	spec	NA	spëck	Akk.Sg	(MF (NX *	_	
34	t4780_000	ûf	APPR	ûf	_	(PPX *	_	
35	t4781_000	hüenere	NA	huon	Akk.Pl	(NX * ) ) ) ) ) )	_	
36	t4782_000	die	DDS	dër	*.Nom.Pl	(Frag (NX * )	_	
37	t4783_000	menge	VVIMP	mèngen	Sg.2	(RB (VX * ) )	_	
38	t4784_000	dâr	PAVD	dâr/+zuo	_	(PostF *	_	
39	t4785_000	zuo	PAVAP	zuo/dâr+	_	 * ) ) )	_	
40	t4786_000	nim	VVIMP	nëmen	Sg.2	(Cl (LB (VX * ) )	_	
41	t4787_000	einen	DIART	èin	Masc.Akk.Sg.st	(PreF (MF (NX *	_	
42	t4788_000	leffel	NA	lèffel	Akk.Sg	 * )	_	
43	t4789_000	unde	KON	unte	_	 * ) )	_	
44	t4790_000	vülle	VVIMP	vüllen	Sg.2	(LB (VX * ) )	_	
45	t4791_000	den	DDART	dër	Masc.Akk.Sg	(PreF (MF (NX *	_	
46	t4792_000	teic	NA	tèig	Akk.Sg	 * )	_	
47	t4793_000	unde	KON	unte	_	 * ) )	_	
48	t4794_000	teile	VVIMP	tèilen	Sg.2	(LB (VX * ) )	_	
49	t4794_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
50	t4795_000	unde	KON	unte	_	 * ) )	_	
51	t4796_000	brât	VVIMP	brâten	Sg.2	(LB (VX * ) )	_	
52	t4797_000	den	DDS	dër	Masc.Akk.Sg	(MF (NX *	_	
53	t4798_000	in	APPR	in	_	(PPX *	_	
54	t4799_000	smalze	NA	smalz	Dat.Sg	(NX * ) ) )	_	
55	t4800_000	oder	KON	oder	_	 *	_	
56	t4801_000	in	APPR	in	_	(PPX *	_	
57	t4802_000	butern	NA	buter	Dat.Sg	(NX * ) ) )	_	
58	t4803_000	ob	KOUS	obe	_	(PostF (Cl (LB * )	_	
59	t4804_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
60	t4805_000	niht	PTKNEG	niht	_	 *	_	
61	t4806_000	vleischtac	NA	vlèisch-tag	Nom.Sg	(NX * ) )	_	
62	t4807_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(RB (VX * ) )	_	
63	t4808_000	-	$_	_	_	 * ) ) )	_	
64	t4809_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
65	t4810_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
66	t4810_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
67	t4811_000	hin	AVD	hin(e)	_	 * )	_	
68	t4812_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4813_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4814_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t4815_000	gebackenez	ADJS	bachen	Pos.Neut.Nom.Sg.st	(NX * )	_	
4	t4816_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4817_000	rip	VVIMP	rëben	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4818_000	kæse	NA	kæse	Akk.Sg	(MF (NX * ) ) )	_	
3	t4819_000	menge	VVIMP	mèngen	Sg.2	(Cl (LB (VX * ) )	_	
4	t4820_000	den	DDS	dër	Masc.Akk.Sg	(PreF (MF (NX *	_	
5	t4821_000	mit	APPR	mit	_	(PPX *	_	
6	t4822_000	eiernen	NA	èiern	Dat.Pl	(NX * ) ) )	_	
7	t4823_000	unde	KON	unte	_	 * ) )	_	
8	t4824_000	scharbe	VVIMP	scharben	Sg.2	(LB (VX * ) )	_	
9	t4825_000	gesoten	ADJA	sièden	Pos.*..0	(MF *	_	
10	t4826_000	spec	NA	spëck	Akk.Sg	(NX * )	_	
11	t4827_000	dâr	PAVD	dâr/+zuo	_	 *	_	
12	t4828_000	zuo	PAVAP	zuo/dâr+	_	 * ) )	_	
13	t4829_000	mache	VVIMP	machen	Sg.2	(Cl (LB (VX * ) )	_	
14	t4830_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
15	t4831_000	schoenen	ADJA	schoène	Pos.Masc.Akk.Sg.*	(NX *	_	
16	t4832_000	derben	ADJA	dèrb	Pos.Masc.Akk.Sg.*	 *	_	
17	t4833_000	teic	NA	tèig	Akk.Sg	 * )	_	
18	t4834_000	unde	KON	unte	_	 * ) )	_	
19	t4835_000	vülle	VVIMP	vüllen	Sg.2	(LB (VX * ) )	_	
20	t4836_000	den	DDART	dër	Masc.Akk.Sg	(PreF (MF (NX *	_	
21	t4837_000	kæse	NA	kæse	Akk.Sg	 * )	_	
22	t4838_000	unde	KON	unte	_	 *	_	
23	t4839_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
24	t4840_000	eier	NA	èi	Akk.Pl	 * )	_	
25	t4841_000	dâr	PAVD	dâr/+in	_	 *	_	
26	t4842_000	in	PAVAP	in/dâr+	_	 *	_	
27	t4843_000	unde	KON	unte	_	 * ) )	_	
28	t4844_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
29	t4845_000	krepfelîn	NA	krèpfelîn	Akk.Pl	(PreF (MF (NX * )	_	
30	t4846_000	unde	KON	unte	_	 * ) )	_	
31	t4847_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
32	t4848_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX *	_	
33	t4849_000	in	APPR	in	_	(PPX *	_	
34	t4850_000	butern	NA	buter	Dat.Sg	(NX * ) ) )	_	
35	t4851_000	oder	KON	oder	_	 *	_	
36	t4852_000	in	APPR	in	_	(PPX *	_	
37	t4853_000	smalze	NA	smalz	Dat.Sg	(NX *	_	
38	t4854_000	nâch	APPR	nâh	_	(PPX *	_	
39	t4855_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
40	t4856_000	zît	NA	zît	Dat.Sg	 * ) ) ) )	_	
41	t4857_000	unde	KON	unte	_	 * ) )	_	
42	t4858_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
43	t4859_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
44	t4860_000	warm	ADJD	warm	Pos....0	 *	_	
45	t4861_000	hin	AVD	hin(e)	_	 * )	_	
46	t4862_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4863_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4864_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t4865_000	gerihtelîn	NA	ge-rihtelîn	Nom.Sg	(NX * )	_	
4	t4866_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4867_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4868_000	gesoten	ADJA	sièden	Pos.*..0	(PreF (MF *	_	
3	t4869_000	erbeize	NA	er-bèiz	Akk.Pl	(NX * )	_	
4	t4870_000	unde	KON	unte	_	 * ) )	_	
5	t4871_000	slahe	VVIMP	slahen	Sg.2	(LB (VX * ) )	_	
6	t4872_000	die	DDS	dër	*.Nom.Pl	(MF (NX * )	_	
7	t4873_000	durch	APPR	durh	_	 *	_	
8	t4874_000	ein	DIA	èin	*.*.*.0	 *	_	
9	t4875_000	sip	NA	sib	Akk.Sg	(NX * ) ) )	_	
10	t4876_000	slahe	VVIMP	slahen	Sg.2	(Cl (LB (VX * ) )	_	
11	t4877_000	als	AVD	all-sô	_	(MF *	_	
12	t4878_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
13	t4879_000	eier	NA	èi	Gen.Pl	(NX * ) )	_	
14	t4880_000	dâr	PAVD	dâr/+zuo	_	 *	_	
15	t4881_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
16	t4882_000	als	KO*	all-sô	_	(Frag *	_	
17	t4883_000	der	DDS	dër	*.Gen.Pl	(PreF (NX *	_	
18	t4884_000	erbeize	NA	er-bèiz	Gen.Pl	 * ) )	_	
19	t4885_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) ) ) )	_	
20	t4886_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
21	t4887_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
22	t4887_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
23	t4888_000	in	APPR	in	_	(PPX *	_	
24	t4889_000	butern	NA	buter	Dat.Pl	(NX * ) ) )	_	
25	t4890_000	niht	PTKNEG	niht	_	 *	_	
26	t4891_000	alzuo	AVD	all-ze	_	 *	_	
27	t4892_000	veizet	ADJD	vèiz(e)t	Pos....0	 * )	_	
28	t4893_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4894_000	lâz	VVIMP	lâzen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4895_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
3	t4896_000	küeln	VVINF	küèlen	_	(VX * ) ) )	_	
4	t4897_000	snît	VVIMP	snîden	Sg.2	(Cl (LB (VX * ) )	_	
5	t4898_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX *	_	
6	t4899_000	an	APPR	ane	_	(PPX *	_	
7	t4900_000	mursel	NA	mursël(e)	Akk.Sg	(NX * ) ) )	_	
8	t4901_000	unde	KON	unte	_	 * ) )	_	
9	t4902_000	stecke	VVIMP	stècken	Sg.2	(LB (VX * ) )	_	
10	t4903_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
11	t4904_000	an	APPR	ane	_	(PPX *	_	
12	t4905_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
13	t4906_000	spiez	NA	spièz	Akk.Sg	 * ) ) ) ) )	_	
14	t4907_000	brât	VVIMP	brâten	Sg.2	(Cl (LB (VX * ) )	_	
15	t4908_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX * )	_	
16	t4909_000	wole	AVD	wol(e)	_	 *	_	
17	t4910_000	unde	KON	unte	_	 * ) )	_	
18	t4911_000	beslahe	VVIMP	be-slahen	Sg.2	(LB (VX * ) )	_	
19	t4912_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
20	t4913_000	mit	APPR	mit	_	(PPX *	_	
21	t4914_000	eiernen	NA	èiern	Dat.Pl	(NX * ) ) )	_	
22	t4915_000	unde	KON	unte	_	 *	_	
23	t4916_000	mit	APPR	mit	_	(PPX *	_	
24	t4917_000	krûte	NA	krût	Dat.Sg	(NX * ) ) ) )	_	
25	t4918_000	gip	VVIMP	gëben	Sg.2	(Cl (LB (VX * ) )	_	
26	t4919_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
27	t4920_000	hin	AVD	hin(e)	_	 * )	_	
28	t4921_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4922_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4923_000	geriht	NA	ge-riht(e)	Nom.Sg	(NX *	_	
3	t4924_000	von	APPR	von	_	(PPX *	_	
4	t4925_000	vischen	NA	visch	Dat.Pl	(NX * ) ) )	_	
5	t4926_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4927_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4928_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
3	t4929_000	vrischen	ADJA	vrisch	Pos.Masc.Akk.Sg.*	 *	_	
4	t4930_000	hechete	NA	hèchet	Akk.Sg	 * ) ) )	_	
5	t4931_000	loese	VVIMP	loèsen	Sg.2	(Cl (LB (VX * ) )	_	
6	t4932_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
7	t4933_000	abe	AVD	abe	_	 *	_	
8	t4934_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
9	t4935_000	hût	NA	hût	Akk.Sg	 * ) ) )	_	
10	t4936_000	von	APPR	von	_	(PPX *	_	
11	t4937_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
12	t4938_000	hechete	NA	hèchet	Dat.Sg	 * ) )	_	
13	t4939_000	siude	VVIMP	sièden	Sg.2	(Cl (LB (VX * ) )	_	
14	t4940_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX * )	_	
15	t4941_000	gar	AVD	gar(e)	_	 *	_	
16	t4942_000	schoene	ADJD	schoène	Pos....0	 *	_	
17	t4943_000	unde	KON	unte	_	 * ) )	_	
18	t4944_000	lise	VVIMP	lësen	Sg.2	(LB (VX * ) )	_	
19	t4945_000	ûz	AVD	ûz	_	(MF *	_	
20	t4946_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
21	t4947_000	græte	NA	grât	Akk.Pl	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4948_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t4949_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t4950_000	krût	NA	krût	Akk.Sg	(PreF (MF (NX * )	_	
4	t4951_000	unde	KON	unte	_	 * ) )	_	
5	t4952_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
6	t4953_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
7	t4954_000	mit	APPR	mit	_	(PPX *	_	
8	t4955_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
9	t4956_000	vische	NA	visch	Dat.Sg	 * ) ) ) ) )	_	
10	t4957_000	tuo	VVIMP	tuon	Sg.2	(Cl (LB (VX * ) )	_	
11	t4958_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
12	t4959_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
13	t4960_000	rou	ADJA	rou	Pos.*..0	 *	_	
14	t4961_000	eier	NA	èi	Akk.Pl	(NX * )	_	
15	t4962_000	unde	KON	unte	_	 *	_	
16	t4963_000	safrân	NA	safrân	Akk.Sg	(NX * ) )	_	
17	t4964_000	-	$_	_	_	 * )	_	
18	t4965_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
19	t4966_000	vülle	VVIMP	vüllen	Sg.2	(LB (VX * ) )	_	
20	t4967_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
21	t4968_000	hût	NA	hût	Akk.Sg	 *	_	
22	t4969_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
23	t4970_000	hechetes	NA	hèchet	Gen.Sg	 * ) )	_	
24	t4971_000	wider	AVD	wider(e)	_	 * )	_	
25	t4972_000	unde	KON	unte	_	(Frag *	_	
26	t4973_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
27	t4974_000	houbet	NA	houbet	Akk.Sg	 * ) )	_	
28	t4975_000	daz	DDS	dër	Neut.Akk.Sg	(Frag (NX * )	_	
29	t4976_000	rost	NA	rost	Nom.Sg	(NX * )	_	
30	t4977_000	ein	DIA	èin	*.*.*.0	 *	_	
31	t4978_000	wênic	NA	wênig	Nom.Sg	(NX * )	_	
32	t4979_000	unde	KON	unte	_	(PrePreF * )	_	
33	t4980_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
34	t4980_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
35	t4981_000	hin	AVD	hin(e)	_	 * )	_	
36	t4982_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4983_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t4984_000	geriht	NA	ge-riht(e)	Nom.Sg	(NX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t4985_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t4986_000	vrische	ADJA	vrisch	Pos.*.Akk.Pl.st	(PreF (MF (NX *	_	
3	t4987_000	mandelkern	NA	mandel-kërn(e)	Akk.Pl	 * )	_	
4	t4988_000	unde	KON	unte	_	 * ) )	_	
5	t4989_000	weiche	VVIMP	wèichen	Sg.2	(LB (VX * ) )	_	
6	t4990_000	die	DDS	dër	*.Akk.Pl	(MF (NX * )	_	
7	t4991_000	unde	KON	unte	_	 *	_	
8	t4992_000	hirsegrütze	NA	hirse-grütze	Akk.Sg	(NX * )	_	
9	t4993_000	unde	KON	unte	_	 *	_	
10	t4994_000	gesotene	ADJA	sièden	Pos.*.Akk.Pl.st	(NX *	_	
11	t4995_000	eier	NA	èi	Akk.Pl	 * )	_	
12	t4996_000	unde	KON	unte	_	 *	_	
13	t4997_000	ein	DIART	èin	*.*.*.0	 *	_	
14	t4998_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
15	t4999_000	schoenes	ADJA	schoène	Pos.Neut.Gen.Sg.st	(NX *	_	
16	t5000_000	brôtes	NA	brôt	Gen.Sg	 * ) )	_	
17	t5001_000	unde	KON	unte	_	 *	_	
18	t5002_000	krût	NA	krût	Akk.Sg	(NX * ) ) )	_	
19	t5003_000	diz	DDS	dise	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
20	t5004_000	mal	VVIMP	mal(e)n	Sg.2	(LB (VX * ) )	_	
21	t5005_000	zesamene	AVD	ze-samen(e)	_	(MF * )	_	
22	t5006_000	sô	KO*	sô	_	(Frag *	_	
23	t5007_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
24	t5008_000	dickest	AVD	dicke	_	(PreF * )	_	
25	t5009_000	mügest	VMFIN	mügen	Subj.Pres.Sg.2	(LB (VX * ) )	_	
26	t5010_000	-	$_	_	_	 * ) )	_	
27	t5011_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
28	t5012_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
29	t5013_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
30	t5014_000	in	APPR	in	_	 *	_	
31	t5015_000	ein	DIART	èin	*.*.*.0	 *	_	
32	t5016_000	pfanne	NA	pfanne	Akk.Sg	(NX * )	_	
33	t5017_000	unde	KON	unte	_	 * ) )	_	
34	t5018_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
35	t5019_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
36	t5020_000	sieden	VVINF	sièden	_	(VX * ) )	_	
37	t5021_000	unze daz	KOUS	unz(e)~dazz	_	(PostF (Cl (LB * )	_	
38	t5022_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
39	t5023_000	dicke	AVD	dicke	_	 * )	_	
40	t5024_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
41	t5025_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
42	t5026_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
43	t5026_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * ) )	_	
44	t5027_000	-	$_	_	_	 *	_	
45	t5028_000	gel	ADJD	gëlw	Pos....0	(Frag *	_	
46	t5029_000	mit	APPR	mit	_	(PPX *	_	
47	t5030_000	safrâne	NA	safrân	Dat.Sg	(NX * ) )	_	
48	t5031_000	-	$_	_	_	 * )	_	
49	t5032_000	unde	KON	unte	_	(Frag *	_	
50	t5033_000	veizet	ADJD	vèiz(e)t	Pos....0	 *	_	
51	t5034_000	mit	APPR	mit	_	(PPX *	_	
52	t5035_000	butern	NA	buter	Dat.Pl	(NX * ) )	_	
53	t5036_000	unde	KON	unte	_	(PrePreF * )	_	
54	t5037_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
55	t5038_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
56	t5039_000	denne	AVD	danne	_	 *	_	
57	t5040_000	küeln	VVINF	küèlen	_	(VX * )	_	
58	t5041_000	unde	KON	unte	_	 * ) )	_	
59	t5042_000	snîde	VVFIN	snîden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
60	t5043_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
61	t5044_000	zuo	APPR	ze	_	(PPX *	_	
62	t5045_000	murseln	NA	mursël(e)	Dat.Pl	(NX * ) ) )	_	
63	t5046_000	unde	KON	unte	_	 * ) )	_	
64	t5047_000	stecke	VVIMP	stècken	Sg.2	(LB (VX * ) )	_	
65	t5048_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
66	t5049_000	an	APPR	ane	_	(PPX *	_	
67	t5050_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
68	t5051_000	spiez	NA	spièz	Akk.Sg	 * ) ) )	_	
69	t5052_000	unde	KON	unte	_	 * ) )	_	
70	t5053_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
71	t5054_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
72	t5055_000	brâten	VVINF	brâten	_	(VX * )	_	
73	t5056_000	unde	KON	unte	_	 * ) )	_	
74	t5057_000	beslahe	VVIMP	be-slahen	Sg.2	(LB (VX * ) )	_	
75	t5058_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
76	t5059_000	denne	AVD	danne	_	 *	_	
77	t5060_000	mit	APPR	mit	_	(PPX *	_	
78	t5061_000	eiernen	NA	èiern	Dat.Pl	(NX * ) )	_	
79	t5062_000	unde	KON	unte	_	 *	_	
80	t5063_000	mit	APPR	mit	_	(PPX *	_	
81	t5064_000	guotem	ADJA	guot	Pos.Neut.Dat.Sg.st	(NX *	_	
82	t5065_000	krûte	NA	krût	Dat.Sg	 * ) )	_	
83	t5066_000	unde	KON	unte	_	 * ) )	_	
84	t5067_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
85	t5067_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
86	t5068_000	hin	AVD	hin(e)	_	 *	_	
87	t5069_000	vüre	APPR	vür(e)	_	(PPX *	_	
88	t5070_000	gebrâtene	ADJA	ge-brâten	Pos.Fem.Akk.Sg.st	(NX *	_	
89	t5071_000	milch	NA	milch	Akk.Sg	 * ) ) )	_	
90	t5072_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5073_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t5074_000	condimentlîn	NA	condimentlîn	Nom.Sg	(NX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5075_000	mal	VVIMP	mal(e)n	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t5076_000	kumel	NA	kumel	Akk.Sg	(PreF (MF (NX * )	_	
3	t5077_000	unde	KON	unte	_	 *	_	
4	t5078_000	anîz	NA	anîz	Akk.Sg	(NX *	_	
5	t5079_000	mit	APPR	mit	_	(PPX *	_	
6	t5080_000	pfeffer	NA	pfëffer	Dat.Sg	(NX * ) ) )	_	
7	t5081_000	unde	KON	unte	_	 *	_	
8	t5082_000	mit	APPR	mit	_	(PPX *	_	
9	t5083_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) )	_	
10	t5084_000	unde	KON	unte	_	 *	_	
11	t5085_000	mit	APPR	mit	_	(PPX *	_	
12	t5086_000	honige	NA	honig	Dat.Sg	(NX * ) )	_	
13	t5087_000	unde	KON	unte	_	 * ) )	_	
14	t5088_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
15	t5089_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
16	t5090_000	gel	ADJD	gëlw	Pos....0	 *	_	
17	t5091_000	mit	APPR	mit	_	(PPX *	_	
18	t5092_000	safrâne	NA	safrân	Dat.Sg	(NX * ) )	_	
19	t5093_000	unde	KON	unte	_	 * ) )	_	
20	t5094_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
21	t5095_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
22	t5096_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
23	t5097_000	senef	NA	sëneff	Akk.Sg	(NX * ) )	_	
24	t5098_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5099_000	in	APPR	in	_	(S (Cl (PreF (PPX *	_	
2	t5100_000	disem	DDA	dise	Neut.Dat.Sg	(NX *	_	
3	t5101_000	condimende	NA	condiment	Dat.Sg	 * ) ) )	_	
4	t5102_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
5	t5102_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
6	t5103_000	sulze	NA	sulze	Akk.Sg	(NX * ) ) )	_	
7	t5104_000	pêtersiln	NA	pêtersil	Akk.Sg	(NX * )	_	
8	t5105_000	bern	NA	bër(e)	Dat.Pl	(Frag (NX * )	_	
9	t5106_000	-	$_	_	_	 * )	_	
10	t5107_000	unde	KON	unte	_	(Frag *	_	
11	t5108_000	kleine	ADJA	klèine	Pos.*..0	 *	_	
12	t5109_000	kumpost	NA	kumpost	Akk.Sg	(NX * )	_	
13	t5110_000	oder	KON	oder	_	 *	_	
14	t5111_000	rubîn	NA	rubîn	Akk.Sg	(NX * ) )	_	
15	t5112_000	waz	PW	wër	Neut.Akk.Sg.st	(Frag *	_	
16	t5113_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
17	t5114_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
18	t5115_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5116_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t5117_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t5118_000	salse	NA	salse	Nom.Sg	(NX * )	_	
4	t5119_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5120_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t5121_000	wîn	NA	wîn	Akk.Sg	(MF (NX * )	_	
3	t5122_000	unde	KON	unte	_	 *	_	
4	t5123_000	honicseim	NA	honig-sèim	Akk.Sg	(NX * ) ) )	_	
5	t5124_000	setze	VVIMP	sètzen	Sg.2	(Cl (LB (VX * ) )	_	
6	t5125_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (MF (NX *	_	
7	t5126_000	ûf	APPR	ûf	_	(PPX *	_	
8	t5127_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
9	t5128_000	viur	NA	viur	Akk.Sg	 * ) ) )	_	
10	t5129_000	unde	KON	unte	_	 * ) )	_	
11	t5130_000	lâ	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
12	t5131_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
13	t5132_000	sieden	VVINF	sièden	_	(VX * ) )	_	
14	t5133_000	-	$_	_	_	 *	_	
15	t5134_000	unde	KON	unte	_	(PostF (Frag *	_	
16	t5135_000	tuo	VVIMP	tuon	Sg.2	(VX * )	_	
17	t5136_000	dâr	PAVD	dâr/+zuo	_	(VX *	_	
18	t5137_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
19	t5138_000	gestôzen	VVPP	stôzen	_	(VX * )	_	
20	t5139_000	ingewer	NA	ingewër	Akk.Sg	(NX * )	_	
21	t5140_000	mê	AVD	mêr(e)	Comp	 *	_	
22	t5141_000	denne	KOUS	danne	_	 *	_	
23	t5142_000	pfeffers	NA	pfëffer	Gen.Sg	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5143_000	stôz	NA	stôz	Nom.Sg	(S (Frag (NX * )	_	
2	t5144_000	klobelouch	NA	klobe-louch	Akk.Sg	(NX * ) )	_	
3	t5145_000	doch	AVD	doh	_	(Frag *	_	
4	t5146_000	niht	PTKNEG	niht	_	 *	_	
5	t5147_000	alzuo	AVD	all-ze	_	 *	_	
6	t5148_000	vile	AVD	vil(e)	_	 *	_	
7	t5149_000	unde	KON	unte	_	(PrePreF * )	_	
8	t5150_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t5151_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
10	t5152_000	starc	ADJD	stark	Pos....0	 *	_	
11	t5153_000	unde	KON	unte	_	 * ) )	_	
12	t5154_000	rüer	VVIMP	rüèren	Sg.2	(LB (VX * ) )	_	
13	t5154_001	es	PPER	ër	Neut.Gen.Sg.3	(MF (NX *	_	
14	t5155_000	mit	APPR	mit	_	(PPX *	_	
15	t5156_000	einer	DIA	èin	Fem.Dat.Sg.st	(NX *	_	
16	t5157_000	schine	NA	schin(e)	Dat.Sg	 * ) ) ) ) )	_	
17	t5158_000	lâz	VVIMP	lâzen	Sg.2	(Cl (LB (VX * ) )	_	
18	t5159_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
19	t5160_000	sieden	VVINF	sièden	_	(VX * ) )	_	
20	t5161_000	biz	KOUS	biz	_	(PostF (Cl (PreF * )	_	
21	t5162_000	daz	KOUS	dazz	_	(LB * )	_	
22	t5163_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
23	t5164_000	brinnen	VVINF	brinnen	_	(VX * ) )	_	
24	t5165_000	beginne	VVFIN	be-ginnen	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5166_000	diz	DDS	dise	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5167_000	sal	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5168_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
4	t5169_000	ezzen	VVINF	ëzzen	_	(RB (VX * ) )	_	
5	t5170_000	in	APPR	in	_	(PostF (PPX *	_	
6	t5171_000	kaltem	ADJA	kalt	Pos.Neut.Dat.Sg.st	(NX *	_	
7	t5172_000	wetere	NA	wëter	Dat.Sg	 * ) )	_	
8	t5173_000	unde	KON	unte	_	(PrePreF * )	_	
9	t5174_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t5175_000	Swallenberges	NE	Swallenberg	Gen.Sg	(MF (NX * )	_	
11	t5176_000	salse	NA	salse	Akk.Sg	(NX * ) ) )	_	
12	t5177_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5178_000	von	APPR	von	_	(S (Frag *	_	
2	t5179_000	gebrâtenem	ADJA	ge-brâten	Pos.Masc.Dat.Sg.st	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5180_000	manne	NA	mann	Dat.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5181_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5182_000	ein	DIA	èin	*.*.*.0	(MF *	_	
4	t5183_000	huon	NA	huon	Akk.Sg	(NX * ) )	_	
5	t5184_000	brâten	VVINF	brâten	_	(RB (VX * ) )	_	
6	t5185_000	unde	KON	unte	_	(PostF (PrePreF * )	_	
7	t5186_000	roeste	VVIMP	roèsten	Sg.2	(LB (VX * ) )	_	
8	t5187_000	ein	DIA	èin	*.*.*.0	(PreF (MF *	_	
9	t5188_000	umbe	AVD	umbe	_	 *	_	
10	t5189_000	sniten	NA	snite	Akk.Sg	(NX *	_	
11	t5190_000	von	APPR	von	_	(PPX *	_	
12	t5191_000	semeln	NA	sëmel(e)	Dat.Pl	(NX * ) ) )	_	
13	t5192_000	unde	KON	unte	_	 * ) )	_	
14	t5193_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
15	t5194_000	diz	DDS	dise	Neut.Akk.Sg	(PreF (MF (NX * )	_	
16	t5195_000	rôt	ADJD	rôt	Pos....0	 *	_	
17	t5196_000	in	APPR	in	_	(PPX *	_	
18	t5197_000	smalze	NA	smalz	Dat.Sg	(NX * ) )	_	
19	t5198_000	unde	KON	unte	_	 * ) )	_	
20	t5199_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
21	t5200_000	bizzen	NA	bizze	Akk.Pl	(MF (NX * ) ) )	_	
22	t5201_000	-	$_	_	_	 *	_	
23	t5202_000	als	KO*	all-sô	_	(Frag *	_	
24	t5203_000	zuo	APPR	ze	_	(PPX *	_	
25	t5204_000	einem	DIART	èin	Neut.Dat.Sg.st	(NX *	_	
26	t5205_000	brôtmuose	NA	brôt-muos	Dat.Sg	 * ) ) ) )	_	
27	t5206_000	zuolide	VVIMP	zer-liden	Sg.2	(Cl (LB (VX * ) )	_	
28	t5207_000	daz	DDART	dër	Neut.Akk.Sg	(PreF (MF (NX *	_	
29	t5208_000	huon	NA	huon	Akk.Sg	 * )	_	
30	t5209_000	kleine	ADJD	klèine	Pos....0	 *	_	
31	t5210_000	unde	KON	unte	_	 * ) )	_	
32	t5211_000	brât	VVIMP	brâten	Sg.2	(LB (VX * ) )	_	
33	t5212_000	sehs	CARDA	sëhs	*.*.*.0	(MF (NX *	_	
34	t5213_000	biren	NA	bir(e)	Akk.Pl	 * ) ) )	_	
35	t5214_000	mache	VVIMP	machen	Sg.2	(Cl (LB (VX * ) )	_	
36	t5215_000	ein	DIA	èin	*.*.*.0	(MF *	_	
37	t5216_000	condimende	NA	condiment	Akk.Sg	(NX *	_	
38	t5217_000	von	APPR	von	_	(PPX *	_	
39	t5218_000	wîne	NA	wîn	Dat.Sg	(NX * ) ) )	_	
40	t5219_000	unde	KON	unte	_	 *	_	
41	t5220_000	von	APPR	von	_	(PPX *	_	
42	t5221_000	honige	NA	honig	Dat.Sg	(NX * ) ) ) )	_	
43	t5222_000	dô	AVD	dô	_	(Cl (PreF * )	_	
44	t5223_000	rîp	VVIMP	rîben	Sg.2	(LB (VX * ) )	_	
45	t5224_000	denne	AVD	danne	_	(MF *	_	
46	t5225_000	wurze	NA	wurz(e)	Akk.Sg	(NX * )	_	
47	t5226_000	in	AVD	in	_	 * )	_	
48	t5227_000	pfeffer	NA	pfëffer	Akk.Sg	(Frag (NX * )	_	
49	t5228_000	unde	KON	unte	_	 *	_	
50	t5229_000	anîz	NA	anîz	Akk.Sg	(NX * )	_	
51	t5230_000	-	$_	_	_	 * ) )	_	
52	t5231_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
53	t5232_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
54	t5233_000	ein	DIART	èin	*.*.*.0	(MF *	_	
55	t5234_000	blat	NA	blat	Nom.Sg	(NX *	_	
56	t5235_000	von	APPR	von	_	(PPX *	_	
57	t5236_000	vünv	CARDA	vünv	*.*.*.0	(NX *	_	
58	t5237_000	eiernen	NA	èiern	Dat.Pl	 * ) ) ) ) )	_	
59	t5238_000	slach	VVIMP	slahen	Sg.2	(Cl (LB (VX * ) )	_	
60	t5239_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX *	_	
61	t5240_000	in	APPR	in	_	(PPX *	_	
62	t5241_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
63	t5242_000	pfanne	NA	pfanne	Akk.Sg	 * ) ) )	_	
64	t5243_000	unde	KON	unte	_	 * ) )	_	
65	t5244_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
66	t5245_000	denne	AVD	danne	_	(PreF (MF *	_	
67	t5246_000	jenez	DDS	jèner	Neut.Akk.Sg.st	(NX * )	_	
68	t5247_000	dâr	PAVD	dâr/+in	_	 *	_	
69	t5248_000	in	PAVAP	in/dâr+	_	 *	_	
70	t5249_000	sunderlîchen	AVD	sunter-lîche	_	 *	_	
71	t5250_000	unde	KON	unte	_	 * ) )	_	
72	t5251_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
73	t5252_000	denne	AVD	danne	_	(MF *	_	
74	t5253_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
75	t5254_000	blat	NA	blat	Akk.Sg	 * ) )	_	
76	t5255_000	-	$_	_	_	 *	_	
77	t5256_000	zesamene	AVD	ze-samen(e)	_	(Frag *	_	
78	t5257_000	unde	KON	unte	_	(PrePreF * )	_	
79	t5258_000	decke	VVIMP	dècken	Sg.2	(LB (VX * ) )	_	
80	t5259_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
81	t5260_000	schüzzeln	NA	schüzzel(e)	Akk.Sg	(NX * )	_	
82	t5261_000	dâr	PAVD	dâr/+ûf	_	 *	_	
83	t5262_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
84	t5263_000	unde	KON	unte	_	 * ) )	_	
85	t5264_000	kêre	VVIMP	kêren	Sg.2	(LB (VX * ) )	_	
86	t5265_000	denne	AVD	danne	_	(MF *	_	
87	t5266_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
88	t5267_000	pfanne	NA	pfanne	Akk.Sg	 * )	_	
89	t5268_000	umbe	AVD	umbe	_	 * ) ) )	_	
90	t5269_000	snît	VVIMP	snîden	Sg.2	(Cl (LB (VX * ) )	_	
91	t5270_000	oben	AVD	oben(e)	_	(PreF (MF *	_	
92	t5271_000	durch	APPR	durh	_	(PPX *	_	
93	t5272_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
94	t5273_000	blat	NA	blat	Akk.Sg	 * ) )	_	
95	t5274_000	unde	KON	unte	_	 * ) )	_	
96	t5275_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
97	t5276_000	daz	DDART	dër	Neut.Akk.Sg	(PreF (MF (NX *	_	
98	t5277_000	condiment	NA	condiment	Akk.Sg	 * )	_	
99	t5278_000	dâr	PAVD	dâr/+in	_	 *	_	
100	t5279_000	in	PAVAP	in/dâr+	_	 *	_	
101	t5280_000	unde	KON	unte	_	 * ) )	_	
102	t5281_000	begiuz	VVIMP	be-gièzen	Sg.2	(LB (VX * ) )	_	
103	t5282_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
104	t5283_000	blat	NA	blat	Akk.Sg	 * )	_	
105	t5284_000	niht	PTKNEG	niht	_	 * )	_	
106	t5285_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5286_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5287_000	heizent	VVFIN	hèizen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t5288_000	hüenere	NA	huon	Nom.Pl	(MF (NX *	_	
4	t5289_000	von	APPR	von	_	(PPX *	_	
5	t5290_000	Rîngöuwe	NE	Rîn-göuw	Dat.Sg	(NX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5291_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t5292_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
3	t5292_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t5293_000	hin	AVD	hin(e)	_	 * )	_	
5	t5294_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5295_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t5296_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t5297_000	spîse	NA	spîse	Nom.Sg	(NX * )	_	
4	t5298_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5299_000	man	PI	man	*.Nom.Sg.st	(S (Cl (PreF (NX * ) )	_	
2	t5300_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5301_000	ein	DIA	èin	*.*.*.0	(MF *	_	
4	t5302_000	huon	NA	huon	Akk.Sg	(NX * ) )	_	
5	t5303_000	brâten	VVINF	brâten	_	(RB (VX * ) )	_	
6	t5304_000	mit	APPR	mit	_	(PostF (PPX *	_	
7	t5305_000	specke	NA	spëck	Dat.Sg	(NX * ) )	_	
8	t5306_000	gewuolt	VVPP	ge-wüèlen	_	(VX * ) )	_	
9	t5307_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5308_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t5309_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
3	t5310_000	denne	AVD	danne	_	(PreF (MF *	_	
4	t5311_000	ahte	NA	aht(e)	Akk.Pl	(NX *	_	
5	t5312_000	sniten	NA	snite	Akk.Pl	 * )	_	
6	t5313_000	arme	ADJA	arm	Pos.*.Akk.Pl.st	(NX *	_	
7	t5313_001	rîtære	NA	rîtære	Akk.Pl	 * )	_	
8	t5314_000	unde	KON	unte	_	 * ) )	_	
9	t5315_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
10	t5316_000	die	DDS	dër	*.Akk.Pl	(PreF (MF (NX *	_	
11	t5317_000	in	APPR	in	_	(PPX *	_	
12	t5318_000	smalze	NA	smalz	Dat.Sg	(NX * ) ) )	_	
13	t5319_000	niht	PTKNEG	niht	_	 *	_	
14	t5320_000	zuo	AVD	zuo	_	 *	_	
15	t5321_000	trucke	ADJD	trucke	Pos....0	 *	_	
16	t5322_000	unde	KON	unte	_	 * ) )	_	
17	t5323_000	schile	VVIMP	schël(e)n	Sg.2	(LB (VX * ) )	_	
18	t5324_000	sûr	ADJA	sûr	Pos.*..0	(MF *	_	
19	t5325_000	epfele	NA	apfel	Akk.Pl	(NX * ) ) )	_	
20	t5326_000	snît	VVIMP	snîden	Sg.2	(Cl (LB (VX * ) )	_	
21	t5327_000	die	DDS	dër	*.Akk.Pl	(MF (NX * )	_	
22	t5328_000	breit	ADJD	brèit	Pos....0	 *	_	
23	t5329_000	an	APPR	ane	_	(PPX *	_	
24	t5330_000	schîben	NA	schîbe	Akk.Pl	(NX * ) ) )	_	
25	t5331_000	-	$_	_	_	 *	_	
26	t5332_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
27	t5333_000	die	DDART	dër	*.Akk.Pl	(MF (NX *	_	
28	t5334_000	kern	NA	kërn(e)	Akk.Pl	 * )	_	
29	t5335_000	ûz	AVD	ûz	_	 *	_	
30	t5336_000	vallen	VVINF	vallen	_	(VX * ) ) ) ) )	_	
31	t5337_000	backe	VVIMP	backen	Sg.2	(Cl (RB (VX * ) )	_	
32	t5338_000	sie	PPER	ër	*.Akk.Pl.3	(PostF (NX * )	_	
33	t5339_000	ein	DIA	èin	*.*.*.0	 *	_	
34	t5340_000	wênic	NA	wênig	Akk.Sg	(NX * )	_	
35	t5341_000	in	PPER	ër	*.Dat.Pl.3	(NX * )	_	
36	t5341_001	smalze	NA	smalz	Dat.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5342_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t5343_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
3	t5344_000	ein	DIA	èin	*.*.*.0	(MF *	_	
4	t5345_000	grôz	ADJA	grôz	Pos.*..0	 *	_	
5	t5346_000	blat	NA	blat	Akk.Sg	(NX *	_	
6	t5347_000	von	APPR	von	_	(PPX *	_	
7	t5348_000	eiernen	NA	èiern	Dat.Pl	(NX * ) ) ) )	_	
8	t5349_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
9	t5350_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
10	t5351_000	pfanne	NA	pfanne	Akk.Sg	 * )	_	
11	t5352_000	ale	AVD-KO*	al	_	 * )	_	
12	t5353_000	begrîfe	VVFIN	be-grîfen	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
13	t5354_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
14	t5355_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
15	t5356_000	dâr	PAVD	dâr/+zuo	_	(MF *	_	
16	t5357_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
17	t5358_000	gewürze	NA	ge-würze	Akk.Pl	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5359_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t5360_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
3	t5361_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
4	t5362_000	êrsten	ADJA	êr(e)st	Sup.Fem.Akk.Sg.wk	 *	_	
5	t5363_000	schiht	NA	schiht	Akk.Sg	 *	_	
6	t5364_000	von	APPR	von	_	(PPX *	_	
7	t5365_000	epfeln	NA	apfel	Dat.Pl	(NX * ) ) ) )	_	
8	t5366_000	dâr	PAVD	dâr/+nâh	_	(Frag *	_	
9	t5367_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
10	t5368_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
11	t5369_000	armen	ADJA	arm	Pos.*.Akk.Pl.wk	 *	_	
12	t5370_000	rîtær	NA	rîtære	Akk.Pl	 * ) )	_	
13	t5371_000	dâr	PAVD	dâr/+nâh	_	(Frag *	_	
14	t5372_000	nâch	PAVAP	nâh/dâr+	_	 *	_	
15	t5373_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
16	t5374_000	huon	NA	huon	Akk.Sg	 * ) ) )	_	
17	t5375_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
18	t5376_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
19	t5377_000	kleine	ADJD	klèine	Pos....0	(MF *	_	
20	t5378_000	gelidet	ADJD	ge-lidet	Pos....0	 *	_	
21	t5379_000	sîn	VAINF	sîn	_	(VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5380_000	tuo	VVIMP	tuon	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t5381_000	ûf	APPR	ûf	_	(PreF (MF (PPX *	_	
3	t5382_000	iegelich	DIA	iè-ge-lich	Fem.Akk.Sg.0	(NX *	_	
4	t5383_000	schiht	NA	schiht	Akk.Sg	 * ) )	_	
5	t5384_000	ein	DIART	èin	*.*.*.0	 *	_	
6	t5385_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
7	t5386_000	würze	NA	würze	Gen.Sg	(NX * ) )	_	
8	t5387_000	unde	KON	unte	_	 * ) )	_	
9	t5388_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
10	t5389_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
11	t5390_000	condiment	NA	condiment	Akk.Sg	(NX *	_	
12	t5391_000	von	APPR	von	_	(PPX *	_	
13	t5392_000	wîne	NA	wîn	Dat.Sg	(NX * ) ) )	_	
14	t5393_000	unde	KON	unte	_	 *	_	
15	t5394_000	von	APPR	von	_	(PPX *	_	
16	t5395_000	honige	NA	honig	Dat.Sg	(NX * ) )	_	
17	t5396_000	unde	KON	unte	_	 * ) )	_	
18	t5397_000	würze	VVIMP	würzen	Sg.2	(LB (VX * ) )	_	
19	t5398_000	niht	PTKNEG	niht	_	(MF *	_	
20	t5399_000	alzuo	AVD	all-ze	_	 *	_	
21	t5400_000	heiz	ADJD	hèiz	Pos....0	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5401_000	sô	AVD	sô	_	(S (Cl (PreF (PreF (PreF * ) ) )	_	
2	t5402_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
3	t5403_000	daz	DDART	dër	Neut.Akk.Sg	(PreF (MF (NX *	_	
4	t5404_000	blat	NA	blat	Akk.Sg	 * )	_	
5	t5405_000	zesamene	AVD	ze-samen(e)	_	 *	_	
6	t5406_000	unde	KON	unte	_	 * ) )	_	
7	t5407_000	stürze	VVIMP	stürzen	Sg.2	(LB (VX * ) )	_	
8	t5408_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
9	t5409_000	schüzzeln	NA	schüzzel(e)	Akk.Sg	(NX * )	_	
10	t5410_000	dâr	PAVD	dâr/+ûf	_	 *	_	
11	t5411_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
12	t5412_000	unde	KON	unte	_	 * ) )	_	
13	t5413_000	kêre	VVIMP	kêren	Sg.2	(LB (VX * ) )	_	
14	t5414_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
15	t5415_000	pfanne	NA	pfanne	Akk.Sg	 * )	_	
16	t5416_000	umbe	AVD	umbe	_	 * ) )	_	
17	t5417_000	snît	VVIMP	snîden	Sg.2	(Cl (LB (VX * ) )	_	
18	t5418_000	obene	APPR	obene	_	(PreF (MF *	_	
19	t5419_000	ein	DIA	èin	*.*.*.0	 *	_	
20	t5420_000	venster	NA	vënster	Akk.Sg	(NX * )	_	
21	t5421_000	dâr	PAVD	dâr/+in	_	 *	_	
22	t5422_000	in	PAVAP	in/dâr+	_	 *	_	
23	t5423_000	unde	KON	unte	_	 * ) )	_	
24	t5424_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
25	t5425_000	daz	DDART	dër	Neut.Akk.Sg	(PreF (MF (NX *	_	
26	t5426_000	condiment	NA	condiment	Akk.Sg	 * )	_	
27	t5427_000	dâr	PAVD	dâr/+in	_	 *	_	
28	t5428_000	in	PAVAP	in/dâr+	_	 *	_	
29	t5429_000	unde	KON	unte	_	 * ) )	_	
30	t5430_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
31	t5430_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
32	t5431_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5432_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5433_000	heizent	VVFIN	hèizen	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t5434_000	hüenere	NA	huon	Nom.Pl	(MF (NX *	_	
4	t5435_000	von	APPR	von	_	(PPX *	_	
5	t5436_000	Kriechen	NA	Krièche	Dat.Pl	(NX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5437_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t5438_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t5439_000	vülle	NA	vülle	Nom.Sg	(NX * )	_	
4	t5440_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5441_000	der	DRELS	dër	Masc.Nom.Sg	(S (Cl (LB (NX * ) )	_	
2	t5442_000	ein	DIART	èin	*.*.*.0	(MF *	_	
3	t5443_000	guote	ADJA	guot	Pos.Fem.Akk.Sg.st	(NX *	_	
4	t5444_000	kocherî	NA	kocherîe	Akk.Sg	 * )	_	
5	t5445_000	machen	VVINF	machen	_	(VX * ) )	_	
6	t5446_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(RB (VX * ) ) )	_	
7	t5447_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t5448_000	hacke	VVFIN	hacken	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t5449_000	pêtersiln	NA	pêtersil	Akk.Sg	(PreF (MF (NX * )	_	
10	t5450_000	unde	KON	unte	_	 *	_	
11	t5451_000	salvei	NA	salvèi(e)	Akk.Sg	(NX * )	_	
12	t5452_000	gelîch	ADJD	ge-lîch	Pos....0	 *	_	
13	t5453_000	vile	AVD	vil(e)	_	 *	_	
14	t5454_000	unde	KON	unte	_	 * ) )	_	
15	t5455_000	brâte	VVFIN	brâten	Subj.Pres.Sg.3	(LB (VX * ) )	_	
16	t5456_000	sie	PPER	ër	*.Akk.Pl.3	(PreF (MF (NX *	_	
17	t5457_000	in	APPR	in	_	(PPX *	_	
18	t5458_000	butern	NA	buter	Dat.Sg	(NX * ) ) )	_	
19	t5459_000	unde	KON	unte	_	 * ) )	_	
20	t5460_000	tüftele	VVFIN	tüftel(e)n	Subj.Pres.Sg.3	(LB (VX * ) )	_	
21	t5461_000	eier	NA	èi	Akk.Pl	(PreF (MF (NX * )	_	
22	t5462_000	weich	ADJD	wèich	Pos....0	 *	_	
23	t5463_000	unde	KON	unte	_	 * ) )	_	
24	t5464_000	menge	VVFIN	mèngen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
25	t5465_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (MF (NX * )	_	
26	t5466_000	zesamene	AVD	ze-samen(e)	_	 *	_	
27	t5467_000	unde	KON	unte	_	 * ) )	_	
28	t5468_000	rîbe	VVFIN	rîben	Subj.Pres.Sg.3	(LB (VX * ) )	_	
29	t5469_000	kæse	NA	kæse	Akk.Sg	(MF (NX * )	_	
30	t5470_000	unde	KON	unte	_	 *	_	
31	t5471_000	brôt	NA	brôt	Akk.Sg	(NX * )	_	
32	t5472_000	dâr	PAVD	dâr/+in	_	 *	_	
33	t5473_000	in	PAVAP	in/dâr+	_	 * )	_	
34	t5474_000	-	$_	_	_	 * )	_	
35	t5475_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
36	t5476_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
37	t5477_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
38	t5478_000	blat	NA	blat	Akk.Sg	(NX *	_	
39	t5479_000	von	APPR	von	_	(PPX *	_	
40	t5480_000	eiern	NA	èi	Dat.Pl	(NX * ) ) )	_	
41	t5481_000	unde	KON	unte	_	 * ) )	_	
42	t5482_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
43	t5483_000	butern	NA	buter	Akk.Sg	(PreF (MF (NX * )	_	
44	t5484_000	dâr	PAVD	dâr/+unter	_	 *	_	
45	t5485_000	under	PAVAP	unter/dâr+	_	 *	_	
46	t5486_000	unde	KON	unte	_	 * ) )	_	
47	t5487_000	schüte	VVFIN	schüten	Subj.Pres.Sg.3	(LB (VX * ) )	_	
48	t5488_000	diz	DDS	dise	Neut.Akk.Sg	(MF (NX * )	_	
49	t5489_000	dâr	PAVD	dâr/+ûf	_	 *	_	
50	t5490_000	ûf	PAVAP	ûf/dâr+	_	 * ) )	_	
51	t5491_000	gip	VVIMP	gëben	Sg.2	(Cl (LB (VX * ) )	_	
52	t5492_000	im	PPER	ër	Masc.Dat.Sg.3	(PreF (MF (NX * )	_	
53	t5493_000	viur	NA	viur	Nom.Sg	(NX * )	_	
54	t5494_000	oben	AVD	oben(e)	_	 *	_	
55	t5495_000	ûf	AVD	ûf	_	 *	_	
56	t5496_000	unde	KON	unte	_	 * ) )	_	
57	t5497_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
58	t5498_000	bachen	VVINF	bachen	_	(MF (VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5499_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5500_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t5501_000	ruozige	ADJA	ruozig	Pos.*.Nom.Pl.st	(MF (NX *	_	
4	t5502_000	küchene	NA	küchen(e)	Nom.Pl	 * ) )	_	
5	t5503_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5504_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t5505_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t5506_000	lecker	ADJA	lëcker	Pos.*..0	 *	_	
4	t5507_000	köstelîn	NA	köstelîn	Nom.Sg	(NX * )	_	
5	t5508_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5509_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t5510_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
3	t5511_000	zuo	APPR	ze	_	(MF *	_	
4	t5511_001	dem	DDART	dër	Neut.Dat.Sg	 *	_	
5	t5512_000	jungesten	ADJA	jung	Pos.Neut.Dat.Sg.st	 *	_	
6	t5513_000	ein	DIART	èin	*.*.*.0	 *	_	
7	t5514_000	kleine	ADJA	klèine	Pos.*..0	 *	_	
8	t5515_000	lecker	ADJA	lëcker	Pos.*..0	 *	_	
9	t5516_000	köstelîn	NA	köstelîn	Akk.Sg	(NX *	_	
10	t5517_000	von	APPR	von	_	(PPX *	_	
11	t5518_000	stichelinges	NA	sticheling	Gen.Sg	(NX * ) ) )	_	
12	t5519_000	magen	NA	mag(e)	Dat.Sg	(NX * )	_	
13	t5520_000	unde	KON	unte	_	 *	_	
14	t5521_000	mügen	NA	müge	Gen.Pl	(NX * )	_	
15	t5522_000	vüezen	NA	vuoz	Dat.Pl	(NX * )	_	
16	t5523_000	unde	KON	unte	_	 *	_	
17	t5524_000	loupvinken	NA	loub-vinke	Gen.Pl	(NX * )	_	
18	t5525_000	zungen	NA	zunge	Dat.Sg	(NX * ) )	_	
19	t5526_000	meisen	NA	mèise	Gen.Sg	(Frag (NX * )	_	
20	t5527_000	beine	NA	bèin	Dat.Sg	(NX * )	_	
21	t5528_000	unde	KON	unte	_	 *	_	
22	t5529_000	vröschen	NA	vrosch	Dat.Pl	(NX *	_	
23	t5530_000	an	APPR	ane	_	(PPX *	_	
24	t5531_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
25	t5532_000	keln	NA	kël(e)	Dat.Sg	 * ) ) )	_	
26	t5533_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5534_000	sô	AVD	sô	_	(S (Cl (PreF * )	_	
2	t5535_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t5535_001	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
4	t5536_000	lange	AVD	lange	_	 *	_	
5	t5537_000	âne	APPR	âne	_	(PPX *	_	
6	t5538_000	sorgen	NA	sorge	Akk.Sg	(NX *	_	
7	t5539_000	leben	NA	lëben	Akk.Sg	 * ) ) )	_	
8	t5540_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5541_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t5542_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t5543_000	gerihte	NA	ge-riht(e)	Nom.Sg	(NX *	_	
4	t5544_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (LB (NX * ) )	_	
5	t5545_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
6	t5546_000	gerne	AVD	gërne	_	 * )	_	
7	t5547_000	izzet	VVFIN	ëzzen	Ind.Pres.Sg.3	(RB (VX * ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5548_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t5549_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t5550_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t5551_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t5552_000	guot	ADJA	guot	Pos.*..0	 *	_	
6	t5553_000	bîgerihte	NA	bî-ge-rihte	Akk.Sg	(NX * ) ) )	_	
7	t5554_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t5555_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
9	t5556_000	sideln	NA	sidel(e)	Gen.Pl	(MF (NX * )	_	
10	t5557_000	sweiz	NA	swèiz	Akk.Sg	(NX * ) )	_	
11	t5558_000	-	$_	_	_	 * )	_	
12	t5559_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
13	t5560_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
14	t5561_000	den	DDART	dër	Masc.Akk.Sg	(MF (NX *	_	
15	t5562_000	magen	NA	mag(e)	Akk.Sg	 * )	_	
16	t5563_000	gar	AVD	gar(e)	_	 *	_	
17	t5564_000	heiz	ADJD	hèiz	Pos....0	 * )	_	
18	t5565_000	-	$_	_	_	 *	_	
19	t5566_000	unde	KON	unte	_	(Frag *	_	
20	t5567_000	-	$_	_	_	 * ) )	_	
21	t5568_000	nim	VVIMP	nëmen	Sg.2	(Cl (LB (VX * ) )	_	
22	t5569_000	kiselinges	NA	kiseling	Gen.Sg	(MF (NX * )	_	
23	t5570_000	smalz	NA	smalz	Akk.Sg	(NX * ) )	_	
24	t5571_000	-	$_	_	_	 * )	_	
25	t5572_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
26	t5573_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
27	t5574_000	den	DDART	dër	*.Dat.Pl	(MF (NX *	_	
28	t5575_000	meiden	NA	maged	Dat.Pl	 * )	_	
29	t5576_000	guot	ADJD	guot	Pos....0	 * )	_	
30	t5577_000	die	DRELS	dër	Fem.Nom.Sg	(PostF (Cl (PreF (NX * ) )	_	
31	t5578_000	dô	KOUS	dô	_	(LB * )	_	
32	t5579_000	sîn	VAFIN	sîn	*.Pres.Pl.3	(RB (VX * ) )	_	
33	t5580_000	hüffehalz	ADJD	hüffe-halz	Pos....0	(PostF * )	_	
34	t5581_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5582_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t5583_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t5584_000	brâmber	NA	brâm-bèr(e)	Akk.Sg	(MF (NX * )	_	
4	t5585_000	unde	KON	unte	_	 *	_	
5	t5586_000	brestelinc	NA	brèsteling	Akk.Sg	(NX * ) )	_	
6	t5587_000	-	$_	_	_	 * )	_	
7	t5588_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t5589_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t5590_000	daz	DDART	dër	Neut.Nom.Sg	(MF (NX *	_	
10	t5591_000	allerbezzeste	ADJA	aller-bèzzest	Sup.Neut.Nom.Sg.wk	 *	_	
11	t5592_000	dinc	NA	ding	Nom.Sg	 * ) )	_	
12	t5593_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5594_000	bist	VAFIN	sîn	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t5595_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
3	t5596_000	niht	PTKNEG	niht	_	 *	_	
4	t5597_000	an	APPR	ane	_	(PPX *	_	
5	t5598_000	sinnen	NA	sinn	Dat.Pl	(NX * ) )	_	
6	t5599_000	toup	ADJD	toub	Pos....0	 * )	_	
7	t5600_000	-	$_	_	_	 * )	_	
8	t5601_000	sô	AVD	sô	_	(Cl (PreF (PreF * )	_	
9	t5602_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) ) )	_	
10	t5603_000	gruone	VVFIN	gruonen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
11	t5604_000	wîngartloup	NA	wîn-gart-loub	Akk.Sg	(MF (NX * ) )	_	
12	t5605_000	-	$_	_	_	 * )	_	
13	t5606_000	dû	PPER	dû	Nom.Sg.2	(Cl (PreF (NX * ) )	_	
14	t5607_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	(LB (VX * ) )	_	
15	t5608_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
16	t5609_000	binezn	NA	binezz	Akk.Sg	(PostF (NX * ) )	_	
17	t5610_000	-	$_	_	_	 *	_	
18	t5611_000	lübestecke	NA	lübe-stècke	Akk.Sg	(Frag (NX * )	_	
19	t5612_000	unde	KON	unte	_	 *	_	
20	t5613_000	minzen	NA	minze	Akk.Sg	(NX * )	_	
21	t5614_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5615_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5616_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
3	t5617_000	guote	ADJA	guot	Pos.*.Nom.Pl.st	(MF (NX *	_	
4	t5618_000	würze	NA	wurz(e)	Nom.Pl	 * ) )	_	
5	t5619_000	-	$_	_	_	 * )	_	
6	t5620_000	vüre	APPR	vür(e)	_	(PPX *	_	
7	t5621_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
8	t5622_000	grôzen	ADJA	grôz	Pos.*.Akk.Pl.wk	 *	_	
9	t5623_000	vürze	NA	vurz	Akk.Pl	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5624_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t5625_000	stigelitzes	NA	stigelitz(e)	Gen.Sg	(MF (NX * )	_	
3	t5626_000	versene	NA	vërsen(e)	Akk.Sg	(NX * ) )	_	
4	t5627_000	-	$_	_	_	 *	_	
5	t5628_000	unde	KON	unte	_	(Frag *	_	
6	t5629_000	müggen	NA	mügge	Gen.Pl	(NX * )	_	
7	t5630_000	vuoze	NA	vuoz	Akk.Pl	(NX * ) ) )	_	
8	t5631_000	daz	DDS	dër	Neut.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t5632_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
10	t5633_000	daz	DDART	dër	Neut.Akk.Sg	(MF (NX *	_	
11	t5634_000	köstelîn	NA	köstelîn	Akk.Sg	 * )	_	
12	t5635_000	allez	AVD	allezz	_	 *	_	
13	t5636_000	süeze	ADJD	süèze	Pos....0	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5637_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5638_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5639_000	guot	ADJD	guot	Pos....0	(PreF (MF *	_	
4	t5640_000	unde	KON	unte	_	 * ) )	_	
5	t5641_000	mac	VMFIN	mügen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
6	t5642_000	wole	KO*	wol(e)	_	(MF *	_	
7	t5643_000	sîn	VAINF	sîn	_	(VX * )	_	
8	t5644_000	ein	DIA	èin	*.*.*.0	 *	_	
9	t5645_000	guot	ADJA	guot	Pos.*..0	 *	_	
10	t5646_000	lecker	ADJA	lëcker	Pos.*..0	 *	_	
11	t5647_000	spîgerihtelîn	NA	spî-ge-rihtelîn	Nom.Sg	(NX * ) )	_	
12	t5648_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5649_000	ach	ITJ	ach	_	(S *	_	
2	t5650_000	unde	KON	unte	_	(Frag *	_	
3	t5651_000	versalt	VVPP	ver-sèllen	_	(VX * )	_	
4	t5651_001	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
5	t5652_000	niur	AVD	niur	_	 *	_	
6	t5653_000	niht	PTKNEG	niht	_	 *	_	
7	t5654_000	-	$_	_	_	 * )	_	
8	t5655_000	-	$_	_	_	 *	_	
9	t5656_000	wanne	AVW	wanne	_	(Frag *	_	
10	t5657_000	ez	PPER	ër	Neut.Nom.Sg.3	(PreF (NX * ) )	_	
11	t5658_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t5659_000	ein	DIA	èin	*.*.*.0	(MF *	_	
13	t5660_000	guot	ADJA	guot	Pos.*..0	 *	_	
14	t5661_000	geriht	NA	ge-riht(e)	Nom.Sg	(NX * ) )	_	
15	t5662_000	-	$_	_	_	 * )	_	
16	t5663_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5664_000	diz	DDS	dise	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5665_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5666_000	ein	DIART	èin	*.*.*.0	(MF *	_	
4	t5667_000	guot	ADJA	guot	Pos.*..0	 *	_	
5	t5668_000	lêre	NA	lêre	Nom.Sg	(NX *	_	
6	t5669_000	von	APPR	von	_	(PPX *	_	
7	t5670_000	guoter	ADJA	guot	Pos.Fem.Dat.Sg.st	(NX *	_	
8	t5671_000	spîse	NA	spîse	Dat.Sg	 * ) ) ) )	_	
9	t5672_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5673_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t5674_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t5675_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t5676_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t5677_000	guot	ADJD	guot	Pos....0	 *	_	
6	t5678_000	muos	NA	muos	Akk.Sg	(NX * ) )	_	
7	t5679_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5680_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t5681_000	gebacket	ADJA	backen	Pos.*..0	 *	_	
3	t5682_000	muos	NA	muos	Nom.Sg	(NX *	_	
4	t5683_000	von	APPR	von	_	(PPX *	_	
5	t5684_000	vischen	NA	visch	Dat.Pl	(NX * ) ) )	_	
6	t5685_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5686_000	dâr	PAVD	dâr/+zuo	_	(S (Cl (LB (VX *	_	
2	t5687_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
3	t5688_000	solt	VMFIN	sol(e)n	Ind.Pres.Sg.2	 * ) )	_	
4	t5689_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
5	t5690_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
6	t5691_000	einen	DIART	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
7	t5692_000	bersich	NA	bèrsich	Akk.Sg	 *	_	
8	t5693_000	gebeizt	ADJN	bèizen	Pos.*..0	 *	_	
9	t5694_000	in	APPR	in	_	(PPX *	_	
10	t5695_000	ezziche	NA	èzzich	Dat.Sg	(NX * ) ) ) )	_	
11	t5696_000	-	$_	_	_	 * )	_	
12	t5697_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t5698_000	wirf	VVIMP	wërfen	Sg.2	(LB (VX * ) )	_	
14	t5699_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
15	t5700_000	denne	AVD	danne	_	 *	_	
16	t5701_000	in	APPR	in	_	(PPX *	_	
17	t5702_000	milch	NA	milch	Dat.Sg	(NX * ) ) )	_	
18	t5703_000	die	DRELS	dër	Fem.Nom.Sg	(PostF (Frag (NX * )	_	
19	t5704_000	dâ	AVD	dâr	_	(PreF * )	_	
20	t5705_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(LB (VX * ) )	_	
21	t5706_000	von	APPR	von	_	(MF (PPX *	_	
22	t5707_000	mandel	NA	mantel	Dat.Sg	(NX * ) ) )	_	
23	t5708_000	gemachet	VVPP	machen	_	(RB (VX * ) )	_	
24	t5709_000	-	$_	_	_	 * ) ) )	_	
25	t5710_000	-	$_	_	_	 *	_	
26	t5711_000	mit	APPR	mit	_	(Frag (PPX *	_	
27	t5712_000	rîsmele	NA	rîs-mëlw	Dat.Sg	(NX * ) )	_	
28	t5713_000	wole	AVD	wol(e)	_	 *	_	
29	t5714_000	gemenget	VVPP	ge-mèngen	_	(VX * )	_	
30	t5715_000	-	$_	_	_	 *	_	
31	t5716_000	-	$_	_	_	 * )	_	
32	t5717_000	unde	KON	unte	_	(Frag *	_	
33	t5718_000	ein	DIART	èin	*.*.*.0	 *	_	
34	t5719_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
35	t5720_000	smalzes	NA	smalz	Gen.Sg	(NX * ) )	_	
36	t5721_000	dâr	PAVD	dâr/.+in	_	(VX *	_	
37	t5722_000	in	PAVAP	in/dâr.+	_	 *	_	
38	t5723_000	getân	VVPP	tuon	_	 * )	_	
39	t5724_000	-	$_	_	_	 * )	_	
40	t5725_000	unde	KON	unte	_	(Frag *	_	
41	t5726_000	mit	AVD	mit(e)	_	 *	_	
42	t5727_000	-	$_	_	_	 *	_	
43	t5728_000	erwellet	VVPP	er-wèllen	_	(VX * )	_	
44	t5729_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5730_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5731_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5732_000	gar	AVD	gar(e)	_	(MF *	_	
4	t5733_000	guot	ADJD	guot	Pos....0	 * ) )	_	
5	t5734_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
6	t5735_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
7	t5735_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
8	t5736_000	niht	PTKNEG	niht	_	 * )	_	
9	t5737_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5738_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t5739_000	vlade	NA	vlade	Nom.Sg	(NX * )	_	
3	t5740_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5741_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t5742_000	vladen	NA	vlade	Akk.Sg	 *	_	
3	t5743_000	von	APPR	von	_	(PPX *	_	
4	t5744_000	vischen	NA	visch	Dat.Pl	(NX * ) ) )	_	
5	t5745_000	gemachet	VVPP	machen	_	(VX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5746_000	wizze	VVIMP	wizzen	Sg.2	(S (LB (VX * ) )	_	
2	t5747_000	welicher	DWA	wèl(i)ch	Fem.Gen.Sg.st	(Frag (NX *	_	
3	t5747_001	leie	NA	lèie	Gen.Sg	 * )	_	
4	t5748_000	sie	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
5	t5749_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
6	t5750_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5751_000	hechete	NA	hèchet	Akk.Sg	(S (Frag (NX * )	_	
2	t5752_000	oder	KON	oder	_	 *	_	
3	t5753_000	barse	NA	bars	Akk.Sg	(NX *	_	
4	t5754_000	geworfen	ADJN	wërfen	Pos.*..0	 *	_	
5	t5755_000	in	APPR	in	_	(PPX *	_	
6	t5756_000	eine	DIART	èin	Fem.Akk.Sg.st	(NX *	_	
7	t5757_000	dicken	ADJA	dicke	Pos.Fem.Akk.Sg.wk	 *	_	
8	t5758_000	mandelmilch	NA	mandel-milch	Akk.Sg	 * ) ) ) )	_	
9	t5759_000	wole	AVD	wol(e)	_	(Frag *	_	
10	t5760_000	gemenget	ADJA	ge-mèngen	Pos.*..0	 *	_	
11	t5761_000	mit	APPR	mit	_	(PPX *	_	
12	t5762_000	rîsmele	NA	rîs-mëlw	Dat.Sg	(NX * ) )	_	
13	t5763_000	-	$_	_	_	 * )	_	
14	t5764_000	unde	KON	unte	_	(Frag *	_	
15	t5765_000	ein	DIA	èin	*.*.*.0	 *	_	
16	t5766_000	apfel	NA	apfel	Akk.Sg	(NX *	_	
17	t5767_000	durch	APPR	durh	_	(PPX *	_	
18	t5768_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) ) )	_	
19	t5769_000	würfeleht	ADJD	würfelëht	Pos....0	 *	_	
20	t5770_000	gesniten	ADJN	snîden	Pos.*..0	 *	_	
21	t5771_000	-	$_	_	_	 * )	_	
22	t5772_000	unde	KON	unte	_	(Frag *	_	
23	t5773_000	ein	DIA	èin	*.*.*.0	 *	_	
24	t5774_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
25	t5775_000	smalzes	NA	smalz	Gen.Sg	(NX *	_	
26	t5776_000	durch	APPR	durh	_	(PPX *	_	
27	t5777_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) ) ) )	_	
28	t5778_000	getân	VVPP	tuon	_	(VX * )	_	
29	t5779_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5780_000	unde	KON	unte	_	(S (Frag *	_	
2	t5781_000	ein	DIART	èin	*.*.*.0	 *	_	
3	t5782_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
4	t5783_000	gewürzes	NA	ge-würze	Gen.Sg	(NX *	_	
5	t5784_000	gebreit	ADJN	brèiten	Pos.*..0	 * ) )	_	
6	t5785_000	ûf	APPR	ûf	_	 *	_	
7	t5786_000	ein	DIART	èin	*.*.*.0	 *	_	
8	t5787_000	blat	NA	blat	Akk.Sg	(NX * ) )	_	
9	t5788_000	von	APPR	von	_	(Frag (PPX *	_	
10	t5789_000	teige	NA	tèig	Dat.Sg	(NX * ) )	_	
11	t5790_000	gemachet	VVPP	machen	_	(VX * )	_	
12	t5791_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5792_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t5793_000	schiuz	VVIMP	schièzen	Sg.2	(LB (VX * ) )	_	
3	t5793_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
4	t5794_000	in	APPR	in	_	(PPX *	_	
5	t5795_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
6	t5796_000	oven	NA	oven	Akk.Sg	 * ) ) )	_	
7	t5797_000	unde	KON	unte	_	 * ) )	_	
8	t5798_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
9	t5799_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
10	t5800_000	backen	VVINF	backen	_	(VX * ) )	_	
11	t5801_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5802_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t5803_000	vladen	NA	vlade	Akk.Sg	 * )	_	
3	t5804_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5805_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t5806_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t5807_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t5808_000	einen	DIART	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
5	t5809_000	vladen	NA	vlade	Akk.Sg	 *	_	
6	t5810_000	von	APPR	von	_	(PPX *	_	
7	t5811_000	vasten	NA	vaste	Gen.Sg	(NX * ) ) )	_	
8	t5812_000	geræte	NA	ge-ræte	Dat.Sg	(NX * ) )	_	
9	t5813_000	-	$_	_	_	 * )	_	
10	t5814_000	sô	AVD	sô	_	(Cl (PreF (PreF (PreF * ) ) )	_	
11	t5815_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
12	t5816_000	vische	NA	visch	Akk.Pl	(PreF (MF (NX * )	_	
13	t5817_000	unde	KON	unte	_	 * ) )	_	
14	t5818_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
15	t5818_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
16	t5819_000	in	APPR	in	_	(PPX *	_	
17	t5820_000	smalze	NA	smalz	Dat.Sg	(NX * ) ) )	_	
18	t5821_000	unde	KON	unte	_	 * ) )	_	
19	t5822_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
20	t5823_000	dâr	PAVD	dâr/+über(e)	_	(MF *	_	
21	t5824_000	über	PAVAP	über(e)/dâr+	_	 *	_	
22	t5825_000	ein	DIART	èin	*.*.*.0	 *	_	
23	t5826_000	dicke	ADJA	dicke	Pos.*..0	 *	_	
24	t5827_000	mandelmilch	NA	mandel-milch	Akk.Sg	(NX * ) )	_	
25	t5828_000	wole	AVD	wol(e)	_	(Frag *	_	
26	t5829_000	gemenget	ADJN	ge-mèngen	Pos.*..0	 *	_	
27	t5830_000	mit	APPR	mit	_	(PPX *	_	
28	t5831_000	rîsmele	NA	rîs-mëlw	Dat.Sg	(NX * ) )	_	
29	t5832_000	-	$_	_	_	 * ) )	_	
30	t5833_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
31	t5834_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
32	t5835_000	ein	DIART	èin	*.*.*.0	(MF *	_	
33	t5836_000	wênic	NA	wênig	Akk.Sg	(NX *	_	
34	t5837_000	smalzes	NA	smalz	Gen.Sg	(NX * ) )	_	
35	t5838_000	dâr	PAVD	dâr/+ane	_	 *	_	
36	t5838_001	an	PAVAP	ane/dâr+	_	 * )	_	
37	t5839_000	-	$_	_	_	 * )	_	
38	t5840_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
39	t5841_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
40	t5841_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
41	t5842_000	wole	AVD	wol(e)	_	 *	_	
42	t5843_000	mit	APPR	mit	_	(PPX *	_	
43	t5844_000	würzen	NA	wurz(e)	Dat.Pl	(NX * ) ) )	_	
44	t5845_000	-	$_	_	_	 * )	_	
45	t5846_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
46	t5847_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
47	t5848_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (MF (NX * )	_	
48	t5849_000	ûf	APPR	ûf	_	 *	_	
49	t5850_000	ein	DIART	èin	*.*.*.0	 *	_	
50	t5851_000	blat	NA	blat	Akk.Sg	(NX *	_	
51	t5852_000	von	APPR	von	_	(PPX *	_	
52	t5853_000	teige	NA	tèig	Dat.Sg	(NX * ) ) )	_	
53	t5854_000	unde	KON	unte	_	 * ) )	_	
54	t5855_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
55	t5856_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
56	t5857_000	bachen	VVINF	bachen	_	(VX * ) )	_	
57	t5858_000	-	$_	_	_	 * )	_	
58	t5859_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
59	t5860_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
60	t5860_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
61	t5861_000	niht	PTKNEG	niht	_	 * )	_	
62	t5862_000	-	$_	_	_	 * )	_	
63	t5863_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5864_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t5865_000	krapfen	NA	krapfe	Akk.Sg	 * )	_	
3	t5866_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5867_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t5868_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
3	t5869_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
4	t5870_000	vastenkrapfen	NA	vasten-krapfe	Akk.Sg	 * ) )	_	
5	t5871_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t5872_000	von	APPR	von	_	(PostF (PPX *	_	
7	t5873_000	hechete	NA	hèchet	Gen.Pl	(NX * ) )	_	
8	t5874_000	darmen	NA	darm	Dat.Pl	(NX * ) )	_	
9	t5875_000	-	$_	_	_	 * )	_	
10	t5876_000	nim	VVIMP	nëmen	Sg.2	(Cl (LB (VX * ) )	_	
11	t5877_000	eine	DIART	èin	Fem.Akk.Sg.st	(MF (NX *	_	
12	t5878_000	guoten	ADJA	guot	Pos.Fem.Akk.Sg.wk	 *	_	
13	t5879_000	mandelmilch	NA	mandel-milch	Akk.Sg	 * ) )	_	
14	t5880_000	-	$_	_	_	 *	_	
15	t5881_000	unde	KON	unte	_	(Frag *	_	
16	t5882_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
17	t5883_000	alsô	AVD	all-sô	_	 *	_	
18	t5884_000	vile	AVD	vil(e)	_	 *	_	
19	t5885_000	epfele	NA	apfel	Akk.Pl	(NX * ) )	_	
20	t5886_000	als	KO*	all-sô	_	(Frag *	_	
21	t5887_000	der	DDART	dër	*.Gen.Pl	(PreF (NX *	_	
22	t5888_000	vische	NA	visch	Gen.Pl	 * ) )	_	
23	t5889_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) ) ) )	_	
24	t5890_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
25	t5891_000	snîde	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
26	t5892_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
27	t5893_000	dâr	PAVD	dâr/+unter	_	 *	_	
28	t5894_000	under	PAVAP	unter/dâr+	_	 * )	_	
29	t5895_000	-	$_	_	_	 * )	_	
30	t5896_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
31	t5897_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
32	t5897_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
33	t5898_000	mit	APPR	mit	_	 *	_	
34	t5899_000	ein	DIART	èin	*.*.*.0	 *	_	
35	t5900_000	wênige	NA	wênig	Dat.Sg	(NX *	_	
36	t5901_000	rîsmeles	NA	rîs-mëlw	Gen.Sg	(NX * ) ) )	_	
37	t5902_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5903_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t5904_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t5905_000	guot	ADJD	guot	Pos....0	(MF *	_	
4	t5906_000	zuo	APPR	ze	_	(PPX *	_	
5	t5907_000	gevuolten	ADJA	ge-vüèlen	Pos.*.Dat.Pl.*	(NX *	_	
6	t5908_000	krapfen	NA	krapfe	Dat.Pl	 * ) ) )	_	
7	t5909_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5910_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t5911_000	krapfen	NA	krapfe	Akk.Sg	 * )	_	
3	t5912_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5913_000	sô	KO*	sô	_	(S (Frag *	_	
2	t5914_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
3	t5915_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
4	t5916_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
5	t5917_000	vastenkrapfen	NA	vasten-krapfe	Akk.Sg	 * ) )	_	
6	t5918_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
7	t5919_000	-	$_	_	_	 * )	_	
8	t5920_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t5921_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
10	t5922_000	nüzze	NA	nuzz	Akk.Pl	(MF (NX * ) )	_	
11	t5923_000	-	$_	_	_	 * )	_	
12	t5924_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t5925_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
14	t5926_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
15	t5927_000	in	APPR	in	_	(PPX *	_	
16	t5928_000	einem	DIA	èin	Masc.Dat.Sg.st	(NX *	_	
17	t5929_000	morsær	NA	morsære	Dat.Sg	 * ) ) ) )	_	
18	t5930_000	-	$_	_	_	 * )	_	
19	t5931_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
20	t5932_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
21	t5933_000	epfele	NA	apfel	Akk.Pl	(MF (NX * )	_	
22	t5934_000	als	AVD	all-sô	_	 *	_	
23	t5935_000	vile	AVD	vil(e)	_	 * ) )	_	
24	t5936_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
25	t5937_000	snîde	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
26	t5938_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
27	t5939_000	dâr	PAVD	dâr/+in	_	 *	_	
28	t5939_001	in	PAVAP	in/dâr+	_	 *	_	
29	t5940_000	würfeleht	ADJD	würfelëht	Pos....0	 * )	_	
30	t5941_000	-	$_	_	_	 * )	_	
31	t5942_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
32	t5943_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
33	t5944_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
34	t5945_000	mit	APPR	mit	_	(PPX *	_	
35	t5946_000	würzen	NA	wurz(e)	Dat.Pl	(NX * ) ) ) )	_	
36	t5947_000	welicher	DWA	wèl(i)ch	Fem.Gen.Sg.st	(Frag (NX *	_	
37	t5947_001	lei	NA	lèie	Gen.Sg	 * )	_	
38	t5948_000	sie	PPER	ër	*.Nom.Pl.3	(PreF (NX * ) )	_	
39	t5949_000	sîn	VAFIN	sîn	*.Pres.Pl.3	(LB (VX * ) ) ) )	_	
40	t5950_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
41	t5951_000	vülle	VVIMP	vüllen	Sg.2	(LB (VX * ) )	_	
42	t5952_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
43	t5953_000	in	APPR	in	_	(PPX *	_	
44	t5954_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
45	t5955_000	krapfen	NA	krapfe	Akk.Pl	 * ) ) ) )	_	
46	t5956_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5957_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t5958_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
3	t5959_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
4	t5960_000	in	APPR	in	_	 *	_	
5	t5961_000	ein	DIA	èin	*.*.*.0	 *	_	
6	t5962_000	pfanne	NA	pfanne	Akk.Sg	(NX * ) )	_	
7	t5963_000	-	$_	_	_	 * )	_	
8	t5964_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t5965_000	lâ	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
10	t5966_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
11	t5967_000	backen	VVINF	backen	_	(VX * ) )	_	
12	t5968_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5969_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t5970_000	krapfen	NA	krapfe	Dat.Pl	(NX * ) )	_	
3	t5971_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t5972_000	sô	KO*	sô	_	(S (Frag *	_	
2	t5973_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
3	t5974_000	denne	AVD	danne	_	(PreF * )	_	
4	t5975_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
5	t5976_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
6	t5977_000	vastenkrapfen	NA	vasten-krapfe	Akk.Sg	 * ) )	_	
7	t5978_000	machen	VVINF	machen	_	(RB (VX * ) ) )	_	
8	t5979_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t5980_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
10	t5981_000	walhische	ADJA	walhisch	Pos.*.Akk.Pl.st	(MF (NX *	_	
11	t5982_000	wînber	NA	wîn-bèr(e)	Akk.Pl	 * ) )	_	
12	t5983_000	-	$_	_	_	 * )	_	
13	t5984_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
14	t5985_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
15	t5986_000	als	AVD	all-sô	_	(MF *	_	
16	t5987_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
17	t5988_000	epfele	NA	apfel	Gen.Pl	(NX * ) )	_	
18	t5989_000	dâr	PAVD	dâr/+unter	_	 *	_	
19	t5989_001	under	PAVAP	unter/dâr+	_	 * )	_	
20	t5990_000	-	$_	_	_	 * )	_	
21	t5991_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
22	t5992_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
23	t5993_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
24	t5994_000	kleine	ADJD	klèine	Pos....0	 * )	_	
25	t5995_000	-	$_	_	_	 * )	_	
26	t5996_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
27	t5997_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
28	t5998_000	würze	NA	wurz(e)	Akk.Pl	(PreF (MF (NX * )	_	
29	t5999_000	dâr	PAVD	dâr/+zuo	_	 *	_	
30	t6000_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
31	t6001_000	unde	KON	unte	_	 * ) )	_	
32	t6002_000	vülle	VVIMP	vüllen	Sg.2	(LB (VX * ) )	_	
33	t6002_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
34	t6003_000	in	APPR	in	_	(PPX *	_	
35	t6004_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
36	t6005_000	krapfen	NA	krapfe	Akk.Pl	 * ) ) ) )	_	
37	t6006_000	-	$_	_	_	 * )	_	
38	t6007_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
39	t6008_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
40	t6009_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
41	t6010_000	backen	VVINF	backen	_	(VX * ) )	_	
42	t6011_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6012_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6013_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6014_000	aber	KO*	aber	_	(MF *	_	
4	t6015_000	ein	DIART	èin	*.*.*.0	 *	_	
5	t6016_000	guot	ADJA	guot	Pos.*..0	 *	_	
6	t6017_000	vülle	NA	vülle	Nom.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6018_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6019_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
3	t6019_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t6020_000	niht	PTKNEG	niht	_	 * )	_	
5	t6021_000	-	$_	_	_	 * )	_	
6	t6022_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6023_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t6024_000	krapfen	NA	krapfe	Akk.Sg	 * )	_	
3	t6025_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6026_000	sô	KO*	sô	_	(S (Frag *	_	
2	t6027_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
3	t6028_000	aber	AVD	aber	_	(PreF * )	_	
4	t6029_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
5	t6030_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
6	t6031_000	vastenkrapfen	NA	vasten-krapfe	Akk.Sg	 * ) )	_	
7	t6032_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
8	t6033_000	von	AVD	von(e)	_	(PostF *	_	
9	t6034_000	nüzzen	NA	nuzz	Dat.Pl	(NX *	_	
10	t6035_000	mit	APPR	mit	_	(PPX *	_	
11	t6036_000	ganzen	ADJA	ganz	Pos.*.Dat.Pl.*	(NX *	_	
12	t6037_000	kernen	NA	kërn(e)	Dat.Pl	 * ) ) ) )	_	
13	t6038_000	-	$_	_	_	 * )	_	
14	t6039_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
15	t6040_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
16	t6041_000	als	AVD	all-sô	_	(PreF (MF *	_	
17	t6042_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
18	t6043_000	epfele	NA	apfel	Gen.Pl	(NX * ) )	_	
19	t6044_000	dâr	PAVD	dâr/+unter	_	 *	_	
20	t6045_000	under	PAVAP	unter/dâr+	_	 *	_	
21	t6046_000	unde	KON	unte	_	 * ) )	_	
22	t6047_000	snîde	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
23	t6048_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
24	t6049_000	würfeleht	ADJD	würfelëht	Pos....0	 * )	_	
25	t6050_000	-	$_	_	_	 *	_	
26	t6051_000	als	KO*	all-sô	_	(Frag *	_	
27	t6052_000	der	DDART	dër	Masc.Nom.Sg	(PreF (NX *	_	
28	t6053_000	kern	NA	kërn(e)	Nom.Sg	 * ) )	_	
29	t6054_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) ) ) )	_	
30	t6055_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
31	t6056_000	roeste	VVIMP	roèsten	Sg.2	(LB (VX * ) )	_	
32	t6057_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
33	t6058_000	wole	AVD	wol(e)	_	 *	_	
34	t6059_000	mit	APPR	mit	_	 *	_	
35	t6060_000	ein	DIART	èin	*.*.*.0	 *	_	
36	t6061_000	wênige	NA	wênig	Dat.Sg	(NX *	_	
37	t6062_000	honiges	NA	honig	Gen.Sg	(NX * ) ) )	_	
38	t6063_000	-	$_	_	_	 * )	_	
39	t6064_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
40	t6065_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
41	t6065_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
42	t6066_000	mit	APPR	mit	_	(PPX *	_	
43	t6067_000	würzen	NA	wurz(e)	Dat.Pl	(NX * ) ) )	_	
44	t6068_000	unde	KON	unte	_	 * ) )	_	
45	t6069_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
46	t6070_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
47	t6071_000	ûf	APPR	ûf	_	(PPX *	_	
48	t6072_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
49	t6073_000	bleter	NA	blat	Akk.Pl	 * ) ) ) )	_	
50	t6074_000	die	DRELS	dër	*.Nom.Pl	(PostF (Frag (NX * )	_	
51	t6075_000	dâ	AVD	dâr	_	 *	_	
52	t6076_000	gemachet	VVPP	machen	_	(VX * )	_	
53	t6077_000	sîn	VAINF	sîn	_	(VX * )	_	
54	t6078_000	zuo	APPR	ze	_	(PPX *	_	
55	t6079_000	krapfen	NA	krapfe	Dat.Pl	(NX * ) )	_	
56	t6080_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6081_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6082_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
3	t6083_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
4	t6084_000	bachen	VVINF	bachen	_	(VX * )	_	
5	t6085_000	unde	KON	unte	_	 * ) )	_	
6	t6086_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
7	t6086_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
8	t6087_000	niht	PTKNEG	niht	_	 * )	_	
9	t6088_000	-	$_	_	_	 * )	_	
10	t6089_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6090_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6091_000	muos	NA	muos	Nom.Sg	(NX * )	_	
3	t6092_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6093_000	sô	KO*	sô	_	(S (Frag *	_	
2	t6094_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
3	t6095_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
4	t6096_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
5	t6097_000	ein	DIA	èin	*.*.*.0	(PostF *	_	
6	t6098_000	guot	ADJA	guot	Pos.*..0	 *	_	
7	t6099_000	vastmuos	NA	vast-muos	Akk.Sg	(NX * ) ) )	_	
8	t6100_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t6101_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
10	t6102_000	barse	NA	bars	Akk.Pl	(MF (NX * )	_	
11	t6103_000	unde	KON	unte	_	 *	_	
12	t6104_000	dicke	ADJA	dicke	Pos.*..0	 *	_	
13	t6105_000	mandelmilch	NA	mandel-milch	Akk.Sg	(NX * )	_	
14	t6106_000	dâr	PAVD	dâr/+unter	_	 *	_	
15	t6106_001	under	PAVAP	unter/dâr+	_	 * )	_	
16	t6107_000	-	$_	_	_	 * )	_	
17	t6108_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
18	t6109_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
19	t6109_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
20	t6110_000	wole	AVD	wol(e)	_	 *	_	
21	t6111_000	in	APPR	in	_	(PPX *	_	
22	t6112_000	mandelmilch	NA	mandel-milch	Dat.Sg	(NX * ) ) )	_	
23	t6113_000	-	$_	_	_	 * )	_	
24	t6114_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
25	t6115_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
26	t6116_000	denne	AVD	danne	_	(MF *	_	
27	t6117_000	zucker	NA	zucker	Akk.Sg	(NX * )	_	
28	t6118_000	dâr	PAVD	dâr/+ûf	_	 *	_	
29	t6119_000	ûf	PAVAP	ûf/dâr+	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6120_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t6121_000	muos	NA	muos	Akk.Sg	 * ) )	_	
3	t6122_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t6123_000	heizen	VVINF	hèizen	_	(RB (VX * ) )	_	
5	t6124_000	von	APPR	von	_	(PostF (PPX *	_	
6	t6125_000	Jerusalêm	NE	Jerusalêm	Dat.Sg	(NX * ) ) )	_	
7	t6126_000	-	$_	_	_	 *	_	
8	t6127_000	unde	KON	unte	_	(Frag *	_	
9	t6128_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
10	t6129_000	izzet	VVFIN	ëzzen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
11	t6130_000	-	$_	_	_	 * )	_	
12	t6131_000	man	PI	man	*.Nom.Sg.st	(Frag (NX * )	_	
13	t6132_000	kalt	ADJD	kalt	Pos....0	 *	_	
14	t6133_000	-	$_	_	_	 *	_	
15	t6134_000	-	$_	_	_	 * )	_	
16	t6135_000	oder	KON	oder	_	(Frag *	_	
17	t6136_000	warm	ADJD	warm	Pos....0	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6137_000	heidenische	ADJA	hèidenisch	Pos.Fem.Nom.Sg.wk	(S (Frag (NX *	_	
2	t6138_000	arweiz	NA	ar(e)wèiz	Nom.Sg	 * )	_	
3	t6139_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6140_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t6141_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t6142_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t6143_000	bohemische	ADJA	bohemisch	Pos.*.Akk.Pl.st	(PostF (NX *	_	
5	t6144_000	arweize	NA	ar(e)wèiz	Akk.Pl	 * ) ) )	_	
6	t6145_000	sô	AVD	sô	_	(Cl (PreF * )	_	
7	t6146_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
8	t6147_000	mandelkern	NA	mandel-kërn(e)	Akk.Pl	(MF (NX * ) )	_	
9	t6148_000	-	$_	_	_	 * )	_	
10	t6149_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
11	t6150_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
12	t6151_000	die	DDS	dër	*.Nom.Pl	(MF (NX * )	_	
13	t6152_000	gar	AVD	gar(e)	_	 *	_	
14	t6153_000	kleine	ADJD	klèine	Pos....0	 * )	_	
15	t6154_000	-	$_	_	_	 * )	_	
16	t6155_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
17	t6156_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
18	t6156_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
19	t6157_000	mit	APPR	mit	_	(PPX *	_	
20	t6158_000	dritteile	NA	dritt-tèil	Dat.Sg	(NX * ) ) )	_	
21	t6159_000	als	AVD	all-sô	_	 *	_	
22	t6160_000	vile	AVD	vil(e)	_	 *	_	
23	t6161_000	honiges	NA	honig	Gen.Sg	(NX * ) )	_	
24	t6162_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6163_000	unde	KON	unte	_	(S (Frag *	_	
2	t6164_000	mit	APPR	mit	_	(PPX *	_	
3	t6165_000	guoten	ADJA	guot	Pos.*.Dat.Pl.*	(NX *	_	
4	t6166_000	würzen	NA	wurz(e)	Dat.Pl	 * ) )	_	
5	t6167_000	wole	AVD	wol(e)	_	(PreF * )	_	
6	t6168_000	gemenget	VVFIN	ge-mèngen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
7	t6169_000	-	$_	_	_	 * )	_	
8	t6170_000	sô	AVD	sô	_	(PreF * )	_	
9	t6171_000	er	PPER	ër	Masc.Nom.Sg.3	(NX * )	_	
10	t6172_000	allerbezzeste	AVD	aller-bèzzeste	Sup	(PreF * )	_	
11	t6173_000	hât	VAFIN	haben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t6174_000	-	$_	_	_	 *	_	
13	t6175_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6176_000	die	DDS	dër	Fem.Akk.Sg	(S (Cl (PreF (NX *	_	
2	t6177_000	koste	NA	kost(e)	Akk.Sg	 * ) )	_	
3	t6178_000	gît	VVFIN	gëben	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t6179_000	man	PI	man	*.Nom.Sg.st	(MF (NX * )	_	
5	t6180_000	kalt	ADJD	kalt	Pos....0	 * )	_	
6	t6181_000	-	$_	_	_	 *	_	
7	t6182_000	oder	KON	oder	_	(Frag *	_	
8	t6183_000	warm	ADJD	warm	Pos....0	 *	_	
9	t6184_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6185_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6186_000	muos	NA	muos	Nom.Sg	(NX *	_	
3	t6187_000	mit	APPR	mit	_	(PPX *	_	
4	t6188_000	louche	NA	louch	Dat.Sg	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6189_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6190_000	muos	NA	muos	Nom.Sg	(NX *	_	
3	t6191_000	mit	APPR	mit	_	(PPX *	_	
4	t6192_000	louche	NA	louch	Dat.Sg	(NX * ) ) )	_	
5	t6193_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6194_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t6195_000	wîzen	ADJA	wîz	Pos.Masc.Akk.Sg.*	(PreF (MF (NX *	_	
3	t6196_000	louch	NA	louch	Akk.Sg	 * )	_	
4	t6197_000	unde	KON	unte	_	 * ) )	_	
5	t6198_000	hacke	VVIMP	hacken	Sg.2	(LB (VX * ) )	_	
6	t6199_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
7	t6200_000	kleine	ADJD	klèine	Pos....0	 * )	_	
8	t6201_000	-	$_	_	_	 * )	_	
9	t6202_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
10	t6203_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
11	t6203_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
12	t6204_000	wole	AVD	wol(e)	_	 *	_	
13	t6205_000	mit	APPR	mit	_	(PPX *	_	
14	t6206_000	guoter	ADJA	guot	Pos.Fem.Dat.Sg.st	(NX *	_	
15	t6207_000	mandelmilch	NA	mandel-milch	Dat.Sg	 * ) ) )	_	
16	t6208_000	-	$_	_	_	 *	_	
17	t6209_000	unde	KON	unte	_	(Frag *	_	
18	t6210_000	mit	APPR	mit	_	(PPX *	_	
19	t6211_000	rîsmele	NA	rîs-mëlw	Dat.Sg	(NX * ) )	_	
20	t6212_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6213_000	unde	KON	unte	_	(S (Frag *	_	
2	t6214_000	wole	AVD	wol(e)	_	 *	_	
3	t6215_000	gesoten	VVPP	sièden	_	(VX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6216_000	aber	KO*	aber	_	(S (Frag *	_	
2	t6217_000	ein	DIA	èin	*.*.*.0	 *	_	
3	t6218_000	vastenmuos	NA	vasten-muos	Akk.Sg	(NX * )	_	
4	t6219_000	gemachet	VVPP	machen	_	(VX * )	_	
5	t6220_000	wole	AVD	wol(e)	_	 *	_	
6	t6221_000	mit	APPR	mit	_	(PPX *	_	
7	t6222_000	mandelmilch	NA	mandel-milch	Dat.Sg	(NX * ) )	_	
8	t6223_000	-	$_	_	_	 * )	_	
9	t6224_000	unde	KON	unte	_	(Frag *	_	
10	t6225_000	wole	AVD	wol(e)	_	 *	_	
11	t6226_000	gemenget	VVPP	ge-mèngen	_	(VX * )	_	
12	t6227_000	mit	APPR	mit	_	(PPX *	_	
13	t6228_000	rîsmele	NA	rîs-mëlw	Dat.Sg	(NX * ) )	_	
14	t6229_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6230_000	unde	KON	unte	_	(S (Frag *	_	
2	t6231_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (NX * ) )	_	
3	t6232_000	siude	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
4	t6233_000	wole	AVD	wol(e)	_	(PreF (MF *	_	
5	t6234_000	unde	KON	unte	_	 * ) )	_	
6	t6235_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
7	t6235_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
8	t6236_000	niht	PTKNEG	niht	_	 * )	_	
9	t6237_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6238_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6239_000	colrîs	NA	col-rîs	Nom.Sg	(NX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6240_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6241_000	colrîs	NA	col-rîs	Nom.Sg	(NX *	_	
3	t6242_000	rîs	NA	rîs	Nom.Sg	 *	_	
4	t6243_000	gebachen	ADJN	bachen	Pos.*..0	 * )	_	
5	t6244_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6245_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6246_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
3	t6247_000	von	APPR	von	_	(PreF (MF (PPX *	_	
4	t6248_000	eiern	NA	èi	Dat.Pl	(NX * ) )	_	
5	t6249_000	dünne	ADJA	dünne	Pos.*.Akk.Pl.st	(NX *	_	
6	t6250_000	bleter	NA	blat	Akk.Pl	 * )	_	
7	t6251_000	unde	KON	unte	_	 * ) )	_	
8	t6252_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
9	t6253_000	die	DDS	dër	*.Akk.Pl	(MF (NX * )	_	
10	t6254_000	kleine	ADJD	klèine	Pos....0	 * )	_	
11	t6255_000	-	$_	_	_	 * )	_	
12	t6256_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t6257_000	wirf	VVIMP	wërfen	Sg.2	(LB (VX * ) )	_	
14	t6258_000	die	DDS	dër	*.Akk.Pl	(MF (NX * )	_	
15	t6259_000	in	APPR	in	_	 *	_	
16	t6260_000	ein	DIA	èin	*.*.*.0	 *	_	
17	t6261_000	süeze	ADJA	süèze	Pos.*..0	 *	_	
18	t6262_000	milch	NA	milch	Akk.Sg	(NX * ) )	_	
19	t6263_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6264_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6265_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t6266_000	semelbrôt	NA	sëmel-brôt	Akk.Sg	(MF (NX * ) )	_	
4	t6267_000	-	$_	_	_	 * )	_	
5	t6268_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
6	t6269_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
7	t6270_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
8	t6271_000	würfeleht	ADJD	würfelëht	Pos....0	 *	_	
9	t6272_000	dâr	PAVD	dâr/+in	_	 *	_	
10	t6273_000	in	PAVAP	in/dâr+	_	 * )	_	
11	t6274_000	-	$_	_	_	 * )	_	
12	t6275_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t6276_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
14	t6276_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
15	t6277_000	mit	APPR	mit	_	(PPX *	_	
16	t6278_000	eiertotern	NA	èier-toter	Dat.Pl	(NX * ) ) ) )	_	
17	t6279_000	-	$_	_	_	 * )	_	
18	t6280_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
19	t6281_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
20	t6281_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
21	t6282_000	wole	AVD	wol(e)	_	 * )	_	
22	t6283_000	-	$_	_	_	 * )	_	
23	t6284_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
24	t6285_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
25	t6286_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
26	t6287_000	smalz	NA	smalz	Akk.Sg	(NX * )	_	
27	t6288_000	dâr	PAVD	dâr/+ûf	_	 *	_	
28	t6289_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
29	t6290_000	unde	KON	unte	_	 * ) )	_	
30	t6291_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
31	t6291_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
32	t6292_000	niht	PTKNEG	niht	_	 * )	_	
33	t6293_000	-	$_	_	_	 * )	_	
34	t6294_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6295_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6296_000	colrîs	NA	col-rîs	Nom.Sg	(NX * )	_	
3	t6297_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6298_000	aber	KO*	aber	_	(S (Frag *	_	
2	t6299_000	ein	DIA	èin	*.*.*.0	 *	_	
3	t6300_000	colris	NA	colris	Nom.Sg	(NX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6301_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t6302_000	eier	NA	èi	Akk.Pl	(MF (NX * ) )	_	
3	t6303_000	-	$_	_	_	 * )	_	
4	t6304_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
5	t6305_000	zeslahe	VVIMP	zer-slahen	Sg.2	(LB (VX * ) )	_	
6	t6306_000	die	DDS	dër	*.Akk.Pl	(MF (NX *	_	
7	t6307_000	mit	APPR	mit	_	(PPX *	_	
8	t6308_000	semelmele	NA	sëmel-mëlw	Dat.Sg	(NX * ) ) ) )	_	
9	t6309_000	-	$_	_	_	 * )	_	
10	t6310_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
11	t6311_000	zeslahe	VVIMP	zer-slahen	Sg.2	(LB (VX * ) )	_	
12	t6312_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) )	_	
13	t6313_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6314_000	dünne	ADJA	dünne	Pos.*..0	(S (Frag *	_	
2	t6315_000	küchene	NA	küchen(e)	Nom.Pl	(NX * )	_	
3	t6316_000	geworfen	VVPP	wërfen	_	(VX * )	_	
4	t6317_000	in	APPR	in	_	 *	_	
5	t6318_000	ein	DIA	èin	*.*.*.0	 *	_	
6	t6319_000	milch	NA	milch	Akk.Sg	(NX * )	_	
7	t6320_000	-	$_	_	_	 * )	_	
8	t6321_000	unde	KON	unte	_	(Frag *	_	
9	t6322_000	wole	AVD	wol(e)	_	 *	_	
10	t6323_000	geruort	VVPP	rüèren	_	(VX * )	_	
11	t6324_000	biz	KOUS	biz	_	(Cl (LB * )	_	
12	t6325_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
13	t6326_000	gesiede	VVFIN	ge-sièden	Subj.Pres.Sg.3	(RB (VX * ) )	_	
14	t6327_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6328_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6329_000	menges	VVFIN	mèngen	*.Pres.Sg.2	(LB (VX * ) )	_	
3	t6329_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * ) ) )	_	
4	t6330_000	aber	VVIMP	aber(e)n	Sg.2	(LB (VX * ) )	_	
5	t6331_000	mit	APPR	mit	_	(MF (PPX *	_	
6	t6332_000	eirtotern	NA	èier-toter(e)	Dat.Pl	(NX * ) ) )	_	
7	t6333_000	-	$_	_	_	 * )	_	
8	t6334_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t6335_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
10	t6336_000	ein	DIART	èin	*.*.*.0	(MF *	_	
11	t6337_000	smalz	NA	smalz	Akk.Sg	(NX * )	_	
12	t6338_000	dâr	PAVD	dâr/+in	_	 *	_	
13	t6338_001	in	PAVAP	in/dâr+	_	 * )	_	
14	t6339_000	-	$_	_	_	 * )	_	
15	t6340_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
16	t6341_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
17	t6341_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
18	t6342_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6343_000	aber	AVD	aber	_	(S (Frag *	_	
2	t6344_000	ein	DIART	èin	*.*.*.0	 *	_	
3	t6345_000	colrîs	NA	col-rîs	Nom.Sg	(NX * )	_	
4	t6346_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6347_000	aber	AVD	aber	_	(S (Frag *	_	
2	t6348_000	ein	DIART	èin	*.*.*.0	 *	_	
3	t6349_000	colris	NA	colris	Nom.Sg	(NX * )	_	
4	t6350_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6351_000	nim	VVIMP	nëmen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t6352_000	dünne	ADJA	dünne	Pos.*..0	(MF *	_	
3	t6353_000	küchene	NA	küchen(e)	Akk.Pl	(NX * )	_	
4	t6354_000	gebachen	VVPP	bachen	_	(VX * )	_	
5	t6355_000	von	APPR	von	_	(PPX *	_	
6	t6356_000	eiern	NA	èi	Dat.Pl	(NX * ) ) )	_	
7	t6357_000	-	$_	_	_	 * )	_	
8	t6358_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t6359_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
10	t6360_000	die	DDS	dër	*.Akk.Pl	(MF (NX * )	_	
11	t6361_000	würfeleht	ADJD	würfelëht	Pos....0	 * )	_	
12	t6362_000	-	$_	_	_	 * )	_	
13	t6363_000	-	$_	_	_	 *	_	
14	t6364_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
15	t6365_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
16	t6366_000	als	AVD	all-sô	_	(MF *	_	
17	t6367_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
18	t6368_000	semelbrôtes	NA	sëmel-brôt	Gen.Sg	(NX * ) )	_	
19	t6369_000	dâr	PAVD	dâr/+ze	_	 *	_	
20	t6370_000	zuo	PTKA	ze/dâr+	_	 *	_	
21	t6371_000	würfeleht	ADJD	würfelëht	Pos....0	 * )	_	
22	t6372_000	-	$_	_	_	 * )	_	
23	t6373_000	-	$_	_	_	 *	_	
24	t6374_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
25	t6375_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
26	t6376_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
27	t6377_000	in	APPR	in	_	 *	_	
28	t6378_000	ein	DIART	èin	*.*.*.0	 *	_	
29	t6379_000	milch	NA	milch	Akk.Sg	(NX * ) )	_	
30	t6380_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6381_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6382_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t6383_000	einen	DIART	èin	Masc.Akk.Sg.st	(MF (NX *	_	
4	t6384_000	apfel	NA	apfel	Akk.Sg	 * ) )	_	
5	t6385_000	-	$_	_	_	 * )	_	
6	t6386_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
7	t6387_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
8	t6388_000	den	DDART	dër	Masc.Akk.Sg	(MF *	_	
9	t6389_000	würfeleht	ADJD	würfelëht	Pos....0	 * )	_	
10	t6390_000	-	$_	_	_	 *	_	
11	t6391_000	dâr	PAVD	dâr/+in	_	(Frag *	_	
12	t6391_001	in	PAVAP	in/dâr+	_	 *	_	
13	t6392_000	-	$_	_	_	 * ) )	_	
14	t6393_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
15	t6394_000	rüer	VVIMP	rüèren	Sg.2	(LB (VX * ) )	_	
16	t6394_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
17	t6395_000	wole	AVD	wol(e)	_	 *	_	
18	t6396_000	mit	APPR	mit	_	(PPX *	_	
19	t6397_000	eiertotern	NA	èier-toter	Dat.Pl	(NX * ) ) )	_	
20	t6398_000	-	$_	_	_	 * )	_	
21	t6399_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
22	t6400_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
23	t6401_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
24	t6402_000	sieden	VVINF	sièden	_	(VX * )	_	
25	t6403_000	wole	AVD	wol(e)	_	 *	_	
26	t6404_000	unde	KON	unte	_	 * ) )	_	
27	t6405_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
28	t6405_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
29	t6406_000	hin	AVD	hin(e)	_	 * )	_	
30	t6407_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6408_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6409_000	quitenmuos	NA	quiten-muos	Akk.Sg	(NX * )	_	
3	t6410_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6411_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t6412_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t6413_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t6414_000	ein	DIA	èin	*.*.*.0	(PostF *	_	
5	t6415_000	quitenmuos	NA	quiten-muos	Akk.Sg	(NX * ) )	_	
6	t6416_000	-	$_	_	_	 * )	_	
7	t6417_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t6418_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
9	t6419_000	kûten	NA	kûte	Akk.Pl	(MF (NX * ) )	_	
10	t6420_000	wie	AVW	wiè	_	(Frag *	_	
11	t6421_000	vile	AVD	vil(e)	_	(PreF *	_	
12	t6422_000	dû	PPER	dû	Nom.Sg.2	(NX * ) )	_	
13	t6423_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) ) ) )	_	
14	t6424_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
15	t6425_000	siude	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
16	t6426_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
17	t6427_000	gar	AVD	gar(e)	_	 *	_	
18	t6428_000	schoene	ADJD	schoène	Pos....0	 * )	_	
19	t6429_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6430_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6431_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t6432_000	denne	AVD	danne	_	(MF *	_	
4	t6433_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
5	t6434_000	morsær	NA	morsære	Akk.Sg	 * ) )	_	
6	t6435_000	-	$_	_	_	 * )	_	
7	t6436_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t6437_000	stôze	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
9	t6438_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
10	t6439_000	dâr	PAVD	dâr/+inne	_	 *	_	
11	t6440_000	inne	PAVAP	inne/dâr+	_	 *	_	
12	t6441_000	kleine	ADJD	klèine	Pos....0	 * )	_	
13	t6442_000	-	$_	_	_	 * )	_	
14	t6443_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
15	t6444_000	slahe	VVIMP	slahen	Sg.2	(LB (VX * ) )	_	
16	t6445_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
17	t6446_000	durch	APPR	durh	_	 *	_	
18	t6447_000	ein	DIART	èin	*.*.*.0	 *	_	
19	t6448_000	tuoch	NA	tuoch	Akk.Sg	(NX * ) )	_	
20	t6449_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6450_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6451_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t6452_000	eiertotern	NA	èier-toter(e)	Akk.Pl	(MF (NX * )	_	
4	t6453_000	dâr	PAVD	dâr/+zuo	_	 *	_	
5	t6454_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
6	t6455_000	-	$_	_	_	 * )	_	
7	t6456_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t6457_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
9	t6457_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
10	t6458_000	dâ	PAVD	dâr/+mit(e)	_	 *	_	
11	t6459_000	mit	PAVAP	mit(e)/dâr+	_	 * )	_	
12	t6460_000	-	$_	_	_	 * )	_	
13	t6461_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
14	t6462_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
15	t6463_000	ein	DIART	èin	*.*.*.0	(MF *	_	
16	t6464_000	zucker	NA	zucker	Akk.Sg	(NX * )	_	
17	t6465_000	dâr	PAVD	dâr/+ûf	_	 *	_	
18	t6465_001	ûf	PAVAP	ûf/dâr+	_	 *	_	
19	t6466_000	unde	KON	unte	_	 *	_	
20	t6467_000	versalt	VVPP	ver-sèllen	_	(VX * )	_	
21	t6467_001	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
22	t6468_000	niht	PTKNEG	niht	_	 * )	_	
23	t6469_000	-	$_	_	_	 * )	_	
24	t6470_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6471_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6472_000	apfelmuos	NA	apfel-muos	Nom.Sg	(NX * )	_	
3	t6473_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6474_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t6475_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t6476_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t6477_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t6478_000	apfelmuos	NA	apfel-muos	Akk.Sg	(NX * ) )	_	
6	t6479_000	-	$_	_	_	 * )	_	
7	t6480_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t6481_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
9	t6482_000	schoene	ADJA	schoène	Pos.*..0	(MF *	_	
10	t6483_000	epfele	NA	apfel	Akk.Pl	(NX * ) )	_	
11	t6484_000	-	$_	_	_	 * )	_	
12	t6485_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t6486_000	schile	VVIMP	schël(e)n	Sg.2	(LB (VX * ) )	_	
14	t6487_000	die	DDS	dër	*.Akk.Pl	(MF (NX * ) )	_	
15	t6488_000	-	$_	_	_	 * )	_	
16	t6489_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
17	t6490_000	snîde	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
18	t6491_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
19	t6492_000	in	APPR	in	_	 *	_	
20	t6493_000	ein	DIART	èin	*.*.*.0	 *	_	
21	t6494_000	kalt	ADJA	kalt	Pos.*..0	 *	_	
22	t6495_000	wazzer	NA	wazzer	Akk.Sg	(NX * ) )	_	
23	t6496_000	-	$_	_	_	 * )	_	
24	t6497_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
25	t6498_000	siude	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
26	t6499_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
27	t6500_000	in	APPR	in	_	(PPX *	_	
28	t6501_000	einem	DIA	èin	Masc.Dat.Sg.st	(NX *	_	
29	t6502_000	havene	NA	haven	Dat.Sg	 * ) ) ) )	_	
30	t6503_000	-	$_	_	_	 * )	_	
31	t6504_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
32	t6505_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
33	t6506_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
34	t6507_000	mit	APPR	mit	_	(PPX *	_	
35	t6508_000	wîne	NA	wîn	Dat.Sg	(NX * ) ) ) )	_	
36	t6509_000	-	$_	_	_	 *	_	
37	t6510_000	unde	KON	unte	_	(Frag *	_	
38	t6511_000	mit	APPR	mit	_	(PPX *	_	
39	t6512_000	smalze	NA	smalz	Dat.Sg	(NX * ) )	_	
40	t6513_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6514_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6515_000	zeslahe	VVIMP	zer-slahen	Sg.2	(LB (VX * ) )	_	
3	t6516_000	eier	NA	èi	Akk.Pl	(MF (NX *	_	
4	t6517_000	mit	APPR	mit	_	(PPX *	_	
5	t6518_000	wîze	NA	wîze	Dat.Sg	(NX * ) ) )	_	
6	t6519_000	unde	KON	unte	_	 *	_	
7	t6520_000	mit	APPR	mit	_	(PPX *	_	
8	t6521_000	al	NA	al	Dat.Sg	(NX * ) ) )	_	
9	t6522_000	-	$_	_	_	 * )	_	
10	t6523_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
11	t6524_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
12	t6525_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
13	t6526_000	dâr	PAVD	dâr/+zuo	_	 *	_	
14	t6527_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
15	t6528_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6529_000	unde	KON	unte	_	(S (Frag *	_	
2	t6530_000	daz	DDS	dër	Neut.Nom.Sg	(PreF (NX * ) )	_	
3	t6531_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t6532_000	gar	AVD	gar(e)	_	(MF *	_	
5	t6533_000	ein	DIA	èin	*.*.*.0	 *	_	
6	t6534_000	guot	ADJA	guot	Pos.*..0	 *	_	
7	t6535_000	vülle	NA	vülle	Nom.Sg	(NX * ) )	_	
8	t6536_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6537_000	unde	KON	unte	_	(S (Frag *	_	
2	t6538_000	versalt	VVPP	ver-sèllen	_	(VX * )	_	
3	t6538_001	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
4	t6539_000	niht	PTKNEG	niht	_	 *	_	
5	t6540_000	-	$_	_	_	 * )	_	
6	t6541_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6542_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6543_000	mandelmuos	NA	mandel-muos	Nom.Sg	(NX * )	_	
3	t6544_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6545_000	sô	KO*	sô	_	(S (Frag *	_	
2	t6546_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
3	t6547_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
4	t6548_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
5	t6549_000	ein	DIA	èin	*.*.*.0	(PostF *	_	
6	t6550_000	mandelmuos	NA	mandel-muos	Akk.Sg	(NX * ) )	_	
7	t6551_000	-	$_	_	_	 * )	_	
8	t6552_000	sô	AVD	sô	_	(Cl (PreF * )	_	
9	t6553_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
10	t6554_000	mandelmilch	NA	mandel-milch	Akk.Sg	(MF (NX * ) )	_	
11	t6555_000	-	$_	_	_	 *	_	
12	t6556_000	unde	KON	unte	_	(Frag *	_	
13	t6557_000	semelîn	ADJA	sëmelîn	Pos.*..0	 *	_	
14	t6558_000	brôt	NA	brôt	Akk.Sg	(NX * )	_	
15	t6559_000	-	$_	_	_	 * ) )	_	
16	t6560_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
17	t6561_000	snîde	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
18	t6562_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
19	t6563_000	würfeleht	ADJD	würfelëht	Pos....0	 * )	_	
20	t6564_000	-	$_	_	_	 * )	_	
21	t6565_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
22	t6566_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
23	t6567_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
24	t6568_000	in	APPR	in	_	(PPX *	_	
25	t6569_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
26	t6570_000	mandelmilch	NA	mandel-milch	Akk.Sg	 * ) ) ) )	_	
27	t6571_000	-	$_	_	_	 * )	_	
28	t6572_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
29	t6573_000	erwelle	VVIMP	er-wèllen	Sg.2	(LB (VX * ) )	_	
30	t6574_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) )	_	
31	t6575_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6576_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6577_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t6578_000	einen	DIART	èin	Masc.Akk.Sg.st	(PreF (MF (NX *	_	
4	t6579_000	apfel	NA	apfel	Akk.Sg	 * )	_	
5	t6580_000	unde	KON	unte	_	 * ) )	_	
6	t6581_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
7	t6582_000	den	DDS	dër	Masc.Akk.Sg	(MF (NX * )	_	
8	t6583_000	würfeleht	ADJD	würfelëht	Pos....0	 * )	_	
9	t6584_000	-	$_	_	_	 * )	_	
10	t6585_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
11	t6586_000	roeste	VVIMP	roèsten	Sg.2	(LB (VX * ) )	_	
12	t6587_000	den	DDS	dër	Masc.Akk.Sg	(MF (NX *	_	
13	t6588_000	in	APPR	in	_	(PPX *	_	
14	t6589_000	eineme	DIA	èin	Neut.Dat.Sg.st	(NX *	_	
15	t6590_000	smalze	NA	smalz	Dat.Sg	 * ) ) ) )	_	
16	t6591_000	-	$_	_	_	 * )	_	
17	t6592_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
18	t6593_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
19	t6594_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
20	t6595_000	ûf	APPR	ûf	_	(PPX *	_	
21	t6596_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
22	t6597_000	mandelmuos	NA	mandel-muos	Akk.Sg	 * ) ) ) )	_	
23	t6598_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6599_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6600_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
3	t6600_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t6601_000	hin	AVD	hin(e)	_	 * )	_	
5	t6602_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6603_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6604_000	ziger	NA	ziger	Nom.Sg	(NX *	_	
3	t6605_000	von	APPR	von	_	(PPX *	_	
4	t6606_000	mandel	NA	mantel	Dat.Sg	(NX * ) ) )	_	
5	t6607_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6608_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t6609_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t6610_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t6611_000	ein	DIA	èin	*.*.*.0	(PostF *	_	
5	t6612_000	ziger	NA	ziger	Akk.Sg	(NX *	_	
6	t6613_000	von	APPR	von	_	(PPX *	_	
7	t6614_000	mandeln	NA	mandel(e)	Dat.Pl	(NX * ) ) ) )	_	
8	t6615_000	-	$_	_	_	 * )	_	
9	t6616_000	sô	AVD	sô	_	(Cl (PreF * )	_	
10	t6617_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
11	t6618_000	mandelkern	NA	mandel-kërn(e)	Akk.Pl	(MF (NX * ) )	_	
12	t6619_000	-	$_	_	_	 * )	_	
13	t6620_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
14	t6621_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
15	t6622_000	die	DDS	dër	*.Akk.Pl	(MF (NX *	_	
16	t6623_000	in	APPR	in	_	(PPX *	_	
17	t6624_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
18	t6625_000	morsær	NA	morsære	Akk.Sg	 * ) ) ) )	_	
19	t6626_000	-	$_	_	_	 *	_	
20	t6627_000	unde	KON	unte	_	(Frag *	_	
21	t6628_000	die	DDART	dër	Fem.Akk.Sg	(PreF (NX *	_	
22	t6629_000	mandelmilch	NA	mandel-milch	Akk.Sg	 * ) )	_	
23	t6630_000	erwelle	VVIMP	er-wèllen	Sg.2	(LB (VX * ) )	_	
24	t6631_000	-	$_	_	_	 * ) )	_	
25	t6632_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
26	t6633_000	schüte	VVIMP	schüten	Sg.2	(LB (VX * ) )	_	
27	t6634_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
28	t6635_000	ûf	APPR	ûf	_	 *	_	
29	t6636_000	ein	DIART	èin	*.*.*.0	 *	_	
30	t6637_000	schoene	ADJA	schoène	Pos.*..0	 *	_	
31	t6638_000	tuoch	NA	tuoch	Akk.Sg	(NX * ) )	_	
32	t6639_000	-	$_	_	_	 *	_	
33	t6640_000	unde	KON	unte	_	(Frag *	_	
34	t6641_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
35	t6642_000	schoup	NA	schoub	Akk.Sg	 * )	_	
36	t6643_000	dâr	PAVD	dâr/+unter	_	 *	_	
37	t6643_001	under	PAVAP	unter/dâr+	_	 *	_	
38	t6644_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6645_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6646_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
3	t6647_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
4	t6648_000	erküeln	VVINF	er-küèlen	_	(VX * ) )	_	
5	t6649_000	-	$_	_	_	 * )	_	
6	t6650_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
7	t6651_000	slahe	VVIMP	slahen	Sg.2	(LB (VX * ) )	_	
8	t6652_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
9	t6653_000	ûf	APPR	ûf	_	 *	_	
10	t6654_000	ein	DIA	èin	*.*.*.0	 *	_	
11	t6655_000	schüzzeln	NA	schüzzel(e)	Akk.Sg	(NX * ) )	_	
12	t6656_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6657_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6658_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
3	t6659_000	dâr	PAVD	dâr/+ûf	_	(MF *	_	
4	t6660_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
5	t6661_000	mandelkern	NA	mandel-kërn(e)	Akk.Pl	(NX * ) )	_	
6	t6662_000	-	$_	_	_	 * )	_	
7	t6663_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t6664_000	ströuwe	VVIMP	ströuwen	Sg.2	(LB (VX * ) )	_	
9	t6665_000	dâr	PAVD	dâr/+ûf	_	(MF *	_	
10	t6666_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
11	t6667_000	zucker	NA	zucker	Akk.Sg	(NX * ) )	_	
12	t6668_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6669_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6670_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
3	t6670_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t6671_000	hin	AVD	hin(e)	_	 * )	_	
5	t6672_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6673_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (NX *	_	
2	t6674_000	kæse	NA	kæse	Akk.Sg	 *	_	
3	t6675_000	von	APPR	von	_	(PPX *	_	
4	t6676_000	mandel	NA	mandel(e)	Dat.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6677_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t6678_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t6679_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t6680_000	aber	KO*	aber	_	(PostF *	_	
5	t6681_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
6	t6682_000	kæse	NA	kæse	Akk.Sg	 *	_	
7	t6683_000	von	APPR	von	_	(PPX *	_	
8	t6684_000	mandeln	NA	mandel(e)	Dat.Pl	(NX * ) ) ) )	_	
9	t6685_000	-	$_	_	_	 * )	_	
10	t6686_000	sô	AVD	sô	_	(Cl (PreF (PreF * ) )	_	
11	t6687_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
12	t6688_000	mandelkern	NA	mandel-kërn(e)	Akk.Pl	(PreF (MF (NX * )	_	
13	t6689_000	unde	KON	unte	_	 * ) )	_	
14	t6690_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
15	t6691_000	die	DDS	dër	*.Akk.Pl	(MF (NX * ) )	_	
16	t6692_000	-	$_	_	_	 * )	_	
17	t6693_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
18	t6694_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
19	t6695_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
20	t6696_000	milch	NA	milch	Akk.Sg	 * ) )	_	
21	t6697_000	-	$_	_	_	 * )	_	
22	t6698_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
23	t6699_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
24	t6700_000	einer	DIART	èin	Fem.Gen.Sg.st	(MF (NX *	_	
25	t6701_000	guoten	ADJA	guot	Pos.Fem.Gen.Sg.wk	 *	_	
26	t6702_000	milch	NA	milch	Gen.Sg	 * )	_	
27	t6703_000	dâr	PAVD	dâr/+zuo	_	 *	_	
28	t6704_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
29	t6705_000	-	$_	_	_	 * )	_	
30	t6706_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
31	t6707_000	erwelle	VVIMP	er-wèllen	Sg.2	(LB (VX * ) )	_	
32	t6708_000	daz	DDS	dër	Neut.Akk.Sg	(PreF (MF (NX * )	_	
33	t6709_000	abe	AVD	abe	_	 *	_	
34	t6710_000	unde	KON	unte	_	 * ) )	_	
35	t6711_000	schüte	VVIMP	schüten	Sg.2	(LB (VX * ) )	_	
36	t6711_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
37	t6712_000	ûf	APPR	ûf	_	 *	_	
38	t6713_000	ein	DIART	èin	*.*.*.0	 *	_	
39	t6714_000	tuoch	NA	tuoch	Akk.Sg	(NX * ) )	_	
40	t6715_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6716_000	lâze	VVFIN	lâzen	*.Pres.Sg.1	(S (Cl (LB (VX * ) )	_	
2	t6717_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX * )	_	
3	t6718_000	erkalten	VVINF	er-kalten	_	(VX * )	_	
4	t6719_000	unde	KON	unte	_	 * ) )	_	
5	t6720_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
6	t6721_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX *	_	
7	t6722_000	in	APPR	in	_	(PPX *	_	
8	t6723_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
9	t6724_000	kæsenapf	NA	kæse-napf	Akk.Sg	 * ) ) ) )	_	
10	t6725_000	-	$_	_	_	 * )	_	
11	t6726_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
12	t6727_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
13	t6728_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * ) )	_	
14	t6729_000	-	$_	_	_	 * )	_	
15	t6730_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
16	t6731_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
17	t6732_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
18	t6733_000	denne	AVD	danne	_	 *	_	
19	t6734_000	ûf	APPR	ûf	_	 *	_	
20	t6735_000	ein	DIART	èin	*.*.*.0	 *	_	
21	t6736_000	tal	NA	tal	Akk.Sg	(NX * ) ) )	_	
22	t6737_000	beströuwe	VVIMP	be-ströuwen	Sg.2	(Cl (LB (VX * ) )	_	
23	t6738_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX *	_	
24	t6739_000	mit	APPR	mit	_	(PPX *	_	
25	t6740_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
26	t6741_000	zuckere	NA	zucker	Dat.Sg	 * ) ) ) )	_	
27	t6742_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6743_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6744_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6745_000	ein	DIA	èin	*.*.*.0	(MF *	_	
4	t6746_000	mandelkæse	NA	mandel-kæse	Nom.Sg	(NX * ) )	_	
5	t6747_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6748_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t6749_000	mandelwegge	NA	mandel-wègge	Akk.Sg	 * )	_	
3	t6750_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6751_000	sô	KO*	sô	_	(S (Frag *	_	
2	t6752_000	dû	PPER	dû	Nom.Sg.2	(NX * )	_	
3	t6753_000	denne	AVD	danne	_	(PreF * )	_	
4	t6754_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
5	t6755_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t6756_000	einen	DIART	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
7	t6757_000	mandelwegge	NA	mandel-wègge	Akk.Sg	 * ) )	_	
8	t6758_000	-	$_	_	_	 * )	_	
9	t6759_000	sô	AVD	sô	_	(Cl (PreF * )	_	
10	t6760_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
11	t6761_000	aber	KO*	aber	_	(MF *	_	
12	t6762_000	mandelkern	NA	mandel-kërn(e)	Nom.Sg	(NX *	_	
13	t6763_000	gestôzen	ADJN	stôzen	Pos.*..0	 *	_	
14	t6764_000	zuo	APPR	ze	_	(PPX *	_	
15	t6765_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
16	t6766_000	milch	NA	milch	Dat.Sg	 * ) ) ) )	_	
17	t6767_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6768_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6769_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
3	t6770_000	die	DDS	dër	Fem.Akk.Sg	(PreF (MF (NX * )	_	
4	t6771_000	unde	KON	unte	_	 * ) )	_	
5	t6772_000	schüte	VVIMP	schüten	Sg.2	(LB (VX * ) )	_	
6	t6773_000	die	DDS	dër	Fem.Akk.Sg	(MF (NX * )	_	
7	t6774_000	ûf	APPR	ûf	_	 *	_	
8	t6775_000	ein	DIA	èin	*.*.*.0	 *	_	
9	t6776_000	tuoch	NA	tuoch	Akk.Sg	(NX * ) )	_	
10	t6777_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6778_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6779_000	lâze	VVFIN	lâzen	*.Pres.Sg.1	(LB (VX * ) )	_	
3	t6780_000	erküeln	VVINF	er-küèlen	_	(PreF (MF (VX * )	_	
4	t6781_000	unde	KON	unte	_	 * ) )	_	
5	t6782_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
6	t6783_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
7	t6784_000	als	KO*	all-sô	_	 *	_	
8	t6785_000	ein	DIART	èin	*.*.*.0	 *	_	
9	t6786_000	buterwegge	NA	buter-wègge	Akk.Sg	(NX * ) )	_	
10	t6787_000	-	$_	_	_	 * )	_	
11	t6788_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
12	t6789_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
13	t6790_000	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX * )	_	
14	t6791_000	ûf	APPR	ûf	_	 *	_	
15	t6792_000	ein	DIART	èin	*.*.*.0	 *	_	
16	t6793_000	schüzzeln	NA	schüzzel(e)	Akk.Sg	(NX * )	_	
17	t6794_000	unde	KON	unte	_	 * ) )	_	
18	t6795_000	giuz	VVIMP	gièzen	Sg.2	(LB (VX * ) )	_	
19	t6796_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
20	t6797_000	mandelmilch	NA	mandel-milch	Akk.Sg	(NX * )	_	
21	t6798_000	dâr	PAVD	dâr/+umbe	_	 *	_	
22	t6798_001	umbe	PAVAP	umbe/dâr+	_	 *	_	
23	t6799_000	unde	KON	unte	_	 * ) )	_	
24	t6800_000	ströuwe	VVIMP	ströuwen	Sg.2	(LB (VX * ) )	_	
25	t6801_000	ein	DIART	èin	*.*.*.0	(PreF (MF *	_	
26	t6802_000	zucker	NA	zucker	Akk.Sg	(NX * )	_	
27	t6803_000	dâr	PAVD	dâr/+ûf	_	 *	_	
28	t6804_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
29	t6805_000	unde	KON	unte	_	 * ) )	_	
30	t6806_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
31	t6807_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
32	t6808_000	hin	AVD	hin(e)	_	 * )	_	
33	t6809_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6810_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6811_000	kuoche	NA	kuoche	Nom.Sg	(NX * )	_	
3	t6812_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6813_000	sô	KO*	sô	_	(S (Frag *	_	
2	t6814_000	dû	PPER	dû	Nom.Sg.2	(PreF (NX * ) )	_	
3	t6815_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
4	t6816_000	mandelkuochen	NA	mandel-kuoche	Akk.Sg	(MF (NX * ) )	_	
5	t6817_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t6818_000	-	$_	_	_	 * )	_	
7	t6819_000	sô	AVD	sô	_	(Cl (PreF (PreF (PreF (PreF * ) ) ) )	_	
8	t6820_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t6821_000	von	APPR	von	_	(PreF (MF (PPX *	_	
10	t6822_000	mandelkernen	NA	mandel-kërn(e)	Dat.Pl	(NX * ) )	_	
11	t6823_000	guote	ADJA	guot	Pos.Fem.Akk.Sg.st	(NX *	_	
12	t6824_000	milch	NA	milch	Akk.Sg	 * )	_	
13	t6825_000	unde	KON	unte	_	 * ) )	_	
14	t6826_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
15	t6827_000	die	DDS	dër	Fem.Akk.Sg	(PreF (MF (NX * )	_	
16	t6828_000	unde	KON	unte	_	 * ) )	_	
17	t6829_000	rüere	VVIMP	rüèren	Sg.2	(LB (VX * ) )	_	
18	t6830_000	die	DDS	dër	Fem.Akk.Sg	(PreF (MF (NX * )	_	
19	t6831_000	abe	AVD	abe	_	 *	_	
20	t6832_000	mit	APPR	mit	_	(PPX *	_	
21	t6833_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
22	t6834_000	zuckere	NA	zucker	Dat.Sg	 * ) )	_	
23	t6835_000	unde	KON	unte	_	 * ) )	_	
24	t6836_000	schüte	VVIMP	schüten	Sg.2	(LB (VX * ) )	_	
25	t6837_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
26	t6838_000	ûf	APPR	ûf	_	 *	_	
27	t6839_000	ein	DIA	èin	*.*.*.0	 *	_	
28	t6840_000	tuoch	NA	tuoch	Akk.Sg	(NX * ) )	_	
29	t6841_000	-	$_	_	_	 *	_	
30	t6842_000	unde	KON	unte	_	(Frag *	_	
31	t6843_000	ein	DIA	èin	*.*.*.0	 *	_	
32	t6844_000	schoup	NA	schoub	Akk.Sg	(NX * )	_	
33	t6845_000	dâr	PAVD	dâr/+unter	_	 *	_	
34	t6845_001	under	PAVAP	unter/dâr+	_	 *	_	
35	t6846_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6847_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6848_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
3	t6849_000	ein	DIART	èin	*.*.*.0	(MF *	_	
4	t6850_000	teic	NA	tèig	Akk.Sg	(NX *	_	
5	t6851_000	von	APPR	von	_	(PPX *	_	
6	t6852_000	semelmelwe	NA	sëmel-mëlw	Dat.Sg	(NX * ) ) ) )	_	
7	t6853_000	-	$_	_	_	 * )	_	
8	t6854_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t6855_000	vülle	VVIMP	vüllen	Sg.2	(LB (VX * ) )	_	
10	t6856_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
11	t6857_000	mit	APPR	mit	_	(PPX *	_	
12	t6858_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
13	t6859_000	wellen	NA	wëlle	Dat.Sg	 * ) ) ) )	_	
14	t6860_000	-	$_	_	_	 * )	_	
15	t6861_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
16	t6862_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
17	t6863_000	des	DDART	dër	Masc.Gen.Sg	(MF *	_	
18	t6864_000	gesoten	ADJA	sièden	Pos.*..0	 *	_	
19	t6865_000	mandels	NA	mandel(e)	Gen.Sg	(NX * )	_	
20	t6866_000	dâr	PAVD	dâr/+ûf	_	 *	_	
21	t6867_000	ûf	PAVAP	ûf/dâr+	_	 * )	_	
22	t6868_000	-	$_	_	_	 * )	_	
23	t6869_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
24	t6870_000	snît	VVIMP	snîden/abe<.+	Sg.2	(LB (VX * ) )	_	
25	t6871_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * ) )	_	
26	t6872_000	abe	PTKVZ	abe/<.+snîden	_	(RB * )	_	
27	t6873_000	unde	KON	unte	_	(PostF (PrePreF * )	_	
28	t6874_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
29	t6874_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
30	t6875_000	in	APPR	in	_	(PPX *	_	
31	t6876_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
32	t6877_000	pfanne	NA	pfanne	Dat.Sg	 *	_	
33	t6878_000	ine	APPR	in	_	(PPX *	_	
34	t6878_001	dem	DDART	dër	Neut.Dat.Sg	(NX *	_	
35	t6879_000	smalze	NA	smalz	Dat.Sg	 * ) ) ) ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6880_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6881_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6882_000	ein	DIA	èin	*.*.*.0	(MF *	_	
4	t6883_000	mandelkuoche	NA	mandel-kuoche	Nom.Sg	(NX * ) )	_	
5	t6884_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6885_000	der	DRELS	dër	Masc.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6886_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t6887_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t6888_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t6889_000	guot	ADJD	guot	Pos....0	 *	_	
6	t6890_000	gesoten	ADJA	sièden	Pos.*..0	 *	_	
7	t6891_000	rîs	NA	rîs	Akk.Sg	(NX * ) )	_	
8	t6892_000	-	$_	_	_	 * )	_	
9	t6893_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t6894_000	erlæse	VVFIN	er-lësen	Subj.Past.Sg.3	(LB (VX * ) )	_	
11	t6895_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
12	t6896_000	schoene	ADJD	schoène	Pos....0	 * )	_	
13	t6897_000	-	$_	_	_	 * )	_	
14	t6898_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
15	t6899_000	wasche	VVFIN	waschen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
16	t6900_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
17	t6901_000	schoene	ADJD	schoène	Pos....0	 *	_	
18	t6902_000	unde	KON	unte	_	 * ) )	_	
19	t6903_000	lege	VVFIN	lègen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
20	t6903_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
21	t6904_000	in	APPR	in	_	(PPX *	_	
22	t6905_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
23	t6906_000	haven	NA	haven	Akk.Sg	 * ) ) )	_	
24	t6907_000	unde	KON	unte	_	 *	_	
25	t6908_000	salz	NA	salz	Akk.Sg	(NX *	_	
26	t6909_000	ez	PPER	ër	Neut.Akk.Sg.3	 * )	_	
27	t6910_000	niht	PTKNEG	niht	_	 *	_	
28	t6911_000	ze	PTKA	ze	_	 *	_	
29	t6912_000	vile	AVD	vil(e)	_	 * )	_	
30	t6913_000	-	$_	_	_	 * )	_	
31	t6914_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
32	t6915_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
33	t6915_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * ) )	_	
34	t6916_000	biz	KOUS	biz	_	(PostF (Cl (LB * )	_	
35	t6917_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
36	t6918_000	trucken	ADJD	trucken	Pos....0	 * )	_	
37	t6919_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) )	_	
38	t6920_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6921_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6922_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
3	t6923_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
4	t6924_000	mit	APPR	mit	_	(PPX *	_	
5	t6925_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
6	t6926_000	mandelmilch	NA	mandel-milch	Dat.Sg	 * ) ) ) )	_	
7	t6927_000	-	$_	_	_	 * )	_	
8	t6928_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t6929_000	rüer	VVIMP	rüèren	Sg.2	(LB (VX * ) )	_	
10	t6929_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
11	t6930_000	ein	DIA	èin	*.*.*.0	 *	_	
12	t6931_000	wênic	NA	wênig	Akk.Sg	(NX * ) )	_	
13	t6932_000	biz	KOUS	biz	_	(PostF (Cl (PreF * )	_	
14	t6933_000	daz	KOUS	dazz	_	(LB * )	_	
15	t6934_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
16	t6935_000	aber	AVD	aber	_	 * )	_	
17	t6936_000	siede	VVFIN	sièden	Subj.Pres.Sg.3	(PreF (RB (VX * ) ) )	_	
18	t6937_000	unz	KOUS	unz(e)	_	(LB * )	_	
19	t6938_000	im	PPER	ër	Masc.Dat.Sg.3	(MF (NX * )	_	
20	t6938_001	sîne	DPOSA	sîn	Fem.Nom.Sg.st	(NX *	_	
21	t6939_000	dicke	NA	dicke	Nom.Sg	 * ) )	_	
22	t6940_000	kumes	VVFIN	komen	Subj.Pres.Sg.2	(RB (VX * ) )	_	
23	t6941_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6942_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6943_000	gebe	VVFIN	gëben	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t6943_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
4	t6944_000	mit	APPR	mit	_	(PPX *	_	
5	t6945_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
6	t6946_000	zucker	NA	zucker	Dat.Sg	 * ) ) )	_	
7	t6947_000	dâr	AVD	dâr	_	 * )	_	
8	t6948_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6949_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6950_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t6951_000	ouch	AVD	ouch	_	(MF *	_	
4	t6952_000	guot	ADJD	guot	Pos....0	 * )	_	
5	t6953_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6954_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t6955_000	muos	NA	muos	Nom.Sg	(NX *	_	
3	t6956_000	von	APPR	von	_	(PPX *	_	
4	t6957_000	rîse	NA	rîs	Dat.Sg	(NX * ) ) )	_	
5	t6958_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6959_000	der	DDS	dër	Masc.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t6960_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t6961_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t6962_000	ein	DIA	èin	*.*.*.0	(PostF *	_	
5	t6963_000	rîsmuos	NA	rîs-muos	Akk.Sg	(NX * ) ) )	_	
6	t6964_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t6965_000	neme	VVFIN	nëmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
8	t6966_000	aber	AVD	aber	_	(MF *	_	
9	t6967_000	gestôzen	VVPP	stôzen	_	(VX * )	_	
10	t6968_000	mandelmilch	NA	mandel-milch	Akk.Sg	(NX * ) )	_	
11	t6969_000	-	$_	_	_	 * )	_	
12	t6970_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t6971_000	menge	VVFIN	mèngen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
14	t6972_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
15	t6973_000	mit	APPR	mit	_	(PPX *	_	
16	t6974_000	rîsmele	NA	rîs-mëlw	Dat.Sg	(NX * ) ) ) )	_	
17	t6975_000	-	$_	_	_	 * )	_	
18	t6976_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
19	t6977_000	siede	VVFIN	sièden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
20	t6977_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
21	t6978_000	wole	AVD	wol(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t6979_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t6980_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
3	t6981_000	einen	DIART	èin	Masc.Akk.Sg.st	(PreF (MF (NX *	_	
4	t6982_000	apfel	NA	apfel	Akk.Sg	 * )	_	
5	t6983_000	unde	KON	unte	_	 * ) )	_	
6	t6984_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
7	t6985_000	den	DDS	dër	Masc.Akk.Sg	(MF (NX * )	_	
8	t6986_000	würfeleht	ADJD	würfelëht	Pos....0	 * )	_	
9	t6987_000	-	$_	_	_	 *	_	
10	t6988_000	-	$_	_	_	 * )	_	
11	t6989_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
12	t6990_000	roeste	VVIMP	roèsten	Sg.2	(LB (VX * ) )	_	
13	t6991_000	den	DDS	dër	Masc.Akk.Sg	(PreF (MF (NX *	_	
14	t6992_000	in	APPR	in	_	(PPX *	_	
15	t6993_000	eineme	DIART	èin	Neut.Dat.Sg.st	(NX *	_	
16	t6994_000	smalze	NA	smalz	Dat.Sg	 * ) ) )	_	
17	t6995_000	unde	KON	unte	_	 * ) )	_	
18	t6996_000	ströuwe	VVIMP	ströuwen	Sg.2	(LB (VX * ) )	_	
19	t6997_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
20	t6998_000	ûf	APPR	ûf	_	(PPX *	_	
21	t6999_000	daz	DDS	dër	Neut.Akk.Sg	(NX *	_	
22	t7000_000	muos	NA	muos	Akk.Sg	 * ) ) ) )	_	
23	t7001_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7002_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7003_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
3	t7003_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t7004_000	hin	AVD	hin(e)	_	 * )	_	
5	t7005_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7006_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (NX *	_	
2	t7007_000	blâmensier	NA	blâmensièr	Akk.Sg	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7008_000	der	DRELS	dër	Masc.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7009_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t7010_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t7011_000	einen	DIART	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
5	t7012_000	blâmensier	NA	blâmensièr	Akk.Sg	 * ) )	_	
6	t7013_000	-	$_	_	_	 * )	_	
7	t7014_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t7015_000	neme	VVFIN	nëmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t7016_000	dicke	AVD	dicke	_	(MF *	_	
10	t7017_000	mandelmilch	NA	mandel-milch	Akk.Sg	(NX * ) )	_	
11	t7018_000	-	$_	_	_	 *	_	
12	t7019_000	unde	KON	unte	_	(Frag *	_	
13	t7020_000	hüener	NA	huon	Gen.Pl	(NX * )	_	
14	t7021_000	bruste	NA	brust	Akk.Pl	(NX *	_	
15	t7022_000	gezeiset	ADJN	zèisen	Pos.*..0	 * )	_	
16	t7023_000	-	$_	_	_	 * ) )	_	
17	t7024_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
18	t7025_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
19	t7026_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
20	t7027_000	in	APPR	in	_	(PPX *	_	
21	t7028_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
22	t7029_000	mandelmilch	NA	mandel-milch	Akk.Sg	 * ) ) ) )	_	
23	t7030_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7031_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7032_000	rüere	VVIMP	rüèren	Sg.2	(LB (VX * ) )	_	
3	t7033_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
4	t7034_000	mit	APPR	mit	_	(PPX *	_	
5	t7035_000	rîsmele	NA	rîs-mëlw	Dat.Sg	(NX * ) ) ) )	_	
6	t7036_000	-	$_	_	_	 *	_	
7	t7037_000	unde	KON	unte	_	(Frag *	_	
8	t7038_000	smalze	NA	smalz	Dat.Sg	(NX * )	_	
9	t7039_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * )	_	
10	t7040_000	-	$_	_	_	 * )	_	
11	t7041_000	unde	KON	unte	_	(Frag *	_	
12	t7042_000	zuckers	NA	zucker	Gen.Sg	(PreF (NX * ) )	_	
13	t7043_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
14	t7044_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(MF (NX * )	_	
15	t7045_000	dâr	PAVD	dâr/+zuo	_	 *	_	
16	t7046_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
17	t7047_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7048_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7049_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7050_000	ein	DIART	èin	*.*.*.0	(MF *	_	
4	t7051_000	blâmensier	NA	blâmensièr	Nom.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7052_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t7053_000	blâmensier	NA	blâmensièr	Akk.Sg	 * )	_	
3	t7054_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7055_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t7056_000	blâmensier	NA	blâmensièr	Nom.Sg	(NX * )	_	
3	t7057_000	gemachet	VVPP	machen	_	(VX * )	_	
4	t7058_000	von	APPR	von	_	(PPX *	_	
5	t7059_000	gezeisenen	ADJA	zèisen	Pos.*.Dat.Pl.*	(NX *	_	
6	t7060_000	hüenern	NA	huon	Dat.Pl	 *	_	
7	t7061_000	an	APPR	ane	_	(PPX *	_	
8	t7062_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
9	t7063_000	brust	NA	brust	Dat.Sg	 * ) ) ) )	_	
10	t7064_000	-	$_	_	_	 * )	_	
11	t7065_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7066_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7067_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t7068_000	eine	DIART	èin	Fem.Akk.Sg.st	(MF (NX *	_	
4	t7069_000	guote	ADJA	guot	Pos.Fem.Akk.Sg.st	 *	_	
5	t7070_000	mandelmilch	NA	mandel-milch	Akk.Sg	 * ) )	_	
6	t7071_000	-	$_	_	_	 *	_	
7	t7072_000	abe	AVD	abe	_	(Frag *	_	
8	t7073_000	geruort	ADJA	rüèren	Pos.*..0	 *	_	
9	t7074_000	hüener	NA	huon	Nom.Pl	(NX * )	_	
10	t7075_000	dinne	AVD	dinne	_	 *	_	
11	t7076_000	in	APPR	in	_	(PPX *	_	
12	t7077_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
13	t7078_000	mandelmilch	NA	mandel-milch	Dat.Sg	 *	_	
14	t7079_000	mit	APPR	mit	_	(PPX *	_	
15	t7080_000	rîsmele	NA	rîs-mëlw	Dat.Sg	(NX * ) ) ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7081_000	gedworene	ADJA	dwër(e)n	Pos.*.Akk.Pl.st	(S (Frag (NX *	_	
2	t7082_000	vîolbluomen	NA	vîol-bluome	Akk.Pl	 * )	_	
3	t7083_000	-	$_	_	_	 * )	_	
4	t7084_000	unde	KON	unte	_	(Frag *	_	
5	t7085_000	smalz	NA	smalz	Akk.Sg	(PreF (NX * ) )	_	
6	t7086_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
7	t7087_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(MF (NX * )	_	
8	t7088_000	dâr	PAVD	dâr/+zuo	_	 *	_	
9	t7089_000	zuo	PAVAP	zuo/dâr+	_	 * )	_	
10	t7090_000	-	$_	_	_	 * )	_	
11	t7091_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
12	t7092_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
13	t7092_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
14	t7093_000	gar	AVD	gar(e)	_	 * )	_	
15	t7094_000	-	$_	_	_	 *	_	
16	t7095_000	unde	KON	unte	_	(Frag *	_	
17	t7096_000	zuckers	NA	zucker	Gen.Sg	(NX * )	_	
18	t7097_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * )	_	
19	t7098_000	dâr	PAVD	dâr/+zuo	_	 *	_	
20	t7099_000	zuo	PAVAP	zuo/dâr+	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7100_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7101_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7102_000	ouch	KO*	ouch	_	(MF *	_	
4	t7103_000	ein	DIART	èin	*.*.*.0	 *	_	
5	t7104_000	blâmensier	NA	blâmensièr	Nom.Sg	(NX * ) )	_	
6	t7105_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7106_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t7107_000	stocken	ADJA	stocken	Pos.*.Akk.Sg.st	 *	_	
3	t7108_000	blâmensier	NA	blâmensièr	Akk.Sg	 * )	_	
4	t7109_000	gemachet	VVPP	machen	_	(VX * )	_	
5	t7110_000	mit	APPR	mit	_	(PPX *	_	
6	t7111_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
7	t7112_000	dicken	NA	dicke	Dat.Sg..f.w	 * ) )	_	
8	t7113_000	zamen	ADJA	zam	Pos.Fem.Dat.Sg.wk	(NX *	_	
9	t7114_000	milch	NA	milch	Dat.Sg	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7115_000	gezeiset	VVFIN	ge-zèisen	Ind.Pres.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t7116_000	-	$_	_	_	 *	_	
3	t7117_000	hüener	NA	huon	Gen.Pl	(Frag (NX * )	_	
4	t7118_000	brüste	NA	brust	Akk.Pl	(NX * )	_	
5	t7119_000	-	$_	_	_	 * ) )	_	
6	t7120_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
7	t7121_000	wirf	VVIMP	wërfen	Sg.2	(LB (VX * ) )	_	
8	t7122_000	die	DDS	dër	*.Akk.Pl	(MF (NX *	_	
9	t7123_000	in	APPR	in	_	(PPX *	_	
10	t7124_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
11	t7125_000	milch	NA	milch	Akk.Sg	 * ) ) ) )	_	
12	t7126_000	-	$_	_	_	 *	_	
13	t7127_000	unde	KON	unte	_	(Frag *	_	
14	t7128_000	der	DDS	dër	Masc.Nom.Sg	(PreF (NX * ) )	_	
15	t7129_000	welle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
16	t7130_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * ) )	_	
17	t7131_000	-	$_	_	_	 * ) )	_	
18	t7132_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
19	t7133_000	rüer	VVIMP	rüèren	Sg.2	(LB (VX * ) )	_	
20	t7134_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
21	t7135_000	mit	APPR	mit	_	(PPX *	_	
22	t7136_000	rîsmele	NA	rîs-mëlw	Dat.Sg	(NX * ) ) ) )	_	
23	t7137_000	-	$_	_	_	 *	_	
24	t7138_000	unde	KON	unte	_	(Frag *	_	
25	t7139_000	mit	APPR	mit	_	(PPX *	_	
26	t7140_000	eiertotern	NA	èier-toter	Dat.Pl	(NX * ) )	_	
27	t7141_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7142_000	unde	KON	unte	_	(S (Frag *	_	
2	t7143_000	smalz	NA	smalz	Akk.Sg	(NX * )	_	
3	t7144_000	geben	VVINF	gëben	_	(VX * )	_	
4	t7145_000	genuoc	NA	ge-nuog(e)	Nom.Sg	(NX * )	_	
5	t7146_000	-	$_	_	_	 * )	_	
6	t7147_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7148_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7149_000	ströuwe	VVIMP	ströuwen	Sg.2	(LB (VX * ) )	_	
3	t7150_000	dâr	PAVD	dâr/+ûf	_	(MF *	_	
4	t7151_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
5	t7152_000	zuckers	NA	zucker	Gen.Sg	(NX * )	_	
6	t7153_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7154_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7155_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7156_000	ein	DIA	èin	*.*.*.0	(MF *	_	
4	t7157_000	gestocket	VVPP	stocken	_	(VX * )	_	
5	t7158_000	blâmensier	NA	blâmensièr	Nom.Sg	(NX * ) )	_	
6	t7159_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7160_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t7161_000	vîolmuos	NA	vîol-muos	Nom.Sg	(NX * )	_	
3	t7162_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7163_000	der	DRELS	dër	Masc.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7164_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t7165_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t7166_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t7167_000	vîolmuos	NA	vîol-muos	Akk.Sg	(NX * ) )	_	
6	t7168_000	-	$_	_	_	 * )	_	
7	t7169_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t7170_000	neme	VVFIN	nëmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t7171_000	ein	DIART	èin	*.*.*.0	(MF *	_	
10	t7172_000	dicke	AVD	dicke	_	 *	_	
11	t7173_000	mandelmilch	NA	mandel-milch	Akk.Sg	(NX * )	_	
12	t7174_000	wole	AVD	wol(e)	_	 *	_	
13	t7175_000	gerüeret	ADJN	rüèren	Pos.*..0	 * )	_	
14	t7176_000	-	$_	_	_	 *	_	
15	t7177_000	-	$_	_	_	 *	_	
16	t7178_000	mit	APPR	mit	_	(Frag (PPX *	_	
17	t7179_000	rîsmele	NA	rîs-mëlw	Dat.Sg	(NX * ) )	_	
18	t7180_000	-	$_	_	_	 * ) )	_	
19	t7181_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
20	t7182_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
21	t7183_000	dâr	PAVD	dâr/+in	_	(MF *	_	
22	t7184_000	in	PAVAP	in/dâr+	_	 *	_	
23	t7185_000	smalzes	NA	smalz	Gen.Sg	(NX * )	_	
24	t7186_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * ) )	_	
25	t7187_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7188_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7189_000	verwe	VVFIN	vèrwen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t7189_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t7190_000	wole	AVD	wol(e)	_	 *	_	
5	t7191_000	mit	APPR	mit	_	(PPX *	_	
6	t7192_000	vîolbluomen	NA	vîol-bluome	Dat.Pl	(NX * ) ) )	_	
7	t7193_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7194_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7195_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7196_000	ein	DIART	èin	*.*.*.0	(MF *	_	
4	t7197_000	vîolmuos	NA	vîol-muos	Nom.Sg	(NX * ) )	_	
5	t7198_000	-	$_	_	_	 *	_	
6	t7199_000	ganz	ADJD	ganz	Pos....0	(MF * )	_	
7	t7200_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7201_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t7202_000	muos	NA	muos	Akk.Sg	(NX * )	_	
3	t7203_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7204_000	der	DRELS	dër	Masc.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7205_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t7206_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t7207_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t7208_000	morhemuos	NA	morhe-muos	Akk.Sg	(NX * ) ) )	_	
6	t7209_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
7	t7210_000	neme	VVFIN	nëmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
8	t7211_000	morhen	NA	morhe	Akk.Pl	(PreF (MF (NX * )	_	
9	t7212_000	unde	KON	unte	_	 * ) )	_	
10	t7213_000	erwelle	VVFIN	er-wëllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
11	t7214_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX *	_	
12	t7215_000	ûz	APPR	ûz	_	(PPX *	_	
13	t7216_000	einem	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
14	t7217_000	brunnen	NA	brunne	Dat.Sg	 * ) ) ) )	_	
15	t7218_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7219_000	unde	KON	unte	_	(S (Frag *	_	
2	t7220_000	geballen	VVINF	ge-ballen	_	(VX * )	_	
3	t7221_000	ûz	APPR	ûz	_	(PPX *	_	
4	t7222_000	eineme	DIART	èin	Neut.Dat.Sg.st	(NX *	_	
5	t7223_000	kaltem	ADJA	kalt	Pos.Neut.Dat.Sg.st	 *	_	
6	t7224_000	wazzer	NA	wazzer	Dat.Sg	 * ) )	_	
7	t7225_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7226_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7227_000	gehacket	VVFIN	ge-hacken	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7228_000	-	$_	_	_	 *	_	
4	t7229_000	kleine	ADJD	klèine	Pos....0	(Frag *	_	
5	t7230_000	unde	KON	unte	_	(PrePreF * )	_	
6	t7231_000	tuo	VVFIN	tuon	Subj.Pres.Sg.3	(LB (VX * ) )	_	
7	t7232_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
8	t7233_000	denne	AVD	danne	_	 *	_	
9	t7234_000	in	APPR	in	_	 *	_	
10	t7235_000	ein	DIA	èin	*.*.*.0	 *	_	
11	t7236_000	dicke	AVD	dicke	_	 *	_	
12	t7237_000	mandelmilch	NA	mandel-milch	Akk.Sg	(NX * ) )	_	
13	t7238_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7239_000	unde	KON	unte	_	(S (Frag *	_	
2	t7240_000	mit	APPR	mit	_	(PPX *	_	
3	t7241_000	wîne	NA	wîn	Dat.Sg	(NX * ) )	_	
4	t7242_000	wole	AVD	wol(e)	_	 *	_	
5	t7243_000	gemachet	ADJN	machen	Pos.*..0	 *	_	
6	t7244_000	-	$_	_	_	 * )	_	
7	t7245_000	die	DDART	dër	Fem.Akk.Sg	(Frag (NX *	_	
8	t7246_000	mandelmilch	NA	mandel-milch	Akk.Sg	 * )	_	
9	t7247_000	-	$_	_	_	 * )	_	
10	t7248_000	unde	KON	unte	_	(Frag *	_	
11	t7249_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
12	t7250_000	morhe	NA	morhe	Akk.Sg	 * )	_	
13	t7251_000	dâr	PAVD	dâr/.+inne	_	 *	_	
14	t7252_000	inne	PAVAP	inne/dâr.+	_	 *	_	
15	t7253_000	erwellet	ADJN	er-wèllen	Pos.*..0	 *	_	
16	t7254_000	-	$_	_	_	 * )	_	
17	t7255_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7256_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7257_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
3	t7258_000	dâr	PAVD	dâr/+ze	_	(MF *	_	
4	t7259_000	zuo	PTKA	ze/dâr+	_	 *	_	
5	t7260_000	würze	NA	würze	Gen.Pl	(NX * )	_	
6	t7261_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * ) )	_	
7	t7262_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7263_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7264_000	verwe	VVIMP	vèrwen	Sg.2	(LB (VX * ) )	_	
3	t7265_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
4	t7266_000	mit	APPR	mit	_	(PPX *	_	
5	t7267_000	vîolbluomen	NA	vîol-bluome	Dat.Pl	(NX * ) ) )	_	
6	t7268_000	unde	KON	unte	_	 * ) )	_	
7	t7269_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
8	t7269_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
9	t7270_000	hin	AVD	hin(e)	_	 * )	_	
10	t7271_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7272_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t7273_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t7274_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t7275_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t7276_000	nüzzemuos	NA	nüzze-muos	Akk.Sg	(NX * ) )	_	
6	t7277_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7278_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t7279_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t7280_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t7281_000	ein	DIA	èin	*.*.*.0	(PostF *	_	
5	t7282_000	nüzzemuos	NA	nüzze-muos	Akk.Sg	(NX * ) )	_	
6	t7283_000	-	$_	_	_	 * )	_	
7	t7284_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t7285_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
9	t7286_000	nüzzekerne	NA	nüzze-kërn	Akk.Pl	(MF (NX * ) )	_	
10	t7287_000	-	$_	_	_	 * )	_	
11	t7288_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
12	t7289_000	stôz	VVIMP	stôzen	Sg.2	(LB (VX * ) )	_	
13	t7290_000	die	DDS	dër	*.Akk.Pl	(MF (NX * )	_	
14	t7291_000	kleine	ADJD	klèine	Pos....0	 * )	_	
15	t7292_000	-	$_	_	_	 * )	_	
16	t7293_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
17	t7294_000	slahe	VVIMP	slahen	Sg.2	(LB (VX * ) )	_	
18	t7295_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
19	t7296_000	durch	APPR	durh	_	 *	_	
20	t7297_000	ein	DIART	èin	*.*.*.0	 *	_	
21	t7298_000	tuoch	NA	tuoch	Akk.Sg	(NX *	_	
22	t7299_000	mit	APPR	mit	_	(PPX *	_	
23	t7300_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
24	t7301_000	süezen	ADJA	süèze	Pos.Fem.Dat.Sg.wk	 *	_	
25	t7302_000	zamen	ADJA	zam	Pos.Fem.Dat.Sg.wk	 *	_	
26	t7303_000	milch	NA	milch	Dat.Sg	 * ) ) ) )	_	
27	t7304_000	-	$_	_	_	 *	_	
28	t7305_000	unde	KON	unte	_	(Frag *	_	
29	t7306_000	mit	APPR	mit	_	(PPX *	_	
30	t7307_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
31	t7308_000	brosemen	NA	bros(e)m(e)	Dat.Sg	 *	_	
32	t7309_000	semelbrôtes	NA	sëmel-brôt	Gen.Sg	(NX * ) ) ) )	_	
33	t7310_000	wole	AVD	wol(e)	_	(Frag *	_	
34	t7311_000	gesoten	ADJN	sièden	Pos.*..0	 *	_	
35	t7312_000	in	APPR	in	_	(PPX *	_	
36	t7313_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
37	t7314_000	havene	NA	haven	Dat.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7315_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7316_000	gibe	VVFIN	gëben	Ind.Pres.Sg.1	(LB (VX * ) )	_	
3	t7317_000	smalz	NA	smalz	Akk.Sg	(MF (NX *	_	
4	t7318_000	genuoc	NA	ge-nuog(e)	Akk.Sg	 * )	_	
5	t7319_000	dâr	PAVD	dâr/+âne	_	 *	_	
6	t7319_001	âne	AVD-KO*	âne/dâr+	_	 * )	_	
7	t7320_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7321_000	unde	KON	unte	_	(S (Frag *	_	
2	t7322_000	mit	APPR	mit	_	(PPX *	_	
3	t7323_000	eiertotern	NA	èier-toter	Dat.Pl	(NX * ) )	_	
4	t7324_000	-	$_	_	_	 * )	_	
5	t7325_000	wole	AVD	wol(e)	_	(Frag *	_	
6	t7326_000	abe	AVD	abe	_	 *	_	
7	t7327_000	geruort	VVPP	rüèren	_	(VX * )	_	
8	t7328_000	-	$_	_	_	 *	_	
9	t7329_000	-	$_	_	_	 * )	_	
10	t7330_000	unde	KON	unte	_	(Frag *	_	
11	t7331_000	wole	AVD	wol(e)	_	 *	_	
12	t7332_000	geverwet	VVPP	ge-vèrwen	_	(VX * )	_	
13	t7333_000	mit	APPR	mit	_	(PPX *	_	
14	t7334_000	safrâne	NA	safrân	Dat.Sg	(NX * ) )	_	
15	t7335_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7336_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t7337_000	birenmuos	NA	bir(e)n-muos	Nom.Sg	(NX * )	_	
3	t7338_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7339_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t7340_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * ) )	_	
3	t7341_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t7342_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
5	t7343_000	birenmuos	NA	bir(e)n-muos	Akk.Sg	(NX * ) )	_	
6	t7344_000	-	$_	_	_	 * )	_	
7	t7345_000	sô	AVD	sô	_	(Cl (PreF (PreF (PreF * ) ) )	_	
8	t7346_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
9	t7347_000	biren	NA	bir(e)	Akk.Pl	(PreF (MF (NX * )	_	
10	t7348_000	unde	KON	unte	_	 * ) )	_	
11	t7349_000	besnîde	VVFIN	be-snîden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
12	t7350_000	die	DDS	dër	*.Akk.Pl	(PreF (MF (NX * )	_	
13	t7351_000	schoene	ADJD	schoène	Pos....0	 *	_	
14	t7352_000	unde	KON	unte	_	 * ) )	_	
15	t7353_000	siude	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
16	t7354_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
17	t7355_000	in	APPR	in	_	(PPX *	_	
18	t7356_000	einem	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
19	t7357_000	havene	NA	haven	Dat.Sg	 *	_	
20	t7358_000	mit	APPR	mit	_	(PPX *	_	
21	t7359_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
22	t7360_000	wîne	NA	wîn	Dat.Sg	 * ) ) ) ) ) )	_	
23	t7361_000	-	$_	_	_	 *	_	
24	t7362_000	unde	KON	unte	_	(Frag *	_	
25	t7363_000	mit	APPR	mit	_	(PPX *	_	
26	t7364_000	smalze	NA	smalz	Dat.Sg	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7365_000	unde	KON	unte	_	(S (Frag *	_	
2	t7366_000	durch	AVD	durh	_	 *	_	
3	t7367_000	geslagen	VVPP	slahen	_	(VX * )	_	
4	t7368_000	durch	APPR	durh	_	 *	_	
5	t7369_000	ein	DIA	èin	*.*.*.0	 *	_	
6	t7370_000	tuoch	NA	tuoch	Akk.Sg	(NX * )	_	
7	t7371_000	unde	KON	unte	_	(PrePreF * )	_	
8	t7372_000	erwelle	VVIMP	er-wèllen	Sg.2	(LB (VX * ) )	_	
9	t7373_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
10	t7374_000	denne	AVD	danne	_	 *	_	
11	t7375_000	mit	APPR	mit	_	(PPX *	_	
12	t7376_000	eiertotern	NA	èier-toter(e)	Dat.Pl	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7377_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7378_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7379_000	gar	AVD	gar(e)	_	(MF *	_	
4	t7380_000	ganz	ADJD	ganz	Pos....0	 * )	_	
5	t7381_000	-	$_	_	_	 *	_	
6	t7382_000	dô	AVD	dô	_	(MF * )	_	
7	t7383_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7384_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t7385_000	wîhselmuos	NA	wîhsel-muos	Nom.Sg	(NX * )	_	
3	t7386_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7387_000	der	DRELS	dër	Masc.Nom.Sg	(S (Frag (NX * )	_	
2	t7388_000	denne	AVD	danne	_	(PreF * )	_	
3	t7389_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
4	t7390_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
5	t7391_000	ein	DIART	èin	*.*.*.0	(PostF *	_	
6	t7392_000	kirsenmuos	NA	kirsen-muos	Akk.Sg	(NX * ) )	_	
7	t7393_000	-	$_	_	_	 *	_	
8	t7394_000	der	DRELS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
9	t7395_000	breche	VVFIN	brëchen/abe<.+	Subj.Pres.Sg.3	(LB (VX * ) )	_	
10	t7396_000	die	DDART	dër	*.Akk.Pl	(MF (NX *	_	
11	t7397_000	stile	NA	stil	Akk.Pl	 * ) )	_	
12	t7398_000	abe	PTKVZ	abe/<.+brëchen	_	(RB * )	_	
13	t7399_000	-	$_	_	_	 * ) )	_	
14	t7400_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
15	t7401_000	siede	VVFIN	sièden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
16	t7402_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
17	t7403_000	mit	APPR	mit	_	 *	_	
18	t7404_000	ein	DIA	èin	*.*.*.0	 *	_	
19	t7405_000	wênige	NA	wênig	Dat.Sg	(NX *	_	
20	t7406_000	wînes	NA	wîn	Gen.Sg	(NX * ) ) )	_	
21	t7407_000	-	$_	_	_	 * )	_	
22	t7408_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
23	t7409_000	slahe	VVFIN	slahen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
24	t7410_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
25	t7411_000	denne	AVD	danne	_	 *	_	
26	t7412_000	durch	APPR	durh	_	 *	_	
27	t7413_000	ein	DIA	èin	*.*.*.0	 *	_	
28	t7414_000	tuoch	NA	tuoch	Akk.Sg	(NX *	_	
29	t7415_000	mit	APPR	mit	_	(PPX *	_	
30	t7416_000	einer	DIA	èin	Fem.Gen.Sg.st	(NX *	_	
31	t7417_000	semel	NA	sëmel(e)	Gen.Sg	 * ) ) )	_	
32	t7417_001	brosemen	NA	bros(e)m(e)	Dat.Sg	(NX * ) )	_	
33	t7418_000	-	$_	_	_	 *	_	
34	t7419_000	wole	KO*	wol(e)	_	(Frag *	_	
35	t7420_000	der	DDS	dër	Masc.Nom.Sg	(PreF (NX * ) )	_	
36	t7421_000	wellet	VVFIN	wallen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
37	t7422_000	in	APPR	in	_	(MF (PPX *	_	
38	t7423_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
39	t7424_000	havene	NA	haven	Dat.Sg	 * ) ) )	_	
40	t7425_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7426_000	unde	KON	unte	_	(S (Frag *	_	
2	t7427_000	dû	PPER	dû	Nom.Sg.2	(NX *	_	
3	t7428_000	smalzes	NA	smalz	Gen.Sg	(NX * ) )	_	
4	t7429_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * )	_	
5	t7430_000	dâr	PAVD	dâr/+âne	_	 *	_	
6	t7430_001	âne	AVD-KO*	âne/dâr+	_	 *	_	
7	t7431_000	-	$_	_	_	 * )	_	
8	t7432_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
9	t7433_000	rüer	VVIMP	rüèren	Sg.2	(LB (VX * ) )	_	
10	t7434_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
11	t7435_000	denne	AVD	danne	_	 *	_	
12	t7436_000	mit	APPR	mit	_	(PPX *	_	
13	t7437_000	eiertotern	NA	èier-toter(e)	Dat.Pl	(NX * ) ) )	_	
14	t7438_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7439_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7440_000	ströuwe	VVIMP	ströuwen	Sg.2	(LB (VX * ) )	_	
3	t7441_000	würze	NA	wurz(e)	Akk.Pl	(MF (NX * )	_	
4	t7442_000	dâr	PAVD	dâr/+ûf	_	 *	_	
5	t7443_000	ûf	PAVAP	ûf/dâr+	_	 * )	_	
6	t7444_000	sô	KO*	sô	_	(Frag *	_	
7	t7445_000	man	PI	man	*.Nom.Sg.st	(NX * )	_	
8	t7445_001	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
9	t7446_000	an	PTKVZ	ane/>+rihten	_	(PreF (VX *	_	
10	t7447_000	rihten	VVINF	rihten/ane>+	_	 * ) )	_	
11	t7448_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t7449_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7450_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t7451_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t7452_000	vülle	NA	vülle	Nom.Sg	(NX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7453_000	konkavelite	NA	konkavelite	Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7454_000	maht	VMFIN	mügen	Ind.Pres.Sg.2	(LB (VX * ) )	_	
3	t7455_000	man	PI	man	*.Nom.Sg.st	(MF (NX *	_	
4	t7456_000	von	APPR	von	_	(PPX *	_	
5	t7457_000	kersen	NA	kërse	Dat.Pl	(NX * ) ) ) ) )	_	
6	t7458_000	von	APPR	von	_	(PPX *	_	
7	t7459_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
8	t7460_000	sûren	ADJA	sûr	Pos.*.Dat.Pl.*	 *	_	
9	t7461_000	kersen	NA	kërse	Dat.Pl	 * ) )	_	
10	t7462_000	daz	DDS	dër	Neut.Akk.Sg	(Cl (PreF (NX * ) )	_	
11	t7463_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
12	t7464_000	wiseln	NA	wisel(e)	Dat.Pl	(MF (NX * ) )	_	
13	t7465_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7466_000	die	DDS	dër	*.Akk.Pl	(S (Cl (PreF (NX * ) )	_	
2	t7467_000	sol	VMFIN	sol(e)n	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7468_000	man	PI	man	*.Nom.Sg.st	(MF (NX * ) )	_	
4	t7469_000	nemen	VVINF	nëmen	_	(RB (VX * ) )	_	
5	t7470_000	-	$_	_	_	 * )	_	
6	t7471_000	unde	KON	unte	_	(Frag *	_	
7	t7472_000	von	APPR	von	_	(PPX *	_	
8	t7473_000	mandelkernen	NA	mandel-kërn(e)	Dat.Pl	(NX * ) )	_	
9	t7474_000	eine	DIART	èin	Fem.Akk.Sg.st	(NX *	_	
10	t7475_000	guoten	ADJA	guot	Pos.Fem.Akk.Sg.wk	 *	_	
11	t7476_000	mandelmilch	NA	mandel-milch	Akk.Sg	 * )	_	
12	t7477_000	machen	VVINF	machen	_	(VX * )	_	
13	t7478_000	-	$_	_	_	 * )	_	
14	t7479_000	unde	KON	unte	_	(Frag *	_	
15	t7480_000	mit	APPR	mit	_	(PPX *	_	
16	t7481_000	einen	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
17	t7482_000	wîne	NA	wîn	Dat.Sg	 * ) )	_	
18	t7483_000	die	DDS	dër	*.Akk.Pl	(NX *	_	
19	t7484_000	kersen	NA	kërse	Akk.Pl	 * )	_	
20	t7485_000	wole	AVD	wol(e)	_	 *	_	
21	t7486_000	gesoten	VVPP	sièden	_	(VX * )	_	
22	t7487_000	-	$_	_	_	 * )	_	
23	t7488_000	unde	KON	unte	_	(Frag *	_	
24	t7489_000	mit	APPR	mit	_	 *	_	
25	t7490_000	ire	DPOSA	ir(e)	*.*.*.0	 *	_	
26	t7491_000	eigen	ADJA	èigen	Pos.*..0	 *	_	
27	t7492_000	briue	NA	briu	Dat.Sg	(NX * )	_	
28	t7493_000	-	$_	_	_	 * )	_	
29	t7494_000	unde	KON	unte	_	(Frag *	_	
30	t7495_000	geslagen	VVPP	slahen	_	(VX * )	_	
31	t7496_000	durch	APPR	durh	_	 *	_	
32	t7497_000	ein	DIART	èin	*.*.*.0	 *	_	
33	t7498_000	tuoch	NA	tuoch	Akk.Sg	(NX * )	_	
34	t7499_000	-	$_	_	_	 * )	_	
35	t7500_000	unde	KON	unte	_	(Frag *	_	
36	t7501_000	-	$_	_	_	 * )	_	
37	t7502_000	denne	AVD	danne	_	(Frag *	_	
38	t7503_000	gegozzen	VVPP	gièzen	_	(VX * )	_	
39	t7504_000	in	APPR	in	_	(PPX *	_	
40	t7505_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
41	t7506_000	mandelmilch	NA	mandel-milch	Akk.Sg	 * ) )	_	
42	t7507_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7508_000	unde	KON	unte	_	(S (Frag *	_	
2	t7509_000	gar	AVD	gar(e)	_	 *	_	
3	t7510_000	gesoten	VVPP	sièden	_	(VX * )	_	
4	t7511_000	in	APPR	in	_	(PPX *	_	
5	t7512_000	eineme	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
6	t7513_000	havene	NA	haven	Dat.Sg	 * ) )	_	
7	t7514_000	-	$_	_	_	 * )	_	
8	t7515_000	unde	KON	unte	_	(Frag *	_	
9	t7516_000	dâr	PAVD	dâr/+zuo	_	 *	_	
10	t7517_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
11	t7518_000	wole	AVD	wol(e)	_	 *	_	
12	t7519_000	geruort	VVPP	rüèren	_	(VX * )	_	
13	t7520_000	mit	APPR	mit	_	(PPX *	_	
14	t7521_000	rîsmele	NA	rîs-mëlw	Dat.Sg	(NX * ) )	_	
15	t7522_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7523_000	unde	KON	unte	_	(S (Frag *	_	
2	t7524_000	smalz	NA	smalz	Akk.Sg	(NX * )	_	
3	t7525_000	genuoc	AVD	ge-nuog(e)	_	 *	_	
4	t7526_000	dâr	PAVD	dâr/+ane	_	(VX *	_	
5	t7527_000	an	PAVAP	ane/dâr+	_	 *	_	
6	t7528_000	getân	VVPP	tuon	_	 * )	_	
7	t7529_000	-	$_	_	_	 * )	_	
8	t7530_000	unde	KON	unte	_	(Frag *	_	
9	t7531_000	ouch	AVD	ouch	_	 *	_	
10	t7532_000	würze	NA	wurz(e)	Gen.Pl	(NX * )	_	
11	t7533_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * )	_	
12	t7534_000	unde	KON	unte	_	 *	_	
13	t7535_000	zucker	NA	zucker	Akk.Sg	(NX * )	_	
14	t7536_000	dâr	PAVD	dâr/+ûf	_	 *	_	
15	t7537_000	ûf	PAVAP	ûf/dâr+	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7538_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7539_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
3	t7539_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t7540_000	niht	PTKNEG	niht	_	 * )	_	
5	t7541_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7542_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t7543_000	kumpost	NA	kumpost	Nom.Sg	(NX *	_	
3	t7544_000	von	APPR	von	_	(PPX *	_	
4	t7545_000	wîhseln	NA	wîhsel(e)	Dat.Pl	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7546_000	der	DRELS	dër	Masc.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7547_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t7548_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
4	t7549_000	einen	DIART	èin	Masc.Akk.Sg.st	(PostF (NX *	_	
5	t7550_000	kumpost	NA	kumpost	Akk.Sg	 *	_	
6	t7551_000	von	APPR	von	_	(PPX *	_	
7	t7552_000	sûren	ADJA	sûr	Pos.*.Dat.Pl.*	(NX *	_	
8	t7553_000	wiseln	NA	wisel(e)	Dat.Pl	 * ) ) ) )	_	
9	t7554_000	-	$_	_	_	 * )	_	
10	t7555_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
11	t7556_000	neme	VVFIN	nëmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
12	t7557_000	sûr	ADJA	sûr	Pos.*..0	(PreF (MF *	_	
13	t7558_000	wiseln	NA	wisel(e)	Akk.Pl	(NX * )	_	
14	t7559_000	unde	KON	unte	_	 * ) )	_	
15	t7560_000	breche	VVFIN	brëchen/abe<.+	Subj.Pres.Sg.3	(LB (VX * ) )	_	
16	t7561_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
17	t7562_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
18	t7563_000	stile	NA	stil	Akk.Pl	 * ) )	_	
19	t7564_000	abe	PTKVZ	abe/<.+brëchen	_	(RB * )	_	
20	t7565_000	-	$_	_	_	 * )	_	
21	t7566_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
22	t7567_000	siede	VVFIN	sièden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
23	t7568_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX *	_	
24	t7569_000	in	APPR	in	_	(PPX *	_	
25	t7570_000	einem	DIA	èin	Masc.Dat.Sg.st	(NX *	_	
26	t7571_000	havene	NA	haven	Dat.Sg	 * ) ) )	_	
27	t7572_000	mit	APPR	mit	_	 *	_	
28	t7573_000	ire	DPOSA	ir(e)	*.*.*.0	 *	_	
29	t7574_000	eigene	NA	èigen	Dat.Sg	(NX *	_	
30	t7575_000	briue	NA	briu	Dat.Sg	 * ) )	_	
31	t7576_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7577_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7578_000	swenne	AVG	swanne	_	(LB * )	_	
3	t7579_000	sie	PPER	ër	*.Nom.Pl.3	(MF (NX * ) )	_	
4	t7580_000	gesieden	VVFIN	ge-sièden	*.Pres.Pl.3	(RB (VX * ) ) )	_	
5	t7581_000	sô	KO*	sô	_	(Cl (PreF * )	_	
6	t7582_000	schütet	VVIMP	schüten	Pl.2	(LB (VX * ) )	_	
7	t7583_000	sie	PPER	ër	Fem.Nom.Sg.3	(MF (NX * )	_	
8	t7584_000	ûz	AVD	ûz	_	 * )	_	
9	t7585_000	-	$_	_	_	 * )	_	
10	t7586_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
11	t7587_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
12	t7588_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
13	t7589_000	küeln	VVINF	küèlen	_	(VX * ) )	_	
14	t7590_000	-	$_	_	_	 * )	_	
15	t7591_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
16	t7592_000	slahe	VVIMP	slahen	Sg.2	(LB (VX * ) )	_	
17	t7593_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
18	t7594_000	durch	APPR	durh	_	 *	_	
19	t7595_000	ein	DIA	èin	*.*.*.0	 *	_	
20	t7596_000	tuoch	NA	tuoch	Akk.Sg	(NX * ) )	_	
21	t7597_000	-	$_	_	_	 * )	_	
22	t7598_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
23	t7599_000	schüte	VVIMP	schüten	Sg.2	(LB (VX * ) )	_	
24	t7600_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
25	t7601_000	denne	AVD	danne	_	 *	_	
26	t7602_000	in	APPR	in	_	(PPX *	_	
27	t7603_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
28	t7604_000	haven	NA	haven	Akk.Sg	 * ) ) )	_	
29	t7605_000	der	DRELS	dër	Masc.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
30	t7606_000	gebichet	VVPP	bichen	_	(MF (VX * )	_	
31	t7607_000	-	$_	_	_	 * )	_	
32	t7608_000	sî	VAFIN	sîn	Subj.Pres.Sg.3	(RB (VX * ) ) ) ) )	_	
33	t7609_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
34	t7610_000	schüte	VVIMP	schüten	Sg.2	(LB (VX * ) )	_	
35	t7611_000	die	DDS	dër	Fem.Nom.Sg	(MF (NX * )	_	
36	t7612_000	kirsen	VVINF	kirsen	_	(VX * )	_	
37	t7613_000	dâr	PAVD	dâr/+in	_	 *	_	
38	t7613_001	in	PAVAP	in/dâr+	_	 * )	_	
39	t7614_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7615_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7616_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
3	t7617_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX *	_	
4	t7618_000	mit	APPR	mit	_	(PPX *	_	
5	t7619_000	honige	NA	honig	Dat.Sg	(NX * ) ) ) )	_	
6	t7620_000	-	$_	_	_	 * )	_	
7	t7621_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t7622_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
9	t7623_000	galgan	NA	galgan	Akk.Sg	(PreF (MF (NX *	_	
10	t7624_000	wurze	NA	wurz(e)	Akk.Sg	 * ) ) )	_	
11	t7625_000	dâr	PAVD	dâr/+unter	_	(LB (VX *	_	
12	t7625_001	under	PAVAP	unter/dâr+	_	 *	_	
13	t7626_000	ströuwet	VVFIN	ströuwen	Ind.Pres.Sg.3	 * ) )	_	
14	t7627_000	-	$_	_	_	 * )	_	
15	t7628_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7629_000	der	DRELS	dër	Masc.Nom.Sg	(S (Cl (LB (NX * ) )	_	
2	t7630_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
3	t7631_000	ze	APPR	ze	_	(PPX *	_	
4	t7631_001	hant	NA	hant	Dat.Sg	(NX * ) ) )	_	
5	t7632_000	ezzen	NA	ëzzen	Akk.Sg	(NX * ) )	_	
6	t7633_000	wile	VMFIN	wèllen	Ind.Pres.Sg.3	(RB (VX * ) ) )	_	
7	t7634_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
8	t7635_000	lâze	VVFIN	lâzen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t7636_000	âne	APPR	âne	_	(MF (PPX *	_	
10	t7637_000	wurze	NA	wurz(e)	Akk.Sg	(NX * ) ) )	_	
11	t7638_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7639_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t7640_000	vladen	NA	vlade	Akk.Sg	 *	_	
3	t7641_000	von	APPR	von	_	(PPX *	_	
4	t7642_000	wîhseln	NA	wîhsel(e)	Dat.Pl	(NX * ) ) )	_	
5	t7643_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7644_000	der	DRELS	dër	Masc.Nom.Sg	(S (Frag (NX * )	_	
2	t7645_000	einen	DIART	èin	*.Dat.Pl.st	(PreF (NX *	_	
3	t7646_000	vladen	NA	vlade	Dat.Pl	 * ) )	_	
4	t7647_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
5	t7648_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t7649_000	von	APPR	von	_	(PostF (PPX *	_	
7	t7650_000	wiseln	NA	wisel(e)	Dat.Pl	(NX * ) ) )	_	
8	t7651_000	-	$_	_	_	 * )	_	
9	t7652_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t7653_000	neme	VVFIN	nëmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
11	t7654_000	sie	PPER	ër	Fem.Akk.Sg.3	(PreF (MF (NX * )	_	
12	t7655_000	unde	KON	unte	_	 * ) )	_	
13	t7656_000	breche	VVFIN	brëchen/abe<.+	Subj.Pres.Sg.3	(LB (VX * ) )	_	
14	t7657_000	in	APPR	in	_	(MF (PPX *	_	
15	t7658_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
16	t7659_000	stile	NA	stil	Akk.Pl	 * ) ) )	_	
17	t7660_000	abe	PTKVZ	abe/<.+brëchen	_	(RB * )	_	
18	t7661_000	-	$_	_	_	 * )	_	
19	t7662_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
20	t7663_000	siede	VVFIN	sièden	Subj.Pres.Sg.3	(LB (VX * ) )	_	
21	t7664_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX *	_	
22	t7665_000	in	APPR	in	_	(PPX *	_	
23	t7666_000	einen	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
24	t7667_000	havene	NA	haven	Dat.Sg	 * ) ) ) )	_	
25	t7668_000	biz	KOUS	biz	_	(PostF (Cl (LB * )	_	
26	t7669_000	sie	PPER	ër	*.Nom.Pl.3	(MF (NX * )	_	
27	t7670_000	trucken	ADJD	trucken	Pos....0	 * )	_	
28	t7671_000	werden	VAFIN	wërden	*.Pres.Pl.3	(RB (VX * ) ) ) )	_	
29	t7672_000	mit	APPR	mit	_	(Frag (PPX *	_	
30	t7673_000	sîn	PPER	ër	Masc.Gen.Sg.3	(NX *	_	
31	t7674_000	selbes	DDA	sëlb	Masc.Gen.Sg.st	 * ) )	_	
32	t7675_000	briue	NA	briu	Dat.Sg	(NX * )	_	
33	t7676_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7677_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7678_000	schüte	VVFIN	schüten	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t7679_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
4	t7680_000	denne	AVD	danne	_	 *	_	
5	t7681_000	ûz	AVD	ûz	_	 * )	_	
6	t7682_000	-	$_	_	_	 * )	_	
7	t7683_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t7684_000	lâze	VVFIN	lâzen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t7685_000	sie	PPER	ër	*.Akk.Pl.3	(MF (NX * )	_	
10	t7686_000	erküeln	VVINF	er-küèlen	_	(VX * ) )	_	
11	t7687_000	-	$_	_	_	 * )	_	
12	t7688_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t7689_000	slahe	VVFIN	slahen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
14	t7690_000	sie	PPER	ër	Fem.Akk.Sg.3	(MF (NX * )	_	
15	t7691_000	durch	APPR	durh	_	 *	_	
16	t7692_000	ein	DIA	èin	*.*.*.0	 *	_	
17	t7693_000	tuoch	NA	tuoch	Akk.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7694_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7695_000	smirwe	VVFIN	smirwen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t7696_000	ein	DIART	èin	*.*.*.0	(MF *	_	
4	t7697_000	taveln	NA	tavel(e)	Akk.Sg	(NX * )	_	
5	t7698_000	wole	AVD	wol(e)	_	 *	_	
6	t7699_000	mit	APPR	mit	_	(PPX *	_	
7	t7700_000	honige	NA	honig	Dat.Sg	(NX * ) ) )	_	
8	t7701_000	-	$_	_	_	 * )	_	
9	t7702_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
10	t7703_000	schüte	VVFIN	schüten	Subj.Pres.Sg.3	(LB (VX * ) )	_	
11	t7704_000	die	DDART	dër	*.Akk.Pl	(MF (NX *	_	
12	t7705_000	kersen	NA	kërse	Akk.Pl	 * )	_	
13	t7706_000	dâr	PAVD	dâr/+ûf	_	 *	_	
14	t7707_000	ûf	PAVAP	ûf/dâr+	_	 * )	_	
15	t7708_000	-	$_	_	_	 * )	_	
16	t7709_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
17	t7710_000	setze	VVFIN	sètzen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
18	t7711_000	die	DDART	dër	Fem.Akk.Sg	(MF (NX *	_	
19	t7712_000	taveln	NA	tavel(e)	Akk.Sg	 *	_	
20	t7713_000	ûf	APPR	ûf	_	(PPX *	_	
21	t7714_000	holze	NA	holz	Dat.Sg	(NX *	_	
22	t7715_000	an	APPR	ane	_	(PPX *	_	
23	t7716_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
24	t7717_000	luft	NA	luft	Akk.Sg	 * ) ) ) ) ) )	_	
25	t7718_000	biz	KOUS	biz	_	(PostF (Frag *	_	
26	t7719_000	daz	KOUS	dazz	_	 *	_	
27	t7720_000	ez	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
28	t7721_000	trucken	ADJD	trucken	Pos....0	 *	_	
29	t7722_000	si	PPER	ër	Fem.Nom.Sg.3	(NX * )	_	
30	t7723_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7724_000	hæte	VAFIN	haben	Subj.Past.Sg.3	(S (Cl (LB (VX * ) )	_	
2	t7725_000	der	DDS	dër	Masc.Nom.Sg	(MF (NX *	_	
3	t7726_000	des	DDART	dër	Masc.Gen.Sg	(NX *	_	
4	t7727_000	luftes	NA	luft	Gen.Sg	 * ) ) )	_	
5	t7728_000	-	$_	_	_	 *	_	
6	t7729_000	niht	NA	niht	Akk.Sg	(MF (NX * ) ) )	_	
7	t7730_000	sô	AVD	sô	_	(Cl (PreF * )	_	
8	t7731_000	setze	VVFIN	sètzen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
9	t7732_000	in	APPR	in	_	(MF *	_	
10	t7733_000	einen	DIART	èin	Masc.Dat.Sg.st	 *	_	
11	t7734_000	küel	ADJD	küèle	Pos....0	 *	_	
12	t7735_000	hove	NA	hov	Dat.Sg	(NX * ) )	_	
13	t7736_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7737_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7738_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t7739_000	daz	DDART	dër	Neut.Nom.Sg	(MF *	_	
4	t7740_000	würfeleht	ADJD	würfelëht	Pos....0	 * )	_	
5	t7741_000	-	$_	_	_	 * )	_	
6	t7742_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
7	t7743_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
8	t7743_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
9	t7744_000	unde	KON	unte	_	 * ) )	_	
10	t7745_000	beströuwe	VVFIN	be-ströuwen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
11	t7745_001	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX *	_	
12	t7746_000	mit	APPR	mit	_	(PPX *	_	
13	t7747_000	würzen	NA	wurz(e)	Dat.Pl	(NX * ) ) ) )	_	
14	t7748_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7749_000	unde	KON	unte	_	(S (Frag *	_	
2	t7750_000	iz	PPER	ër	Neut.Nom.Sg.3	(NX * )	_	
3	t7751_000	als	KO*	all-sô	_	 *	_	
4	t7752_000	ein	DIART	èin	*.*.*.0	 *	_	
5	t7753_000	latwârje	NA	latwârje	Nom.Sg	(NX * )	_	
6	t7754_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7755_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t7756_000	vladen	NA	vlade	Akk.Sg	 * )	_	
3	t7757_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7758_000	der	DRELS	dër	Masc.Nom.Sg	(S (Frag (NX * )	_	
2	t7759_000	einen	DIART	èin	Masc.Akk.Sg.st	(PreF (NX *	_	
3	t7760_000	vladen	NA	vlade	Akk.Sg	 * ) )	_	
4	t7761_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
5	t7762_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t7763_000	von	APPR	von	_	(PostF (PPX *	_	
7	t7764_000	vleische	NA	vlèisch	Dat.Sg	(NX * ) ) )	_	
8	t7765_000	-	$_	_	_	 * )	_	
9	t7766_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
10	t7767_000	neme	VVFIN	nëmen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
11	t7768_000	vleisch	NA	vlèisch	Akk.Sg	(MF (NX * ) )	_	
12	t7769_000	daz	DRELS	dër	Neut.Nom.Sg	(PostF (Cl (LB (NX * ) )	_	
13	t7770_000	dâ	AVD	dâr	_	(MF * )	_	
14	t7771_000	gê	VVFIN	gân	Subj.Pres.Sg.3	(RB (VX * ) )	_	
15	t7772_000	von	APPR	von	_	(PostF (PPX *	_	
16	t7773_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
17	t7774_000	lumbel	NA	lumbel	Dat.Sg	 * ) )	_	
18	t7775_000	oder	KON	oder	_	 *	_	
19	t7776_000	von	APPR	von	_	(PPX *	_	
20	t7777_000	dem	DDART	dër	Masc.Dat.Sg	(NX *	_	
21	t7778_000	wanste	NA	wanst	Dat.Sg	 * ) ) )	_	
22	t7779_000	-	$_	_	_	 * ) ) )	_	
23	t7780_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
24	t7781_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
25	t7782_000	knochen	NA	knoche	Akk.Pl	(MF (NX * ) )	_	
26	t7783_000	unde	KON	unte	_	(PostF (Cl (PrePreF * )	_	
27	t7784_000	daz	KOUS	dazz	_	(LB * )	_	
28	t7785_000	daz	DDS	dër	Neut.Nom.Sg	(MF (NX * )	_	
29	t7786_000	wole	AVD	wol(e)	_	 * )	_	
30	t7787_000	gesuten	VVFIN	ge-sièden	*.Past.Pl.3	(PreF (RB (VX * ) ) )	_	
31	t7788_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(LB (VX (VX * )	_	
32	t7789_000	unde	KON	unte	_	 *	_	
33	t7790_000	hacke	VVFIN	hacken	Subj.Pres.Sg.3	(VX * ) ) )	_	
34	t7790_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
35	t7791_000	kleine	ADJD	klèine	Pos....0	 * )	_	
36	t7792_000	-	$_	_	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7793_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7794_000	rîbe	VVFIN	rîben	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t7795_000	halp	ADJD	halb	Pos....0	(MF *	_	
4	t7796_000	als	AVD	all-sô	_	 *	_	
5	t7797_000	vile	AVD	vil(e)	_	 *	_	
6	t7798_000	keses	NA	kës	Gen.Sg	(NX * )	_	
7	t7799_000	dâr	PAVD	dâr/+unter	_	 *	_	
8	t7799_001	under	PAVAP	unter/dâr+	_	 * )	_	
9	t7800_000	-	$_	_	_	 * )	_	
10	t7801_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
11	t7802_000	menge	VVFIN	mèngen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
12	t7802_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
13	t7803_000	mit	APPR	mit	_	(PPX *	_	
14	t7804_000	eiernen	NA	èiern	Dat.Pl	(NX * ) ) ) )	_	
15	t7805_000	daz	KOUS	dazz	_	(PostF (Cl (LB * )	_	
16	t7806_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
17	t7807_000	dicke	AVD	dicke	_	 * )	_	
18	t7808_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) )	_	
19	t7809_000	-	$_	_	_	 * ) ) )	_	
20	t7810_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
21	t7811_000	würze	VVIMP	würzen	Sg.2	(LB (VX * ) )	_	
22	t7811_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
23	t7812_000	mit	APPR	mit	_	(PPX *	_	
24	t7813_000	pfeffer	NA	pfëffer	Dat.Sg	(NX * ) ) ) )	_	
25	t7814_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7815_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7816_000	slahe	VVIMP	slahen	Sg.2	(LB (VX * ) )	_	
3	t7817_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t7818_000	ûf	APPR	ûf	_	 *	_	
5	t7819_000	ein	DIART	èin	*.*.*.0	 *	_	
6	t7820_000	blat	NA	blat	Akk.Sg	(NX *	_	
7	t7821_000	von	APPR	von	_	(PPX *	_	
8	t7822_000	teige	NA	tèig	Dat.Sg	(NX * ) ) )	_	
9	t7823_000	gemachet	VVPP	machen	_	(VX * ) )	_	
10	t7824_000	-	$_	_	_	 * )	_	
11	t7825_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
12	t7826_000	schüte	VVIMP	schüten	Sg.2	(LB (VX * ) )	_	
13	t7827_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
14	t7828_000	in	APPR	in	_	(PPX *	_	
15	t7829_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
16	t7830_000	oven	NA	oven	Akk.Sg	 * ) ) )	_	
17	t7831_000	unde	KON	unte	_	 * ) )	_	
18	t7832_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
19	t7833_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
20	t7834_000	bachen	VVINF	bachen	_	(VX * ) )	_	
21	t7835_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7836_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7837_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
3	t7838_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
4	t7839_000	dâr	AVD	dâr	_	 *	_	
5	t7840_000	alsô	AVD	all-sô	_	 *	_	
6	t7841_000	heiz	ADJD	hèiz	Pos....0	 * )	_	
7	t7842_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7843_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t7844_000	vladen	NA	vlade	Akk.Sg	 * )	_	
3	t7845_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7846_000	aber	KO*	aber	_	(S (Frag *	_	
2	t7847_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
3	t7848_000	vladen	NA	vlade	Akk.Sg	 *	_	
4	t7849_000	von	APPR	von	_	(PPX *	_	
5	t7850_000	wensten	NA	wanst	Dat.Pl	(NX * ) ) )	_	
6	t7851_000	unde	KON	unte	_	 *	_	
7	t7852_000	von	APPR	von	_	(PPX *	_	
8	t7853_000	knochen	NA	knoche	Dat.Pl	(NX * ) )	_	
9	t7854_000	wole	AVD	wol(e)	_	 *	_	
10	t7855_000	gesoten	ADJN	sièden	Pos.*..0	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7856_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7857_000	rip	VVIMP	rëben	Sg.2	(LB (VX * ) )	_	
3	t7858_000	aber	AVD	aber	_	(MF *	_	
4	t7859_000	als	AVD	all-sô	_	 *	_	
5	t7860_000	vile	AVD	vil(e)	_	 *	_	
6	t7861_000	keses	NA	kës	Gen.Sg	(NX * )	_	
7	t7862_000	dâr	PAVD	dâr/+unter	_	 *	_	
8	t7862_001	under	PAVAP	unter/dâr+	_	 * )	_	
9	t7863_000	-	$_	_	_	 * )	_	
10	t7864_000	als	AVD	all-sô	_	(Cl (PreF *	_	
11	t7865_000	vile	AVD	vil(e)	_	 *	_	
12	t7866_000	des	DDART	dër	Neut.Gen.Sg	(NX *	_	
13	t7867_000	vleisches	NA	vlèisch	Gen.Sg	 * ) )	_	
14	t7868_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
15	t7869_000	-	$_	_	_	 * )	_	
16	t7870_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7871_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7872_000	rüer	VVIMP	rüèren	Sg.2	(LB (VX * ) )	_	
3	t7872_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t7873_000	wole	AVD	wol(e)	_	 * )	_	
5	t7874_000	-	$_	_	_	 * )	_	
6	t7875_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
7	t7876_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
8	t7876_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
9	t7877_000	mit	APPR	mit	_	(PPX *	_	
10	t7878_000	eiernen	NA	èiern	Dat.Pl	(NX * ) ) ) )	_	
11	t7879_000	des	DDART	dër	Masc.Gen.Sg	(Frag (NX *	_	
12	t7880_000	vierteiles	NA	vièr-tèil	Gen.Sg	 * )	_	
13	t7881_000	allez	DIA	all	Neut.Nom.Sg.st	 *	_	
14	t7882_000	vile	AVD	vil(e)	_	(PreF *	_	
15	t7883_000	hüener	NA	huon	Akk.Pl	(NX * ) )	_	
16	t7884_000	dâr	PAVD	dâr/+unter	_	(LB (VX *	_	
17	t7884_001	under	PAVAP	unter/dâr+	_	 *	_	
18	t7885_000	ströuwet	VVFIN	ströuwen	Ind.Pres.Sg.3	 * ) )	_	
19	t7886_000	-	$_	_	_	 * ) )	_	
20	t7887_000	sie	PPER	ër	*.Nom.Pl.3	(Frag (NX * )	_	
21	t7888_000	sint	VAFIN	sîn	Ind.Pres.Pl.3	(VX *	_	
22	t7889_000	gesoten	VVPP	sièden	_	 * )	_	
23	t7890_000	oder	KON	oder	_	 *	_	
24	t7891_000	gebrâten	VVPP	brâten	_	(VX * )	_	
25	t7892_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7893_000	daz	DDS	dër	Neut.Akk.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7894_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
3	t7895_000	allez	DID	all	Neut.Akk.Sg.st	(MF *	_	
4	t7896_000	ûf	APPR	ûf	_	 *	_	
5	t7897_000	ein	DIART	èin	*.*.*.0	 *	_	
6	t7898_000	blat	NA	blat	Akk.Sg	(NX *	_	
7	t7899_000	von	APPR	von	_	(PPX *	_	
8	t7900_000	teige	NA	tèig	Dat.Sg	(NX * ) ) ) )	_	
9	t7901_000	-	$_	_	_	 *	_	
10	t7902_000	unde	KON	unte	_	(Frag *	_	
11	t7903_000	schuzze	NA	schuzz	Dat.Sg	(NX *	_	
12	t7904_000	in	APPR	in	_	(PPX *	_	
13	t7905_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
14	t7906_000	oven	NA	oven	Akk.Sg	 * ) ) )	_	
15	t7907_000	-	$_	_	_	 * ) )	_	
16	t7908_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
17	t7909_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
18	t7910_000	bachen	VVINF	bachen	_	(MF (VX * ) )	_	
19	t7911_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7912_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7913_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
3	t7914_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
4	t7915_000	alsô	AVD	all-sô	_	 *	_	
5	t7916_000	heiz	ADJD	hèiz	Pos....0	 *	_	
6	t7917_000	hin	AVD	hin(e)	_	 *	_	
7	t7918_000	vüre	APPR	vür(e)	_	(PPX *	_	
8	t7919_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
9	t7920_000	hêrren	NA	hêrre	Akk.Pl	 * ) ) )	_	
10	t7921_000	-	$_	_	_	 * )	_	
11	t7922_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
12	t7923_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
13	t7923_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
14	t7924_000	niht	PTKNEG	niht	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7925_000	daz	DDS	dër	Neut.Nom.Sg	(S (Cl (PreF (NX * ) )	_	
2	t7926_000	ist	VAFIN	sîn	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t7927_000	ouch	AVD	ouch	_	(MF *	_	
4	t7928_000	guot	ADJD	guot	Pos....0	 * )	_	
5	t7929_000	-	$_	_	_	 * )	_	
6	t7930_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7931_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (NX *	_	
2	t7932_000	vladen	NA	vlade	Akk.Sg	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7933_000	aber	AVD	aber	_	(S (Frag *	_	
2	t7934_000	ein	DIART	èin	*.*.*.0	 *	_	
3	t7935_000	vlade	NA	vlade	Nom.Sg	(NX *	_	
4	t7936_000	von	APPR	von	_	(PPX *	_	
5	t7937_000	vleische	NA	vlèisch	Dat.Sg	(NX * ) ) )	_	
6	t7938_000	und	KO*	unde	_	 *	_	
7	t7939_000	lumbel	NA	lumbel	Dat.Sg	(NX * )	_	
8	t7940_000	gemachet	VVPP	machen	_	(VX * )	_	
9	t7941_000	-	$_	_	_	 * )	_	
10	t7942_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7943_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7944_000	rîbe	VVIMP	rîben	Sg.2	(LB (VX * ) )	_	
3	t7945_000	des	DDS	dër	Masc.Gen.Sg	(MF (NX *	_	
4	t7946_000	vierdiges	ADJA	vièrdig	Pos.Neut.Gen.Sg.st	(NX *	_	
5	t7946_001	teiles	NA	tèil	Gen.Sg	 * ) )	_	
6	t7947_000	als	AVD	all-sô	_	 *	_	
7	t7948_000	vile	NA	vil(e)	Akk.Sg	(NX *	_	
8	t7949_000	kæses	NA	kæse	Gen.Sg	(NX * ) )	_	
9	t7950_000	dâr	PAVD	dâr/+unter	_	 *	_	
10	t7950_001	under	PAVAP	unter/dâr+	_	 * )	_	
11	t7951_000	-	$_	_	_	 * )	_	
12	t7952_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t7953_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
14	t7954_000	daz	DDS	dër	Neut.Akk.Sg	(MF (NX * )	_	
15	t7955_000	wole	AVD	wol(e)	_	 *	_	
16	t7956_000	mit	APPR	mit	_	(PPX *	_	
17	t7957_000	eiernen	NA	èiern	Dat.Pl	(NX * ) ) )	_	
18	t7958_000	-	$_	_	_	 * )	_	
19	t7959_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
20	t7960_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
21	t7961_000	würze	NA	würze	Gen.Pl	(MF (NX * )	_	
22	t7962_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * )	_	
23	t7963_000	dâr	PAVD	dâr/+în	_	 *	_	
24	t7963_001	în	PAVAP	în/dâr+	_	 * )	_	
25	t7964_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7965_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7966_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
3	t7966_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t7967_000	ûf	APPR	ûf	_	 *	_	
5	t7968_000	ein	DIA	èin	*.*.*.0	 *	_	
6	t7969_000	blat	NA	blat	Akk.Sg	(NX *	_	
7	t7970_000	von	APPR	von	_	(PPX *	_	
8	t7971_000	teige	NA	tèig	Dat.Sg	(NX * ) ) )	_	
9	t7972_000	wole	AVD	wol(e)	_	 *	_	
10	t7973_000	gemachet	VVPP	machen	_	(VX * ) )	_	
11	t7974_000	-	$_	_	_	 * )	_	
12	t7975_000	vol	ADJA	voll	Pos.*..0	(Frag *	_	
13	t7976_000	löcher	NA	loch	Nom.Pl	(NX * )	_	
14	t7977_000	gemachet	VVPP	machen	_	(VX * )	_	
15	t7978_000	vile	AVD	vil(e)	_	 *	_	
16	t7979_000	in	APPR	in	_	(PPX *	_	
17	t7980_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
18	t7981_000	vladen	NA	vlade	Akk.Sg	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7982_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t7983_000	slahe	VVFIN	slahen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t7984_000	eier	NA	èi	Nom.Pl	(PreF (MF (NX * )	_	
4	t7985_000	als	AVD	all-sô	_	 *	_	
5	t7986_000	ganz	ADJD	ganz	Pos....0	 *	_	
6	t7987_000	dâr	PAVD	dâr/+în	_	 *	_	
7	t7987_001	în	PAVAP	în/dâr+	_	 *	_	
8	t7988_000	unde	KON	unte	_	 * ) )	_	
9	t7989_000	trage	VVIMP	tragen	Sg.2	(LB (VX * ) )	_	
10	t7990_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
11	t7991_000	als	AVD	all-sô	_	 *	_	
12	t7992_000	heiz	ADJD	hèiz	Pos....0	 *	_	
13	t7993_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7994_000	von	APPR	von	_	(S (Frag (PPX *	_	
2	t7995_000	vleische	NA	vlèisch	Dat.Sg	(NX * ) )	_	
3	t7996_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
4	t7997_000	vladen	NA	vlade	Akk.Sg	 * )	_	
5	t7998_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t7999_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t8000_000	vlade	NA	vlade	Nom.Sg	(NX * )	_	
3	t8001_000	gemachet	VVPP	machen	_	(VX * )	_	
4	t8002_000	von	APPR	von	_	(PPX *	_	
5	t8003_000	vleische	NA	vlèisch	Dat.Sg	(NX *	_	
6	t8004_000	von	APPR	von	_	(PPX *	_	
7	t8005_000	lumbel	NA	lumbel	Dat.Sg	(NX * ) ) ) )	_	
8	t8006_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8007_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8008_000	rîbe	VVIMP	rîben	Sg.2	(LB (VX * ) )	_	
3	t8009_000	dâr	PAVD	dâr/+în	_	(PreF (MF *	_	
4	t8009_001	în	PAVAP	în/dâr+	_	 *	_	
5	t8010_000	gein	APPR	gègen	_	(PPX *	_	
6	t8011_000	eineme	DIA	èin	Masc,Neut.Dat.Sg.st	(NX *	_	
7	t8012_000	vierteile	NA	vièr-tèil	Dat.Sg	 * ) )	_	
8	t8013_000	kæse	NA	kæse	Akk.Sg	(NX * )	_	
9	t8014_000	unde	KON	unte	_	 * ) )	_	
10	t8015_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
11	t8016_000	eier	NA	èi	Gen.Pl	(PreF (MF (NX * )	_	
12	t8017_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * )	_	
13	t8018_000	dâr	PAVD	dâr/+în	_	 *	_	
14	t8018_001	în	PAVAP	în/dâr+	_	 *	_	
15	t8019_000	unde	KON	unte	_	 * ) )	_	
16	t8020_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
17	t8020_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
18	t8021_000	veiz	ADJD	vèiz	Pos....0	 *	_	
19	t8022_000	genuoc	AVD	ge-nuog(e)	_	 *	_	
20	t8023_000	mit	APPR	mit	_	(PPX *	_	
21	t8024_000	specke	NA	spëck	Dat.Sg	(NX * ) )	_	
22	t8025_000	unde	KON	unte	_	 * ) )	_	
23	t8026_000	slach	VVIMP	slahen	Sg.2	(LB (VX * ) )	_	
24	t8026_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
25	t8027_000	ûf	APPR	ûf	_	 *	_	
26	t8028_000	ein	DIART	èin	*.*.*.0	 *	_	
27	t8029_000	blat	NA	blat	Akk.Sg	(NX * )	_	
28	t8030_000	gemachet	VVPP	machen	_	(VX * )	_	
29	t8031_000	von	APPR	von	_	(PPX *	_	
30	t8032_000	teige	NA	tèig	Dat.Sg	(NX * ) ) ) )	_	
31	t8033_000	unde	KON	unte	_	(Frag *	_	
32	t8034_000	swînîn	ADJA	swînîn	Pos.*.Dat.Pl.*	(NX *	_	
33	t8035_000	klâween	NA	klâ(we)	Dat.Pl	 * )	_	
34	t8036_000	oder	KON	oder	_	 *	_	
35	t8037_000	kalbes	NA	kalb	Gen.Sg	(NX * )	_	
36	t8038_000	vüezen	NA	vuoz	Dat.Pl	(NX * )	_	
37	t8039_000	dâr	PAVD	dâr/+unter	_	(VX *	_	
38	t8039_001	under	PAVAP	unter/dâr+	_	 *	_	
39	t8040_000	geworren	VVPP	ge-wërren	_	 * )	_	
40	t8041_000	-	$_	_	_	 * )	_	
41	t8042_000	unde	KON	unte	_	(Frag *	_	
42	t8043_000	die	DDART	dër	Fem.Akk.Sg	(NX *	_	
43	t8044_000	vülle	NA	vülle	Akk.Sg	 * )	_	
44	t8045_000	mitten	AVD	mitten(e)	_	 *	_	
45	t8046_000	dâr	PAVD	dâr/+ûf	_	(VX *	_	
46	t8046_001	ûf	PAVAP	ûf/dâr+	_	 *	_	
47	t8047_000	gesatzt	VVPP	ge-sètzen	_	 * )	_	
48	t8048_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8049_000	unde	KON	unte	_	(S (Frag *	_	
2	t8050_000	daz	DDS	dër	Neut.Nom.Sg	(PreF (NX * ) )	_	
3	t8051_000	heizet	VVFIN	hèizen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
4	t8052_000	ein	DIA	èin	*.*.*.0	(MF *	_	
5	t8053_000	pastête	NA	pastête	Nom.Sg	(NX *	_	
6	t8054_000	von	APPR	von	_	(PPX *	_	
7	t8055_000	guoten	ADJA	guot	Pos.*.Dat.Pl.*	(NX *	_	
8	t8056_000	hüeneren	NA	huon	Dat.Pl	 * ) ) )	_	
9	t8057_000	wole	AVD	wol(e)	_	 *	_	
10	t8058_000	gemachet	VVPP	machen	_	(VX * ) )	_	
11	t8059_000	-	$_	_	_	 * )	_	
12	t8060_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8061_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t8062_000	vladen	NA	vlade	Akk.Sg	 *	_	
3	t8063_000	von	APPR	von	_	(PPX *	_	
4	t8064_000	kalbslebern	NA	kalbs-lèber(e)	Dat.Pl	(NX * ) ) )	_	
5	t8065_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8066_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t8067_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
3	t8068_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
4	t8069_000	guoten	ADJA	guot	Pos.Masc.Akk.Sg.*	 *	_	
5	t8070_000	vladen	NA	vlade	Akk.Sg	 * ) )	_	
6	t8071_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
7	t8072_000	von	APPR	von	_	(PostF (PPX *	_	
8	t8073_000	kalbslebern	NA	kalbs-lèber(e)	Dat.Pl	(NX * ) ) )	_	
9	t8074_000	-	$_	_	_	 * )	_	
10	t8075_000	sô	AVD	sô	_	(Cl (PreF * )	_	
11	t8076_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
12	t8077_000	kalbslebern	NA	kalbs-lèber(e)	Akk.Pl	(MF (NX * ) )	_	
13	t8078_000	-	$_	_	_	 * )	_	
14	t8079_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
15	t8080_000	hacke	VVIMP	hacken	Sg.2	(LB (VX * ) )	_	
16	t8081_000	die	DDS	dër	*.Akk.Pl	(MF (NX * )	_	
17	t8082_000	kleine	ADJD	klèine	Pos....0	 * )	_	
18	t8083_000	als	AVD	all-sô	_	(Frag *	_	
19	t8084_000	grüenen	ADJA	grüène	Pos.Masc.Gen.Sg.wk	 *	_	
20	t8085_000	-	$_	_	_	 * )	_	
21	t8086_000	speckes	NA	spëck	Gen.Sg	(Frag (NX *	_	
22	t8087_000	gesniten	ADJN	snîden	Pos.*..0	 * )	_	
23	t8088_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * )	_	
24	t8089_000	dâr	PAVD	dâr/+unter	_	 *	_	
25	t8089_001	under	PAVAP	unter/dâr+	_	 *	_	
26	t8090_000	unde	KON	unte	_	(PrePreF * )	_	
27	t8091_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
28	t8092_000	würze	NA	würze	Akk.Pl	(MF (NX * )	_	
29	t8093_000	ouch	KO*	ouch	_	 *	_	
30	t8094_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * )	_	
31	t8095_000	dâr	PAVD	dâr/+unter	_	 *	_	
32	t8095_001	under	PAVAP	unter/dâr+	_	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8096_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag *	_	
2	t8097_000	holen	ADJA	hol	Pos.Masc.Akk.Sg.*	 *	_	
3	t8097_001	brôten	NA	brôt	Dat.Pl	(NX * )	_	
4	t8098_000	wole	AVD	wol(e)	_	 *	_	
5	t8099_000	gemachet	VVPP	machen	_	(VX * ) )	_	
6	t8100_000	wole	AVD	wol(e)	_	(Frag *	_	
7	t8101_000	zweier	CARDA	zwêne	*.Gen.Pl.st	(NX *	_	
8	t8102_000	vinger	NA	vinger	Gen.Pl	 * )	_	
9	t8103_000	breit	ADJD	brèit	Pos....0	 *	_	
10	t8104_000	gesniten	VVPP	snîden	_	(VX * )	_	
11	t8105_000	-	$_	_	_	 * )	_	
12	t8106_000	unde	KON	unte	_	(Frag *	_	
13	t8107_000	gevüllet	VVPP	ge-vüllen	_	(VX * )	_	
14	t8108_000	wole	AVD	wol(e)	_	 *	_	
15	t8109_000	mit	APPR	mit	_	(PPX *	_	
16	t8110_000	einer	DIART	èin	Fem.Dat.Sg.st	(NX *	_	
17	t8111_000	guoten	ADJA	guot	Pos.Fem.Dat.Sg.wk	 *	_	
18	t8112_000	vülle	NA	vülle	Dat.Sg	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8113_000	gesetze	VVIMP	ge-sètzen	Sg.2	(S (Cl (LB (VX * ) )	_	
2	t8114_000	in	APPR	in	_	(PreF (MF (PPX *	_	
3	t8115_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
4	t8116_000	vladen	NA	vlade	Akk.Sg	 * ) )	_	
5	t8117_000	unde	KON	unte	_	 * ) )	_	
6	t8118_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
7	t8119_000	in	PPER	ër	*.Dat.Pl.3	(PreF (MF (NX * )	_	
8	t8120_000	wole	AVD	wol(e)	_	 *	_	
9	t8121_000	unde	KON	unte	_	 * ) )	_	
10	t8122_000	trage	VVIMP	tragen	Sg.2	(LB (VX * ) )	_	
11	t8123_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
12	t8124_000	als	AVD	all-sô	_	 *	_	
13	t8125_000	heiz	ADJD	hèiz	Pos....0	 *	_	
14	t8126_000	hin	AVD	hin(e)	_	 * )	_	
15	t8127_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8128_000	aber	AVD	aber	_	(S (Frag *	_	
2	t8129_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
3	t8130_000	vladen	NA	vlade	Akk.Sg	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8131_000	der	DRELS	dër	Masc.Nom.Sg	(S (Frag (NX * )	_	
2	t8132_000	einen	DIART	èin	Masc.Akk.Sg.st	(PreF (NX *	_	
3	t8133_000	vladen	NA	vlade	Akk.Sg	 * ) )	_	
4	t8134_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
5	t8135_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t8136_000	von	APPR	von	_	(PostF (PPX *	_	
7	t8137_000	vleische	NA	vlèisch	Dat.Sg	(NX *	_	
8	t8138_000	von	APPR	von	_	(PPX *	_	
9	t8139_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
10	t8140_000	wensten	NA	wanst	Dat.Pl	 * ) ) ) ) ) )	_	
11	t8141_000	sô	AVD	sô	_	(Cl (PreF (PreF * ) )	_	
12	t8142_000	nim	VVIMP	nëmen	Sg.2	(LB (VX * ) )	_	
13	t8143_000	des	DDS	dër	Masc.Gen.Sg	(PreF (MF (NX * )	_	
14	t8144_000	vierteil	NA	vièr-tèil	Akk.Sg	(NX *	_	
15	t8145_000	kæse	NA	kæse	Akk.Sg	 * )	_	
16	t8146_000	dâr	PAVD	dâr/+zuo	_	 *	_	
17	t8147_000	zuo	PAVAP	zuo/dâr+	_	 *	_	
18	t8148_000	unde	KON	unte	_	 * ) )	_	
19	t8149_000	slach	VVIMP	slahen	Sg.2	(LB (VX * ) )	_	
20	t8150_000	eier	NA	èi	Gen.Pl	(MF (NX * )	_	
21	t8151_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * )	_	
22	t8152_000	dâr	PAVD	dâr/+unter	_	 *	_	
23	t8152_001	under	PAVAP	unter/dâr+	_	 * )	_	
24	t8153_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8154_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8155_000	snîde	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
3	t8156_000	swertel	NA	swërtel(e)	Dat.Sg	(PreF (MF (NX *	_	
4	t8157_000	von	APPR	von	_	(PPX *	_	
5	t8158_000	grüenen	ADJA	grüène	Pos.*.Dat.Pl.*	(NX *	_	
6	t8159_000	swarten	NA	swart(e)	Dat.Pl	 * ) ) )	_	
7	t8160_000	dâr	PAVD	dâr/+unter	_	 *	_	
8	t8160_001	under	PAVAP	unter/dâr+	_	 *	_	
9	t8161_000	unde	KON	unte	_	 * ) )	_	
10	t8162_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
11	t8163_000	ouch	AVD	ouch	_	(MF *	_	
12	t8164_000	dâr	PAVD	dâr/+ze	_	 *	_	
13	t8165_000	zuo	PTKA	ze/dâr+	_	 *	_	
14	t8166_000	hüenerlebern	NA	hüèner-lëber(e)	Akk.Sg	(NX * )	_	
15	t8167_000	unde	KON	unte	_	 *	_	
16	t8168_000	megelech	NA	mègelech	Akk.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8169_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8170_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
3	t8171_000	ein	DIA	èin	*.*.*.0	(PreF (MF * ) )	_	
4	t8172_000	sîn	VAFIN	sîn	Ind.Pres.Pl.3	(LB (VX * ) )	_	
5	t8173_000	lengeleht	ADJD	lèngelëht	Pos....0	(MF * )	_	
6	t8174_000	-	$_	_	_	 * )	_	
7	t8175_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
8	t8176_000	ströuwe	VVIMP	ströuwen	Sg.2	(LB (VX * ) )	_	
9	t8177_000	sie	PPER	ër	*.Nom.Pl.3	(PreF (MF (NX * )	_	
10	t8178_000	dâr	PAVD	dâr/+unter	_	 *	_	
11	t8178_001	under	PAVAP	unter/dâr+	_	 *	_	
12	t8179_000	unde	KON	unte	_	 * ) )	_	
13	t8180_000	mache	VVIMP	machen	Sg.2	(LB (VX * ) )	_	
14	t8180_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
15	t8181_000	ûf	APPR	ûf	_	 *	_	
16	t8182_000	sîn	DPOSA	sîn	*.*.*.0	 *	_	
17	t8183_000	blat	NA	blat	Akk.Sg	(NX * ) )	_	
18	t8184_000	-	$_	_	_	 * )	_	
19	t8185_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8186_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8187_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
3	t8188_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
4	t8189_000	backen	VVINF	backen	_	(VX * )	_	
5	t8190_000	unde	KON	unte	_	 * ) )	_	
6	t8191_000	trac	VVIMP	tragen	Sg.2	(LB (VX * ) )	_	
7	t8191_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
8	t8192_000	hin	AVD	hin(e)	_	 * )	_	
9	t8193_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8194_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t8195_000	vladen	NA	vlade	Akk.Sg	 * )	_	
3	t8196_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8197_000	der	DRELS	dër	Masc.Nom.Sg	(S (Frag (NX * )	_	
2	t8198_000	einen	DIART	èin	*.Dat.Pl.st	(PreF (NX *	_	
3	t8199_000	vladen	NA	vlade	Dat.Pl	 * ) )	_	
4	t8200_000	wolle	VMFIN	wèllen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
5	t8201_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t8202_000	von	APPR	von	_	(PostF (PPX *	_	
7	t8203_000	vleische	NA	vlèisch	Dat.Sg	(NX *	_	
8	t8204_000	von	APPR	von	_	(PPX *	_	
9	t8205_000	lumbeln	NA	lumbel	Dat.Sg	(NX * ) ) ) )	_	
10	t8206_000	gemachet	VVPP	machen	_	(VX * ) ) )	_	
11	t8207_000	der	DDS	dër	Masc.Nom.Sg	(Cl (PreF (NX * ) )	_	
12	t8208_000	siut	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
13	t8208_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
14	t8209_000	wole	AVD	wol(e)	_	 *	_	
15	t8210_000	unde	KON	unte	_	 * ) )	_	
16	t8211_000	hacke	VVIMP	hacken	Sg.2	(LB (VX * ) )	_	
17	t8211_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
18	t8212_000	kleine	ADJD	klèine	Pos....0	 *	_	
19	t8213_000	unde	KON	unte	_	 * ) )	_	
20	t8214_000	ribe	VVFIN	rëben	Ind.Pres.Sg.1	(LB (VX * ) )	_	
21	t8215_000	keses	NA	kës	Gen.Sg	(PreF (MF (NX * )	_	
22	t8216_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * )	_	
23	t8217_000	dâr	PAVD	dâr/+în	_	 *	_	
24	t8217_001	în	PAVAP	în/dâr+	_	 *	_	
25	t8218_000	unde	KON	unte	_	 * ) )	_	
26	t8219_000	slahe	VVFIN	slahen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
27	t8220_000	eier	NA	èi	Akk.Pl	(PreF (MF (NX * )	_	
28	t8221_000	ouch	KO*	ouch	_	 *	_	
29	t8222_000	genuoc	NA	ge-nuog(e)	Akk.Sg	(NX * )	_	
30	t8223_000	dâr	PAVD	dâr/+în	_	 *	_	
31	t8223_001	în	PAVAP	în/dâr+	_	 *	_	
32	t8224_000	unde	KON	unte	_	 * ) )	_	
33	t8225_000	würze	VVIMP	würzen	Sg.2	(LB (VX * ) )	_	
34	t8226_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
35	t8227_000	wole	AVD	wol(e)	_	 * )	_	
36	t8228_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8229_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8230_000	mache	VVFIN	machen	Subj.Pres.Sg.3	(LB (VX * ) )	_	
3	t8231_000	ein	DIA	èin	*.*.*.0	(MF *	_	
4	t8232_000	blat	NA	blat	Akk.Sg	(NX * ) )	_	
5	t8233_000	-	$_	_	_	 * )	_	
6	t8234_000	von	APPR	von	_	(PPX *	_	
7	t8235_000	teige	NA	tèig	Dat.Sg	(NX * ) )	_	
8	t8236_000	gesetze	VVIMP	ge-sètzen	Sg.2	(Cl (LB (VX * ) )	_	
9	t8237_000	drî	CARDA	drî	*.Akk.Pl.st	(MF (NX *	_	
10	t8238_000	eggen	NA	ègge	Akk.Pl	 *	_	
11	t8239_000	von	APPR	von	_	(PPX *	_	
12	t8240_000	gasteln	NA	gastël	Dat.Pl	(NX * ) ) )	_	
13	t8241_000	als	KO*	all-sô	_	 *	_	
14	t8242_000	ein	DIA	èin	*.*.*.0	 *	_	
15	t8243_000	schilt	NA	schilt	Akk.Sg	(NX *	_	
16	t8244_000	in	APPR	in	_	(PPX *	_	
17	t8245_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
18	t8246_000	vladen	NA	vlade	Akk.Sg	 * ) ) )	_	
19	t8247_000	unde	KON	unte	_	 *	_	
20	t8248_000	mit	APPR	mit	_	(PPX *	_	
21	t8249_000	hüeneren	NA	huon	Dat.Pl	(NX * ) )	_	
22	t8250_000	gevuolt	VVPP	ge-vüèlen	_	(VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8251_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8252_000	versalz	VVIMP	ver-salzen	Sg.2	(LB (VX * ) )	_	
3	t8252_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
4	t8253_000	niht	PTKNEG	niht	_	 *	_	
5	t8254_000	unde	KON	unte	_	 * ) )	_	
6	t8255_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
7	t8255_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
8	t8256_000	hin	AVD	hin(e)	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8257_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t8258_000	vladen	NA	vlade	Akk.Sg	 *	_	
3	t8259_000	von	APPR	von	_	(PPX *	_	
4	t8260_000	vleische	NA	vlèisch	Dat.Sg	(NX * ) ) )	_	
5	t8261_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8262_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t8263_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
3	t8264_000	ein	DIA	èin	*.*.*.0	 *	_	
4	t8265_000	vladen	NA	vlade	Dat.Pl	(NX * ) )	_	
5	t8266_000	machen	VVINF	machen	_	(RB (VX * ) )	_	
6	t8267_000	von	APPR	von	_	(PostF (PPX *	_	
7	t8268_000	vleische	NA	vlèisch	Dat.Sg	(NX *	_	
8	t8269_000	von	APPR	von	_	(PPX *	_	
9	t8270_000	wensten	NA	wanst	Dat.Pl	(NX * ) ) ) ) ) )	_	
10	t8271_000	sô	AVD	sô	_	(Cl (PreF (PreF * ) )	_	
11	t8272_000	siude	VVIMP	sièden	Sg.2	(LB (VX * ) )	_	
12	t8272_001	in	PPER	ër	Masc.Akk.Sg.3	(PreF (MF (NX * )	_	
13	t8273_000	wole	AVD	wol(e)	_	 *	_	
14	t8274_000	unde	KON	unte	_	 * ) )	_	
15	t8275_000	hacke	VVIMP	hacken	Sg.2	(LB (VX * ) )	_	
16	t8276_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * )	_	
17	t8277_000	kleine	ADJD	klèine	Pos....0	 *	_	
18	t8278_000	unde	KON	unte	_	 *	_	
19	t8279_000	walhische	ADJA	walhisch	Pos.*.Akk.Pl.st	(NX *	_	
20	t8280_000	nütze	NA	nutz	Akk.Pl	 * )	_	
21	t8281_000	gevierteilt	VVPP	vièr-tèilen	_	(VX * ) )	_	
22	t8282_000	-	$_	_	_	 *	_	
23	t8283_000	dâr	PAVD	dâr/+unter	_	(Frag *	_	
24	t8284_000	under	PAVAP	unter/dâr+	_	 *	_	
25	t8285_000	-	$_	_	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8286_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8287_000	würze	VVIMP	würzen	Sg.2	(LB (VX * ) )	_	
3	t8288_000	genuoc	NA	ge-nuog(e)	Nom.Sg	(MF (NX * ) )	_	
4	t8289_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8290_000	unde	KON	unte	_	(S (Frag *	_	
2	t8291_000	speckes	NA	spëck	Gen.Sg	(PreF (NX * ) )	_	
3	t8292_000	tuo	VVIMP	tuon	Sg.2	(LB (VX * ) )	_	
4	t8293_000	durch	APPR	durh	_	(PreF (MF (PPX *	_	
5	t8294_000	in	PPER	ër	Masc.Akk.Sg.3	(NX * ) )	_	
6	t8295_000	unde	KON	unte	_	 *	_	
7	t8296_000	eier	NA	èi	Akk.Pl	(NX * )	_	
8	t8297_000	unde	KON	unte	_	 * ) )	_	
9	t8298_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
10	t8299_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
11	t8300_000	ûf	APPR	ûf	_	 *	_	
12	t8301_000	ein	DIART	èin	*.*.*.0	 *	_	
13	t8302_000	wît	ADJA	wît	Pos.*..0	 *	_	
14	t8303_000	blat	NA	blat	Akk.Sg	(NX * )	_	
15	t8304_000	von	APPR	von	_	 *	_	
16	t8305_000	teige	ADJA	tèig	Pos.Fem.Akk.Sg.st	 *	_	
17	t8306_000	gemachet	VVPP	machen	_	(VX * ) )	_	
18	t8307_000	-	$_	_	_	 * )	_	
19	t8308_000	schoene	ADJA	schoène	Pos.*..0	(Frag *	_	
20	t8309_000	wastel	NA	wastël	Akk.Pl	(NX *	_	
21	t8310_000	vünve	CARDN	vünv	*.Akk.Pl.st	 *	_	
22	t8311_000	von	APPR	von	_	(PPX *	_	
23	t8312_000	hüeneren	NA	huon	Dat.Pl	(NX * ) ) )	_	
24	t8313_000	einez	CARDS	èin	Neut.Akk.Sg.st	(NX * )	_	
25	t8314_000	mitten	AVD	mitten	_	 *	_	
26	t8315_000	in	APPR	in	_	(PPX *	_	
27	t8316_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
28	t8317_000	vladen	NA	vlade	Akk.Sg	 * ) )	_	
29	t8318_000	gesatzt	VVPP	sètzen	_	(VX * ) )	_	
30	t8319_000	die	DDART	dër	*.Nom.Pl	(Frag (NX *	_	
31	t8320_000	viere	CARDS	vièr	*.Nom.Pl.st	 *	_	
32	t8321_000	an	APPR	ane	_	(PPX *	_	
33	t8322_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
34	t8323_000	ende	NA	ènte	Akk.Sg	 * ) ) )	_	
35	t8324_000	rehte	AVD	rëhte	_	 *	_	
36	t8325_000	als	KO*	all-sô	_	 *	_	
37	t8326_000	ein	DIA	èin	*.*.*.0	 *	_	
38	t8327_000	zinke	NA	zinke	Akk.Sg	(NX *	_	
39	t8328_000	ûf	APPR	ûf	_	(PPX *	_	
40	t8329_000	einen	DIART	èin	Masc.Dat.Sg.st	(NX *	_	
41	t8330_000	würfele	NA	würfel	Dat.Sg	 * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8331_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8332_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
3	t8333_000	in	PPER	ër	Masc.Akk.Sg.3	(MF (NX * ) )	_	
4	t8334_000	-	$_	_	_	 * )	_	
5	t8335_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
6	t8336_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
7	t8337_000	in	PPER	ër	*.Dat.Pl.3	(MF (NX * )	_	
8	t8338_000	als	AVD	all-sô	_	 *	_	
9	t8339_000	heiz	ADJD	hèiz	Pos....0	 *	_	
10	t8340_000	hin	AVD	hin(e)	_	 * )	_	
11	t8341_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8342_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t8343_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t8344_000	vülle	NA	vülle	Nom.Sg	(NX * )	_	
4	t8345_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8346_000	den	DDART	dër	Masc.Akk.Sg	(S (Frag (NX *	_	
2	t8347_000	reiger	NA	rèiger	Akk.Sg	 *	_	
3	t8348_000	ûf	APPR	ûf	_	(PPX *	_	
4	t8349_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
5	t8350_000	schîben	NA	schîbe	Dat.Sg	 * ) ) )	_	
6	t8351_000	gemachet	VVPP	machen	_	(VX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8352_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag (NX *	_	
2	t8353_000	vladen	NA	vlade	Akk.Sg	 *	_	
3	t8354_000	von	APPR	von	_	(PPX *	_	
4	t8355_000	guotem	ADJA	guot	Pos.Masc.Dat.Sg.st	(NX *	_	
5	t8356_000	lumbel	NA	lumbel	Dat.Sg	 * ) ) )	_	
6	t8357_000	wole	AVD	wol(e)	_	(PreF *	_	
7	t8358_000	kleine	ADJD	klèine	Pos....0	 * )	_	
8	t8359_000	gehacket	VVFIN	ge-hacken	Ind.Pres.Sg.3	(LB (VX * ) )	_	
9	t8360_000	-	$_	_	_	 * )	_	
10	t8361_000	vore	AVD	vor(e)	_	(Frag *	_	
11	t8362_000	dâr	PAVD	dâr/+unter	_	(VX *	_	
12	t8362_001	under	PAVAP	unter/dâr+	_	 *	_	
13	t8363_000	geriben	VVPP	rîben	_	 * )	_	
14	t8364_000	eines	DIART	èin	Neut.Gen.Sg.st	 *	_	
15	t8365_000	vierteil	NA	vièr-tèil	Akk.Sg	(NX *	_	
16	t8366_000	keses	NA	kës	Gen.Sg	(NX * ) )	_	
17	t8367_000	-	$_	_	_	 * )	_	
18	t8368_000	unde	KON	unte	_	(Frag *	_	
19	t8369_000	wole	AVD	wol(e)	_	 *	_	
20	t8370_000	gemenget	VVPP	ge-mèngen	_	(VX * )	_	
21	t8371_000	mit	APPR	mit	_	(PPX *	_	
22	t8372_000	würzen	NA	würze	Dat.Pl	(NX * ) )	_	
23	t8373_000	-	$_	_	_	 * )	_	
24	t8374_000	unde	KON	unte	_	(Frag *	_	
25	t8375_000	ouch	AVD	ouch	_	 *	_	
26	t8376_000	gemenget	VVPP	ge-mèngen	_	(VX * )	_	
27	t8377_000	mit	APPR	mit	_	(PPX *	_	
28	t8378_000	eiernen	NA	èiern	Dat.Pl	(NX * ) )	_	
29	t8379_000	unde	KON	unte	_	 *	_	
30	t8380_000	veiz	ADJD	vèiz	Pos....0	 *	_	
31	t8381_000	genuoc	AVD	ge-nuog(e)	_	 *	_	
32	t8382_000	von	APPR	von	_	(PPX *	_	
33	t8383_000	specke	NA	spëck	Dat.Sg	(NX * ) )	_	
34	t8384_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8385_000	unde	KON	unte	_	(S (Frag *	_	
2	t8386_000	vierteil	NA	vièr-tèil	Akk.Sg	(PreF (NX *	_	
3	t8387_000	hüener	NA	huon	Gen.Pl	(NX * ) ) )	_	
4	t8388_000	dâr	PAVD	dâr/+în	_	(LB (VX *	_	
5	t8388_001	în	PAVAP	în/dâr+	_	 *	_	
6	t8389_000	ströuwet	VVFIN	ströuwen	Ind.Pres.Sg.3	 * ) )	_	
7	t8390_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8391_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8392_000	backe	VVIMP	backen	Sg.2	(LB (VX * ) )	_	
3	t8392_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t8393_000	wole	AVD	wol(e)	_	 * )	_	
5	t8394_000	-	$_	_	_	 *	_	
6	t8395_000	in	APPR	in	_	(Frag (PPX *	_	
7	t8396_000	einem	DIA	èin	Masc.Dat.Sg.st	(NX *	_	
8	t8397_000	ovene	NA	oven	Dat.Sg	 * ) )	_	
9	t8398_000	-	$_	_	_	 * ) )	_	
10	t8399_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
11	t8400_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
12	t8400_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
13	t8401_000	denne	AVD	danne	_	 *	_	
14	t8402_000	ûf	APPR	ûf	_	 *	_	
15	t8403_000	ein	DIA	èin	*.*.*.0	 *	_	
16	t8404_000	schîben	NA	schîbe	Akk.Sg	(NX * ) )	_	
17	t8405_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8406_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8407_000	setze	VVIMP	sètzen	Sg.2	(LB (VX * ) )	_	
3	t8408_000	vier	CARDA	vièr	*.*.*.0	(MF (NX *	_	
4	t8409_000	spieze	NA	spièz	Nom.Pl	 * )	_	
5	t8410_000	mitten	AVD	mitten(e)	_	 *	_	
6	t8411_000	dâr	PAVD	dâr/+în	_	 *	_	
7	t8411_001	în	PAVAP	în/dâr+	_	 *	_	
8	t8412_000	eines	DIA	èin	Masc.Gen.Sg.st	(NX *	_	
9	t8413_000	vingers	NA	vinger	Gen.Sg	 * )	_	
10	t8414_000	grôz	ADJD	grôz	Pos....0	 * )	_	
11	t8415_000	-	$_	_	_	 *	_	
12	t8416_000	unde	KON	unte	_	(Frag *	_	
13	t8417_000	einer	DIART	èin	Fem.Gen.Sg.st	(NX *	_	
14	t8418_000	ellen	NA	èlle	Gen.Sg	 * )	_	
15	t8419_000	lanc	ADJD	lang	Pos....0	 *	_	
16	t8420_000	-	$_	_	_	 * ) )	_	
17	t8421_000	unde	KON	unte	_	(Frag *	_	
18	t8422_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
19	t8423_000	guoten	ADJA	guot	Pos.Masc.Akk.Sg.*	 *	_	
20	t8424_000	halben	ADJA	halb	Pos.Masc.Akk.Sg.*	 *	_	
21	t8425_000	brâten	NA	brâte	Akk.Sg	 * )	_	
22	t8426_000	gestôzen	VVPP	stôzen	_	(VX * )	_	
23	t8427_000	dâr	PAVD	dâr/+ane	_	 *	_	
24	t8427_001	an	PAVAP	ane/dâr+	_	 *	_	
25	t8428_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8429_000	unde	KON	unte	_	(S (Frag *	_	
2	t8430_000	ein	DIA	èin	*.*.*.0	 *	_	
3	t8431_000	schoenen	ADJA	schoène	Pos.Masc.Akk.Sg.*	(NX *	_	
4	t8432_000	bastelkopf	NA	bastël-kopf	Akk.Sg	 * )	_	
5	t8433_000	dâr	PAVD	dâr/+ûf	_	(VX *	_	
6	t8433_001	ûf	PAVAP	ûf/dâr+	_	 *	_	
7	t8434_000	gesetzet	VVPP	sètzen	_	 * ) )	_	
8	t8435_000	lær	ADJD	lære	Pos....0	(Frag *	_	
9	t8436_000	dâr	PAVD	dâr/+ûf	_	(VX *	_	
10	t8437_000	ûf	PAVAP	ûf/dâr+	_	 *	_	
11	t8438_000	gesetzet	VVPP	sètzen	_	 * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8439_000	zweliv	CARDA	zwèl(i)v	*.*.*.0	(S (NX *	_	
2	t8440_000	halbe	ADJA	halb	Pos.*.Akk.Pl.st	 *	_	
3	t8440_001	brôtn	NA	brôt	Akk.Pl	 * )	_	
4	t8441_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
5	t8442_000	iegelîchen	DIA	iè-ge-lich	Masc.Akk.Sg.st	(NX *	_	
6	t8443_000	spitz	NA	spitz	Akk.Sg	 * ) )	_	
7	t8444_000	ein	DIA	èin	*.*.*.0	 *	_	
8	t8445_000	kuchelîn	NA	kuchelîn	Akk.Sg	(NX * )	_	
9	t8446_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8447_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8448_000	denne	KOUS	danne	_	(LB * )	_	
3	t8449_000	ein	DIA	èin	*.*.*.0	(MF *	_	
4	t8450_000	gesoten	ADJA	sièden	Pos.*..0	 *	_	
5	t8451_000	milch	NA	milch	Nom.Sg	(NX * ) )	_	
6	t8452_000	mit	APPR	mit	_	(Frag (PPX *	_	
7	t8453_000	eiernen	NA	èiern	Dat.Pl	(NX * ) )	_	
8	t8454_000	unde	KON	unte	_	 *	_	
9	t8455_000	mit	APPR	mit	_	(PPX *	_	
10	t8456_000	safrâne	NA	safrân	Dat.Sg	(NX * ) )	_	
11	t8457_000	wole	AVD	wol(e)	_	 *	_	
12	t8458_000	geverwet	ADJA	ge-vèrwen	Pos.*..0	 *	_	
13	t8459_000	-	$_	_	_	 *	_	
14	t8460_000	-	$_	_	_	 * )	_	
15	t8461_000	unde	KON	unte	_	(Frag *	_	
16	t8462_000	schüte	VVIMP	schüten	Sg.2	(RB (VX * ) )	_	
17	t8463_000	ez	PPER	ër	Neut.Akk.Sg.3	(PostF (NX * )	_	
18	t8464_000	in	APPR	in	_	 *	_	
19	t8465_000	ein	DIA	èin	*.*.*.0	 *	_	
20	t8466_000	tuoch	NA	tuoch	Akk.Sg	(NX * ) )	_	
21	t8467_000	-	$_	_	_	 *	_	
22	t8468_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
23	t8469_000	beswer	VVIMP	be-swër(e)n	Sg.2	(LB (VX * ) )	_	
24	t8470_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
25	t8471_000	mit	APPR	mit	_	(PPX *	_	
26	t8472_000	steinen	NA	stèin	Dat.Pl	(NX * ) ) ) ) )	_	
27	t8473_000	unz	KOUS	unz(e)	_	(LB * )	_	
28	t8474_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
29	t8475_000	trucken	ADJD	trucken	Pos....0	 * )	_	
30	t8476_000	wirdet	VAFIN	wërden	Ind.Pres.Sg.3	(RB (VX * ) )	_	
31	t8477_000	-	$_	_	_	 * ) ) )	_	
32	t8478_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8479_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8480_000	snît	VVIMP	snîden	Sg.2	(LB (VX * ) )	_	
3	t8480_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
4	t8481_000	vingergrôz	ADJD	vinger-grôz	Pos....0	 *	_	
5	t8482_000	unde	KON	unte	_	 *	_	
6	t8483_000	einer	DIART	èin	Fem.Gen.Sg.st	(NX *	_	
7	t8484_000	spanne	NA	spanne	Gen.Sg	 * )	_	
8	t8485_000	lanc	ADJD	lang	Pos....0	 * )	_	
9	t8486_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8487_000	unde	KON	unte	_	(S (Frag *	_	
2	t8488_000	gestôzen	VVPP	stôzen	_	(VX * )	_	
3	t8489_000	an	APPR	ane	_	(PPX *	_	
4	t8490_000	kleine	ADJA	klèine	Pos.*.Akk.Pl.st	(NX *	_	
5	t8491_000	spieze	NA	spièz	Akk.Pl	 * ) ) )	_	
6	t8492_000	gestôzen	VVPP	stôzen	_	(Frag (VX * )	_	
7	t8493_000	alumbe	AVD	all-umbe	_	 *	_	
8	t8494_000	den	DDART	dër	*.Dat.Pl	(NX *	_	
9	t8495_000	vladen	NA	vlade	Dat.Pl	 * )	_	
10	t8496_000	sinewel	ADJD	sin(e)-wëll	Pos....0	 *	_	
11	t8497_000	als	KO*	all-sô	_	 *	_	
12	t8498_000	ein	DIA	èin	*.*.*.0	 *	_	
13	t8499_000	tülle	NA	tülle	Akk.Sg	(NX * ) )	_	
14	t8500_000	mit	APPR	mit	_	(Frag (PPX *	_	
15	t8501_000	kleinen	ADJA	klèine	Pos.*.Dat.Pl.*	(NX *	_	
16	t8502_000	küchenen	NA	küchen(e)	Dat.Pl	 * ) )	_	
17	t8503_000	gebacket	VVPP	backen	_	(VX * )	_	
18	t8504_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
19	t8505_000	kranz	NA	kranz	Akk.Sg	 * )	_	
20	t8506_000	al	AVD	al	_	 *	_	
21	t8507_000	dâr	PAVD	dâr/+umbe	_	(VX *	_	
22	t8507_001	umbe	PAVAP	umbe/dâr+	_	 *	_	
23	t8508_000	gestôzen	VVPP	stôzen	_	 * )	_	
24	t8509_000	mit	APPR	mit	_	(PPX *	_	
25	t8510_000	loubærn	NA	loubære	Dat.Pl	(NX * ) )	_	
26	t8511_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8512_000	unde	KON	unte	_	(S (Frag *	_	
2	t8513_000	gebacket	ADJA	backen	Pos.*..0	 *	_	
3	t8514_000	vogel	NA	vogel	Akk.Sg	(NX * )	_	
4	t8515_000	dâr	PAVD	dâr/+ûf	_	(VX *	_	
5	t8515_001	ûf	PAVAP	ûf/dâr+	_	 *	_	
6	t8516_000	gesetzet	VVPP	sètzen	_	 * )	_	
7	t8517_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8518_000	unde	KON	unte	_	(S (Frag *	_	
2	t8519_000	tragen	VVINF	tragen	_	(VX * )	_	
3	t8520_000	vüre	APPR	vür(e)	_	(PPX *	_	
4	t8521_000	sînen	DPOSA	sîn	Masc.Akk.Sg.st	(NX *	_	
5	t8522_000	hêrren	NA	hêrre	Akk.Sg	 * ) )	_	
6	t8523_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8524_000	wilt	VMFIN	wèllen	Ind.Pres.Sg.2	(S (Cl (LB (VX * ) )	_	
2	t8525_000	dû	PPER	dû	Nom.Sg.2	(MF (NX * )	_	
3	t8526_000	heidenische	ADJA	hèidenisch	Pos.*.Akk.Pl.st	(NX *	_	
4	t8527_000	houbet	NA	houbet	Akk.Pl	 * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8528_000	die	DDART	dër	*.Akk.Pl	(S (Frag (NX *	_	
2	t8529_000	heidenischen	ADJA	hèidenisch	Pos.*.Akk.Pl.wk	 *	_	
3	t8530_000	houbet	NA	houbet	Akk.Pl	 * )	_	
4	t8531_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8532_000	gemachet	VVPP	machen	_	(S (Frag (VX * )	_	
2	t8533_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
3	t8534_000	schoenen	ADJA	schoène	Pos.Masc.Akk.Sg.*	 *	_	
4	t8535_000	vladen	NA	vlade	Akk.Sg	 *	_	
5	t8536_000	von	APPR	von	_	(PPX *	_	
6	t8537_000	vleische	NA	vlèisch	Dat.Sg	(NX * ) ) ) )	_	
7	t8538_000	von	APPR	von	_	(Frag (PPX *	_	
8	t8539_000	vierteile	NA	vièr-tèil	Dat.Sg	(NX * ) )	_	
9	t8540_000	hüeneren	NA	huon	Dat.Pl	(NX * )	_	
10	t8541_000	wole	AVD	wol(e)	_	(PreF * )	_	
11	t8542_000	ströuwet	VVFIN	ströuwen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
12	t8543_000	-	$_	_	_	 * )	_	
13	t8544_000	würfeleht	ADJA	würfelëht	Pos.*..0	(Frag *	_	
14	t8545_000	-	$_	_	_	 * )	_	
15	t8546_000	epfele	NA	apfel	Akk.Pl	(Frag (NX * )	_	
16	t8547_000	dâr	PAVD	dâr/+în	_	(VX *	_	
17	t8547_001	în	PAVAP	în/dâr+	_	 *	_	
18	t8548_000	gesniten	VVPP	snîden	_	 * )	_	
19	t8549_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8550_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8551_000	würze	VVIMP	würzen	Sg.2	(LB (VX * ) )	_	
3	t8551_001	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX * )	_	
4	t8552_000	genuoc	AVD	ge-nuog(e)	_	 *	_	
5	t8553_000	wole	AVD	wol(e)	_	 *	_	
6	t8554_000	unde	KON	unte	_	 * ) )	_	
7	t8555_000	menge	VVIMP	mèngen	Sg.2	(LB (VX * ) )	_	
8	t8555_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX *	_	
9	t8556_000	mit	APPR	mit	_	(PPX *	_	
10	t8557_000	eiern	NA	èi	Dat.Pl	(NX * ) ) ) )	_	
11	t8558_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8559_000	unde	KON	unte	_	(S (Cl (PrePreF * )	_	
2	t8560_000	schiuz	VVIMP	schièzen	Sg.2	(LB (VX * ) )	_	
3	t8561_000	ez	PPER	ër	Neut.Akk.Sg.3	(PreF (MF (NX *	_	
4	t8562_000	in	APPR	in	_	(PPX *	_	
5	t8563_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
6	t8564_000	oven	NA	oven	Akk.Sg	 * ) ) )	_	
7	t8565_000	unde	KON	unte	_	 * ) )	_	
8	t8566_000	daz	KOUS	dazz	_	(LB * )	_	
9	t8567_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * ) )	_	
10	t8568_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX *	_	
11	t8569_000	gebacket	VVPP	backen	_	 * ) ) )	_	
12	t8570_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
13	t8571_000	lege	VVIMP	lègen	Sg.2	(LB (VX * ) )	_	
14	t8571_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
15	t8572_000	ûf	APPR	ûf	_	 *	_	
16	t8573_000	ein	DIA	èin	*.*.*.0	 *	_	
17	t8574_000	schîben	NA	schîbe	Akk.Sg	(NX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8575_000	zwêne	CARDA	zwêne	Masc.Nom.Pl.st	(S (Frag (NX *	_	
2	t8576_000	starke	ADJA	stark	Pos.*.Nom.Pl.st	 *	_	
3	t8577_000	spieze	NA	spièz	Nom.Pl	 * )	_	
4	t8578_000	dâr	PAVD	dâr/+în	_	 *	_	
5	t8578_001	în	PAVAP	în/dâr+	_	 *	_	
6	t8579_000	als	KO*	all-sô	_	 *	_	
7	t8580_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
8	t8581_000	vinger	NA	vinger	Akk.Sg	 * )	_	
9	t8582_000	mitten	ADJA	mitte	Pos.*.Dat.Pl.*	 *	_	
10	t8583_000	dâr	PAVD	dâr/+în	_	(VX *	_	
11	t8583_001	în	PAVAP	în/dâr+	_	 *	_	
12	t8584_000	gestecket	VVPP	stècken	_	 * )	_	
13	t8585_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8586_000	ein	DIA	èin	*.*.*.0	(S (Frag *	_	
2	t8587_000	bastelkopf	NA	bastël-kopf	Akk.Sg	(NX * )	_	
3	t8588_000	dâr	PAVD	dâr/+ûf	_	(VX *	_	
4	t8588_001	ûf	PAVAP	ûf/dâr+	_	 *	_	
5	t8589_000	gesetzet	VVPP	sètzen	_	 * )	_	
6	t8590_000	mit	APPR	mit	_	(PPX *	_	
7	t8591_000	hüeneren	NA	huon	Dat.Pl	(NX * ) )	_	
8	t8592_000	wole	AVD	wol(e)	_	(PreF * )	_	
9	t8593_000	gevüllet	VVFIN	ge-vüllen	Ind.Pres.Sg.3	(LB (VX * ) )	_	
10	t8594_000	-	$_	_	_	 * )	_	
11	t8595_000	kalbes	NA	kalb	Gen.Sg	(Frag (NX * )	_	
12	t8596_000	houbet	NA	houbet	Akk.Sg	(NX * )	_	
13	t8597_000	-	$_	_	_	 * )	_	
14	t8598_000	driu	CARDA	drî	Neut.Nom.Pl.st	(Frag *	_	
15	t8599_000	gesoten	VVPP	sièden	_	(VX * ) )	_	
16	t8600_000	geleit	VVPP	lègen	_	(Frag (VX * )	_	
17	t8601_000	ganz	AVD	ganz	_	 * )	_	
18	t8602_000	ûf	APPR	ûf	_	(Frag (PPX *	_	
19	t8603_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
20	t8604_000	rost	NA	rost	Akk.Sg	 * ) )	_	
21	t8605_000	-	$_	_	_	 * )	_	
22	t8606_000	wole	AVD	wol(e)	_	(Frag *	_	
23	t8607_000	beslagen	VVPP	be-slahen	_	(VX * )	_	
24	t8608_000	mit	APPR	mit	_	(PPX *	_	
25	t8609_000	eiern	NA	èi	Dat.Pl	(NX * ) )	_	
26	t8610_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8611_000	daz	KOUS	dazz	_	(S (Cl (LB * )	_	
2	t8612_000	ez	PPER	ër	Neut.Nom.Sg.3	(MF (NX * )	_	
3	t8613_000	schoene	ADJD	schoène	Pos....0	 * )	_	
4	t8614_000	werde	VAFIN	wërden	Subj.Pres.Sg.3	(RB (VX * ) )	_	
5	t8615_000	von	APPR	von	_	(PostF (PPX *	_	
6	t8616_000	safrâne	NA	safrân	Dat.Sg	(NX * ) ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8617_000	gesetzet	VVPP	sètzen	_	(S (Frag (VX * )	_	
2	t8618_000	ûf	APPR	ûf	_	(PPX *	_	
3	t8619_000	einen	DIART	èin	Masc.Akk.Sg.st	(NX *	_	
4	t8620_000	vladen	NA	vlade	Akk.Sg	 * ) )	_	
5	t8621_000	unde	KON	unte	_	 *	_	
6	t8622_000	eiertotern	NA	èier-toter(e)	Dat.Pl	(NX * )	_	
7	t8623_000	hertes	AVD	hèrtes	_	 *	_	
8	t8624_000	dâr	PAVD	dâr/+în	_	(VX *	_	
9	t8624_001	în	PAVAP	în/dâr+	_	 *	_	
10	t8625_000	gestôzen	VVPP	stôzen	_	 * )	_	
11	t8626_000	in	APPR	in	_	 *	_	
12	t8627_000	sîn	DPOSA	sîn	*.*.*.0	 *	_	
13	t8628_000	munt	NA	mund	Akk.Sg	(NX * ) )	_	
14	t8629_000	bluomen	NA	bluome	Akk.Pl	(Frag (NX * )	_	
15	t8630_000	gesniten	VVPP	snîden	_	(VX * )	_	
16	t8631_000	von	APPR	von	_	(PPX *	_	
17	t8632_000	wîzen	ADJA	wîz	Pos.*.Dat.Pl.*	(NX *	_	
18	t8633_000	eiern	NA	èi	Dat.Pl	 * ) )	_	
19	t8634_000	wole	AVD	wol(e)	_	 *	_	
20	t8635_000	geströuwet	VVPP	ströuwen	_	(VX * )	_	
21	t8636_000	in	APPR	in	_	(PPX *	_	
22	t8637_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
23	t8638_000	houbet	NA	houbet	Akk.Pl	 * ) )	_	
24	t8639_000	-	$_	_	_	 * )	_	
25	t8640_000	kleine	ADJA	klèine	Pos.*.Akk.Pl.st	(Frag (NX *	_	
26	t8641_000	gebackete	ADJA	backen	Pos.*.Akk.Pl.st	 *	_	
27	t8642_000	küchene	NA	küchen(e)	Akk.Pl	 * )	_	
28	t8643_000	an	AVD	ane	_	 *	_	
29	t8644_000	spieze	NA	spièz	Akk.Pl	(NX * )	_	
30	t8645_000	gestôzen	VVPP	stôzen	_	(VX * )	_	
31	t8646_000	umbe	APPR	umbe	_	(PPX *	_	
32	t8647_000	den	DDART	dër	Masc.Akk.Sg	(NX *	_	
33	t8648_000	vladen	NA	vlade	Akk.Sg	 * ) )	_	
34	t8649_000	wole	AVD	wol(e)	_	 *	_	
35	t8650_000	besetzet	VVPP	be-sètzen	_	(VX * )	_	
36	t8651_000	-	$_	_	_	 * )	_	
37	t8652_000	-	$_	_	_	 * ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8653_000	ein	DIART	èin	*.*.*.0	(S (Frag *	_	
2	t8654_000	guot	ADJA	guot	Pos.*..0	 *	_	
3	t8655_000	geriht	NA	ge-riht(e)	Nom.Sg	(NX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8656_000	einen	DIART	èin	Masc.Akk.Sg.st	(S (Frag *	_	
2	t8657_000	ohsîn	ADJA	ohsîn	Pos.*..0	 *	_	
3	t8658_000	spec	NA	spëck	Akk.Sg	(NX * )	_	
4	t8659_000	gemachet	VVPP	machen	_	(VX * )	_	
5	t8660_000	von	APPR	von	_	(PPX *	_	
6	t8661_000	eineme	DIART	èin	Neut.Dat.Sg.st	(NX *	_	
7	t8662_000	kalbe	NA	kalb	Dat.Sg	 * ) )	_	
8	t8663_000	gebratet	VVPP	braten	_	(VX * )	_	
9	t8664_000	unde	KON	unte	_	 *	_	
10	t8665_000	wole	AVD	wol(e)	_	 *	_	
11	t8666_000	gesoten	VVPP	sièden	_	(VX * ) )	_	
12	t8667_000	geslagen	VVPP	slahen	_	(Frag (VX * )	_	
13	t8668_000	daz	DDART	dër	Neut.Akk.Sg	(NX *	_	
14	t8669_000	gebræte	NA	ge-bræte	Akk.Sg	 * )	_	
15	t8670_000	an	APPR	ane	_	 *	_	
16	t8671_000	einander	DIA	èin-ander	*.*.*.0	 *	_	
17	t8672_000	unde	KON	unte	_	 *	_	
18	t8673_000	die	DDART	dër	*.Akk.Pl	(NX *	_	
19	t8674_000	swarten	NA	swart(e)	Akk.Pl	 * )	_	
20	t8675_000	ûz	AVD	ûz	_	 *	_	
21	t8676_000	gekêrt	VVPP	kêren	_	(VX * )	_	
22	t8677_000	-	$_	_	_	 * )	_	
23	t8678_000	unde	KON	unte	_	(Frag *	_	
24	t8679_000	gewunden	VVPP	winten	_	(VX * )	_	
25	t8680_000	in	APPR	in	_	 *	_	
26	t8681_000	ein	DIA	èin	*.*.*.0	 *	_	
27	t8682_000	tuoch	NA	tuoch	Akk.Sg	(NX * ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8683_000	wole	AVD	wol(e)	_	(S (Cl (PreF *	_	
2	t8684_000	abe	AVD	abe	_	 * )	_	
3	t8685_000	gewurze	VVFIN	ge-wurzen	Subj.Pres.Sg.3	(LB (VX * ) ) )	_	
4	t8686_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
5	t8687_000	lâz	VVIMP	lâzen	Sg.2	(LB (VX * ) )	_	
6	t8688_000	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
7	t8689_000	wole	AVD	wol(e)	_	 *	_	
8	t8690_000	erkalten	VVINF	er-kalten	_	(VX * ) ) ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8691_000	unde	KON	unte	_	(S (Frag *	_	
2	t8692_000	dünne	ADJD	dünne	Pos....0	 *	_	
3	t8693_000	schineht	ADJD	schineht	Pos....0	 *	_	
4	t8694_000	-	$_	_	_	 * )	_	
5	t8695_000	gesniten	VVPP	snîden	_	(Frag (VX * )	_	
6	t8696_000	vingerbreit	AVD	vinger-brèit	_	 *	_	
7	t8697_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8698_000	gemachet	VVPP	machen	_	(S (Frag (VX * )	_	
2	t8699_000	in	APPR	in	_	 *	_	
3	t8700_000	einer	DIA	èin	Fem.Dat.Sg.st	 *	_	
4	t8701_000	vliezende	ADJA	vlièzente	Pos.*..0	 *	_	
5	t8702_000	sulze	NA	sulze	Dat.Sg	(NX * )	_	
6	t8703_000	-	$_	_	_	 * )	_	
7	t8704_000	unde	KON	unte	_	(Frag *	_	
8	t8705_000	versalt	VVPP	ver-sèllen	_	(VX * )	_	
9	t8705_001	ez	PPER	ër	Neut.Akk.Sg.3	(NX * )	_	
10	t8706_000	niht	PTKNEG	niht	_	 *	_	
11	t8707_000	-	$_	_	_	 *	_	
12	t8708_000	-	$_	_	_	 * )	_	
13	t8709_000	unde	KON	unte	_	(Cl (PrePreF * )	_	
14	t8710_000	gip	VVIMP	gëben	Sg.2	(LB (VX * ) )	_	
15	t8710_001	ez	PPER	ër	Neut.Akk.Sg.3	(MF (NX * )	_	
16	t8711_000	hin	AVD	hin(e)	_	 * )	_	
17	t8712_000	-	$_	_	_	 * ) ) )	_
	

# global.columns = ID TID WORD POS LEMMA INFL PARSE ANIMACY
1	t8713_000	hier	AVD	hièr	_	(S (Cl (PreF * )	_	
2	t8714_000	gêt	VVFIN	gân/ûz<+	Ind.Pres.Sg.3	(LB (VX * ) )	_	
3	t8715_000	ûz	PTKVZ	ûz/<+gân	_	(RB * )	_	
4	t8716_000	die	DDART	dër	Fem.Nom.Sg	(PostF (NX *	_	
5	t8717_000	lêre	NA	lêre	Nom.Sg	 *	_	
6	t8718_000	von	APPR	von	_	(PPX *	_	
7	t8719_000	der	DDART	dër	Fem.Dat.Sg	(NX *	_	
8	t8720_000	kocherî	NA	kocherîe	Dat.Sg	 * ) ) ) )	_	
9	t8721_000	-	$_	_	_	 * ) ) )	_
	

